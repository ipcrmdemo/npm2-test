#!/usr/bin/env node
if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var COMPILED = !0, goog = goog || {};
goog.global = this;
goog.isDef = function(a) {
  return void 0 !== a;
};
goog.isString = function(a) {
  return "string" == typeof a;
};
goog.isBoolean = function(a) {
  return "boolean" == typeof a;
};
goog.isNumber = function(a) {
  return "number" == typeof a;
};
goog.exportPath_ = function(a, b, c) {
  a = a.split(".");
  c = c || goog.global;
  a[0] in c || !c.execScript || c.execScript("var " + a[0]);
  for (var d; a.length && (d = a.shift());) {
    !a.length && goog.isDef(b) ? c[d] = b : c = c[d] && c[d] !== Object.prototype[d] ? c[d] : c[d] = {};
  }
};
goog.define = function(a, b) {
  COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && void 0 === goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? b = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && void 0 === goog.global.CLOSURE_DEFINES.nodeType && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (b = goog.global.CLOSURE_DEFINES[a]));
  goog.exportPath_(a, b);
};
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.STRICT_MODE_COMPATIBLE = !1;
goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED && goog.isProvided_(a)) {
    throw Error('Namespace "' + a + '" already declared.');
  }
  goog.constructNamespace_(a);
};
goog.constructNamespace_ = function(a, b) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[a];
    for (var c = a; (c = c.substring(0, c.lastIndexOf("."))) && !goog.getObjectByName(c);) {
      goog.implicitNamespaces_[c] = !0;
    }
  }
  goog.exportPath_(a, b);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(a) {
  if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + a + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = a;
  if (!COMPILED) {
    if (goog.isProvided_(a)) {
      throw Error('Namespace "' + a + '" already declared.');
    }
    delete goog.implicitNamespaces_[a];
  }
};
goog.module.get = function(a) {
  return goog.module.getInternal_(a);
};
goog.module.getInternal_ = function(a) {
  if (!COMPILED) {
    if (a in goog.loadedModules_) {
      return goog.loadedModules_[a];
    }
    if (!goog.implicitNamespaces_[a]) {
      return a = goog.getObjectByName(a), null != a ? a : null;
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return null != goog.moduleLoaderState_;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.setTestOnly = function(a) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw a = a || "", Error("Importing test-only code into non-debug environment" + (a ? ": " + a : "."));
  }
};
goog.forwardDeclare = function(a) {
};
COMPILED || (goog.isProvided_ = function(a) {
  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));
}, goog.implicitNamespaces_ = {"goog.module":!0});
goog.getObjectByName = function(a, b) {
  a = a.split(".");
  b = b || goog.global;
  for (var c; c = a.shift();) {
    if (goog.isDefAndNotNull(b[c])) {
      b = b[c];
    } else {
      return null;
    }
  }
  return b;
};
goog.globalize = function(a, b) {
  b = b || goog.global;
  for (var c in a) {
    b[c] = a[c];
  }
};
goog.addDependency = function(a, b, c, d) {
  if (goog.DEPENDENCIES_ENABLED) {
    var e;
    a = a.replace(/\\/g, "/");
    var f = goog.dependencies_;
    d && "boolean" !== typeof d || (d = d ? {module:"goog"} : {});
    for (var g = 0; e = b[g]; g++) {
      f.nameToPath[e] = a, f.loadFlags[a] = d;
    }
    for (d = 0; b = c[d]; d++) {
      a in f.requires || (f.requires[a] = {}), f.requires[a][b] = !0;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(a) {
  goog.global.console && goog.global.console.error(a);
};
goog.require = function(a) {
  if (!COMPILED) {
    goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_ && goog.maybeProcessDeferredDep_(a);
    if (goog.isProvided_(a)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(a);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var b = goog.getPathFromDeps_(a);
        if (b) {
          goog.writeScripts_(b);
        } else {
          throw a = "goog.require could not find: " + a, goog.logToConsole_(a), Error(a);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(a) {
  a.instance_ = void 0;
  a.getInstance = function() {
    if (a.instance_) {
      return a.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);
    return a.instance_ = new a;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = "detect";
goog.TRANSPILER = "transpile.js";
goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}}, goog.inHtmlDocument_ = function() {
  var a = goog.global.document;
  return null != a && "write" in a;
}, goog.findBasePath_ = function() {
  if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH;
  } else {
    if (goog.inHtmlDocument_()) {
      var a = goog.global.document, b = a.currentScript;
      a = b ? [b] : a.getElementsByTagName("SCRIPT");
      for (b = a.length - 1; 0 <= b; --b) {
        var c = a[b].src, d = c.lastIndexOf("?");
        d = -1 == d ? c.length : d;
        if ("base.js" == c.substr(d - 7, 7)) {
          goog.basePath = c.substr(0, d - 7);
          break;
        }
      }
    }
  }
}, goog.importScript_ = function(a, b) {
  (goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_)(a, b) && (goog.dependencies_.written[a] = !0);
}, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.oldIeWaiting_ = !1, goog.importProcessedScript_ = function(a, b, c) {
  goog.importScript_("", 'goog.retrieveAndExec_("' + a + '", ' + b + ", " + c + ");");
}, goog.queuedModules_ = [], goog.wrapModule_ = function(a, b) {
  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(b + "\n//# sourceURL\x3d" + a + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + b + "\n;return exports});\n//# sourceURL\x3d" + a + "\n";
}, goog.loadQueuedModules_ = function() {
  var a = goog.queuedModules_.length;
  if (0 < a) {
    var b = goog.queuedModules_;
    goog.queuedModules_ = [];
    for (var c = 0; c < a; c++) {
      goog.maybeProcessDeferredPath_(b[c]);
    }
  }
  goog.oldIeWaiting_ = !1;
}, goog.maybeProcessDeferredDep_ = function(a) {
  goog.isDeferredModule_(a) && goog.allDepsAreAvailable_(a) && (a = goog.getPathFromDeps_(a), goog.maybeProcessDeferredPath_(goog.basePath + a));
}, goog.isDeferredModule_ = function(a) {
  var b = (a = goog.getPathFromDeps_(a)) && goog.dependencies_.loadFlags[a] || {}, c = b.lang || "es3";
  return a && ("goog" == b.module || goog.needsTranspile_(c)) ? goog.basePath + a in goog.dependencies_.deferred : !1;
}, goog.allDepsAreAvailable_ = function(a) {
  if ((a = goog.getPathFromDeps_(a)) && a in goog.dependencies_.requires) {
    for (var b in goog.dependencies_.requires[a]) {
      if (!goog.isProvided_(b) && !goog.isDeferredModule_(b)) {
        return !1;
      }
    }
  }
  return !0;
}, goog.maybeProcessDeferredPath_ = function(a) {
  if (a in goog.dependencies_.deferred) {
    var b = goog.dependencies_.deferred[a];
    delete goog.dependencies_.deferred[a];
    goog.globalEval(b);
  }
}, goog.loadModuleFromUrl = function(a) {
  goog.retrieveAndExec_(a, !0, !1);
}, goog.writeScriptSrcNode_ = function(a) {
  goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + a + '"\x3e\x3c/script\x3e');
}, goog.appendScriptSrcNode_ = function(a) {
  var b = goog.global.document, c = b.createElement("script");
  c.type = "text/javascript";
  c.src = a;
  c.defer = !1;
  c.async = !1;
  b.head.appendChild(c);
}, goog.writeScriptTag_ = function(a, b) {
  if (goog.inHtmlDocument_()) {
    var c = goog.global.document;
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && "complete" == c.readyState) {
      if (/\bdeps.js$/.test(a)) {
        return !1;
      }
      throw Error('Cannot write "' + a + '" after document load');
    }
    void 0 === b ? goog.IS_OLD_IE_ ? (goog.oldIeWaiting_ = !0, b = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ", c.write('\x3cscript type\x3d"text/javascript" src\x3d"' + a + '"' + b + "\x3e\x3c/script\x3e")) : goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(a) : goog.writeScriptSrcNode_(a) : c.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(b) + "\x3c/script\x3e");
    return !0;
  }
  return !1;
}, goog.protectScriptTag_ = function(a) {
  return a.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
}, goog.needsTranspile_ = function(a) {
  if ("always" == goog.TRANSPILE) {
    return !0;
  }
  if ("never" == goog.TRANSPILE) {
    return !1;
  }
  goog.requiresTranspilation_ || (goog.requiresTranspilation_ = goog.createRequiresTranspilation_());
  if (a in goog.requiresTranspilation_) {
    return goog.requiresTranspilation_[a];
  }
  throw Error("Unknown language mode: " + a);
}, goog.requiresTranspilation_ = null, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function(a, b) {
  "complete" == a.readyState && goog.lastNonModuleScriptIndex_ == b && goog.loadQueuedModules_();
  return !0;
}, goog.writeScripts_ = function(a) {
  function b(a) {
    if (!(a in e.written || a in e.visited)) {
      e.visited[a] = !0;
      if (a in e.requires) {
        for (var f in e.requires[a]) {
          if (!goog.isProvided_(f)) {
            if (f in e.nameToPath) {
              b(e.nameToPath[f]);
            } else {
              throw Error("Undefined nameToPath for " + f);
            }
          }
        }
      }
      a in d || (d[a] = !0, c.push(a));
    }
  }
  var c = [], d = {}, e = goog.dependencies_;
  b(a);
  for (a = 0; a < c.length; a++) {
    var f = c[a];
    goog.dependencies_.written[f] = !0;
  }
  var g = goog.moduleLoaderState_;
  goog.moduleLoaderState_ = null;
  for (a = 0; a < c.length; a++) {
    if (f = c[a]) {
      var h = e.loadFlags[f] || {}, k = goog.needsTranspile_(h.lang || "es3");
      "goog" == h.module || k ? goog.importProcessedScript_(goog.basePath + f, "goog" == h.module, k) : goog.importScript_(goog.basePath + f);
    } else {
      throw goog.moduleLoaderState_ = g, Error("Undefined script input");
    }
  }
  goog.moduleLoaderState_ = g;
}, goog.getPathFromDeps_ = function(a) {
  return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;
}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (null == goog.hasBadLetScoping) {
    try {
      var a = !eval('"use strict";let x \x3d 1; function f() { return typeof x; };f() \x3d\x3d "number";');
    } catch (b) {
      a = !1;
    }
    goog.hasBadLetScoping = a;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(a) {
  return "(function(){" + a + "\n;})();\n";
};
goog.loadModule = function(a) {
  var b = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:void 0, declareLegacyNamespace:!1};
    if (goog.isFunction(a)) {
      var c = a.call(void 0, {});
    } else {
      if (goog.isString(a)) {
        goog.useSafari10Workaround() && (a = goog.workaroundSafari10EvalBug(a)), c = goog.loadModuleFromSource_.call(void 0, a);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var d = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(d) || !d) {
      throw Error('Invalid module name "' + d + '"');
    }
    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof c && null != c && Object.seal(c);
    goog.loadedModules_[d] = c;
  } finally {
    goog.moduleLoaderState_ = b;
  }
};
goog.loadModuleFromSource_ = function(a) {
  eval(a);
  return {};
};
goog.normalizePath_ = function(a) {
  a = a.split("/");
  for (var b = 0; b < a.length;) {
    "." == a[b] ? a.splice(b, 1) : b && ".." == a[b] && a[b - 1] && ".." != a[b - 1] ? a.splice(--b, 2) : b++;
  }
  return a.join("/");
};
goog.loadFileSync_ = function(a) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(a);
  }
  try {
    var b = new goog.global.XMLHttpRequest;
    b.open("get", a, !1);
    b.send();
    return 0 == b.status || 200 == b.status ? b.responseText : null;
  } catch (c) {
    return null;
  }
};
goog.retrieveAndExec_ = function(a, b, c) {
  if (!COMPILED) {
    var d = a;
    a = goog.normalizePath_(a);
    var e = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_, f = goog.loadFileSync_(a);
    if (null == f) {
      throw Error('Load of "' + a + '" failed');
    }
    c && (f = goog.transpile_.call(goog.global, f, a));
    f = b ? goog.wrapModule_(a, f) : f + ("\n//# sourceURL\x3d" + a);
    goog.IS_OLD_IE_ && goog.oldIeWaiting_ ? (goog.dependencies_.deferred[d] = f, goog.queuedModules_.push(d)) : e(a, f);
  }
};
goog.transpile_ = function(a, b) {
  var c = goog.global.$jscomp;
  c || (goog.global.$jscomp = c = {});
  var d = c.transpile;
  if (!d) {
    var e = goog.basePath + goog.TRANSPILER, f = goog.loadFileSync_(e);
    if (f) {
      eval(f + "\n//# sourceURL\x3d" + e);
      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {
        throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
      }
      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
      c = goog.global.$jscomp;
      d = c.transpile;
    }
  }
  d || (d = c.transpile = function(a, b) {
    goog.logToConsole_(b + " requires transpilation but no transpiler was found.");
    return a;
  });
  return d(a, b);
};
goog.typeOf = function(a) {
  var b = typeof a;
  if ("object" == b) {
    if (a) {
      if (a instanceof Array) {
        return "array";
      }
      if (a instanceof Object) {
        return b;
      }
      var c = Object.prototype.toString.call(a);
      if ("[object Window]" == c) {
        return "object";
      }
      if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == b && "undefined" == typeof a.call) {
      return "object";
    }
  }
  return b;
};
goog.isNull = function(a) {
  return null === a;
};
goog.isDefAndNotNull = function(a) {
  return null != a;
};
goog.isArray = function(a) {
  return "array" == goog.typeOf(a);
};
goog.isArrayLike = function(a) {
  var b = goog.typeOf(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
};
goog.isDateLike = function(a) {
  return goog.isObject(a) && "function" == typeof a.getFullYear;
};
goog.isFunction = function(a) {
  return "function" == goog.typeOf(a);
};
goog.isObject = function(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
};
goog.getUid = function(a) {
  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(a) {
  return !!a[goog.UID_PROPERTY_];
};
goog.removeUid = function(a) {
  null !== a && "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete a[goog.UID_PROPERTY_];
  } catch (b) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (a.clone) {
      return a.clone();
    }
    b = "array" == b ? [] : {};
    for (var c in a) {
      b[c] = goog.cloneObject(a[c]);
    }
    return b;
  }
  return a;
};
goog.bindNative_ = function(a, b, c) {
  return a.call.apply(a.bind, arguments);
};
goog.bindJs_ = function(a, b, c) {
  if (!a) {
    throw Error();
  }
  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function() {
      var c = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(c, d);
      return a.apply(b, c);
    };
  }
  return function() {
    return a.apply(b, arguments);
  };
};
goog.bind = function(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var b = c.slice();
    b.push.apply(b, arguments);
    return a.apply(this, b);
  };
};
goog.mixin = function(a, b) {
  for (var c in b) {
    a[c] = b[c];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(a) {
  if (goog.global.execScript) {
    goog.global.execScript(a, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (null == goog.evalWorksForGlobals_) {
        if (goog.global.eval("var _evalTest_ \x3d 1;"), "undefined" != typeof goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (d) {
          }
          goog.evalWorksForGlobals_ = !0;
        } else {
          goog.evalWorksForGlobals_ = !1;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(a);
      } else {
        var b = goog.global.document, c = b.createElement("SCRIPT");
        c.type = "text/javascript";
        c.defer = !1;
        c.appendChild(b.createTextNode(a));
        b.body.appendChild(c);
        b.body.removeChild(c);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(a, b) {
  if ("." == String(a).charAt(0)) {
    throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a);
  }
  var c = function(a) {
    return goog.cssNameMapping_[a] || a;
  }, d = function(a) {
    a = a.split("-");
    for (var b = [], d = 0; d < a.length; d++) {
      b.push(c(a[d]));
    }
    return b.join("-");
  };
  d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function(a) {
    return a;
  };
  a = b ? a + "-" + d(b) : d(a);
  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(a) : a;
};
goog.setCssNameMapping = function(a, b) {
  goog.cssNameMapping_ = a;
  goog.cssNameMappingStyle_ = b;
};
!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);
goog.getMsg = function(a, b) {
  b && (a = a.replace(/\{\$([^}]+)}/g, function(a, d) {
    return null != b && d in b ? b[d] : a;
  }));
  return a;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(a, b, c) {
  goog.exportPath_(a, b, c);
};
goog.exportProperty = function(a, b, c) {
  a[b] = c;
};
goog.inherits = function(a, b) {
  function c() {
  }
  c.prototype = b.prototype;
  a.superClass_ = b.prototype;
  a.prototype = new c;
  a.prototype.constructor = a;
  a.base = function(a, c, f) {
    for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++) {
      d[e - 2] = arguments[e];
    }
    return b.prototype[c].apply(a, d);
  };
};
goog.base = function(a, b, c) {
  var d = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (d.superClass_) {
    for (var e = Array(arguments.length - 1), f = 1; f < arguments.length; f++) {
      e[f - 1] = arguments[f];
    }
    return d.superClass_.constructor.apply(a, e);
  }
  e = Array(arguments.length - 2);
  for (f = 2; f < arguments.length; f++) {
    e[f - 2] = arguments[f];
  }
  f = !1;
  for (var g = a.constructor; g; g = g.superClass_ && g.superClass_.constructor) {
    if (g.prototype[b] === d) {
      f = !0;
    } else {
      if (f) {
        return g.prototype[b].apply(a, e);
      }
    }
  }
  if (a[b] === d) {
    return a.constructor.prototype[b].apply(a, e);
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  a.call(goog.global);
};
COMPILED || (goog.global.COMPILED = COMPILED);
goog.defineClass = function(a, b) {
  var c = b.constructor, d = b.statics;
  c && c != Object.prototype.constructor || (c = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  c = goog.defineClass.createSealingConstructor_(c, a);
  a && goog.inherits(c, a);
  delete b.constructor;
  delete b.statics;
  goog.defineClass.applyProperties_(c.prototype, b);
  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));
  return c;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(a, b) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return a;
  }
  var c = !goog.defineClass.isUnsealable_(b), d = function() {
    var b = a.apply(this, arguments) || this;
    b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];
    this.constructor === d && c && Object.seal instanceof Function && Object.seal(b);
    return b;
  };
  return d;
};
goog.defineClass.isUnsealable_ = function(a) {
  return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(a, b) {
  for (var c in b) {
    Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
  for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++) {
    c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
};
goog.tagUnsealableClass = function(a) {
  !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  function a(a, b) {
    d ? c[a] = !0 : b() ? c[a] = !1 : d = c[a] = !0;
  }
  function b(a) {
    try {
      return !!eval(a);
    } catch (g) {
      return !1;
    }
  }
  var c = {es3:!1}, d = !1, e = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  a("es5", function() {
    return b("[1,].length\x3d\x3d1");
  });
  a("es6", function() {
    var a = e.match(/Edge\/(\d+)(\.\d)*/i);
    return a && 15 > Number(a[1]) ? !1 : b('(()\x3d\x3e{"use strict";class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()\x3d\x3d3}})()');
  });
  a("es6-impl", function() {
    return !0;
  });
  a("es7", function() {
    return b("2 ** 2 \x3d\x3d 4");
  });
  a("es8", function() {
    return b("async () \x3d\x3e 1, true");
  });
  return c;
};
goog.debug = {};
goog.debug.Error = function(a) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var b = Error().stack;
    b && (this.stack = b);
  }
  a && (this.message = String(a));
  this.reportErrorToServer = !0;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.string = {};
goog.string.DETECT_DOUBLE_ESCAPING = !1;
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(a, b) {
  return 0 == a.lastIndexOf(b, 0);
};
goog.string.endsWith = function(a, b) {
  var c = a.length - b.length;
  return 0 <= c && a.indexOf(b, c) == c;
};
goog.string.caseInsensitiveStartsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(0, b.length));
};
goog.string.caseInsensitiveEndsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));
};
goog.string.caseInsensitiveEquals = function(a, b) {
  return a.toLowerCase() == b.toLowerCase();
};
goog.string.subs = function(a, b) {
  for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {
    d += c.shift() + e.shift();
  }
  return d + c.join("%s");
};
goog.string.collapseWhitespace = function(a) {
  return a.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(a) {
  return /^[\s\xa0]*$/.test(a);
};
goog.string.isEmptyString = function(a) {
  return 0 == a.length;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(a) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(a) {
  return !/[^\t\n\r ]/.test(a);
};
goog.string.isAlpha = function(a) {
  return !/[^a-zA-Z]/.test(a);
};
goog.string.isNumeric = function(a) {
  return !/[^0-9]/.test(a);
};
goog.string.isAlphaNumeric = function(a) {
  return !/[^a-zA-Z0-9]/.test(a);
};
goog.string.isSpace = function(a) {
  return " " == a;
};
goog.string.isUnicodeChar = function(a) {
  return 1 == a.length && " " <= a && "~" >= a || "" <= a && "�" >= a;
};
goog.string.stripNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(a) {
  return a.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(a) {
  return a.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(a) {
  return a.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a) {
  return a.trim();
} : function(a) {
  return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(a) {
  return a.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(a) {
  return a.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(a, b) {
  a = String(a).toLowerCase();
  b = String(b).toLowerCase();
  return a < b ? -1 : a == b ? 0 : 1;
};
goog.string.numberAwareCompare_ = function(a, b, c) {
  if (a == b) {
    return 0;
  }
  if (!a) {
    return -1;
  }
  if (!b) {
    return 1;
  }
  for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {
    c = d[g];
    var h = e[g];
    if (c != h) {
      return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
    }
  }
  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;
};
goog.string.intAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(a) {
  return encodeURIComponent(String(a));
};
goog.string.urlDecode = function(a) {
  return decodeURIComponent(a.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(a, b) {
  return a.replace(/(\r\n|\r|\n)/g, b ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(a, b) {
  if (b) {
    a = a.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;"), goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, "\x26#101;"));
  } else {
    if (!goog.string.ALL_RE_.test(a)) {
      return a;
    }
    -1 != a.indexOf("\x26") && (a = a.replace(goog.string.AMP_RE_, "\x26amp;"));
    -1 != a.indexOf("\x3c") && (a = a.replace(goog.string.LT_RE_, "\x26lt;"));
    -1 != a.indexOf("\x3e") && (a = a.replace(goog.string.GT_RE_, "\x26gt;"));
    -1 != a.indexOf('"') && (a = a.replace(goog.string.QUOT_RE_, "\x26quot;"));
    -1 != a.indexOf("'") && (a = a.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;"));
    -1 != a.indexOf("\x00") && (a = a.replace(goog.string.NULL_RE_, "\x26#0;"));
    goog.string.DETECT_DOUBLE_ESCAPING && -1 != a.indexOf("e") && (a = a.replace(goog.string.E_RE_, "\x26#101;"));
  }
  return a;
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(a) {
  return goog.string.contains(a, "\x26") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;
};
goog.string.unescapeEntitiesWithDocument = function(a, b) {
  return goog.string.contains(a, "\x26") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;
};
goog.string.unescapeEntitiesUsingDom_ = function(a, b) {
  var c = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var d = b ? b.createElement("div") : goog.global.document.createElement("div");
  return a.replace(goog.string.HTML_ENTITY_PATTERN_, function(a, b) {
    var e = c[a];
    if (e) {
      return e;
    }
    "#" == b.charAt(0) && (b = Number("0" + b.substr(1)), isNaN(b) || (e = String.fromCharCode(b)));
    e || (d.innerHTML = a + " ", e = d.firstChild.nodeValue.slice(0, -1));
    return c[a] = e;
  });
};
goog.string.unescapePureXmlEntities_ = function(a) {
  return a.replace(/&([^;]+);/g, function(a, c) {
    switch(c) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        return "#" != c.charAt(0) || (c = Number("0" + c.substr(1)), isNaN(c)) ? a : String.fromCharCode(c);
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(a, b) {
  return goog.string.newLineToBr(a.replace(/  /g, " \x26#160;"), b);
};
goog.string.preserveSpaces = function(a) {
  return a.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(a, b) {
  for (var c = b.length, d = 0; d < c; d++) {
    var e = 1 == c ? b : b.charAt(d);
    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) {
      return a.substring(1, a.length - 1);
    }
  }
  return a;
};
goog.string.truncate = function(a, b, c) {
  c && (a = goog.string.unescapeEntities(a));
  a.length > b && (a = a.substring(0, b - 3) + "...");
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.truncateMiddle = function(a, b, c, d) {
  c && (a = goog.string.unescapeEntities(a));
  if (d && a.length > b) {
    d > b && (d = b);
    var e = a.length - d;
    a = a.substring(0, b - d) + "..." + a.substring(e);
  } else {
    a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + "..." + a.substring(e));
  }
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(a) {
  a = String(a);
  for (var b = ['"'], c = 0; c < a.length; c++) {
    var d = a.charAt(c), e = d.charCodeAt(0);
    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
  }
  b.push('"');
  return b.join("");
};
goog.string.escapeString = function(a) {
  for (var b = [], c = 0; c < a.length; c++) {
    b[c] = goog.string.escapeChar(a.charAt(c));
  }
  return b.join("");
};
goog.string.escapeChar = function(a) {
  if (a in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[a];
  }
  if (a in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];
  }
  var b = a.charCodeAt(0);
  if (31 < b && 127 > b) {
    var c = a;
  } else {
    if (256 > b) {
      if (c = "\\x", 16 > b || 256 < b) {
        c += "0";
      }
    } else {
      c = "\\u", 4096 > b && (c += "0");
    }
    c += b.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[a] = c;
};
goog.string.contains = function(a, b) {
  return -1 != a.indexOf(b);
};
goog.string.caseInsensitiveContains = function(a, b) {
  return goog.string.contains(a.toLowerCase(), b.toLowerCase());
};
goog.string.countOf = function(a, b) {
  return a && b ? a.split(b).length - 1 : 0;
};
goog.string.removeAt = function(a, b, c) {
  var d = a;
  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));
  return d;
};
goog.string.remove = function(a, b) {
  return a.replace(b, "");
};
goog.string.removeAll = function(a, b) {
  b = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(b, "");
};
goog.string.replaceAll = function(a, b, c) {
  b = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(b, c.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(a) {
  return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(a, b) {
  return a.repeat(b);
} : function(a, b) {
  return Array(b + 1).join(a);
};
goog.string.padNumber = function(a, b, c) {
  a = goog.isDef(c) ? a.toFixed(c) : String(a);
  c = a.indexOf(".");
  -1 == c && (c = a.length);
  return goog.string.repeat("0", Math.max(0, b - c)) + a;
};
goog.string.makeSafe = function(a) {
  return null == a ? "" : String(a);
};
goog.string.buildString = function(a) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(a, b) {
  var c = 0;
  a = goog.string.trim(String(a)).split(".");
  b = goog.string.trim(String(b)).split(".");
  for (var d = Math.max(a.length, b.length), e = 0; 0 == c && e < d; e++) {
    var f = a[e] || "", g = b[e] || "";
    do {
      f = /(\d*)(\D*)(.*)/.exec(f) || ["", "", "", ""];
      g = /(\d*)(\D*)(.*)/.exec(g) || ["", "", "", ""];
      if (0 == f[0].length && 0 == g[0].length) {
        break;
      }
      c = 0 == f[1].length ? 0 : parseInt(f[1], 10);
      var h = 0 == g[1].length ? 0 : parseInt(g[1], 10);
      c = goog.string.compareElements_(c, h) || goog.string.compareElements_(0 == f[2].length, 0 == g[2].length) || goog.string.compareElements_(f[2], g[2]);
      f = f[3];
      g = g[3];
    } while (0 == c);
  }
  return c;
};
goog.string.compareElements_ = function(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
};
goog.string.hashCode = function(a) {
  for (var b = 0, c = 0; c < a.length; ++c) {
    b = 31 * b + a.charCodeAt(c) >>> 0;
  }
  return b;
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(a) {
  var b = Number(a);
  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;
};
goog.string.isLowerCamelCase = function(a) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(a);
};
goog.string.isUpperCamelCase = function(a) {
  return /^([A-Z][a-z]*)+$/.test(a);
};
goog.string.toCamelCase = function(a) {
  return String(a).replace(/\-([a-z])/g, function(a, c) {
    return c.toUpperCase();
  });
};
goog.string.toSelectorCase = function(a) {
  return String(a).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(a, b) {
  b = goog.isString(b) ? goog.string.regExpEscape(b) : "\\s";
  return a.replace(new RegExp("(^" + (b ? "|[" + b + "]+" : "") + ")([a-z])", "g"), function(a, b, e) {
    return b + e.toUpperCase();
  });
};
goog.string.capitalize = function(a) {
  return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();
};
goog.string.parseInt = function(a) {
  isFinite(a) && (a = String(a));
  return goog.isString(a) ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;
};
goog.string.splitLimit = function(a, b, c) {
  a = a.split(b);
  for (var d = []; 0 < c && a.length;) {
    d.push(a.shift()), c--;
  }
  a.length && d.push(a.join(b));
  return d;
};
goog.string.lastComponent = function(a, b) {
  if (b) {
    "string" == typeof b && (b = [b]);
  } else {
    return a;
  }
  for (var c = -1, d = 0; d < b.length; d++) {
    if ("" != b[d]) {
      var e = a.lastIndexOf(b[d]);
      e > c && (c = e);
    }
  }
  return -1 == c ? a : a.slice(c + 1);
};
goog.string.editDistance = function(a, b) {
  var c = [], d = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var e = 0; e < b.length + 1; e++) {
    c[e] = e;
  }
  for (e = 0; e < a.length; e++) {
    d[0] = e + 1;
    for (var f = 0; f < b.length; f++) {
      d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));
    }
    for (f = 0; f < c.length; f++) {
      c[f] = d[f];
    }
  }
  return d[b.length];
};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(a, b) {
  b.unshift(a);
  goog.debug.Error.call(this, goog.string.subs.apply(null, b));
  b.shift();
  this.messagePattern = a;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(a) {
  throw a;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(a, b, c, d) {
  var e = "Assertion failed";
  if (c) {
    e += ": " + c;
    var f = d;
  } else {
    a && (e += ": " + a, f = b);
  }
  a = new goog.asserts.AssertionError("" + e, f || []);
  goog.asserts.errorHandler_(a);
};
goog.asserts.setErrorHandler = function(a) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);
};
goog.asserts.assert = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_("", null, b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.fail = function(a, b) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertString = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertFunction = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertObject = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertArray = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertBoolean = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertElement = function(a, b, c) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertInstanceof = function(a, b, c, d) {
  !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));
  return a;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var a in Object.prototype) {
    goog.asserts.fail(a + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(a) {
  return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
};
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ASSUME_NATIVE_FUNCTIONS = !1;
goog.array.peek = function(a) {
  return a[a.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.indexOf.call(a, b, c);
} : function(a, b, c) {
  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;
  }
  for (; c < a.length; c++) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);
} : function(a, b, c) {
  c = null == c ? a.length - 1 : c;
  0 > c && (c = Math.max(0, a.length + c));
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;
  }
  for (; 0 <= c; c--) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  Array.prototype.forEach.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    f in e && b.call(c, e[f], f, a);
  }
};
goog.array.forEachRight = function(a, b, c) {
  var d = a.length, e = goog.isString(a) ? a.split("") : a;
  for (--d; 0 <= d; --d) {
    d in e && b.call(c, e[d], d, a);
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.filter.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split("") : a, h = 0; h < d; h++) {
    if (h in g) {
      var k = g[h];
      b.call(c, k, h, a) && (e[f++] = k);
    }
  }
  return e;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.map.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split("") : a, g = 0; g < d; g++) {
    g in f && (e[g] = b.call(c, f[g], g, a));
  }
  return e;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduce.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEach(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  goog.asserts.assert(null != b);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduceRight.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEachRight(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.some.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return !0;
    }
  }
  return !1;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.every.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    if (f in e && !b.call(c, e[f], f, a)) {
      return !1;
    }
  }
  return !0;
};
goog.array.count = function(a, b, c) {
  var d = 0;
  goog.array.forEach(a, function(a, f, g) {
    b.call(c, a, f, g) && ++d;
  }, c);
  return d;
};
goog.array.find = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndex = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return f;
    }
  }
  return -1;
};
goog.array.findRight = function(a, b, c) {
  b = goog.array.findIndexRight(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndexRight = function(a, b, c) {
  var d = a.length, e = goog.isString(a) ? a.split("") : a;
  for (--d; 0 <= d; d--) {
    if (d in e && b.call(c, e[d], d, a)) {
      return d;
    }
  }
  return -1;
};
goog.array.contains = function(a, b) {
  return 0 <= goog.array.indexOf(a, b);
};
goog.array.isEmpty = function(a) {
  return 0 == a.length;
};
goog.array.clear = function(a) {
  if (!goog.isArray(a)) {
    for (var b = a.length - 1; 0 <= b; b--) {
      delete a[b];
    }
  }
  a.length = 0;
};
goog.array.insert = function(a, b) {
  goog.array.contains(a, b) || a.push(b);
};
goog.array.insertAt = function(a, b, c) {
  goog.array.splice(a, c, 0, b);
};
goog.array.insertArrayAt = function(a, b, c) {
  goog.partial(goog.array.splice, a, c, 0).apply(null, b);
};
goog.array.insertBefore = function(a, b, c) {
  var d;
  2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);
};
goog.array.remove = function(a, b) {
  b = goog.array.indexOf(a, b);
  var c;
  (c = 0 <= b) && goog.array.removeAt(a, b);
  return c;
};
goog.array.removeLast = function(a, b) {
  b = goog.array.lastIndexOf(a, b);
  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;
};
goog.array.removeAt = function(a, b) {
  goog.asserts.assert(null != a.length);
  return 1 == Array.prototype.splice.call(a, b, 1).length;
};
goog.array.removeIf = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;
};
goog.array.removeAllIf = function(a, b, c) {
  var d = 0;
  goog.array.forEachRight(a, function(e, f) {
    b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;
  });
  return d;
};
goog.array.concat = function(a) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(a) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(a) {
  var b = a.length;
  if (0 < b) {
    for (var c = Array(b), d = 0; d < b; d++) {
      c[d] = a[d];
    }
    return c;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(a, b) {
  for (var c = 1; c < arguments.length; c++) {
    var d = arguments[c];
    if (goog.isArrayLike(d)) {
      var e = a.length || 0, f = d.length || 0;
      a.length = e + f;
      for (var g = 0; g < f; g++) {
        a[e + g] = d[g];
      }
    } else {
      a.push(d);
    }
  }
};
goog.array.splice = function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));
};
goog.array.slice = function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);
};
goog.array.removeDuplicates = function(a, b, c) {
  b = b || a;
  var d = function(a) {
    return goog.isObject(a) ? "o" + goog.getUid(a) : (typeof a).charAt(0) + a;
  };
  c = c || d;
  d = {};
  for (var e = 0, f = 0; f < a.length;) {
    var g = a[f++], h = c(g);
    Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);
  }
  b.length = e;
};
goog.array.binarySearch = function(a, b, c) {
  return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);
};
goog.array.binarySelect = function(a, b, c) {
  return goog.array.binarySearch_(a, b, !0, void 0, c);
};
goog.array.binarySearch_ = function(a, b, c, d, e) {
  for (var f = 0, g = a.length, h; f < g;) {
    var k = f + g >> 1;
    var l = c ? b.call(e, a[k], k, a) : b(d, a[k]);
    0 < l ? f = k + 1 : (g = k, h = !l);
  }
  return h ? f : ~f;
};
goog.array.sort = function(a, b) {
  a.sort(b || goog.array.defaultCompare);
};
goog.array.stableSort = function(a, b) {
  for (var c = Array(a.length), d = 0; d < a.length; d++) {
    c[d] = {index:d, value:a[d]};
  }
  var e = b || goog.array.defaultCompare;
  goog.array.sort(c, function(a, b) {
    return e(a.value, b.value) || a.index - b.index;
  });
  for (d = 0; d < a.length; d++) {
    a[d] = c[d].value;
  }
};
goog.array.sortByKey = function(a, b, c) {
  var d = c || goog.array.defaultCompare;
  goog.array.sort(a, function(a, c) {
    return d(b(a), b(c));
  });
};
goog.array.sortObjectsByKey = function(a, b, c) {
  goog.array.sortByKey(a, function(a) {
    return a[b];
  }, c);
};
goog.array.isSorted = function(a, b, c) {
  b = b || goog.array.defaultCompare;
  for (var d = 1; d < a.length; d++) {
    var e = b(a[d - 1], a[d]);
    if (0 < e || 0 == e && c) {
      return !1;
    }
  }
  return !0;
};
goog.array.equals = function(a, b, c) {
  if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) {
    return !1;
  }
  var d = a.length;
  c = c || goog.array.defaultCompareEquality;
  for (var e = 0; e < d; e++) {
    if (!c(a[e], b[e])) {
      return !1;
    }
  }
  return !0;
};
goog.array.compare3 = function(a, b, c) {
  c = c || goog.array.defaultCompare;
  for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {
    var f = c(a[e], b[e]);
    if (0 != f) {
      return f;
    }
  }
  return goog.array.defaultCompare(a.length, b.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(a, b, c) {
  c = goog.array.binarySearch(a, b, c);
  return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;
};
goog.array.binaryRemove = function(a, b, c) {
  b = goog.array.binarySearch(a, b, c);
  return 0 <= b ? goog.array.removeAt(a, b) : !1;
};
goog.array.bucket = function(a, b, c) {
  for (var d = {}, e = 0; e < a.length; e++) {
    var f = a[e], g = b.call(c, f, e, a);
    goog.isDef(g) && (d[g] || (d[g] = [])).push(f);
  }
  return d;
};
goog.array.toObject = function(a, b, c) {
  var d = {};
  goog.array.forEach(a, function(e, f) {
    d[b.call(c, e, f, a)] = e;
  });
  return d;
};
goog.array.range = function(a, b, c) {
  var d = [], e = 0, f = a;
  c = c || 1;
  void 0 !== b && (e = a, f = b);
  if (0 > c * (f - e)) {
    return [];
  }
  if (0 < c) {
    for (a = e; a < f; a += c) {
      d.push(a);
    }
  } else {
    for (a = e; a > f; a += c) {
      d.push(a);
    }
  }
  return d;
};
goog.array.repeat = function(a, b) {
  for (var c = [], d = 0; d < b; d++) {
    c[d] = a;
  }
  return c;
};
goog.array.flatten = function(a) {
  for (var b = [], c = 0; c < arguments.length; c++) {
    var d = arguments[c];
    if (goog.isArray(d)) {
      for (var e = 0; e < d.length; e += 8192) {
        var f = goog.array.slice(d, e, e + 8192);
        f = goog.array.flatten.apply(null, f);
        for (var g = 0; g < f.length; g++) {
          b.push(f[g]);
        }
      }
    } else {
      b.push(d);
    }
  }
  return b;
};
goog.array.rotate = function(a, b) {
  goog.asserts.assert(null != a.length);
  a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));
  return a;
};
goog.array.moveItem = function(a, b, c) {
  goog.asserts.assert(0 <= b && b < a.length);
  goog.asserts.assert(0 <= c && c < a.length);
  b = Array.prototype.splice.call(a, b, 1);
  Array.prototype.splice.call(a, c, 0, b[0]);
};
goog.array.zip = function(a) {
  if (!arguments.length) {
    return [];
  }
  for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++) {
    arguments[d].length < c && (c = arguments[d].length);
  }
  for (d = 0; d < c; d++) {
    for (var e = [], f = 0; f < arguments.length; f++) {
      e.push(arguments[f][d]);
    }
    b.push(e);
  }
  return b;
};
goog.array.shuffle = function(a, b) {
  b = b || Math.random;
  for (var c = a.length - 1; 0 < c; c--) {
    var d = Math.floor(b() * (c + 1)), e = a[c];
    a[c] = a[d];
    a[d] = e;
  }
};
goog.array.copyByIndex = function(a, b) {
  var c = [];
  goog.array.forEach(b, function(b) {
    c.push(a[b]);
  });
  return c;
};
goog.array.concatMap = function(a, b, c) {
  return goog.array.concat.apply([], goog.array.map(a, b, c));
};
goog.crypt = {};
goog.crypt.stringToByteArray = function(a) {
  for (var b = [], c = 0, d = 0; d < a.length; d++) {
    var e = a.charCodeAt(d);
    255 < e && (b[c++] = e & 255, e >>= 8);
    b[c++] = e;
  }
  return b;
};
goog.crypt.byteArrayToString = function(a) {
  if (8192 >= a.length) {
    return String.fromCharCode.apply(null, a);
  }
  for (var b = "", c = 0; c < a.length; c += 8192) {
    var d = goog.array.slice(a, c, c + 8192);
    b += String.fromCharCode.apply(null, d);
  }
  return b;
};
goog.crypt.byteArrayToHex = function(a) {
  return goog.array.map(a, function(a) {
    a = a.toString(16);
    return 1 < a.length ? a : "0" + a;
  }).join("");
};
goog.crypt.hexToByteArray = function(a) {
  goog.asserts.assert(0 == a.length % 2, "Key string length must be multiple of 2");
  for (var b = [], c = 0; c < a.length; c += 2) {
    b.push(parseInt(a.substring(c, c + 2), 16));
  }
  return b;
};
goog.crypt.stringToUtf8ByteArray = function(a) {
  for (var b = [], c = 0, d = 0; d < a.length; d++) {
    var e = a.charCodeAt(d);
    128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);
  }
  return b;
};
goog.crypt.utf8ByteArrayToString = function(a) {
  for (var b = [], c = 0, d = 0; c < a.length;) {
    var e = a[c++];
    if (128 > e) {
      b[d++] = String.fromCharCode(e);
    } else {
      if (191 < e && 224 > e) {
        var f = a[c++];
        b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);
      } else {
        if (239 < e && 365 > e) {
          f = a[c++];
          var g = a[c++], h = a[c++];
          e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;
          b[d++] = String.fromCharCode(55296 + (e >> 10));
          b[d++] = String.fromCharCode(56320 + (e & 1023));
        } else {
          f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);
        }
      }
    }
  }
  return b.join("");
};
goog.crypt.xorByteArray = function(a, b) {
  goog.asserts.assert(a.length == b.length, "XOR array lengths must match");
  for (var c = [], d = 0; d < a.length; d++) {
    c.push(a[d] ^ b[d]);
  }
  return c;
};
goog.object = {};
goog.object.is = function(a, b) {
  return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;
};
goog.object.forEach = function(a, b, c) {
  for (var d in a) {
    b.call(c, a[d], d, a);
  }
};
goog.object.filter = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    b.call(c, a[e], e, a) && (d[e] = a[e]);
  }
  return d;
};
goog.object.map = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    d[e] = b.call(c, a[e], e, a);
  }
  return d;
};
goog.object.some = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return !0;
    }
  }
  return !1;
};
goog.object.every = function(a, b, c) {
  for (var d in a) {
    if (!b.call(c, a[d], d, a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.getCount = function(a) {
  var b = 0, c;
  for (c in a) {
    b++;
  }
  return b;
};
goog.object.getAnyKey = function(a) {
  for (var b in a) {
    return b;
  }
};
goog.object.getAnyValue = function(a) {
  for (var b in a) {
    return a[b];
  }
};
goog.object.contains = function(a, b) {
  return goog.object.containsValue(a, b);
};
goog.object.getValues = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = a[d];
  }
  return b;
};
goog.object.getKeys = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = d;
  }
  return b;
};
goog.object.getValueByKeys = function(a, b) {
  var c = goog.isArrayLike(b), d = c ? b : arguments;
  for (c = c ? 0 : 1; c < d.length && (a = a[d[c]], goog.isDef(a)); c++) {
  }
  return a;
};
goog.object.containsKey = function(a, b) {
  return null !== a && b in a;
};
goog.object.containsValue = function(a, b) {
  for (var c in a) {
    if (a[c] == b) {
      return !0;
    }
  }
  return !1;
};
goog.object.findKey = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return d;
    }
  }
};
goog.object.findValue = function(a, b, c) {
  return (b = goog.object.findKey(a, b, c)) && a[b];
};
goog.object.isEmpty = function(a) {
  for (var b in a) {
    return !1;
  }
  return !0;
};
goog.object.clear = function(a) {
  for (var b in a) {
    delete a[b];
  }
};
goog.object.remove = function(a, b) {
  var c;
  (c = b in a) && delete a[b];
  return c;
};
goog.object.add = function(a, b, c) {
  if (null !== a && b in a) {
    throw Error('The object already contains the key "' + b + '"');
  }
  goog.object.set(a, b, c);
};
goog.object.get = function(a, b, c) {
  return null !== a && b in a ? a[b] : c;
};
goog.object.set = function(a, b, c) {
  a[b] = c;
};
goog.object.setIfUndefined = function(a, b, c) {
  return b in a ? a[b] : a[b] = c;
};
goog.object.setWithReturnValueIfNotSet = function(a, b, c) {
  if (b in a) {
    return a[b];
  }
  c = c();
  return a[b] = c;
};
goog.object.equals = function(a, b) {
  for (var c in a) {
    if (!(c in b) || a[c] !== b[c]) {
      return !1;
    }
  }
  for (c in b) {
    if (!(c in a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.clone = function(a) {
  var b = {}, c;
  for (c in a) {
    b[c] = a[c];
  }
  return b;
};
goog.object.unsafeClone = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (goog.isFunction(a.clone)) {
      return a.clone();
    }
    b = "array" == b ? [] : {};
    for (var c in a) {
      b[c] = goog.object.unsafeClone(a[c]);
    }
    return b;
  }
  return a;
};
goog.object.transpose = function(a) {
  var b = {}, c;
  for (c in a) {
    b[a[c]] = c;
  }
  return b;
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(a, b) {
  for (var c, d, e = 1; e < arguments.length; e++) {
    d = arguments[e];
    for (c in d) {
      a[c] = d[c];
    }
    for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++) {
      c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
  }
};
goog.object.create = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (b % 2) {
    throw Error("Uneven number of arguments");
  }
  for (var c = {}, d = 0; d < b; d += 2) {
    c[arguments[d]] = arguments[d + 1];
  }
  return c;
};
goog.object.createSet = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  for (var c = {}, d = 0; d < b; d++) {
    c[arguments[d]] = !0;
  }
  return c;
};
goog.object.createImmutableView = function(a) {
  var b = a;
  Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));
  return b;
};
goog.object.isImmutableView = function(a) {
  return !!Object.isFrozen && Object.isFrozen(a);
};
goog.object.getAllPropertyNames = function(a, b, c) {
  if (!a) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(a);
  }
  for (var d = {}; a && (a !== Object.prototype || b) && (a !== Function.prototype || c);) {
    for (var e = Object.getOwnPropertyNames(a), f = 0; f < e.length; f++) {
      d[e[f]] = !0;
    }
    a = Object.getPrototypeOf(a);
  }
  return goog.object.getKeys(d);
};
goog.structs = {};
goog.structs.getCount = function(a) {
  return a.getCount && "function" == typeof a.getCount ? a.getCount() : goog.isArrayLike(a) || goog.isString(a) ? a.length : goog.object.getCount(a);
};
goog.structs.getValues = function(a) {
  if (a.getValues && "function" == typeof a.getValues) {
    return a.getValues();
  }
  if (goog.isString(a)) {
    return a.split("");
  }
  if (goog.isArrayLike(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++) {
      b.push(a[d]);
    }
    return b;
  }
  return goog.object.getValues(a);
};
goog.structs.getKeys = function(a) {
  if (a.getKeys && "function" == typeof a.getKeys) {
    return a.getKeys();
  }
  if (!a.getValues || "function" != typeof a.getValues) {
    if (goog.isArrayLike(a) || goog.isString(a)) {
      var b = [];
      a = a.length;
      for (var c = 0; c < a; c++) {
        b.push(c);
      }
      return b;
    }
    return goog.object.getKeys(a);
  }
};
goog.structs.contains = function(a, b) {
  return a.contains && "function" == typeof a.contains ? a.contains(b) : a.containsValue && "function" == typeof a.containsValue ? a.containsValue(b) : goog.isArrayLike(a) || goog.isString(a) ? goog.array.contains(a, b) : goog.object.containsValue(a, b);
};
goog.structs.isEmpty = function(a) {
  return a.isEmpty && "function" == typeof a.isEmpty ? a.isEmpty() : goog.isArrayLike(a) || goog.isString(a) ? goog.array.isEmpty(a) : goog.object.isEmpty(a);
};
goog.structs.clear = function(a) {
  a.clear && "function" == typeof a.clear ? a.clear() : goog.isArrayLike(a) ? goog.array.clear(a) : goog.object.clear(a);
};
goog.structs.forEach = function(a, b, c) {
  if (a.forEach && "function" == typeof a.forEach) {
    a.forEach(b, c);
  } else {
    if (goog.isArrayLike(a) || goog.isString(a)) {
      goog.array.forEach(a, b, c);
    } else {
      for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
        b.call(c, e[g], d && d[g], a);
      }
    }
  }
};
goog.structs.filter = function(a, b, c) {
  if ("function" == typeof a.filter) {
    return a.filter(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.filter(a, b, c);
  }
  var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length;
  if (d) {
    var g = {};
    for (var h = 0; h < f; h++) {
      b.call(c, e[h], d[h], a) && (g[d[h]] = e[h]);
    }
  } else {
    for (g = [], h = 0; h < f; h++) {
      b.call(c, e[h], void 0, a) && g.push(e[h]);
    }
  }
  return g;
};
goog.structs.map = function(a, b, c) {
  if ("function" == typeof a.map) {
    return a.map(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.map(a, b, c);
  }
  var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length;
  if (d) {
    var g = {};
    for (var h = 0; h < f; h++) {
      g[d[h]] = b.call(c, e[h], d[h], a);
    }
  } else {
    for (g = [], h = 0; h < f; h++) {
      g[h] = b.call(c, e[h], void 0, a);
    }
  }
  return g;
};
goog.structs.some = function(a, b, c) {
  if ("function" == typeof a.some) {
    return a.some(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.some(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
    if (b.call(c, e[g], d && d[g], a)) {
      return !0;
    }
  }
  return !1;
};
goog.structs.every = function(a, b, c) {
  if ("function" == typeof a.every) {
    return a.every(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.every(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
    if (!b.call(c, e[g], d && d[g], a)) {
      return !1;
    }
  }
  return !0;
};
goog.functions = {};
goog.functions.constant = function(a) {
  return function() {
    return a;
  };
};
goog.functions.FALSE = goog.functions.constant(!1);
goog.functions.TRUE = goog.functions.constant(!0);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(a, b) {
  return a;
};
goog.functions.error = function(a) {
  return function() {
    throw Error(a);
  };
};
goog.functions.fail = function(a) {
  return function() {
    throw a;
  };
};
goog.functions.lock = function(a, b) {
  b = b || 0;
  return function() {
    return a.apply(this, Array.prototype.slice.call(arguments, 0, b));
  };
};
goog.functions.nth = function(a) {
  return function() {
    return arguments[a];
  };
};
goog.functions.partialRight = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var b = Array.prototype.slice.call(arguments);
    b.push.apply(b, c);
    return a.apply(this, b);
  };
};
goog.functions.withReturnValue = function(a, b) {
  return goog.functions.sequence(a, goog.functions.constant(b));
};
goog.functions.equalTo = function(a, b) {
  return function(c) {
    return b ? a == c : a === c;
  };
};
goog.functions.compose = function(a, b) {
  var c = arguments, d = c.length;
  return function() {
    var a;
    d && (a = c[d - 1].apply(this, arguments));
    for (var b = d - 2; 0 <= b; b--) {
      a = c[b].call(this, a);
    }
    return a;
  };
};
goog.functions.sequence = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a, e = 0; e < c; e++) {
      a = b[e].apply(this, arguments);
    }
    return a;
  };
};
goog.functions.and = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0; a < c; a++) {
      if (!b[a].apply(this, arguments)) {
        return !1;
      }
    }
    return !0;
  };
};
goog.functions.or = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0; a < c; a++) {
      if (b[a].apply(this, arguments)) {
        return !0;
      }
    }
    return !1;
  };
};
goog.functions.not = function(a) {
  return function() {
    return !a.apply(this, arguments);
  };
};
goog.functions.create = function(a, b) {
  var c = function() {
  };
  c.prototype = a.prototype;
  c = new c;
  a.apply(c, Array.prototype.slice.call(arguments, 1));
  return c;
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(a) {
  var b = !1, c;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return a();
    }
    b || (c = a(), b = !0);
    return c;
  };
};
goog.functions.once = function(a) {
  var b = a;
  return function() {
    if (b) {
      var a = b;
      b = null;
      a();
    }
  };
};
goog.functions.debounce = function(a, b, c) {
  var d = 0;
  return function(e) {
    goog.global.clearTimeout(d);
    var f = arguments;
    d = goog.global.setTimeout(function() {
      a.apply(c, f);
    }, b);
  };
};
goog.functions.throttle = function(a, b, c) {
  var d = 0, e = !1, f = [], g = function() {
    d = 0;
    e && (e = !1, h());
  }, h = function() {
    d = goog.global.setTimeout(g, b);
    a.apply(c, f);
  };
  return function(a) {
    f = arguments;
    d ? e = !0 : h();
  };
};
goog.functions.rateLimit = function(a, b, c) {
  var d = 0, e = function() {
    d = 0;
  };
  return function(f) {
    d || (d = goog.global.setTimeout(e, b), a.apply(c, arguments));
  };
};
goog.math = {};
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(a, b, c) {
  return Math.min(Math.max(a, b), c);
};
goog.math.modulo = function(a, b) {
  a %= b;
  return 0 > a * b ? a + b : a;
};
goog.math.lerp = function(a, b, c) {
  return a + c * (b - a);
};
goog.math.nearlyEquals = function(a, b, c) {
  return Math.abs(a - b) <= (c || 0.000001);
};
goog.math.standardAngle = function(a) {
  return goog.math.modulo(a, 360);
};
goog.math.standardAngleInRadians = function(a) {
  return goog.math.modulo(a, 2 * Math.PI);
};
goog.math.toRadians = function(a) {
  return a * Math.PI / 180;
};
goog.math.toDegrees = function(a) {
  return 180 * a / Math.PI;
};
goog.math.angleDx = function(a, b) {
  return b * Math.cos(goog.math.toRadians(a));
};
goog.math.angleDy = function(a, b) {
  return b * Math.sin(goog.math.toRadians(a));
};
goog.math.angle = function(a, b, c, d) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(d - b, c - a)));
};
goog.math.angleDifference = function(a, b) {
  a = goog.math.standardAngle(b) - goog.math.standardAngle(a);
  180 < a ? a -= 360 : -180 >= a && (a = 360 + a);
  return a;
};
goog.math.sign = function(a) {
  return 0 < a ? 1 : 0 > a ? -1 : a;
};
goog.math.longestCommonSubsequence = function(a, b, c, d) {
  c = c || function(a, b) {
    return a == b;
  };
  d = d || function(b, c) {
    return a[b];
  };
  for (var e = a.length, f = b.length, g = [], h = 0; h < e + 1; h++) {
    g[h] = [], g[h][0] = 0;
  }
  for (var k = 0; k < f + 1; k++) {
    g[0][k] = 0;
  }
  for (h = 1; h <= e; h++) {
    for (k = 1; k <= f; k++) {
      c(a[h - 1], b[k - 1]) ? g[h][k] = g[h - 1][k - 1] + 1 : g[h][k] = Math.max(g[h - 1][k], g[h][k - 1]);
    }
  }
  var l = [];
  h = e;
  for (k = f; 0 < h && 0 < k;) {
    c(a[h - 1], b[k - 1]) ? (l.unshift(d(h - 1, k - 1)), h--, k--) : g[h - 1][k] > g[h][k - 1] ? h-- : k--;
  }
  return l;
};
goog.math.sum = function(a) {
  return goog.array.reduce(arguments, function(a, c) {
    return a + c;
  }, 0);
};
goog.math.average = function(a) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(a) {
  var b = arguments.length;
  if (2 > b) {
    return 0;
  }
  var c = goog.math.average.apply(null, arguments);
  return goog.math.sum.apply(null, goog.array.map(arguments, function(a) {
    return Math.pow(a - c, 2);
  })) / (b - 1);
};
goog.math.standardDeviation = function(a) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(a) {
  return isFinite(a) && 0 == a % 1;
};
goog.math.isFiniteNumber = function(a) {
  return isFinite(a);
};
goog.math.isNegativeZero = function(a) {
  return 0 == a && 0 > 1 / a;
};
goog.math.log10Floor = function(a) {
  if (0 < a) {
    var b = Math.round(Math.log(a) * Math.LOG10E);
    return b - (parseFloat("1e" + b) > a ? 1 : 0);
  }
  return 0 == a ? -Infinity : NaN;
};
goog.math.safeFloor = function(a, b) {
  goog.asserts.assert(!goog.isDef(b) || 0 < b);
  return Math.floor(a + (b || 2e-15));
};
goog.math.safeCeil = function(a, b) {
  goog.asserts.assert(!goog.isDef(b) || 0 < b);
  return Math.ceil(a - (b || 2e-15));
};
goog.iter = {};
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global.StopIteration : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(a) {
  return this;
};
goog.iter.toIterator = function(a) {
  if (a instanceof goog.iter.Iterator) {
    return a;
  }
  if ("function" == typeof a.__iterator__) {
    return a.__iterator__(!1);
  }
  if (goog.isArrayLike(a)) {
    var b = 0, c = new goog.iter.Iterator;
    c.next = function() {
      for (;;) {
        if (b >= a.length) {
          throw goog.iter.StopIteration;
        }
        if (b in a) {
          return a[b++];
        }
        b++;
      }
    };
    return c;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(a, b, c) {
  if (goog.isArrayLike(a)) {
    try {
      goog.array.forEach(a, b, c);
    } catch (d) {
      if (d !== goog.iter.StopIteration) {
        throw d;
      }
    }
  } else {
    a = goog.iter.toIterator(a);
    try {
      for (;;) {
        b.call(c, a.next(), void 0, a);
      }
    } catch (d) {
      if (d !== goog.iter.StopIteration) {
        throw d;
      }
    }
  }
};
goog.iter.filter = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    for (;;) {
      var a = d.next();
      if (b.call(c, a, void 0, d)) {
        return a;
      }
    }
  };
  return a;
};
goog.iter.filterFalse = function(a, b, c) {
  return goog.iter.filter(a, goog.functions.not(b), c);
};
goog.iter.range = function(a, b, c) {
  var d = 0, e = a, f = c || 1;
  1 < arguments.length && (d = a, e = b);
  if (0 == f) {
    throw Error("Range step argument must not be zero");
  }
  var g = new goog.iter.Iterator;
  g.next = function() {
    if (0 < f && d >= e || 0 > f && d <= e) {
      throw goog.iter.StopIteration;
    }
    var a = d;
    d += f;
    return a;
  };
  return g;
};
goog.iter.join = function(a, b) {
  return goog.iter.toArray(a).join(b);
};
goog.iter.map = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = d.next();
    return b.call(c, a, void 0, d);
  };
  return a;
};
goog.iter.reduce = function(a, b, c, d) {
  var e = c;
  goog.iter.forEach(a, function(a) {
    e = b.call(d, e, a);
  });
  return e;
};
goog.iter.some = function(a, b, c) {
  a = goog.iter.toIterator(a);
  try {
    for (;;) {
      if (b.call(c, a.next(), void 0, a)) {
        return !0;
      }
    }
  } catch (d) {
    if (d !== goog.iter.StopIteration) {
      throw d;
    }
  }
  return !1;
};
goog.iter.every = function(a, b, c) {
  a = goog.iter.toIterator(a);
  try {
    for (;;) {
      if (!b.call(c, a.next(), void 0, a)) {
        return !1;
      }
    }
  } catch (d) {
    if (d !== goog.iter.StopIteration) {
      throw d;
    }
  }
  return !0;
};
goog.iter.chain = function(a) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(a) {
  var b = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  var c = null;
  a.next = function() {
    for (;;) {
      if (null == c) {
        var a = b.next();
        c = goog.iter.toIterator(a);
      }
      try {
        return c.next();
      } catch (e) {
        if (e !== goog.iter.StopIteration) {
          throw e;
        }
        c = null;
      }
    }
  };
  return a;
};
goog.iter.dropWhile = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  var e = !0;
  a.next = function() {
    for (;;) {
      var a = d.next();
      if (!e || !b.call(c, a, void 0, d)) {
        return e = !1, a;
      }
    }
  };
  return a;
};
goog.iter.takeWhile = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = d.next();
    if (b.call(c, a, void 0, d)) {
      return a;
    }
    throw goog.iter.StopIteration;
  };
  return a;
};
goog.iter.toArray = function(a) {
  if (goog.isArrayLike(a)) {
    return goog.array.toArray(a);
  }
  a = goog.iter.toIterator(a);
  var b = [];
  goog.iter.forEach(a, function(a) {
    b.push(a);
  });
  return b;
};
goog.iter.equals = function(a, b, c) {
  a = goog.iter.zipLongest({}, a, b);
  var d = c || goog.array.defaultCompareEquality;
  return goog.iter.every(a, function(a) {
    return d(a[0], a[1]);
  });
};
goog.iter.nextOrValue = function(a, b) {
  try {
    return goog.iter.toIterator(a).next();
  } catch (c) {
    if (c != goog.iter.StopIteration) {
      throw c;
    }
    return b;
  }
};
goog.iter.product = function(a) {
  if (goog.array.some(arguments, function(a) {
    return !a.length;
  }) || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var b = new goog.iter.Iterator, c = arguments, d = goog.array.repeat(0, c.length);
  b.next = function() {
    if (d) {
      for (var a = goog.array.map(d, function(a, b) {
        return c[b][a];
      }), b = d.length - 1; 0 <= b; b--) {
        goog.asserts.assert(d);
        if (d[b] < c[b].length - 1) {
          d[b]++;
          break;
        }
        if (0 == b) {
          d = null;
          break;
        }
        d[b] = 0;
      }
      return a;
    }
    throw goog.iter.StopIteration;
  };
  return b;
};
goog.iter.cycle = function(a) {
  var b = goog.iter.toIterator(a), c = [], d = 0;
  a = new goog.iter.Iterator;
  var e = !1;
  a.next = function() {
    var a = null;
    if (!e) {
      try {
        return a = b.next(), c.push(a), a;
      } catch (g) {
        if (g != goog.iter.StopIteration || goog.array.isEmpty(c)) {
          throw g;
        }
        e = !0;
      }
    }
    a = c[d];
    d = (d + 1) % c.length;
    return a;
  };
  return a;
};
goog.iter.count = function(a, b) {
  var c = a || 0, d = goog.isDef(b) ? b : 1;
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = c;
    c += d;
    return a;
  };
  return a;
};
goog.iter.repeat = function(a) {
  var b = new goog.iter.Iterator;
  b.next = goog.functions.constant(a);
  return b;
};
goog.iter.accumulate = function(a) {
  var b = goog.iter.toIterator(a), c = 0;
  a = new goog.iter.Iterator;
  a.next = function() {
    return c += b.next();
  };
  return a;
};
goog.iter.zip = function(a) {
  var b = arguments, c = new goog.iter.Iterator;
  if (0 < b.length) {
    var d = goog.array.map(b, goog.iter.toIterator);
    c.next = function() {
      return goog.array.map(d, function(a) {
        return a.next();
      });
    };
  }
  return c;
};
goog.iter.zipLongest = function(a, b) {
  var c = goog.array.slice(arguments, 1), d = new goog.iter.Iterator;
  if (0 < c.length) {
    var e = goog.array.map(c, goog.iter.toIterator);
    d.next = function() {
      var b = !1, c = goog.array.map(e, function(c) {
        try {
          var d = c.next();
          b = !0;
        } catch (l) {
          if (l !== goog.iter.StopIteration) {
            throw l;
          }
          d = a;
        }
        return d;
      });
      if (!b) {
        throw goog.iter.StopIteration;
      }
      return c;
    };
  }
  return d;
};
goog.iter.compress = function(a, b) {
  var c = goog.iter.toIterator(b);
  return goog.iter.filter(a, function() {
    return !!c.next();
  });
};
goog.iter.GroupByIterator_ = function(a, b) {
  this.iterator = goog.iter.toIterator(a);
  this.keyFunc = b || goog.functions.identity;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  for (; this.currentKey == this.targetKey;) {
    this.currentValue = this.iterator.next(), this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(a) {
  for (var b = []; this.currentKey == a;) {
    b.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (c) {
      if (c !== goog.iter.StopIteration) {
        throw c;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return b;
};
goog.iter.groupBy = function(a, b) {
  return new goog.iter.GroupByIterator_(a, b);
};
goog.iter.starMap = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = goog.iter.toArray(d.next());
    return b.apply(c, goog.array.concat(a, void 0, d));
  };
  return a;
};
goog.iter.tee = function(a, b) {
  var c = goog.iter.toIterator(a);
  a = goog.isNumber(b) ? b : 2;
  var d = goog.array.map(goog.array.range(a), function() {
    return [];
  }), e = function() {
    var a = c.next();
    goog.array.forEach(d, function(b) {
      b.push(a);
    });
  };
  return goog.array.map(d, function(a) {
    var b = new goog.iter.Iterator;
    b.next = function() {
      goog.array.isEmpty(a) && e();
      goog.asserts.assert(!goog.array.isEmpty(a));
      return a.shift();
    };
    return b;
  });
};
goog.iter.enumerate = function(a, b) {
  return goog.iter.zip(goog.iter.count(b), a);
};
goog.iter.limit = function(a, b) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  var c = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  var d = b;
  a.next = function() {
    if (0 < d--) {
      return c.next();
    }
    throw goog.iter.StopIteration;
  };
  return a;
};
goog.iter.consume = function(a, b) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  for (a = goog.iter.toIterator(a); 0 < b--;) {
    goog.iter.nextOrValue(a, null);
  }
  return a;
};
goog.iter.slice = function(a, b, c) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  a = goog.iter.consume(a, b);
  goog.isNumber(c) && (goog.asserts.assert(goog.math.isInt(c) && c >= b), a = goog.iter.limit(a, c - b));
  return a;
};
goog.iter.hasDuplicates_ = function(a) {
  var b = [];
  goog.array.removeDuplicates(a, b);
  return a.length != b.length;
};
goog.iter.permutations = function(a, b) {
  a = goog.iter.toArray(a);
  b = goog.isNumber(b) ? b : a.length;
  b = goog.array.repeat(a, b);
  b = goog.iter.product.apply(void 0, b);
  return goog.iter.filter(b, function(a) {
    return !goog.iter.hasDuplicates_(a);
  });
};
goog.iter.combinations = function(a, b) {
  function c(a) {
    return d[a];
  }
  var d = goog.iter.toArray(a);
  a = goog.iter.range(d.length);
  b = goog.iter.permutations(a, b);
  var e = goog.iter.filter(b, function(a) {
    return goog.array.isSorted(a);
  });
  b = new goog.iter.Iterator;
  b.next = function() {
    return goog.array.map(e.next(), c);
  };
  return b;
};
goog.iter.combinationsWithReplacement = function(a, b) {
  function c(a) {
    return d[a];
  }
  var d = goog.iter.toArray(a);
  a = goog.array.range(d.length);
  b = goog.array.repeat(a, b);
  b = goog.iter.product.apply(void 0, b);
  var e = goog.iter.filter(b, function(a) {
    return goog.array.isSorted(a);
  });
  b = new goog.iter.Iterator;
  b.next = function() {
    return goog.array.map(e.next(), c);
  };
  return b;
};
goog.structs.Map = function(a, b) {
  this.map_ = {};
  this.keys_ = [];
  this.version_ = this.count_ = 0;
  var c = arguments.length;
  if (1 < c) {
    if (c % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var d = 0; d < c; d += 2) {
      this.set(arguments[d], arguments[d + 1]);
    }
  } else {
    a && this.addAll(a);
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  for (var a = [], b = 0; b < this.keys_.length; b++) {
    a.push(this.map_[this.keys_[b]]);
  }
  return a;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(a) {
  return goog.structs.Map.hasKey_(this.map_, a);
};
goog.structs.Map.prototype.containsValue = function(a) {
  for (var b = 0; b < this.keys_.length; b++) {
    var c = this.keys_[b];
    if (goog.structs.Map.hasKey_(this.map_, c) && this.map_[c] == a) {
      return !0;
    }
  }
  return !1;
};
goog.structs.Map.prototype.equals = function(a, b) {
  if (this === a) {
    return !0;
  }
  if (this.count_ != a.getCount()) {
    return !1;
  }
  b = b || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var c, d = 0; c = this.keys_[d]; d++) {
    if (!b(this.get(c), a.get(c))) {
      return !1;
    }
  }
  return !0;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return 0 == this.count_;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.version_ = this.count_ = this.keys_.length = 0;
};
goog.structs.Map.prototype.remove = function(a) {
  return goog.structs.Map.hasKey_(this.map_, a) ? (delete this.map_[a], this.count_--, this.version_++, this.keys_.length > 2 * this.count_ && this.cleanupKeysArray_(), !0) : !1;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    for (var a = 0, b = 0; a < this.keys_.length;) {
      var c = this.keys_[a];
      goog.structs.Map.hasKey_(this.map_, c) && (this.keys_[b++] = c);
      a++;
    }
    this.keys_.length = b;
  }
  if (this.count_ != this.keys_.length) {
    var d = {};
    for (b = a = 0; a < this.keys_.length;) {
      c = this.keys_[a], goog.structs.Map.hasKey_(d, c) || (this.keys_[b++] = c, d[c] = 1), a++;
    }
    this.keys_.length = b;
  }
};
goog.structs.Map.prototype.get = function(a, b) {
  return goog.structs.Map.hasKey_(this.map_, a) ? this.map_[a] : b;
};
goog.structs.Map.prototype.set = function(a, b) {
  goog.structs.Map.hasKey_(this.map_, a) || (this.count_++, this.keys_.push(a), this.version_++);
  this.map_[a] = b;
};
goog.structs.Map.prototype.addAll = function(a) {
  if (a instanceof goog.structs.Map) {
    var b = a.getKeys();
    a = a.getValues();
  } else {
    b = goog.object.getKeys(a), a = goog.object.getValues(a);
  }
  for (var c = 0; c < b.length; c++) {
    this.set(b[c], a[c]);
  }
};
goog.structs.Map.prototype.forEach = function(a, b) {
  for (var c = this.getKeys(), d = 0; d < c.length; d++) {
    var e = c[d], f = this.get(e);
    a.call(b, f, e, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  for (var a = new goog.structs.Map, b = 0; b < this.keys_.length; b++) {
    var c = this.keys_[b];
    a.set(this.map_[c], c);
  }
  return a;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  for (var a = {}, b = 0; b < this.keys_.length; b++) {
    var c = this.keys_[b];
    a[c] = this.map_[c];
  }
  return a;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(!0);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(!1);
};
goog.structs.Map.prototype.__iterator__ = function(a) {
  this.cleanupKeysArray_();
  var b = 0, c = this.version_, d = this, e = new goog.iter.Iterator;
  e.next = function() {
    if (c != d.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (b >= d.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var e = d.keys_[b++];
    return a ? e : d.map_[e];
  };
  return e;
};
goog.structs.Map.hasKey_ = function(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
};
goog.uri = {};
goog.uri.utils = {};
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(a, b, c, d, e, f, g) {
  var h = "";
  a && (h += a + ":");
  c && (h += "//", b && (h += b + "@"), h += c, d && (h += ":" + d));
  e && (h += e);
  f && (h += "?" + f);
  g && (h += "#" + g);
  return h;
};
goog.uri.utils.splitRe_ = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(a) {
  return a.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(a, b) {
  return a ? b ? decodeURI(a) : decodeURIComponent(a) : a;
};
goog.uri.utils.getComponentByIndex_ = function(a, b) {
  return goog.uri.utils.split(b)[a] || null;
};
goog.uri.utils.getScheme = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, a);
};
goog.uri.utils.getEffectiveScheme = function(a) {
  a = goog.uri.utils.getScheme(a);
  !a && goog.global.self && goog.global.self.location && (a = goog.global.self.location.protocol, a = a.substr(0, a.length - 1));
  return a ? a.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, a);
};
goog.uri.utils.getUserInfo = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(a));
};
goog.uri.utils.getDomainEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, a);
};
goog.uri.utils.getDomain = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(a), !0);
};
goog.uri.utils.getPort = function(a) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, a)) || null;
};
goog.uri.utils.getPathEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, a);
};
goog.uri.utils.getPath = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(a), !0);
};
goog.uri.utils.getQueryData = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, a);
};
goog.uri.utils.getFragmentEncoded = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? null : a.substr(b + 1);
};
goog.uri.utils.setFragmentEncoded = function(a, b) {
  return goog.uri.utils.removeFragment(a) + (b ? "#" + b : "");
};
goog.uri.utils.getFragment = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(a));
};
goog.uri.utils.getHost = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], a[goog.uri.utils.ComponentIndex.USER_INFO], a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], null, a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, a[goog.uri.utils.ComponentIndex.PATH], a[goog.uri.utils.ComponentIndex.QUERY_DATA], a[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? a : a.substr(0, b);
};
goog.uri.utils.haveSameDomain = function(a, b) {
  a = goog.uri.utils.split(a);
  b = goog.uri.utils.split(b);
  return a[goog.uri.utils.ComponentIndex.DOMAIN] == b[goog.uri.utils.ComponentIndex.DOMAIN] && a[goog.uri.utils.ComponentIndex.SCHEME] == b[goog.uri.utils.ComponentIndex.SCHEME] && a[goog.uri.utils.ComponentIndex.PORT] == b[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(a) {
  goog.asserts.assert(0 > a.indexOf("#") && 0 > a.indexOf("?"), "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", a);
};
goog.uri.utils.parseQueryData = function(a, b) {
  if (a) {
    a = a.split("\x26");
    for (var c = 0; c < a.length; c++) {
      var d = a[c].indexOf("\x3d"), e = null;
      if (0 <= d) {
        var f = a[c].substring(0, d);
        e = a[c].substring(d + 1);
      } else {
        f = a[c];
      }
      b(f, e ? goog.string.urlDecode(e) : "");
    }
  }
};
goog.uri.utils.splitQueryData_ = function(a) {
  var b = a.indexOf("#");
  0 > b && (b = a.length);
  var c = a.indexOf("?");
  if (0 > c || c > b) {
    c = b;
    var d = "";
  } else {
    d = a.substring(c + 1, b);
  }
  return [a.substr(0, c), d, a.substr(b)];
};
goog.uri.utils.joinQueryData_ = function(a) {
  return a[0] + (a[1] ? "?" + a[1] : "") + a[2];
};
goog.uri.utils.appendQueryData_ = function(a, b) {
  return b ? a ? a + "\x26" + b : b : a;
};
goog.uri.utils.appendQueryDataToUri_ = function(a, b) {
  if (!b) {
    return a;
  }
  a = goog.uri.utils.splitQueryData_(a);
  a[1] = goog.uri.utils.appendQueryData_(a[1], b);
  return goog.uri.utils.joinQueryData_(a);
};
goog.uri.utils.appendKeyValuePairs_ = function(a, b, c) {
  goog.asserts.assertString(a);
  if (goog.isArray(b)) {
    goog.asserts.assertArray(b);
    for (var d = 0; d < b.length; d++) {
      goog.uri.utils.appendKeyValuePairs_(a, String(b[d]), c);
    }
  } else {
    null != b && c.push(a + ("" === b ? "" : "\x3d" + goog.string.urlEncode(b)));
  }
};
goog.uri.utils.buildQueryData = function(a, b) {
  goog.asserts.assert(0 == Math.max(a.length - (b || 0), 0) % 2, "goog.uri.utils: Key/value lists must be even in length.");
  var c = [];
  for (b = b || 0; b < a.length; b += 2) {
    goog.uri.utils.appendKeyValuePairs_(a[b], a[b + 1], c);
  }
  return c.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(a) {
  var b = [], c;
  for (c in a) {
    goog.uri.utils.appendKeyValuePairs_(c, a[c], b);
  }
  return b.join("\x26");
};
goog.uri.utils.appendParams = function(a, b) {
  var c = 2 == arguments.length ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(a, c);
};
goog.uri.utils.appendParamsFromMap = function(a, b) {
  b = goog.uri.utils.buildQueryDataFromMap(b);
  return goog.uri.utils.appendQueryDataToUri_(a, b);
};
goog.uri.utils.appendParam = function(a, b, c) {
  c = goog.isDefAndNotNull(c) ? "\x3d" + goog.string.urlEncode(c) : "";
  return goog.uri.utils.appendQueryDataToUri_(a, b + c);
};
goog.uri.utils.findParam_ = function(a, b, c, d) {
  for (var e = c.length; 0 <= (b = a.indexOf(c, b)) && b < d;) {
    var f = a.charCodeAt(b - 1);
    if (f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.QUESTION) {
      if (f = a.charCodeAt(b + e), !f || f == goog.uri.utils.CharCode_.EQUAL || f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.HASH) {
        return b;
      }
    }
    b += e + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(a, b) {
  return 0 <= goog.uri.utils.findParam_(a, 0, b, a.search(goog.uri.utils.hashOrEndRe_));
};
goog.uri.utils.getParamValue = function(a, b) {
  var c = a.search(goog.uri.utils.hashOrEndRe_), d = goog.uri.utils.findParam_(a, 0, b, c);
  if (0 > d) {
    return null;
  }
  var e = a.indexOf("\x26", d);
  if (0 > e || e > c) {
    e = c;
  }
  d += b.length + 1;
  return goog.string.urlDecode(a.substr(d, e - d));
};
goog.uri.utils.getParamValues = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    d = a.indexOf("\x26", e);
    if (0 > d || d > c) {
      d = c;
    }
    e += b.length + 1;
    f.push(goog.string.urlDecode(a.substr(e, d - e)));
  }
  return f;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    f.push(a.substring(d, e)), d = Math.min(a.indexOf("\x26", e) + 1 || c, c);
  }
  f.push(a.substr(d));
  return f.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(a, b, c) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(a, b), b, c);
};
goog.uri.utils.setParamsFromMap = function(a, b) {
  a = goog.uri.utils.splitQueryData_(a);
  var c = a[1], d = [];
  c && goog.array.forEach(c.split("\x26"), function(a) {
    var c = a.indexOf("\x3d");
    c = 0 <= c ? a.substr(0, c) : a;
    b.hasOwnProperty(c) || d.push(a);
  });
  a[1] = goog.uri.utils.appendQueryData_(d.join("\x26"), goog.uri.utils.buildQueryDataFromMap(b));
  return goog.uri.utils.joinQueryData_(a);
};
goog.uri.utils.appendPath = function(a, b) {
  goog.uri.utils.assertNoFragmentsOrQueries_(a);
  goog.string.endsWith(a, "/") && (a = a.substr(0, a.length - 1));
  goog.string.startsWith(b, "/") && (b = b.substr(1));
  return goog.string.buildString(a, "/", b);
};
goog.uri.utils.setPath = function(a, b) {
  goog.string.startsWith(b, "/") || (b = "/" + b);
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], a[goog.uri.utils.ComponentIndex.USER_INFO], a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT], b, a[goog.uri.utils.ComponentIndex.QUERY_DATA], a[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(a) {
  return goog.uri.utils.setParam(a, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.Uri = function(a, b) {
  this.domain_ = this.userInfo_ = this.scheme_ = "";
  this.port_ = null;
  this.fragment_ = this.path_ = "";
  this.ignoreCase_ = this.isReadOnly_ = !1;
  var c;
  a instanceof goog.Uri ? (this.ignoreCase_ = goog.isDef(b) ? b : a.getIgnoreCase(), this.setScheme(a.getScheme()), this.setUserInfo(a.getUserInfo()), this.setDomain(a.getDomain()), this.setPort(a.getPort()), this.setPath(a.getPath()), this.setQueryData(a.getQueryData().clone()), this.setFragment(a.getFragment())) : a && (c = goog.uri.utils.split(String(a))) ? (this.ignoreCase_ = !!b, this.setScheme(c[goog.uri.utils.ComponentIndex.SCHEME] || "", !0), this.setUserInfo(c[goog.uri.utils.ComponentIndex.USER_INFO] || 
  "", !0), this.setDomain(c[goog.uri.utils.ComponentIndex.DOMAIN] || "", !0), this.setPort(c[goog.uri.utils.ComponentIndex.PORT]), this.setPath(c[goog.uri.utils.ComponentIndex.PATH] || "", !0), this.setQueryData(c[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", !0), this.setFragment(c[goog.uri.utils.ComponentIndex.FRAGMENT] || "", !0)) : (this.ignoreCase_ = !!b, this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_));
};
goog.Uri.preserveParameterTypesCompatibilityFlag = !1;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var a = [], b = this.getScheme();
  b && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), ":");
  var c = this.getDomain();
  if (c || "file" == b) {
    a.push("//"), (b = this.getUserInfo()) && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), "@"), a.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(c))), c = this.getPort(), null != c && a.push(":", String(c));
  }
  if (c = this.getPath()) {
    this.hasDomain() && "/" != c.charAt(0) && a.push("/"), a.push(goog.Uri.encodeSpecialChars_(c, "/" == c.charAt(0) ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, !0));
  }
  (c = this.getEncodedQuery()) && a.push("?", c);
  (c = this.getFragment()) && a.push("#", goog.Uri.encodeSpecialChars_(c, goog.Uri.reDisallowedInFragment_));
  return a.join("");
};
goog.Uri.prototype.resolve = function(a) {
  var b = this.clone(), c = a.hasScheme();
  c ? b.setScheme(a.getScheme()) : c = a.hasUserInfo();
  c ? b.setUserInfo(a.getUserInfo()) : c = a.hasDomain();
  c ? b.setDomain(a.getDomain()) : c = a.hasPort();
  var d = a.getPath();
  if (c) {
    b.setPort(a.getPort());
  } else {
    if (c = a.hasPath()) {
      if ("/" != d.charAt(0)) {
        if (this.hasDomain() && !this.hasPath()) {
          d = "/" + d;
        } else {
          var e = b.getPath().lastIndexOf("/");
          -1 != e && (d = b.getPath().substr(0, e + 1) + d);
        }
      }
      d = goog.Uri.removeDotSegments(d);
    }
  }
  c ? b.setPath(d) : c = a.hasQuery();
  c ? b.setQueryData(a.getQueryData().clone()) : c = a.hasFragment();
  c && b.setFragment(a.getFragment());
  return b;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(a, b) {
  this.enforceReadOnly();
  if (this.scheme_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(a, b) {
  this.enforceReadOnly();
  this.userInfo_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(a, b) {
  this.enforceReadOnly();
  this.domain_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(a) {
  this.enforceReadOnly();
  if (a) {
    a = Number(a);
    if (isNaN(a) || 0 > a) {
      throw Error("Bad port number " + a);
    }
    this.port_ = a;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return null != this.port_;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(a, b) {
  this.enforceReadOnly();
  this.path_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return "" !== this.queryData_.toString();
};
goog.Uri.prototype.setQueryData = function(a, b) {
  this.enforceReadOnly();
  a instanceof goog.Uri.QueryData ? (this.queryData_ = a, this.queryData_.setIgnoreCase(this.ignoreCase_)) : (b || (a = goog.Uri.encodeSpecialChars_(a, goog.Uri.reDisallowedInQuery_)), this.queryData_ = new goog.Uri.QueryData(a, null, this.ignoreCase_));
  return this;
};
goog.Uri.prototype.setQuery = function(a, b) {
  return this.setQueryData(a, b);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(a, b) {
  this.enforceReadOnly();
  this.queryData_.set(a, b);
  return this;
};
goog.Uri.prototype.setParameterValues = function(a, b) {
  this.enforceReadOnly();
  goog.isArray(b) || (b = [String(b)]);
  this.queryData_.setValues(a, b);
  return this;
};
goog.Uri.prototype.getParameterValues = function(a) {
  return this.queryData_.getValues(a);
};
goog.Uri.prototype.getParameterValue = function(a) {
  return this.queryData_.get(a);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(a, b) {
  this.enforceReadOnly();
  this.fragment_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(a) {
  return (!this.hasDomain() && !a.hasDomain() || this.getDomain() == a.getDomain()) && (!this.hasPort() && !a.hasPort() || this.getPort() == a.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(a) {
  this.enforceReadOnly();
  this.queryData_.remove(a);
  return this;
};
goog.Uri.prototype.setReadOnly = function(a) {
  this.isReadOnly_ = a;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(a) {
  this.ignoreCase_ = a;
  this.queryData_ && this.queryData_.setIgnoreCase(a);
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(a, b) {
  return a instanceof goog.Uri ? a.clone() : new goog.Uri(a, b);
};
goog.Uri.create = function(a, b, c, d, e, f, g, h) {
  h = new goog.Uri(null, h);
  a && h.setScheme(a);
  b && h.setUserInfo(b);
  c && h.setDomain(c);
  d && h.setPort(d);
  e && h.setPath(e);
  f && h.setQueryData(f);
  g && h.setFragment(g);
  return h;
};
goog.Uri.resolve = function(a, b) {
  a instanceof goog.Uri || (a = goog.Uri.parse(a));
  b instanceof goog.Uri || (b = goog.Uri.parse(b));
  return a.resolve(b);
};
goog.Uri.removeDotSegments = function(a) {
  if (".." == a || "." == a) {
    return "";
  }
  if (goog.string.contains(a, "./") || goog.string.contains(a, "/.")) {
    var b = goog.string.startsWith(a, "/");
    a = a.split("/");
    for (var c = [], d = 0; d < a.length;) {
      var e = a[d++];
      "." == e ? b && d == a.length && c.push("") : ".." == e ? ((1 < c.length || 1 == c.length && "" != c[0]) && c.pop(), b && d == a.length && c.push("")) : (c.push(e), b = !0);
    }
    return c.join("/");
  }
  return a;
};
goog.Uri.decodeOrEmpty_ = function(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
};
goog.Uri.encodeSpecialChars_ = function(a, b, c) {
  return goog.isString(a) ? (a = encodeURI(a).replace(b, goog.Uri.encodeChar_), c && (a = goog.Uri.removeDoubleEncoding_(a)), a) : null;
};
goog.Uri.encodeChar_ = function(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(a) {
  return a.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(a, b) {
  a = goog.uri.utils.split(a);
  b = goog.uri.utils.split(b);
  return a[goog.uri.utils.ComponentIndex.DOMAIN] == b[goog.uri.utils.ComponentIndex.DOMAIN] && a[goog.uri.utils.ComponentIndex.PORT] == b[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(a, b, c) {
  this.count_ = this.keyMap_ = null;
  this.encodedQuery_ = a || null;
  this.ignoreCase_ = !!c;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_ && (this.keyMap_ = new goog.structs.Map, this.count_ = 0, this.encodedQuery_)) {
    var a = this;
    goog.uri.utils.parseQueryData(this.encodedQuery_, function(b, c) {
      a.add(goog.string.urlDecode(b), c);
    });
  }
};
goog.Uri.QueryData.createFromMap = function(a, b, c) {
  b = goog.structs.getKeys(a);
  if ("undefined" == typeof b) {
    throw Error("Keys are undefined");
  }
  c = new goog.Uri.QueryData(null, null, c);
  a = goog.structs.getValues(a);
  for (var d = 0; d < b.length; d++) {
    var e = b[d], f = a[d];
    goog.isArray(f) ? c.setValues(e, f) : c.add(e, f);
  }
  return c;
};
goog.Uri.QueryData.createFromKeysValues = function(a, b, c, d) {
  if (a.length != b.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  c = new goog.Uri.QueryData(null, null, d);
  for (d = 0; d < a.length; d++) {
    c.add(a[d], b[d]);
  }
  return c;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  var c = this.keyMap_.get(a);
  c || this.keyMap_.set(a, c = []);
  c.push(b);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.containsKey(a) ? (this.invalidateCache_(), this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(a).length, this.keyMap_.remove(a)) : !1;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return 0 == this.count_;
};
goog.Uri.QueryData.prototype.containsKey = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.containsKey(a);
};
goog.Uri.QueryData.prototype.containsValue = function(a) {
  var b = this.getValues();
  return goog.array.contains(b, a);
};
goog.Uri.QueryData.prototype.forEach = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(c, d) {
    goog.array.forEach(c, function(c) {
      a.call(b, c, d, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  for (var a = this.keyMap_.getValues(), b = this.keyMap_.getKeys(), c = [], d = 0; d < b.length; d++) {
    for (var e = a[d], f = 0; f < e.length; f++) {
      c.push(b[d]);
    }
  }
  return c;
};
goog.Uri.QueryData.prototype.getValues = function(a) {
  this.ensureKeyMapInitialized_();
  var b = [];
  if (goog.isString(a)) {
    this.containsKey(a) && (b = goog.array.concat(b, this.keyMap_.get(this.getKeyName_(a))));
  } else {
    a = this.keyMap_.getValues();
    for (var c = 0; c < a.length; c++) {
      b = goog.array.concat(b, a[c]);
    }
  }
  return b;
};
goog.Uri.QueryData.prototype.set = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  this.containsKey(a) && (this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(a).length);
  this.keyMap_.set(a, [b]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(a, b) {
  a = a ? this.getValues(a) : [];
  return goog.Uri.preserveParameterTypesCompatibilityFlag ? 0 < a.length ? a[0] : b : 0 < a.length ? String(a[0]) : b;
};
goog.Uri.QueryData.prototype.setValues = function(a, b) {
  this.remove(a);
  0 < b.length && (this.invalidateCache_(), this.keyMap_.set(this.getKeyName_(a), goog.array.clone(b)), this.count_ = goog.asserts.assertNumber(this.count_) + b.length);
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  for (var a = [], b = this.keyMap_.getKeys(), c = 0; c < b.length; c++) {
    var d = b[c], e = goog.string.urlEncode(d);
    d = this.getValues(d);
    for (var f = 0; f < d.length; f++) {
      var g = e;
      "" !== d[f] && (g += "\x3d" + goog.string.urlEncode(d[f]));
      a.push(g);
    }
  }
  return this.encodedQuery_ = a.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(a) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(b, c) {
    goog.array.contains(a, c) || this.remove(c);
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var a = new goog.Uri.QueryData;
  a.encodedQuery_ = this.encodedQuery_;
  this.keyMap_ && (a.keyMap_ = this.keyMap_.clone(), a.count_ = this.count_);
  return a;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(a) {
  a = String(a);
  this.ignoreCase_ && (a = a.toLowerCase());
  return a;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(a) {
  a && !this.ignoreCase_ && (this.ensureKeyMapInitialized_(), this.invalidateCache_(), this.keyMap_.forEach(function(a, c) {
    var b = c.toLowerCase();
    c != b && (this.remove(c), this.setValues(b, a));
  }, this));
  this.ignoreCase_ = a;
};
goog.Uri.QueryData.prototype.extend = function(a) {
  for (var b = 0; b < arguments.length; b++) {
    goog.structs.forEach(arguments[b], function(a, b) {
      this.add(b, a);
    }, this);
  }
};
goog.math.Integer = function(a, b) {
  this.bits_ = [];
  this.sign_ = b;
  for (var c = !0, d = a.length - 1; 0 <= d; d--) {
    var e = a[d] | 0;
    c && e == b || (this.bits_[d] = e, c = !1);
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(a) {
  if (-128 <= a && 128 > a) {
    var b = goog.math.Integer.IntCache_[a];
    if (b) {
      return b;
    }
  }
  b = new goog.math.Integer([a | 0], 0 > a ? -1 : 0);
  -128 <= a && 128 > a && (goog.math.Integer.IntCache_[a] = b);
  return b;
};
goog.math.Integer.fromNumber = function(a) {
  if (isNaN(a) || !isFinite(a)) {
    return goog.math.Integer.ZERO;
  }
  if (0 > a) {
    return goog.math.Integer.fromNumber(-a).negate();
  }
  for (var b = [], c = 1, d = 0; a >= c; d++) {
    b[d] = a / c | 0, c *= goog.math.Integer.TWO_PWR_32_DBL_;
  }
  return new goog.math.Integer(b, 0);
};
goog.math.Integer.fromBits = function(a) {
  return new goog.math.Integer(a, a[a.length - 1] & -2147483648 ? -1 : 0);
};
goog.math.Integer.fromString = function(a, b) {
  if (0 == a.length) {
    throw Error("number format error: empty string");
  }
  b = b || 10;
  if (2 > b || 36 < b) {
    throw Error("radix out of range: " + b);
  }
  if ("-" == a.charAt(0)) {
    return goog.math.Integer.fromString(a.substring(1), b).negate();
  }
  if (0 <= a.indexOf("-")) {
    throw Error('number format error: interior "-" character');
  }
  for (var c = goog.math.Integer.fromNumber(Math.pow(b, 8)), d = goog.math.Integer.ZERO, e = 0; e < a.length; e += 8) {
    var f = Math.min(8, a.length - e), g = parseInt(a.substring(e, e + f), b);
    8 > f ? (f = goog.math.Integer.fromNumber(Math.pow(b, f)), d = d.multiply(f).add(goog.math.Integer.fromNumber(g))) : (d = d.multiply(c), d = d.add(goog.math.Integer.fromNumber(g)));
  }
  return d;
};
goog.math.Integer.TWO_PWR_32_DBL_ = 4294967296;
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(16777216);
goog.math.Integer.prototype.toInt = function() {
  return 0 < this.bits_.length ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  }
  for (var a = 0, b = 1, c = 0; c < this.bits_.length; c++) {
    a += this.getBitsUnsigned(c) * b, b *= goog.math.Integer.TWO_PWR_32_DBL_;
  }
  return a;
};
goog.math.Integer.prototype.toString = function(a) {
  a = a || 10;
  if (2 > a || 36 < a) {
    throw Error("radix out of range: " + a);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    return "-" + this.negate().toString(a);
  }
  for (var b = goog.math.Integer.fromNumber(Math.pow(a, 6)), c = this, d = "";;) {
    var e = c.divide(b), f = (c.subtract(e.multiply(b)).toInt() >>> 0).toString(a);
    c = e;
    if (c.isZero()) {
      return f + d;
    }
    for (; 6 > f.length;) {
      f = "0" + f;
    }
    d = "" + f + d;
  }
};
goog.math.Integer.prototype.getBits = function(a) {
  return 0 > a ? 0 : a < this.bits_.length ? this.bits_[a] : this.sign_;
};
goog.math.Integer.prototype.getBitsUnsigned = function(a) {
  a = this.getBits(a);
  return 0 <= a ? a : goog.math.Integer.TWO_PWR_32_DBL_ + a;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (0 != this.sign_) {
    return !1;
  }
  for (var a = 0; a < this.bits_.length; a++) {
    if (0 != this.bits_[a]) {
      return !1;
    }
  }
  return !0;
};
goog.math.Integer.prototype.isNegative = function() {
  return -1 == this.sign_;
};
goog.math.Integer.prototype.isOdd = function() {
  return 0 == this.bits_.length && -1 == this.sign_ || 0 < this.bits_.length && 0 != (this.bits_[0] & 1);
};
goog.math.Integer.prototype.equals = function(a) {
  if (this.sign_ != a.sign_) {
    return !1;
  }
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = 0; c < b; c++) {
    if (this.getBits(c) != a.getBits(c)) {
      return !1;
    }
  }
  return !0;
};
goog.math.Integer.prototype.notEquals = function(a) {
  return !this.equals(a);
};
goog.math.Integer.prototype.greaterThan = function(a) {
  return 0 < this.compare(a);
};
goog.math.Integer.prototype.greaterThanOrEqual = function(a) {
  return 0 <= this.compare(a);
};
goog.math.Integer.prototype.lessThan = function(a) {
  return 0 > this.compare(a);
};
goog.math.Integer.prototype.lessThanOrEqual = function(a) {
  return 0 >= this.compare(a);
};
goog.math.Integer.prototype.compare = function(a) {
  a = this.subtract(a);
  return a.isNegative() ? -1 : a.isZero() ? 0 : 1;
};
goog.math.Integer.prototype.shorten = function(a) {
  var b = a - 1 >> 5;
  a = (a - 1) % 32;
  for (var c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d);
  }
  d = 31 == a ? 4294967295 : (1 << a + 1) - 1;
  var e = this.getBits(b) & d;
  if (e & 1 << a) {
    return c[b] = e | 4294967295 - d, new goog.math.Integer(c, -1);
  }
  c[b] = e;
  return new goog.math.Integer(c, 0);
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0, e = 0; e <= b; e++) {
    var f = this.getBits(e) >>> 16, g = this.getBits(e) & 65535, h = a.getBits(e) >>> 16, k = a.getBits(e) & 65535;
    g = d + g + k;
    f = (g >>> 16) + f + h;
    d = f >>> 16;
    g &= 65535;
    f &= 65535;
    c[e] = f << 16 | g;
  }
  return goog.math.Integer.fromBits(c);
};
goog.math.Integer.prototype.subtract = function(a) {
  return this.add(a.negate());
};
goog.math.Integer.prototype.multiply = function(a) {
  if (this.isZero() || a.isZero()) {
    return goog.math.Integer.ZERO;
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().multiply(a.negate()) : this.negate().multiply(a).negate();
  }
  if (a.isNegative()) {
    return this.multiply(a.negate()).negate();
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && a.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * a.toNumber());
  }
  for (var b = this.bits_.length + a.bits_.length, c = [], d = 0; d < 2 * b; d++) {
    c[d] = 0;
  }
  for (d = 0; d < this.bits_.length; d++) {
    for (var e = 0; e < a.bits_.length; e++) {
      var f = this.getBits(d) >>> 16, g = this.getBits(d) & 65535, h = a.getBits(e) >>> 16, k = a.getBits(e) & 65535;
      c[2 * d + 2 * e] += g * k;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e);
      c[2 * d + 2 * e + 1] += f * k;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 1] += g * h;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 2] += f * h;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 2);
    }
  }
  for (d = 0; d < b; d++) {
    c[d] = c[2 * d + 1] << 16 | c[2 * d];
  }
  for (d = b; d < 2 * b; d++) {
    c[d] = 0;
  }
  return new goog.math.Integer(c, 0);
};
goog.math.Integer.carry16_ = function(a, b) {
  for (; (a[b] & 65535) != a[b];) {
    a[b + 1] += a[b] >>> 16, a[b] &= 65535, b++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(a) {
  if (this.isNegative() || a.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  for (var b = goog.math.Integer.ONE; a.lessThanOrEqual(this);) {
    b = b.shiftLeft(1), a = a.shiftLeft(1);
  }
  var c = b.shiftRight(1), d = a.shiftRight(1);
  a = a.shiftRight(2);
  for (b = b.shiftRight(2); !a.isZero();) {
    var e = d.add(a);
    e.lessThanOrEqual(this) && (c = c.add(b), d = e);
    a = a.shiftRight(1);
    b = b.shiftRight(1);
  }
  return c;
};
goog.math.Integer.prototype.divide = function(a) {
  if (a.isZero()) {
    throw Error("division by zero");
  }
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().divide(a.negate()) : this.negate().divide(a).negate();
  }
  if (a.isNegative()) {
    return this.divide(a.negate()).negate();
  }
  if (30 < this.bits_.length) {
    return this.slowDivide_(a);
  }
  for (var b = goog.math.Integer.ZERO, c = this; c.greaterThanOrEqual(a);) {
    var d = Math.max(1, Math.floor(c.toNumber() / a.toNumber())), e = Math.ceil(Math.log(d) / Math.LN2);
    e = 48 >= e ? 1 : Math.pow(2, e - 48);
    for (var f = goog.math.Integer.fromNumber(d), g = f.multiply(a); g.isNegative() || g.greaterThan(c);) {
      d -= e, f = goog.math.Integer.fromNumber(d), g = f.multiply(a);
    }
    f.isZero() && (f = goog.math.Integer.ONE);
    b = b.add(f);
    c = c.subtract(g);
  }
  return b;
};
goog.math.Integer.prototype.modulo = function(a) {
  return this.subtract(this.divide(a).multiply(a));
};
goog.math.Integer.prototype.not = function() {
  for (var a = this.bits_.length, b = [], c = 0; c < a; c++) {
    b[c] = ~this.bits_[c];
  }
  return new goog.math.Integer(b, ~this.sign_);
};
goog.math.Integer.prototype.and = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) & a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ & a.sign_);
};
goog.math.Integer.prototype.or = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) | a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ | a.sign_);
};
goog.math.Integer.prototype.xor = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) ^ a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ ^ a.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(a) {
  var b = a >> 5;
  a %= 32;
  for (var c = this.bits_.length + b + (0 < a ? 1 : 0), d = [], e = 0; e < c; e++) {
    d[e] = 0 < a ? this.getBits(e - b) << a | this.getBits(e - b - 1) >>> 32 - a : this.getBits(e - b);
  }
  return new goog.math.Integer(d, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(a) {
  var b = a >> 5;
  a %= 32;
  for (var c = this.bits_.length - b, d = [], e = 0; e < c; e++) {
    d[e] = 0 < a ? this.getBits(e + b) >>> a | this.getBits(e + b + 1) << 32 - a : this.getBits(e + b);
  }
  return new goog.math.Integer(d, this.sign_);
};
goog.string.StringBuffer = function(a, b) {
  null != a && this.append.apply(this, arguments);
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(a) {
  this.buffer_ = "" + a;
};
goog.string.StringBuffer.prototype.append = function(a, b, c) {
  this.buffer_ += String(a);
  if (null != b) {
    for (var d = 1; d < arguments.length; d++) {
      this.buffer_ += arguments[d];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.reflect = {};
goog.reflect.object = function(a, b) {
  return b;
};
goog.reflect.objectProperty = function(a, b) {
  return a;
};
goog.reflect.sinkValue = function(a) {
  goog.reflect.sinkValue[" "](a);
  return a;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(a, b) {
  try {
    return goog.reflect.sinkValue(a[b]), !0;
  } catch (c) {
  }
  return !1;
};
goog.reflect.cache = function(a, b, c, d) {
  d = d ? d(b) : b;
  return Object.prototype.hasOwnProperty.call(a, d) ? a[d] : a[d] = c(b);
};
goog.math.Long = function(a, b) {
  this.low_ = a | 0;
  this.high_ = b | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(a) {
  return goog.reflect.cache(goog.math.Long.IntCache_, a, function(a) {
    return new goog.math.Long(a, 0 > a ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = "  111111111111111111111111111111111111111111111111111111111111111 2021110011022210012102010021220101220221 13333333333333333333333333333333 1104332401304422434310311212 1540241003031030222122211 22341010611245052052300 777777777777777777777 67404283172107811827 9223372036854775807 1728002635214590697 41a792678515120367 10b269549075433c37 4340724c6c71dc7a7 160e2ad3246366807 7fffffffffffffff 33d3d8307b214008 16agh595df825fa7 ba643dci0ffeehh 5cbfjia3fh26ja7 2heiciiie82dh97 1adaibb21dckfa7 i6k448cf4192c2 acd772jnc9l0l7 64ie1focnn5g77 3igoecjbmca687 27c48l5b37oaop 1bk39f3ah3dmq7 q1se8f0m04isb hajppbc1fc207 bm03i95hia437 7vvvvvvvvvvvv 5hg4ck9jd4u37 3tdtk1v8j6tpp 2pijmikexrxp7 1y2p0ij32e8e7".split(" ");
goog.math.Long.MIN_VALUE_FOR_RADIX_ = "  -1000000000000000000000000000000000000000000000000000000000000000 -2021110011022210012102010021220101220222 -20000000000000000000000000000000 -1104332401304422434310311213 -1540241003031030222122212 -22341010611245052052301 -1000000000000000000000 -67404283172107811828 -9223372036854775808 -1728002635214590698 -41a792678515120368 -10b269549075433c38 -4340724c6c71dc7a8 -160e2ad3246366808 -8000000000000000 -33d3d8307b214009 -16agh595df825fa8 -ba643dci0ffeehi -5cbfjia3fh26ja8 -2heiciiie82dh98 -1adaibb21dckfa8 -i6k448cf4192c3 -acd772jnc9l0l8 -64ie1focnn5g78 -3igoecjbmca688 -27c48l5b37oaoq -1bk39f3ah3dmq8 -q1se8f0m04isc -hajppbc1fc208 -bm03i95hia438 -8000000000000 -5hg4ck9jd4u38 -3tdtk1v8j6tpq -2pijmikexrxp8 -1y2p0ij32e8e8".split(" ");
goog.math.Long.fromInt = function(a) {
  var b = a | 0;
  goog.asserts.assert(a === b, "value should be a 32-bit integer");
  return -128 <= b && 128 > b ? goog.math.Long.getCachedIntValue_(b) : new goog.math.Long(b, 0 > b ? -1 : 0);
};
goog.math.Long.fromNumber = function(a) {
  return isNaN(a) ? goog.math.Long.getZero() : a <= -goog.math.Long.TWO_PWR_63_DBL_ ? goog.math.Long.getMinValue() : a + 1 >= goog.math.Long.TWO_PWR_63_DBL_ ? goog.math.Long.getMaxValue() : 0 > a ? goog.math.Long.fromNumber(-a).negate() : new goog.math.Long(a % goog.math.Long.TWO_PWR_32_DBL_ | 0, a / goog.math.Long.TWO_PWR_32_DBL_ | 0);
};
goog.math.Long.fromBits = function(a, b) {
  return new goog.math.Long(a, b);
};
goog.math.Long.fromString = function(a, b) {
  if (0 == a.length) {
    throw Error("number format error: empty string");
  }
  b = b || 10;
  if (2 > b || 36 < b) {
    throw Error("radix out of range: " + b);
  }
  if ("-" == a.charAt(0)) {
    return goog.math.Long.fromString(a.substring(1), b).negate();
  }
  if (0 <= a.indexOf("-")) {
    throw Error('number format error: interior "-" character: ' + a);
  }
  for (var c = goog.math.Long.fromNumber(Math.pow(b, 8)), d = goog.math.Long.getZero(), e = 0; e < a.length; e += 8) {
    var f = Math.min(8, a.length - e), g = parseInt(a.substring(e, e + f), b);
    8 > f ? (f = goog.math.Long.fromNumber(Math.pow(b, f)), d = d.multiply(f).add(goog.math.Long.fromNumber(g))) : (d = d.multiply(c), d = d.add(goog.math.Long.fromNumber(g)));
  }
  return d;
};
goog.math.Long.isStringInRange = function(a, b) {
  b = b || 10;
  if (2 > b || 36 < b) {
    throw Error("radix out of range: " + b);
  }
  b = "-" == a.charAt(0) ? goog.math.Long.MIN_VALUE_FOR_RADIX_[b] : goog.math.Long.MAX_VALUE_FOR_RADIX_[b];
  return a.length < b.length ? !0 : a.length == b.length && a <= b ? !0 : !1;
};
goog.math.Long.TWO_PWR_16_DBL_ = 65536;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(-1, 2147483647);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, -2147483648);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(16777216);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(a) {
  a = a || 10;
  if (2 > a || 36 < a) {
    throw Error("radix out of range: " + a);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var b = goog.math.Long.fromNumber(a), c = this.div(b);
      b = c.multiply(b).subtract(this);
      return c.toString(a) + b.toInt().toString(a);
    }
    return "-" + this.negate().toString(a);
  }
  c = goog.math.Long.fromNumber(Math.pow(a, 6));
  b = this;
  for (var d = "";;) {
    var e = b.div(c), f = (b.subtract(e.multiply(c)).toInt() >>> 0).toString(a);
    b = e;
    if (b.isZero()) {
      return f + d;
    }
    for (; 6 > f.length;) {
      f = "0" + f;
    }
    d = "" + f + d;
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return 0 <= this.low_ ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    return this.equals(goog.math.Long.getMinValue()) ? 64 : this.negate().getNumBitsAbs();
  }
  for (var a = 0 != this.high_ ? this.high_ : this.low_, b = 31; 0 < b && 0 == (a & 1 << b); b--) {
  }
  return 0 != this.high_ ? b + 33 : b + 1;
};
goog.math.Long.prototype.isZero = function() {
  return 0 == this.high_ && 0 == this.low_;
};
goog.math.Long.prototype.isNegative = function() {
  return 0 > this.high_;
};
goog.math.Long.prototype.isOdd = function() {
  return 1 == (this.low_ & 1);
};
goog.math.Long.prototype.equals = function(a) {
  return this.high_ == a.high_ && this.low_ == a.low_;
};
goog.math.Long.prototype.notEquals = function(a) {
  return this.high_ != a.high_ || this.low_ != a.low_;
};
goog.math.Long.prototype.lessThan = function(a) {
  return 0 > this.compare(a);
};
goog.math.Long.prototype.lessThanOrEqual = function(a) {
  return 0 >= this.compare(a);
};
goog.math.Long.prototype.greaterThan = function(a) {
  return 0 < this.compare(a);
};
goog.math.Long.prototype.greaterThanOrEqual = function(a) {
  return 0 <= this.compare(a);
};
goog.math.Long.prototype.compare = function(a) {
  if (this.equals(a)) {
    return 0;
  }
  var b = this.isNegative(), c = a.isNegative();
  return b && !c ? -1 : !b && c ? 1 : this.subtract(a).isNegative() ? -1 : 1;
};
goog.math.Long.prototype.negate = function() {
  return this.equals(goog.math.Long.getMinValue()) ? goog.math.Long.getMinValue() : this.not().add(goog.math.Long.getOne());
};
goog.math.Long.prototype.add = function(a) {
  var b = this.high_ >>> 16, c = this.high_ & 65535, d = this.low_ >>> 16, e = a.high_ >>> 16, f = a.high_ & 65535, g = a.low_ >>> 16;
  a = (this.low_ & 65535) + (a.low_ & 65535);
  g = (a >>> 16) + (d + g);
  d = g >>> 16;
  d += c + f;
  b = (d >>> 16) + (b + e) & 65535;
  return goog.math.Long.fromBits((g & 65535) << 16 | a & 65535, b << 16 | d & 65535);
};
goog.math.Long.prototype.subtract = function(a) {
  return this.add(a.negate());
};
goog.math.Long.prototype.multiply = function(a) {
  if (this.isZero() || a.isZero()) {
    return goog.math.Long.getZero();
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return a.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  }
  if (a.equals(goog.math.Long.getMinValue())) {
    return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().multiply(a.negate()) : this.negate().multiply(a).negate();
  }
  if (a.isNegative()) {
    return this.multiply(a.negate()).negate();
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && a.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * a.toNumber());
  }
  var b = this.high_ >>> 16, c = this.high_ & 65535, d = this.low_ >>> 16, e = this.low_ & 65535, f = a.high_ >>> 16, g = a.high_ & 65535, h = a.low_ >>> 16;
  a = a.low_ & 65535;
  var k = e * a;
  var l = (k >>> 16) + d * a;
  var m = l >>> 16;
  l = (l & 65535) + e * h;
  m += l >>> 16;
  m += c * a;
  var n = m >>> 16;
  m = (m & 65535) + d * h;
  n += m >>> 16;
  m = (m & 65535) + e * g;
  n = n + (m >>> 16) + (b * a + c * h + d * g + e * f) & 65535;
  return goog.math.Long.fromBits((l & 65535) << 16 | k & 65535, n << 16 | m & 65535);
};
goog.math.Long.prototype.div = function(a) {
  if (a.isZero()) {
    throw Error("division by zero");
  }
  if (this.isZero()) {
    return goog.math.Long.getZero();
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (a.equals(goog.math.Long.getOne()) || a.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    }
    if (a.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getOne();
    }
    var b = this.shiftRight(1).div(a).shiftLeft(1);
    if (b.equals(goog.math.Long.getZero())) {
      return a.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
    }
    var c = this.subtract(a.multiply(b));
    return b.add(c.div(a));
  }
  if (a.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getZero();
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().div(a.negate()) : this.negate().div(a).negate();
  }
  if (a.isNegative()) {
    return this.div(a.negate()).negate();
  }
  var d = goog.math.Long.getZero();
  for (c = this; c.greaterThanOrEqual(a);) {
    b = Math.max(1, Math.floor(c.toNumber() / a.toNumber()));
    var e = Math.ceil(Math.log(b) / Math.LN2);
    e = 48 >= e ? 1 : Math.pow(2, e - 48);
    for (var f = goog.math.Long.fromNumber(b), g = f.multiply(a); g.isNegative() || g.greaterThan(c);) {
      b -= e, f = goog.math.Long.fromNumber(b), g = f.multiply(a);
    }
    f.isZero() && (f = goog.math.Long.getOne());
    d = d.add(f);
    c = c.subtract(g);
  }
  return d;
};
goog.math.Long.prototype.modulo = function(a) {
  return this.subtract(this.div(a).multiply(a));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(a) {
  return goog.math.Long.fromBits(this.low_ & a.low_, this.high_ & a.high_);
};
goog.math.Long.prototype.or = function(a) {
  return goog.math.Long.fromBits(this.low_ | a.low_, this.high_ | a.high_);
};
goog.math.Long.prototype.xor = function(a) {
  return goog.math.Long.fromBits(this.low_ ^ a.low_, this.high_ ^ a.high_);
};
goog.math.Long.prototype.shiftLeft = function(a) {
  a &= 63;
  if (0 == a) {
    return this;
  }
  var b = this.low_;
  return 32 > a ? goog.math.Long.fromBits(b << a, this.high_ << a | b >>> 32 - a) : goog.math.Long.fromBits(0, b << a - 32);
};
goog.math.Long.prototype.shiftRight = function(a) {
  a &= 63;
  if (0 == a) {
    return this;
  }
  var b = this.high_;
  return 32 > a ? goog.math.Long.fromBits(this.low_ >>> a | b << 32 - a, b >> a) : goog.math.Long.fromBits(b >> a - 32, 0 <= b ? 0 : -1);
};
goog.math.Long.prototype.shiftRightUnsigned = function(a) {
  a &= 63;
  if (0 == a) {
    return this;
  }
  var b = this.high_;
  return 32 > a ? goog.math.Long.fromBits(this.low_ >>> a | b << 32 - a, b >>> a) : 32 == a ? goog.math.Long.fromBits(b, 0) : goog.math.Long.fromBits(b >>> a - 32, 0);
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
var cljs = {core:{}};
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.238";
cljs.core._STAR_unchecked_if_STAR_ = !1;
cljs.core._STAR_unchecked_arrays_STAR_ = !1;
cljs.core._STAR_warn_on_infer_STAR_ = !1;
"undefined" === typeof cljs.core.PROTOCOL_SENTINEL && (cljs.core.PROTOCOL_SENTINEL = {});
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
cljs.core._STAR_target_STAR_ = "nodejs";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = !0;
"undefined" === typeof cljs.core._STAR_print_fn_STAR_ && (cljs.core._STAR_print_fn_STAR_ = null);
cljs.core._STAR_exec_tap_fn_STAR_ = function(a) {
  var b = "undefined" !== typeof setTimeout;
  return b ? (a = setTimeout(a, 0), cljs.core.truth_(a) ? !0 : a) : b;
};
"undefined" === typeof cljs.core._STAR_print_err_fn_STAR_ && (cljs.core._STAR_print_err_fn_STAR_ = null);
cljs.core.set_print_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_fn_STAR_ = a;
};
cljs.core.set_print_err_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_err_fn_STAR_ = a;
};
cljs.core._STAR_flush_on_newline_STAR_ = !0;
cljs.core._STAR_print_newline_STAR_ = !0;
cljs.core._STAR_print_readably_STAR_ = !0;
cljs.core._STAR_print_meta_STAR_ = !1;
cljs.core._STAR_print_dup_STAR_ = !1;
cljs.core._STAR_print_namespace_maps_STAR_ = !1;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = !1;
"undefined" === typeof cljs.core._STAR_loaded_libs_STAR_ && (cljs.core._STAR_loaded_libs_STAR_ = null);
cljs.core.pr_opts = function() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function() {
  cljs.core._STAR_print_newline_STAR_ = !1;
  cljs.core.set_print_fn_BANG_(function() {
    return console.log.apply(console, goog.array.clone(arguments));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    return console.error.apply(console, goog.array.clone(arguments));
  });
  return null;
};
cljs.core.truth_ = function(a) {
  return null != a && !1 !== a;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function(a, b) {
  return a === b;
};
cljs.core.nil_QMARK_ = function(a) {
  return null == a;
};
cljs.core.array_QMARK_ = function(a) {
  return "nodejs" === cljs.core._STAR_target_STAR_ ? Array.isArray(a) : a instanceof Array;
};
cljs.core.number_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.not = function(a) {
  return null == a ? !0 : !1 === a ? !0 : !1;
};
cljs.core.some_QMARK_ = function(a) {
  return null != a;
};
cljs.core.object_QMARK_ = function(a) {
  return null != a ? a.constructor === Object : !1;
};
cljs.core.string_QMARK_ = function(a) {
  return goog.isString(a);
};
cljs.core.char_QMARK_ = function(a) {
  return "string" === typeof a && 1 === a.length;
};
cljs.core.any_QMARK_ = function(a) {
  return !0;
};
cljs.core.native_satisfies_QMARK_ = function(a, b) {
  return a[goog.typeOf(null == b ? null : b)] ? !0 : a._ ? !0 : !1;
};
cljs.core.is_proto_ = function(a) {
  return a.constructor.prototype === a;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function(a) {
  return null == a ? null : a.constructor;
};
cljs.core.missing_protocol = function(a, b) {
  var c = cljs.core.type(b);
  c = cljs.core.truth_(cljs.core.truth_(c) ? c.cljs$lang$type : c) ? c.cljs$lang$ctorStr : goog.typeOf(b);
  return Error(["No protocol method ", a, " defined for type ", c, ": ", b].join(""));
};
cljs.core.type__GT_str = function(a) {
  var b = a.cljs$lang$ctorStr;
  return cljs.core.truth_(b) ? b : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
};
cljs.core.load_file = function(a) {
  return cljs.core.truth_(COMPILED) ? null : goog.nodeGlobalRequire(a);
};
"undefined" !== typeof Symbol && "function" === goog.typeOf(Symbol) ? cljs.core.ITER_SYMBOL = Symbol.iterator : cljs.core.ITER_SYMBOL = "@@iterator";
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {_RBRACE_:"}", _COLON_:":", _BANG_:"!", _QMARK_:"?", _BSLASH_:"\\\\", _SLASH_:"/", _PERCENT_:"%", _PLUS_:"+", _SHARP_:"#", _LBRACE_:"{", _BAR_:"|", _LBRACK_:"[", _EQ_:"\x3d", _:"-", _TILDE_:"~", _RBRACK_:"]", _GT_:"\x3e", _SINGLEQUOTE_:"'", _CIRCA_:"@", _AMPERSAND_:"\x26", _DOUBLEQUOTE_:'\\"', _CARET_:"^", _LT_:"\x3c", _STAR_:"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function() {
  if ("undefined" !== typeof performance && null != performance.now) {
    return performance.now();
  }
  if ("undefined" !== typeof process && null != process.hrtime) {
    var a = process.hrtime();
    return (1.0E9 * a[0] + a[1]) / 1000000.0;
  }
  return (new Date).getTime();
};
cljs.core.make_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Array(a);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return Array(b);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = Array(b);
  b = a.length;
  for (var d = 0;;) {
    if (d < b) {
      a[d] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, c), d += 1;
    } else {
      break;
    }
  }
  return a;
};
cljs.core.make_array.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function(a) {
  for (var b = a.length, c = Array(b), d = 0;;) {
    if (d < b) {
      c[d] = a[d], d += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.array = function(a) {
  for (var b = Array(arguments.length), c = 0;;) {
    if (c < b.length) {
      b[c] = arguments[c], c += 1;
    } else {
      return b;
    }
  }
};
cljs.core.maybe_warn = function(a) {
  return cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_) ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_print_err_fn_STAR_.call(null, a) : null;
};
cljs.core.checked_aget = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  try {
    if (!cljs.core.truth_(function() {
      var b = cljs.core.array_QMARK_(a);
      return b ? b : goog.isArrayLike(a);
    }())) {
      throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
    }
    if ("number" !== typeof b) {
      throw Error("Assert failed: (number? idx)");
    }
    if (0 > b) {
      throw Error("Assert failed: (not (neg? idx))");
    }
    if (!(b < a.length)) {
      throw Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (c) {
    cljs.core.maybe_warn(c);
  }
  return a[b];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  try {
    if (!cljs.core.truth_(function() {
      var b = cljs.core.array_QMARK_(a);
      return b ? b : goog.isArrayLike(a);
    }())) {
      throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
    }
    if ("number" !== typeof b) {
      throw Error("Assert failed: (number? idx)");
    }
    if (0 > b) {
      throw Error("Assert failed: (not (neg? idx))");
    }
    if (!(b < a.length)) {
      throw Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (d) {
    cljs.core.maybe_warn(d);
  }
  return a[b] = c;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(a, b), c, d);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(function() {
    var b = cljs.core.array_QMARK_(a);
    return b ? b : goog.isArrayLike(a);
  }())) {
    throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
  }
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? idx)");
  }
  if (0 > b) {
    throw Error("Assert failed: (not (neg? idx))");
  }
  if (!(b < a.length)) {
    throw Error("Assert failed: (\x3c idx (alength array))");
  }
  return a[b];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (!cljs.core.truth_(function() {
    var b = cljs.core.array_QMARK_(a);
    return b ? b : goog.isArrayLike(a);
  }())) {
    throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
  }
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? idx)");
  }
  if (0 > b) {
    throw Error("Assert failed: (not (neg? idx))");
  }
  if (!(b < a.length)) {
    throw Error("Assert failed: (\x3c idx (alength array))");
  }
  return a[b] = c;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(a, b), c, d);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a[b];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, a[b], c);
};
cljs.core.aget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a[b] = c;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, a[b], c, d);
};
cljs.core.aset.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function(a) {
  return a.length;
};
cljs.core.into_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, a);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b) {
    a.push(b);
    return a;
  }, [], b);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a[b].apply(a, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(c));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$1) {
    return a.cljs$core$IFn$_invoke$arity$1(a);
  }
  var b = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._invoke._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$2) {
    return a.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  var c = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._invoke._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$3) {
    return a.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  var d = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._invoke._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$4) {
    return a.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
  }
  var e = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  e = cljs.core._invoke._;
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$5) {
    return a.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
  }
  var f = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  f = cljs.core._invoke._;
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$6) {
    return a.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f);
  }
  var g = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != g) {
    return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
  }
  g = cljs.core._invoke._;
  if (null != g) {
    return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$7) {
    return a.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g);
  }
  var h = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != h) {
    return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
  }
  h = cljs.core._invoke._;
  if (null != h) {
    return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$8) {
    return a.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h);
  }
  var k = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != k) {
    return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
  }
  k = cljs.core._invoke._;
  if (null != k) {
    return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$9) {
    return a.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k);
  }
  var l = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != l) {
    return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
  }
  l = cljs.core._invoke._;
  if (null != l) {
    return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$10) {
    return a.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l);
  }
  var m = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != m) {
    return m.cljs$core$IFn$_invoke$arity$10 ? m.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : m.call(null, a, b, c, d, e, f, g, h, k, l);
  }
  m = cljs.core._invoke._;
  if (null != m) {
    return m.cljs$core$IFn$_invoke$arity$10 ? m.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : m.call(null, a, b, c, d, e, f, g, h, k, l);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$11) {
    return a.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m);
  }
  var n = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != n) {
    return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : n.call(null, a, b, c, d, e, f, g, h, k, l, m);
  }
  n = cljs.core._invoke._;
  if (null != n) {
    return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : n.call(null, a, b, c, d, e, f, g, h, k, l, m);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$12) {
    return a.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n);
  }
  var p = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != p) {
    return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : p.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
  }
  p = cljs.core._invoke._;
  if (null != p) {
    return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : p.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$13) {
    return a.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p);
  }
  var q = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != q) {
    return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
  }
  q = cljs.core._invoke._;
  if (null != q) {
    return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$14) {
    return a.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  var r = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != r) {
    return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  r = cljs.core._invoke._;
  if (null != r) {
    return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$15) {
    return a.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  var t = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != t) {
    return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  t = cljs.core._invoke._;
  if (null != t) {
    return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$16) {
    return a.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  var u = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != u) {
    return u.cljs$core$IFn$_invoke$arity$16 ? u.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  u = cljs.core._invoke._;
  if (null != u) {
    return u.cljs$core$IFn$_invoke$arity$16 ? u.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$17) {
    return a.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
  }
  var v = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != v) {
    return v.cljs$core$IFn$_invoke$arity$17 ? v.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
  }
  v = cljs.core._invoke._;
  if (null != v) {
    return v.cljs$core$IFn$_invoke$arity$17 ? v.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$18) {
    return a.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  }
  var w = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != w) {
    return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  }
  w = cljs.core._invoke._;
  if (null != w) {
    return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$19) {
    return a.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
  }
  var x = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != x) {
    return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
  }
  x = cljs.core._invoke._;
  if (null != x) {
    return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$20) {
    return a.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
  }
  var y = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != y) {
    return y.cljs$core$IFn$_invoke$arity$20 ? y.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) : y.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
  }
  y = cljs.core._invoke._;
  if (null != y) {
    return y.cljs$core$IFn$_invoke$arity$20 ? y.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) : y.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$21) {
    return a.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y);
  }
  var z = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != z) {
    return z.cljs$core$IFn$_invoke$arity$21 ? z.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y);
  }
  z = cljs.core._invoke._;
  if (null != z) {
    return z.cljs$core$IFn$_invoke$arity$21 ? z.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$22) {
    return a.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z);
  }
  var F = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != F) {
    return F.cljs$core$IFn$_invoke$arity$22 ? F.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) : F.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z);
  }
  F = cljs.core._invoke._;
  if (null != F) {
    return F.cljs$core$IFn$_invoke$arity$22 ? F.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) : F.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function(a) {
  if (null != a && null != a.cljs$core$ICloneable$_clone$arity$1) {
    return a.cljs$core$ICloneable$_clone$arity$1(a);
  }
  var b = cljs.core._clone[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clone._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICloneable.-clone", a);
};
cljs.core.ICounted = function() {
};
cljs.core._count = function(a) {
  if (null != a && null != a.cljs$core$ICounted$_count$arity$1) {
    return a.cljs$core$ICounted$_count$arity$1(a);
  }
  var b = cljs.core._count[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._count._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICounted.-count", a);
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function(a) {
  if (null != a && null != a.cljs$core$IEmptyableCollection$_empty$arity$1) {
    return a.cljs$core$IEmptyableCollection$_empty$arity$1(a);
  }
  var b = cljs.core._empty[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._empty._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEmptyableCollection.-empty", a);
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function(a, b) {
  if (null != a && null != a.cljs$core$ICollection$_conj$arity$2) {
    return a.cljs$core$ICollection$_conj$arity$2(a, b);
  }
  var c = cljs.core._conj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ICollection.-conj", a);
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IIndexed$_nth$arity$2) {
    return a.cljs$core$IIndexed$_nth$arity$2(a, b);
  }
  var c = cljs.core._nth[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._nth._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IIndexed.-nth", a);
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IIndexed$_nth$arity$3) {
    return a.cljs$core$IIndexed$_nth$arity$3(a, b, c);
  }
  var d = cljs.core._nth[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._nth._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IIndexed.-nth", a);
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function(a) {
  if (null != a && null != a.cljs$core$ISeq$_first$arity$1) {
    return a.cljs$core$ISeq$_first$arity$1(a);
  }
  var b = cljs.core._first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-first", a);
};
cljs.core._rest = function(a) {
  if (null != a && null != a.cljs$core$ISeq$_rest$arity$1) {
    return a.cljs$core$ISeq$_rest$arity$1(a);
  }
  var b = cljs.core._rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-rest", a);
};
cljs.core.INext = function() {
};
cljs.core._next = function(a) {
  if (null != a && null != a.cljs$core$INext$_next$arity$1) {
    return a.cljs$core$INext$_next$arity$1(a);
  }
  var b = cljs.core._next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INext.-next", a);
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$ILookup$_lookup$arity$2) {
    return a.cljs$core$ILookup$_lookup$arity$2(a, b);
  }
  var c = cljs.core._lookup[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._lookup._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ILookup.-lookup", a);
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$ILookup$_lookup$arity$3) {
    return a.cljs$core$ILookup$_lookup$arity$3(a, b, c);
  }
  var d = cljs.core._lookup[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._lookup._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ILookup.-lookup", a);
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function(a, b) {
  if (null != a && null != a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2) {
    return a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(a, b);
  }
  var c = cljs.core._contains_key_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._contains_key_QMARK_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IAssociative.-contains-key?", a);
};
cljs.core._assoc = function(a, b, c) {
  if (null != a && null != a.cljs$core$IAssociative$_assoc$arity$3) {
    return a.cljs$core$IAssociative$_assoc$arity$3(a, b, c);
  }
  var d = cljs.core._assoc[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IAssociative.-assoc", a);
};
cljs.core.IFind = function() {
};
cljs.core._find = function(a, b) {
  if (null != a && null != a.cljs$core$IFind$_find$arity$2) {
    return a.cljs$core$IFind$_find$arity$2(a, b);
  }
  var c = cljs.core._find[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._find._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IFind.-find", a);
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function(a, b) {
  if (null != a && null != a.cljs$core$IMap$_dissoc$arity$2) {
    return a.cljs$core$IMap$_dissoc$arity$2(a, b);
  }
  var c = cljs.core._dissoc[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMap.-dissoc", a);
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function(a) {
  if (null != a && null != a.cljs$core$IMapEntry$_key$arity$1) {
    return a.cljs$core$IMapEntry$_key$arity$1(a);
  }
  var b = cljs.core._key[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-key", a);
};
cljs.core._val = function(a) {
  if (null != a && null != a.cljs$core$IMapEntry$_val$arity$1) {
    return a.cljs$core$IMapEntry$_val$arity$1(a);
  }
  var b = cljs.core._val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-val", a);
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function(a, b) {
  if (null != a && null != a.cljs$core$ISet$_disjoin$arity$2) {
    return a.cljs$core$ISet$_disjoin$arity$2(a, b);
  }
  var c = cljs.core._disjoin[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISet.-disjoin", a);
};
cljs.core.IStack = function() {
};
cljs.core._peek = function(a) {
  if (null != a && null != a.cljs$core$IStack$_peek$arity$1) {
    return a.cljs$core$IStack$_peek$arity$1(a);
  }
  var b = cljs.core._peek[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._peek._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-peek", a);
};
cljs.core._pop = function(a) {
  if (null != a && null != a.cljs$core$IStack$_pop$arity$1) {
    return a.cljs$core$IStack$_pop$arity$1(a);
  }
  var b = cljs.core._pop[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-pop", a);
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function(a, b, c) {
  if (null != a && null != a.cljs$core$IVector$_assoc_n$arity$3) {
    return a.cljs$core$IVector$_assoc_n$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_n[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IVector.-assoc-n", a);
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function(a) {
  if (null != a && null != a.cljs$core$IDeref$_deref$arity$1) {
    return a.cljs$core$IDeref$_deref$arity$1(a);
  }
  var b = cljs.core._deref[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._deref._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IDeref.-deref", a);
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function(a, b, c) {
  if (null != a && null != a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3) {
    return a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(a, b, c);
  }
  var d = cljs.core._deref_with_timeout[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._deref_with_timeout._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", a);
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function(a) {
  if (null != a && null != a.cljs$core$IMeta$_meta$arity$1) {
    return a.cljs$core$IMeta$_meta$arity$1(a);
  }
  var b = cljs.core._meta[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._meta._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMeta.-meta", a);
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function(a, b) {
  if (null != a && null != a.cljs$core$IWithMeta$_with_meta$arity$2) {
    return a.cljs$core$IWithMeta$_with_meta$arity$2(a, b);
  }
  var c = cljs.core._with_meta[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._with_meta._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWithMeta.-with-meta", a);
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IReduce$_reduce$arity$2) {
    return a.cljs$core$IReduce$_reduce$arity$2(a, b);
  }
  var c = cljs.core._reduce[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._reduce._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IReduce.-reduce", a);
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IReduce$_reduce$arity$3) {
    return a.cljs$core$IReduce$_reduce$arity$3(a, b, c);
  }
  var d = cljs.core._reduce[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._reduce._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IReduce.-reduce", a);
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function(a, b, c) {
  if (null != a && null != a.cljs$core$IKVReduce$_kv_reduce$arity$3) {
    return a.cljs$core$IKVReduce$_kv_reduce$arity$3(a, b, c);
  }
  var d = cljs.core._kv_reduce[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._kv_reduce._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", a);
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function(a, b) {
  if (null != a && null != a.cljs$core$IEquiv$_equiv$arity$2) {
    return a.cljs$core$IEquiv$_equiv$arity$2(a, b);
  }
  var c = cljs.core._equiv[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._equiv._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEquiv.-equiv", a);
};
cljs.core.IHash = function() {
};
cljs.core._hash = function(a) {
  if (null != a && null != a.cljs$core$IHash$_hash$arity$1) {
    return a.cljs$core$IHash$_hash$arity$1(a);
  }
  var b = cljs.core._hash[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._hash._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IHash.-hash", a);
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function(a) {
  if (null != a && null != a.cljs$core$ISeqable$_seq$arity$1) {
    return a.cljs$core$ISeqable$_seq$arity$1(a);
  }
  var b = cljs.core._seq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._seq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeqable.-seq", a);
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function(a) {
  if (null != a && null != a.cljs$core$IReversible$_rseq$arity$1) {
    return a.cljs$core$IReversible$_rseq$arity$1(a);
  }
  var b = cljs.core._rseq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rseq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IReversible.-rseq", a);
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function(a, b) {
  if (null != a && null != a.cljs$core$ISorted$_sorted_seq$arity$2) {
    return a.cljs$core$ISorted$_sorted_seq$arity$2(a, b);
  }
  var c = cljs.core._sorted_seq[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._sorted_seq._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq", a);
};
cljs.core._sorted_seq_from = function(a, b, c) {
  if (null != a && null != a.cljs$core$ISorted$_sorted_seq_from$arity$3) {
    return a.cljs$core$ISorted$_sorted_seq_from$arity$3(a, b, c);
  }
  var d = cljs.core._sorted_seq_from[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._sorted_seq_from._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", a);
};
cljs.core._entry_key = function(a, b) {
  if (null != a && null != a.cljs$core$ISorted$_entry_key$arity$2) {
    return a.cljs$core$ISorted$_entry_key$arity$2(a, b);
  }
  var c = cljs.core._entry_key[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._entry_key._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-entry-key", a);
};
cljs.core._comparator = function(a) {
  if (null != a && null != a.cljs$core$ISorted$_comparator$arity$1) {
    return a.cljs$core$ISorted$_comparator$arity$1(a);
  }
  var b = cljs.core._comparator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._comparator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISorted.-comparator", a);
};
cljs.core.IWriter = function() {
};
cljs.core._write = function(a, b) {
  if (null != a && null != a.cljs$core$IWriter$_write$arity$2) {
    return a.cljs$core$IWriter$_write$arity$2(a, b);
  }
  var c = cljs.core._write[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._write._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWriter.-write", a);
};
cljs.core._flush = function(a) {
  if (null != a && null != a.cljs$core$IWriter$_flush$arity$1) {
    return a.cljs$core$IWriter$_flush$arity$1(a);
  }
  var b = cljs.core._flush[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._flush._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IWriter.-flush", a);
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function(a, b, c) {
  if (null != a && null != a.cljs$core$IPrintWithWriter$_pr_writer$arity$3) {
    return a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(a, b, c);
  }
  var d = cljs.core._pr_writer[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._pr_writer._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", a);
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$IPending$_realized_QMARK_$arity$1) {
    return a.cljs$core$IPending$_realized_QMARK_$arity$1(a);
  }
  var b = cljs.core._realized_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._realized_QMARK_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IPending.-realized?", a);
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function(a, b, c) {
  if (null != a && null != a.cljs$core$IWatchable$_notify_watches$arity$3) {
    return a.cljs$core$IWatchable$_notify_watches$arity$3(a, b, c);
  }
  var d = cljs.core._notify_watches[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._notify_watches._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-notify-watches", a);
};
cljs.core._add_watch = function(a, b, c) {
  if (null != a && null != a.cljs$core$IWatchable$_add_watch$arity$3) {
    return a.cljs$core$IWatchable$_add_watch$arity$3(a, b, c);
  }
  var d = cljs.core._add_watch[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_watch._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-add-watch", a);
};
cljs.core._remove_watch = function(a, b) {
  if (null != a && null != a.cljs$core$IWatchable$_remove_watch$arity$2) {
    return a.cljs$core$IWatchable$_remove_watch$arity$2(a, b);
  }
  var c = cljs.core._remove_watch[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_watch._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWatchable.-remove-watch", a);
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function(a) {
  if (null != a && null != a.cljs$core$IEditableCollection$_as_transient$arity$1) {
    return a.cljs$core$IEditableCollection$_as_transient$arity$1(a);
  }
  var b = cljs.core._as_transient[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._as_transient._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEditableCollection.-as-transient", a);
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientCollection$_conj_BANG_$arity$2) {
    return a.cljs$core$ITransientCollection$_conj_BANG_$arity$2(a, b);
  }
  var c = cljs.core._conj_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-conj!", a);
};
cljs.core._persistent_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1) {
    return a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(a);
  }
  var b = cljs.core._persistent_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._persistent_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-persistent!", a);
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3) {
    return a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", a);
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2) {
    return a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(a, b);
  }
  var c = cljs.core._dissoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientMap.-dissoc!", a);
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3) {
    return a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_n_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", a);
};
cljs.core._pop_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$ITransientVector$_pop_BANG_$arity$1) {
    return a.cljs$core$ITransientVector$_pop_BANG_$arity$1(a);
  }
  var b = cljs.core._pop_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientVector.-pop!", a);
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2) {
    return a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(a, b);
  }
  var c = cljs.core._disjoin_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientSet.-disjoin!", a);
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function(a, b) {
  if (null != a && null != a.cljs$core$IComparable$_compare$arity$2) {
    return a.cljs$core$IComparable$_compare$arity$2(a, b);
  }
  var c = cljs.core._compare[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._compare._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IComparable.-compare", a);
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function(a) {
  if (null != a && null != a.cljs$core$IChunk$_drop_first$arity$1) {
    return a.cljs$core$IChunk$_drop_first$arity$1(a);
  }
  var b = cljs.core._drop_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._drop_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunk.-drop-first", a);
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function(a) {
  if (null != a && null != a.cljs$core$IChunkedSeq$_chunked_first$arity$1) {
    return a.cljs$core$IChunkedSeq$_chunked_first$arity$1(a);
  }
  var b = cljs.core._chunked_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", a);
};
cljs.core._chunked_rest = function(a) {
  if (null != a && null != a.cljs$core$IChunkedSeq$_chunked_rest$arity$1) {
    return a.cljs$core$IChunkedSeq$_chunked_rest$arity$1(a);
  }
  var b = cljs.core._chunked_rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", a);
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function(a) {
  if (null != a && null != a.cljs$core$IChunkedNext$_chunked_next$arity$1) {
    return a.cljs$core$IChunkedNext$_chunked_next$arity$1(a);
  }
  var b = cljs.core._chunked_next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", a);
};
cljs.core.INamed = function() {
};
cljs.core._name = function(a) {
  if (null != a && null != a.cljs$core$INamed$_name$arity$1) {
    return a.cljs$core$INamed$_name$arity$1(a);
  }
  var b = cljs.core._name[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._name._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-name", a);
};
cljs.core._namespace = function(a) {
  if (null != a && null != a.cljs$core$INamed$_namespace$arity$1) {
    return a.cljs$core$INamed$_namespace$arity$1(a);
  }
  var b = cljs.core._namespace[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._namespace._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-namespace", a);
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$IReset$_reset_BANG_$arity$2) {
    return a.cljs$core$IReset$_reset_BANG_$arity$2(a, b);
  }
  var c = cljs.core._reset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._reset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IReset.-reset!", a);
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$2) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$2(a, b);
  }
  var c = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._swap_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$3) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._swap_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$4) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$4(a, b, c, d);
  }
  var e = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  e = cljs.core._swap_BANG_._;
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$5) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$5(a, b, c, d, e);
  }
  var f = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  f = cljs.core._swap_BANG_._;
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$IVolatile$_vreset_BANG_$arity$2) {
    return a.cljs$core$IVolatile$_vreset_BANG_$arity$2(a, b);
  }
  var c = cljs.core._vreset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._vreset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IVolatile.-vreset!", a);
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function(a) {
  if (null != a && null != a.cljs$core$IIterable$_iterator$arity$1) {
    return a.cljs$core$IIterable$_iterator$arity$1(a);
  }
  var b = cljs.core._iterator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._iterator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IIterable.-iterator", a);
};
cljs.core.StringBufferWriter = function(a) {
  this.sb = a;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(a, b) {
  return this.sb.append(b);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = !0;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function(a) {
  return new cljs.core.StringBufferWriter(a);
};
cljs.core.pr_str_STAR_ = function(a) {
  var b = new goog.string.StringBuffer, c = new cljs.core.StringBufferWriter(b);
  a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, c, cljs.core.pr_opts());
  c.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
};
cljs.core.int_rotate_left = function(a, b) {
  return a << b | a >>> -b;
};
"undefined" !== typeof Math.imul && 0 !== Math.imul(4294967295, 5) ? cljs.core.imul = function(a, b) {
  return Math.imul(a, b);
} : cljs.core.imul = function(a, b) {
  var c = a & 65535, d = b & 65535;
  return c * d + ((a >>> 16 & 65535) * d + c * (b >>> 16 & 65535) << 16 >>> 0) | 0;
};
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = -862048943;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function(a) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(a | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function(a, b) {
  return cljs.core.imul(cljs.core.int_rotate_left((a | 0) ^ (b | 0), 13), 5) + -430675100 | 0;
};
cljs.core.m3_fmix = function(a, b) {
  a = (a | 0) ^ b;
  a = cljs.core.imul(a ^ a >>> 16, -2048144789);
  a = cljs.core.imul(a ^ a >>> 13, -1028477387);
  return a ^ a >>> 16;
};
cljs.core.m3_hash_int = function(a) {
  if (0 === a) {
    return a;
  }
  a = cljs.core.m3_mix_K1(a);
  a = cljs.core.m3_mix_H1(cljs.core.m3_seed, a);
  return cljs.core.m3_fmix(a, 4);
};
cljs.core.m3_hash_unencoded_chars = function(a) {
  a: {
    var b = 1;
    for (var c = cljs.core.m3_seed;;) {
      if (b < a.length) {
        var d = b + 2;
        c = cljs.core.m3_mix_H1(c, cljs.core.m3_mix_K1(a.charCodeAt(b - 1) | a.charCodeAt(b) << 16));
        b = d;
      } else {
        b = c;
        break a;
      }
    }
  }
  b = 1 === (a.length & 1) ? b ^ cljs.core.m3_mix_K1(a.charCodeAt(a.length - 1)) : b;
  return cljs.core.m3_fmix(b, cljs.core.imul(2, a.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function(a) {
  if (null != a) {
    var b = a.length;
    if (0 < b) {
      for (var c = 0, d = 0;;) {
        if (c < b) {
          var e = c + 1;
          d = cljs.core.imul(31, d) + a.charCodeAt(c);
          c = e;
        } else {
          return d;
        }
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function(a) {
  var b = cljs.core.hash_string_STAR_(a);
  goog.object.set(cljs.core.string_hash_cache, a, b);
  cljs.core.string_hash_cache_count += 1;
  return b;
};
cljs.core.hash_string = function(a) {
  255 < cljs.core.string_hash_cache_count && (cljs.core.string_hash_cache = {}, cljs.core.string_hash_cache_count = 0);
  if (null == a) {
    return 0;
  }
  var b = cljs.core.string_hash_cache[a];
  return "number" === typeof b ? b : cljs.core.add_to_string_hash_cache(a);
};
cljs.core.hash = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IHash$)) {
    return a.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  }
  if ("number" === typeof a) {
    if (cljs.core.truth_(isFinite(a))) {
      return Math.floor(a) % 2147483647;
    }
    switch(a) {
      case Infinity:
        return 2146435072;
      case -Infinity:
        return -1048576;
      default:
        return 2146959360;
    }
  } else {
    return !0 === a ? 1231 : !1 === a ? 1237 : "string" === typeof a ? cljs.core.m3_hash_int(cljs.core.hash_string(a)) : a instanceof Date ? a.valueOf() ^ 0 : null == a ? 0 : cljs.core._hash(a) ^ 0;
  }
};
cljs.core.hash_combine = function(a, b) {
  return a ^ b + 2654435769 + (a << 6) + (a >> 2);
};
cljs.core.instance_QMARK_ = function(a, b) {
  return b instanceof a;
};
cljs.core.symbol_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function(a) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(a.name), cljs.core.hash_string(a.ns));
};
cljs.core.compare_symbols = function(a, b) {
  if (a.str === b.str) {
    return 0;
  }
  if (cljs.core.truth_(function() {
    var c = cljs.core.not(a.ns);
    return c ? b.ns : c;
  }())) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    var c = goog.array.defaultCompare(a.ns, b.ns);
    return 0 === c ? goog.array.defaultCompare(a.name, b.name) : c;
  }
  return goog.array.defaultCompare(a.name, b.name);
};
cljs.core.Symbol = function(a, b, c, d, e) {
  this.ns = a;
  this.name = b;
  this.str = c;
  this._hash = d;
  this._meta = e;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  return this.str;
};
cljs.core.Symbol.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Symbol ? this.str === b.str : !1;
};
cljs.core.Symbol.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, this);
  }, c = function(a, b, c) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, this, c);
  };
  a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Symbol.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Symbol(this.ns, this.name, this.str, this._hash, b);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_symbol(this);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, this.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = !0;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function(a, b, c, d, e) {
  return new cljs.core.Symbol(a, b, c, d, e);
};
cljs.core.symbol = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (a instanceof cljs.core.Symbol) {
    return a;
  }
  var b = a.indexOf("/");
  return 1 > b ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, a) : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(a.substring(0, b), a.substring(b + 1, a.length));
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : b;
  return new cljs.core.Symbol(a, b, c, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(a, b, c) {
  this.val = a;
  this.sym = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Var(this.val, this.sym, b);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Var ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.sym, b.sym) : !1;
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_symbol(this.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
  }, c = function(a, b) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.call(null, b, c, d, e, f, g, h);
  }, l = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.call(null, b, c, d, e, f, g, h, k);
  }, m = function(a, b, c, d, e, f, g, h, k, l) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, l) : a.call(null, b, c, d, e, f, g, h, k, l);
  }, n = function(a, b, c, d, e, f, g, h, k, l, m) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, l, m) : a.call(null, b, c, d, e, f, g, h, k, l, m);
  }, p = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, l, m, n) : a.call(null, b, c, d, e, f, g, h, k, l, m, n);
  }, q = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, l, m, n, p) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, l, m, n, p, q) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, l, m, n, p, q, r) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }, u = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }, v = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
  }, w = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  }, x = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y);
  }, y = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w);
  }, z = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z) : a.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z);
  }, F = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z, x) {
    a = this;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null), b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z, x], 0));
  };
  a = function(a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W, ba) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, A);
      case 3:
        return d.call(this, a, A, C);
      case 4:
        return e.call(this, a, A, C, I);
      case 5:
        return f.call(this, a, A, C, I, D);
      case 6:
        return g.call(this, a, A, C, I, D, H);
      case 7:
        return h.call(this, a, A, C, I, D, H, B);
      case 8:
        return k.call(this, a, A, C, I, D, H, B, G);
      case 9:
        return l.call(this, a, A, C, I, D, H, B, G, K);
      case 10:
        return m.call(this, a, A, C, I, D, H, B, G, K, J);
      case 11:
        return n.call(this, a, A, C, I, D, H, B, G, K, J, M);
      case 12:
        return p.call(this, a, A, C, I, D, H, B, G, K, J, M, E);
      case 13:
        return q.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O);
      case 14:
        return r.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P);
      case 15:
        return t.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L);
      case 16:
        return u.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N);
      case 17:
        return v.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R);
      case 18:
        return w.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S);
      case 19:
        return x.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T);
      case 20:
        return y.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X);
      case 21:
        return z.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W);
      case 22:
        return F.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W, ba);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = u;
  a.cljs$core$IFn$_invoke$arity$17 = v;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = y;
  a.cljs$core$IFn$_invoke$arity$21 = z;
  a.cljs$core$IFn$_invoke$arity$22 = F;
  return a;
}();
cljs.core.Var.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var k = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  var l = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  var m = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return m.cljs$core$IFn$_invoke$arity$10 ? m.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : m.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  var n = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : n.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  var p = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : p.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  var q = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  var r = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  var t = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  var u = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return u.cljs$core$IFn$_invoke$arity$16 ? u.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
  var v = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return v.cljs$core$IFn$_invoke$arity$17 ? v.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
  var w = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
  var x = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
  var y = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return y.cljs$core$IFn$_invoke$arity$20 ? y.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) : y.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = !0;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Var");
};
cljs.core.__GT_Var = function(a, b, c) {
  return new cljs.core.Var(a, b, c);
};
cljs.core.var_QMARK_ = function(a) {
  return a instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIterable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a);
};
cljs.core.clone = function(a) {
  return cljs.core._clone(a);
};
cljs.core.cloneable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICloneable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a);
};
cljs.core.seq = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$)) {
    return a.cljs$core$ISeqable$_seq$arity$1(null);
  }
  if (cljs.core.array_QMARK_(a) || "string" === typeof a) {
    return 0 === a.length ? null : new cljs.core.IndexedSeq(a, 0, null);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a)) {
    return cljs.core._seq(a);
  }
  throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " is not ISeqable"].join(""));
};
cljs.core.first = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$)) {
    return a.cljs$core$ISeq$_first$arity$1(null);
  }
  a = cljs.core.seq(a);
  return null == a ? null : cljs.core._first(a);
};
cljs.core.rest = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? a.cljs$core$ISeq$_rest$arity$1(null) : (a = cljs.core.seq(a)) ? cljs.core._rest(a) : cljs.core.List.EMPTY : cljs.core.List.EMPTY;
};
cljs.core.next = function(a) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INext$) ? a.cljs$core$INext$_next$arity$1(null) : cljs.core.seq(cljs.core.rest(a));
};
cljs.core._EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null == b : a === b || cljs.core._equiv(a, b);
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(c));
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(a) {
  this.s = a;
};
cljs.core.ES6Iterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:a, done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = !0;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function(a) {
  return new cljs.core.ES6Iterator(a);
};
cljs.core.es6_iterator = function(a) {
  return new cljs.core.ES6Iterator(cljs.core.seq(a));
};
cljs.core.ES6IteratorSeq = function(a, b, c) {
  this.value = a;
  this.iter = b;
  this._rest = c;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this._rest && (this._rest = cljs.core.es6_iterator_seq(this.iter));
  return this._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = !0;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function(a, b, c) {
  return new cljs.core.ES6IteratorSeq(a, b, c);
};
cljs.core.es6_iterator_seq = function(a) {
  var b = a.next();
  return cljs.core.truth_(b.done) ? cljs.core.List.EMPTY : new cljs.core.ES6IteratorSeq(b.value, a, null);
};
cljs.core.mix_collection_hash = function(a, b) {
  var c = cljs.core.m3_seed;
  a = cljs.core.m3_mix_K1(a);
  c = cljs.core.m3_mix_H1(c, a);
  return cljs.core.m3_fmix(c, b);
};
cljs.core.hash_ordered_coll = function(a) {
  var b = 0, c = 1;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = cljs.core.imul(31, c) + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function(a) {
  var b = 0, c = 0;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = c + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", !0);
var G__9945_9948 = cljs.core._count, G__9946_9949 = "null", G__9947_9950 = function(a, b) {
  return function(a) {
    return 0;
  };
}(G__9945_9948, G__9946_9949);
goog.object.set(G__9945_9948, G__9946_9949, G__9947_9950);
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof Date && this.valueOf() === b.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof Date) {
    return goog.array.defaultCompare(this.valueOf(), b.valueOf());
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$Inst$inst_ms_STAR_$arity$1) {
    return a.cljs$core$Inst$inst_ms_STAR_$arity$1(a);
  }
  var b = cljs.core.inst_ms_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core.inst_ms_STAR_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("Inst.inst-ms*", a);
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(a) {
  return this.getTime();
};
cljs.core.inst_ms = function(a) {
  return cljs.core.inst_ms_STAR_(a);
};
cljs.core.inst_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$Inst$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.Inst, a) : cljs.core.native_satisfies_QMARK_(cljs.core.Inst, a);
};
goog.object.set(cljs.core.IEquiv, "number", !0);
var G__9954_9957 = cljs.core._equiv, G__9955_9958 = "number", G__9956_9959 = function(a, b) {
  return function(a, b) {
    return a === b;
  };
}(G__9954_9957, G__9955_9958);
goog.object.set(G__9954_9957, G__9955_9958, G__9956_9959);
goog.object.set(cljs.core.Fn, "function", !0);
goog.object.set(cljs.core.IMeta, "function", !0);
var G__9960_9963 = cljs.core._meta, G__9961_9964 = "function", G__9962_9965 = function(a, b) {
  return function(a) {
    return null;
  };
}(G__9960_9963, G__9961_9964);
goog.object.set(G__9960_9963, G__9961_9964, G__9962_9965);
goog.object.set(cljs.core.IHash, "_", !0);
var G__9966_9969 = cljs.core._hash, G__9967_9970 = "_", G__9968_9971 = function(a, b) {
  return function(a) {
    return goog.getUid(a);
  };
}(G__9966_9969, G__9967_9970);
goog.object.set(G__9966_9969, G__9967_9970, G__9968_9971);
cljs.core.inc = function(a) {
  return a + 1;
};
cljs.core.Reduced = function(a) {
  this.val = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = !0;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced_QMARK_ = function(a) {
  return a instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? a : cljs.core.reduced(a);
};
cljs.core.unreduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : a;
};
cljs.core.deref = function(a) {
  return cljs.core._deref(a);
};
cljs.core.ci_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._count(a);
  if (0 === c) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, 0), e = 1;;) {
    if (e < c) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, e);
      d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core._count(a), e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, c);
      e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (var e = cljs.core._count(a);;) {
    if (d < e) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, d);
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, f) : b.call(null, c, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.length;
  if (0 === a.length) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = a[0], e = 1;;) {
    if (e < c) {
      var f = a[e];
      d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = a.length, e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = a[c];
      e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (var e = a.length;;) {
    if (d < e) {
      var f = a[d];
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, f) : b.call(null, c, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICounted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a);
};
cljs.core.indexed_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a);
};
cljs.core._indexOf = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(a, b, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.count(a);
  if (c >= d) {
    return -1;
  }
  !(0 < c) && 0 > c && (c += d, c = 0 > c ? 0 : c);
  for (;;) {
    if (c < d) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), b)) {
        return c;
      }
      c += 1;
    } else {
      return -1;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.count(a));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.count(a);
  if (0 === d) {
    return -1;
  }
  0 < c ? (--d, c = d < c ? d : c) : c = 0 > c ? d + c : c;
  for (;;) {
    if (0 <= c) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), b)) {
        return c;
      }
      --c;
    } else {
      return -1;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = !0;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function(a, b) {
  return new cljs.core.IndexedSeqIterator(a, b);
};
cljs.core.IndexedSeq = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.IndexedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  a = b + this.i;
  if (0 <= a && a < this.arr.length) {
    return this.arr[a];
  }
  throw Error("Index out of bounds");
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  a = b + this.i;
  return 0 <= a && a < this.arr.length ? this.arr[a] : c;
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.IndexedSeqIterator(this.arr, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.IndexedSeq(this.arr, this.i, this.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1, null) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  a = this.arr.length - this.i;
  return 0 > a ? 0 : a;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  a = this.cljs$core$ICounted$_count$arity$1(null);
  return 0 < a ? new cljs.core.RSeq(this, a - 1, null) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.i], this.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.arr[this.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1, null) : cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this.i < this.arr.length ? this : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.IndexedSeq(this.arr, this.i, b);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = !0;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function(a, b, c) {
  return new cljs.core.IndexedSeq(a, b, c);
};
var G__10014_10017 = cljs.core.IndexedSeq.prototype, G__10015_10018 = cljs.core.ITER_SYMBOL, G__10016_10019 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10014_10017, G__10015_10018);
goog.object.set(G__10014_10017, G__10015_10018, G__10016_10019);
cljs.core.prim_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b < a.length ? new cljs.core.IndexedSeq(a, b, null) : null;
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(a, b, c) {
  this.ci = a;
  this.i = b;
  this.meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.RSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.RSeq(this.ci, this.i, this.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : null;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.ci, this.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.RSeq(this.ci, this.i, b);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = !0;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function(a, b, c) {
  return new cljs.core.RSeq(a, b, c);
};
var G__10028_10031 = cljs.core.RSeq.prototype, G__10029_10032 = cljs.core.ITER_SYMBOL, G__10030_10033 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10028_10031, G__10029_10032);
goog.object.set(G__10028_10031, G__10029_10032, G__10030_10033);
cljs.core.second = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.ffirst = function(a) {
  return cljs.core.first(cljs.core.first(a));
};
cljs.core.nfirst = function(a) {
  return cljs.core.next(cljs.core.first(a));
};
cljs.core.fnext = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.nnext = function(a) {
  return cljs.core.next(cljs.core.next(a));
};
cljs.core.last = function(a) {
  for (;;) {
    var b = cljs.core.next(a);
    if (null != b) {
      a = b;
    } else {
      return cljs.core.first(a);
    }
  }
};
goog.object.set(cljs.core.IEquiv, "_", !0);
var G__10035_10038 = cljs.core._equiv, G__10036_10039 = "_", G__10037_10040 = function(a, b) {
  return function(a, b) {
    return a === b;
  };
}(G__10035_10038, G__10036_10039);
goog.object.set(G__10035_10038, G__10036_10039, G__10037_10040);
cljs.core.conj = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? cljs.core._conj(a, b) : new cljs.core.List(null, b, null, 1, null);
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core.truth_(c)) {
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b), b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b);
    }
  }
};
cljs.core.conj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function(a) {
  return null == a ? null : cljs.core._empty(a);
};
cljs.core.accumulating_seq_count = function(a) {
  a = cljs.core.seq(a);
  for (var b = 0;;) {
    if (cljs.core.counted_QMARK_(a)) {
      return b + cljs.core._count(a);
    }
    a = cljs.core.next(a);
    b += 1;
  }
};
cljs.core.count = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICounted$) ? a.cljs$core$ICounted$_count$arity$1(null) : cljs.core.array_QMARK_(a) ? a.length : "string" === typeof a ? a.length : null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$) ? cljs.core.accumulating_seq_count(a) : cljs.core._count(a) : 0;
};
cljs.core.linear_traversal_nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (null == a) {
      throw Error("Index out of bounds");
    }
    if (0 === b) {
      if (cljs.core.seq(a)) {
        return cljs.core.first(a);
      }
      throw Error("Index out of bounds");
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
    }
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a), --b;
    } else {
      throw Error("Index out of bounds");
    }
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return c;
    }
    if (0 === b) {
      return cljs.core.seq(a) ? cljs.core.first(a) : c;
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
    }
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a), --b;
    } else {
      return c;
    }
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof b) {
    throw Error("Index argument to nth must be a number");
  }
  if (null == a) {
    return a;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$2(null, b);
  }
  if (cljs.core.array_QMARK_(a)) {
    if (0 <= b && b < a.length) {
      return a[b];
    }
    throw Error("Index out of bounds");
  }
  if ("string" === typeof a) {
    if (0 <= b && b < a.length) {
      return a.charAt(b);
    }
    throw Error("Index out of bounds");
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) || null != a && (a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$)) {
    return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  throw Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if ("number" !== typeof b) {
    throw Error("Index argument to nth must be a number.");
  }
  if (null == a) {
    return c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$3(null, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return 0 <= b && b < a.length ? a[b] : c;
  }
  if ("string" === typeof a) {
    return 0 <= b && b < a.length ? a.charAt(b) : c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) || null != a && (a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$)) {
    return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  throw Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function(a, b) {
  for (var c = a;;) {
    if (a = 0 < b && cljs.core.seq(c)) {
      --b, c = a = cljs.core.rest(a);
    } else {
      return c;
    }
  }
};
cljs.core.get = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$2(null, b) : cljs.core.array_QMARK_(a) ? null != b && b < a.length ? a[b | 0] : null : "string" === typeof a ? null != b && b < a.length ? a.charAt(b | 0) : null : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(a, b) : null;
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$3(null, b, c) : cljs.core.array_QMARK_(a) ? null != b && 0 <= b && b < a.length ? a[b | 0] : c : "string" === typeof a ? null != b && 0 <= b && b < a.length ? a.charAt(b | 0) : c : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(a, b, c) : c : c;
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a ? cljs.core._assoc(a, b, c) : cljs.core.PersistentArrayMap.createAsIfByAssoc([b, c]);
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._dissoc(a, b);
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function(a) {
  var b = goog.isFunction(a);
  return b ? b : null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$Fn$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a);
};
cljs.core.MetaFn = function(a, b) {
  this.afn = a;
  this.meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.MetaFn(this.afn, b);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$0 ? a.afn.cljs$core$IFn$_invoke$arity$0() : a.afn.call(null);
  }, c = function(a, b) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$1 ? a.afn.cljs$core$IFn$_invoke$arity$1(b) : a.afn.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$2 ? a.afn.cljs$core$IFn$_invoke$arity$2(b, c) : a.afn.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$3 ? a.afn.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.afn.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$4 ? a.afn.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.afn.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$5 ? a.afn.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.afn.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$6 ? a.afn.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.afn.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$7 ? a.afn.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.afn.call(null, b, c, d, e, f, g, h);
  }, l = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$8 ? a.afn.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.afn.call(null, b, c, d, e, f, g, h, k);
  }, m = function(a, b, c, d, e, f, g, h, k, l) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$9 ? a.afn.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, l) : a.afn.call(null, b, c, d, e, f, g, h, k, l);
  }, n = function(a, b, c, d, e, f, g, h, k, l, m) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$10 ? a.afn.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, l, m) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m);
  }, p = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$11 ? a.afn.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, l, m, n) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n);
  }, q = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$12 ? a.afn.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, l, m, n, p) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$13 ? a.afn.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, l, m, n, p, q) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$14 ? a.afn.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, l, m, n, p, q, r) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }, u = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$15 ? a.afn.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }, v = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$16 ? a.afn.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
  }, w = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$17 ? a.afn.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  }, x = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$18 ? a.afn.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y);
  }, y = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$19 ? a.afn.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w);
  }, z = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$20 ? a.afn.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z) : a.afn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z);
  }, F = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z, x) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.afn, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, l, m, n, p, q, r, t, u, v, y, w, z, x], 0));
  };
  a = function(a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W, ba) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, A);
      case 3:
        return d.call(this, a, A, C);
      case 4:
        return e.call(this, a, A, C, I);
      case 5:
        return f.call(this, a, A, C, I, D);
      case 6:
        return g.call(this, a, A, C, I, D, H);
      case 7:
        return h.call(this, a, A, C, I, D, H, B);
      case 8:
        return k.call(this, a, A, C, I, D, H, B, G);
      case 9:
        return l.call(this, a, A, C, I, D, H, B, G, K);
      case 10:
        return m.call(this, a, A, C, I, D, H, B, G, K, J);
      case 11:
        return n.call(this, a, A, C, I, D, H, B, G, K, J, M);
      case 12:
        return p.call(this, a, A, C, I, D, H, B, G, K, J, M, E);
      case 13:
        return q.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O);
      case 14:
        return r.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P);
      case 15:
        return t.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L);
      case 16:
        return u.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N);
      case 17:
        return v.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R);
      case 18:
        return w.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S);
      case 19:
        return x.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T);
      case 20:
        return y.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X);
      case 21:
        return z.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W);
      case 22:
        return F.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W, ba);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = u;
  a.cljs$core$IFn$_invoke$arity$17 = v;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = y;
  a.cljs$core$IFn$_invoke$arity$21 = z;
  a.cljs$core$IFn$_invoke$arity$22 = F;
  return a;
}();
cljs.core.MetaFn.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  return this.afn.cljs$core$IFn$_invoke$arity$0 ? this.afn.cljs$core$IFn$_invoke$arity$0() : this.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.afn.cljs$core$IFn$_invoke$arity$1 ? this.afn.cljs$core$IFn$_invoke$arity$1(a) : this.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.afn.cljs$core$IFn$_invoke$arity$2 ? this.afn.cljs$core$IFn$_invoke$arity$2(a, b) : this.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return this.afn.cljs$core$IFn$_invoke$arity$3 ? this.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return this.afn.cljs$core$IFn$_invoke$arity$4 ? this.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return this.afn.cljs$core$IFn$_invoke$arity$5 ? this.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return this.afn.cljs$core$IFn$_invoke$arity$6 ? this.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  return this.afn.cljs$core$IFn$_invoke$arity$7 ? this.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  return this.afn.cljs$core$IFn$_invoke$arity$8 ? this.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  return this.afn.cljs$core$IFn$_invoke$arity$9 ? this.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.afn.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  return this.afn.cljs$core$IFn$_invoke$arity$10 ? this.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  return this.afn.cljs$core$IFn$_invoke$arity$11 ? this.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  return this.afn.cljs$core$IFn$_invoke$arity$12 ? this.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  return this.afn.cljs$core$IFn$_invoke$arity$13 ? this.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  return this.afn.cljs$core$IFn$_invoke$arity$14 ? this.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  return this.afn.cljs$core$IFn$_invoke$arity$15 ? this.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  return this.afn.cljs$core$IFn$_invoke$arity$16 ? this.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
  return this.afn.cljs$core$IFn$_invoke$arity$17 ? this.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
  return this.afn.cljs$core$IFn$_invoke$arity$18 ? this.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
  return this.afn.cljs$core$IFn$_invoke$arity$19 ? this.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
  return this.afn.cljs$core$IFn$_invoke$arity$20 ? this.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = !0;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function(a, b) {
  return new cljs.core.MetaFn(a, b);
};
cljs.core.with_meta = function(a, b) {
  return goog.isFunction(a) ? new cljs.core.MetaFn(a, b) : null == a ? null : cljs.core._with_meta(a, b);
};
cljs.core.meta = function(a) {
  var b = null != a;
  return (b ? null != a ? a.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMeta$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a) : b) ? cljs.core._meta(a) : null;
};
cljs.core.peek = function(a) {
  return null == a ? null : cljs.core._peek(a);
};
cljs.core.pop = function(a) {
  return null == a ? null : cljs.core._pop(a);
};
cljs.core.disj = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._disjoin(a, b);
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function(a) {
  return null == a || cljs.core.not(cljs.core.seq(a));
};
cljs.core.coll_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICollection$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a);
};
cljs.core.set_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISet$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a);
};
cljs.core.associative_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IAssociative$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a);
};
cljs.core.ifind_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IFind$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IFind, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IFind, a);
};
cljs.core.sequential_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a);
};
cljs.core.sorted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISorted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a);
};
cljs.core.reduceable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IReduce$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a);
};
cljs.core.map_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMap$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a);
};
cljs.core.record_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IRecord$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a);
};
cljs.core.vector_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IVector$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a);
};
cljs.core.chunked_seq_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IChunkedSeq$ ? !0 : !1 : !1;
};
cljs.core.js_obj = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, a);
};
cljs.core.js_obj.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function(a) {
  return goog.object.getKeys(a);
};
cljs.core.js_delete = function(a, b) {
  return delete a[b];
};
cljs.core.array_copy = function(a, b, c, d, e) {
  for (;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    d += 1;
    --e;
    b += 1;
  }
};
cljs.core.array_copy_downward = function(a, b, c, d, e) {
  b += e - 1;
  for (d += e - 1;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    --d;
    --e;
    --b;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function(a) {
  return !1 === a;
};
cljs.core.true_QMARK_ = function(a) {
  return !0 === a;
};
cljs.core.boolean_QMARK_ = function(a) {
  return !0 === a || !1 === a;
};
cljs.core.undefined_QMARK_ = function(a) {
  return void 0 === a;
};
cljs.core.seq_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a);
};
cljs.core.seqable_QMARK_ = function(a) {
  var b = null != a ? a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a);
  return b ? b : cljs.core.array_QMARK_(a) || "string" === typeof a;
};
cljs.core.boolean$ = function(a) {
  return null == a ? !1 : !1 === a ? !1 : !0;
};
cljs.core.ifn_QMARK_ = function(a) {
  var b = cljs.core.fn_QMARK_(a);
  return b ? b : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IFn$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a);
};
cljs.core.integer_QMARK_ = function(a) {
  return "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) === parseInt(a, 10);
};
cljs.core.int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) || a instanceof goog.math.Integer || a instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? 0 < a : a instanceof goog.math.Integer ? cljs.core.not(a.isNegative()) && cljs.core.not(a.isZero()) : a instanceof goog.math.Long ? cljs.core.not(a.isNegative()) && cljs.core.not(a.isZero()) : !1;
};
cljs.core.neg_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? 0 > a : a instanceof goog.math.Integer ? a.isNegative() : a instanceof goog.math.Long ? a.isNegative() : !1;
};
cljs.core.nat_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? !(0 > a) : a instanceof goog.math.Integer ? cljs.core.not(a.isNegative()) : a instanceof goog.math.Long ? cljs.core.not(a.isNegative()) : !1;
};
cljs.core.float_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.double_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.infinite_QMARK_ = function(a) {
  return a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? !1 : !0;
};
cljs.core.find = function(a, b) {
  return cljs.core.ifind_QMARK_(a) ? cljs.core._find(a, b) : null != a && cljs.core.associative_QMARK_(a) && cljs.core.contains_QMARK_(a, b) ? new cljs.core.MapEntry(b, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), null) : null;
};
cljs.core.distinct_QMARK_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
    return !1;
  }
  a = cljs.core.PersistentHashSet.createAsIfByAssoc([a, b]);
  for (b = c;;) {
    var d = cljs.core.first(b);
    c = cljs.core.next(b);
    if (cljs.core.truth_(b)) {
      if (cljs.core.contains_QMARK_(a, d)) {
        return !1;
      }
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d);
      b = c;
    } else {
      return !0;
    }
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function(a, b) {
  if (a === b) {
    return 0;
  }
  if (null == a) {
    return -1;
  }
  if (null == b) {
    return 1;
  }
  if ("number" === typeof a) {
    if ("number" === typeof b) {
      return goog.array.defaultCompare(a, b);
    }
    throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  if (null != a ? a.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IComparable$ || (a.cljs$lang$protocol_mask$partition1$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) {
    return cljs.core._compare(a, b);
  }
  if ("string" !== typeof a && !cljs.core.array_QMARK_(a) && !0 !== a && !1 !== a || cljs.core.type(a) !== cljs.core.type(b)) {
    throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  return goog.array.defaultCompare(a, b);
};
cljs.core.compare_indexed = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.count(a), d = cljs.core.count(b);
  return c < d ? -1 : c > d ? 1 : 0 === c ? 0 : cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(a, b, c, 0);
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (;;) {
    var e = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(b, d));
    if (0 === e && d + 1 < c) {
      d += 1;
    } else {
      return e;
    }
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function(a) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, cljs.core.compare) ? cljs.core.compare : function(b, c) {
    var d = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return "number" === typeof d ? d : cljs.core.truth_(d) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.sort = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, a);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.seq(b) ? (b = cljs.core.to_array(b), a = cljs.core.fn__GT_comparator(a), goog.array.stableSort(b, a), cljs.core.seq(b)) : cljs.core.List.EMPTY;
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(a, cljs.core.compare, b);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(c, e) {
    c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
    var d = cljs.core.fn__GT_comparator(b);
    return d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(c, e) : d.call(null, c, e);
  }, c);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return (b = cljs.core.seq(b)) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(b), cljs.core.next(b)) : a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (c = cljs.core.seq(c);;) {
    if (c) {
      var d = cljs.core.first(c);
      b = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, d) : a.call(null, b, d);
      if (cljs.core.reduced_QMARK_(b)) {
        return cljs.core.deref(b);
      }
      c = cljs.core.next(c);
    } else {
      return b;
    }
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function(a) {
  a = cljs.core.to_array(a);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = cljs.core._iterator(a);
  if (cljs.core.truth_(a.hasNext())) {
    for (var c = a.next();;) {
      if (a.hasNext()) {
        var d = a.next();
        c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
        if (cljs.core.reduced_QMARK_(c)) {
          return cljs.core.deref(c);
        }
      } else {
        return c;
      }
    }
  } else {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (a = cljs.core._iterator(a);;) {
    if (a.hasNext()) {
      var d = a.next();
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
    } else {
      return c;
    }
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != b && (b.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IReduce$) ? b.cljs$core$IReduce$_reduce$arity$2(null, a) : cljs.core.array_QMARK_(b) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : "string" === typeof b ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, b) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.iterable_QMARK_(b) ? cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(b, 
  a) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != c && (c.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$IReduce$) ? c.cljs$core$IReduce$_reduce$arity$3(null, a, b) : cljs.core.array_QMARK_(c) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : "string" === typeof c ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, c) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.iterable_QMARK_(c) ? 
  cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function(a, b, c) {
  return null != c ? cljs.core._kv_reduce(c, a, b) : b;
};
cljs.core.identity = function(a) {
  return a;
};
cljs.core.completing = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(a, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
    }, e = function(a) {
      return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
    }, f = function(b, c) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    };
    c = function(a, b) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    return c;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(a, b, b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  c = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, c, d);
  return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, a + b, c);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, a - b, c);
};
cljs.core._.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, a * b, c);
};
cljs.core._STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, a / b, c);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a < b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b < cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a <= b;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a <= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b <= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a > b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b > cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a >= b;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a >= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b >= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function(a) {
  return a - 1;
};
cljs.core.max = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b ? a : b;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, a > b ? a : b, c);
};
cljs.core.max.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b ? a : b;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, a < b ? a : b, c);
};
cljs.core.min.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function(a) {
  return a;
};
cljs.core.char$ = function(a) {
  if ("number" === typeof a) {
    return String.fromCharCode(a);
  }
  if ("string" === typeof a && 1 === a.length) {
    return a;
  }
  throw Error("Argument to char must be a character or number");
};
cljs.core.short$ = function(a) {
  return a;
};
cljs.core.float$ = function(a) {
  return a;
};
cljs.core.double$ = function(a) {
  return a;
};
cljs.core.unchecked_byte = function(a) {
  return a;
};
cljs.core.unchecked_char = function(a) {
  return a;
};
cljs.core.unchecked_short = function(a) {
  return a;
};
cljs.core.unchecked_float = function(a) {
  return a;
};
cljs.core.unchecked_double = function(a) {
  return a;
};
cljs.core.unchecked_add = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, a + b, c);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, a + b, c);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function(a) {
  return a - 1;
};
cljs.core.unchecked_dec_int = function(a) {
  return a - 1;
};
cljs.core.unchecked_divide_int = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, a / b, c);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function(a) {
  return a + 1;
};
cljs.core.unchecked_inc_int = function(a) {
  return a + 1;
};
cljs.core.unchecked_multiply = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, a * b, c);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, a * b, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function(a) {
  return -a;
};
cljs.core.unchecked_negate_int = function(a) {
  return -a;
};
cljs.core.unchecked_remainder_int = function(a, b) {
  return cljs.core.mod(a, b);
};
cljs.core.unchecked_subtract = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, a - b, c);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, a - b, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function(a) {
  return 0 <= a ? Math.floor(a) : Math.ceil(a);
};
cljs.core.int$ = function(a) {
  return a | 0;
};
cljs.core.unchecked_int = function(a) {
  return cljs.core.fix(a);
};
cljs.core.long$ = function(a) {
  return cljs.core.fix(a);
};
cljs.core.unchecked_long = function(a) {
  return cljs.core.fix(a);
};
cljs.core.booleans = function(a) {
  return a;
};
cljs.core.bytes = function(a) {
  return a;
};
cljs.core.chars = function(a) {
  return a;
};
cljs.core.shorts = function(a) {
  return a;
};
cljs.core.ints = function(a) {
  return a;
};
cljs.core.floats = function(a) {
  return a;
};
cljs.core.doubles = function(a) {
  return a;
};
cljs.core.longs = function(a) {
  return a;
};
cljs.core.js_mod = function(a, b) {
  return a % b;
};
cljs.core.mod = function(a, b) {
  return (a % b + b) % b;
};
cljs.core.quot = function(a, b) {
  return cljs.core.fix((a - a % b) / b);
};
cljs.core.rem = function(a, b) {
  var c = cljs.core.quot(a, b);
  return a - b * c;
};
cljs.core.bit_xor = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a ^ b;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, a ^ b, c);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & b;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, a & b, c);
};
cljs.core.bit_and.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a | b;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, a | b, c);
};
cljs.core.bit_or.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & ~b;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, a & ~b, c);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function(a, b) {
  return a & ~(1 << b);
};
cljs.core.bit_flip = function(a, b) {
  return a ^ 1 << b;
};
cljs.core.bit_not = function(a) {
  return ~a;
};
cljs.core.bit_set = function(a, b) {
  return a | 1 << b;
};
cljs.core.bit_test = function(a, b) {
  return 0 != (a & 1 << b);
};
cljs.core.bit_shift_left = function(a, b) {
  return a << b;
};
cljs.core.bit_shift_right = function(a, b) {
  return a >> b;
};
cljs.core.bit_shift_right_zero_fill = function(a, b) {
  return a >>> b;
};
cljs.core.unsigned_bit_shift_right = function(a, b) {
  return a >>> b;
};
cljs.core.bit_count = function(a) {
  a -= a >> 1 & 1431655765;
  a = (a & 858993459) + (a >> 2 & 858993459);
  return 16843009 * (a + (a >> 4) & 252645135) >> 24;
};
cljs.core._EQ__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._equiv(a, b);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a === b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b === cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function(a) {
  return 0 < a;
};
cljs.core.zero_QMARK_ = function(a) {
  return 0 === a;
};
cljs.core.neg_QMARK_ = function(a) {
  return 0 > a;
};
cljs.core.nthnext = function(a, b) {
  for (a = cljs.core.seq(a);;) {
    if (a && 0 < b) {
      --b, a = cljs.core.next(a);
    } else {
      return a;
    }
  }
};
cljs.core.str = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return null == a ? "" : [a].join("");
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (a = new goog.string.StringBuffer([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));;) {
    if (cljs.core.truth_(b)) {
      a = a.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(b))].join("")), b = cljs.core.next(b);
    } else {
      return a.toString();
    }
  }
};
cljs.core.str.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.substring(b);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.substring(b, c);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function(a, b) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(b) ? cljs.core.counted_QMARK_(a) && cljs.core.counted_QMARK_(b) && cljs.core.count(a) !== cljs.core.count(b) ? !1 : function() {
    for (var c = cljs.core.seq(a), d = cljs.core.seq(b);;) {
      if (null == c) {
        return null == d;
      }
      if (null != d && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(c), cljs.core.first(d))) {
        c = cljs.core.next(c), d = cljs.core.next(d);
      } else {
        return !1;
      }
    }
  }() : null);
};
cljs.core.hash_coll = function(a) {
  if (cljs.core.seq(a)) {
    var b = cljs.core.hash(cljs.core.first(a));
    for (a = cljs.core.next(a);;) {
      if (null == a) {
        return b;
      }
      b = cljs.core.hash_combine(b, cljs.core.hash(cljs.core.first(a)));
      a = cljs.core.next(a);
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a);
      b = (b + (cljs.core.hash(cljs.core.key(c)) ^ cljs.core.hash(cljs.core.val(c)))) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.hash_iset = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a);
      b = (b + cljs.core.hash(c)) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.extend_object_BANG_ = function(a, b) {
  b = cljs.core.seq(b);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      g = cljs.core.name(g);
      goog.object.set(a, g, f);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (d = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), c = d, d = cljs.core.count(d)) : (d = cljs.core.first(b), c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null), d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null), c = cljs.core.name(c), goog.object.set(a, c, d), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        break;
      }
    }
  }
  return a;
};
cljs.core.List = function(a, b, c, d, e) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.List.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.List.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, this.count);
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.List(this.meta, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 1 === this.count ? null : this.rest;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return this.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 === this.count ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.List(b, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, this, this.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.List.cljs$lang$type = !0;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/List");
};
cljs.core.__GT_List = function(a, b, c, d, e) {
  return new cljs.core.List(a, b, c, d, e);
};
cljs.core.list_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IList$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a);
};
var G__10496_10499 = cljs.core.List.prototype, G__10497_10500 = cljs.core.ITER_SYMBOL, G__10498_10501 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10496_10499, G__10497_10500);
goog.object.set(G__10496_10499, G__10497_10500, G__10498_10501);
cljs.core.EmptyList = function(a) {
  this.meta = a;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.EmptyList.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.EmptyList(this.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  throw Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.list_QMARK_(b) || cljs.core.sequential_QMARK_(b) ? null == cljs.core.seq(b) : !1;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return this;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.EmptyList(b);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = !0;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function(a) {
  return new cljs.core.EmptyList(a);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
var G__10504_10507 = cljs.core.EmptyList.prototype, G__10505_10508 = cljs.core.ITER_SYMBOL, G__10506_10509 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10504_10507, G__10505_10508);
goog.object.set(G__10504_10507, G__10505_10508, G__10506_10509);
cljs.core.reversible_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IReversible$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a);
};
cljs.core.rseq = function(a) {
  return cljs.core._rseq(a);
};
cljs.core.reverse = function(a) {
  return cljs.core.reversible_QMARK_(a) ? (a = cljs.core.rseq(a)) ? a : cljs.core.List.EMPTY : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, a);
};
cljs.core.list = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    var b = a.arr;
  } else {
    a: {
      for (b = [];;) {
        if (null != a) {
          b.push(a.cljs$core$ISeq$_first$arity$1(null)), a = a.cljs$core$INext$_next$arity$1(null);
        } else {
          break a;
        }
      }
    }
  }
  a = b.length;
  for (var c = cljs.core.List.EMPTY;;) {
    if (0 < a) {
      var d = a - 1;
      c = c.cljs$core$ICollection$_conj$arity$2(null, b[a - 1]);
      a = d;
    } else {
      return c;
    }
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.Cons = function(a, b, c, d) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Cons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Cons.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Cons(this.meta, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.rest ? null : cljs.core.seq(this.rest);
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null == this.rest ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Cons(b, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.Cons(null, b, this, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Cons.cljs$lang$type = !0;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function(a, b, c, d) {
  return new cljs.core.Cons(a, b, c, d);
};
var G__10520_10523 = cljs.core.Cons.prototype, G__10521_10524 = cljs.core.ITER_SYMBOL, G__10522_10525 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10520_10523, G__10521_10524);
goog.object.set(G__10520_10523, G__10521_10524, G__10522_10525);
cljs.core.cons = function(a, b) {
  return null == b || null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? new cljs.core.Cons(null, a, b, null) : new cljs.core.Cons(null, a, cljs.core.seq(b), null);
};
cljs.core.hash_keyword = function(a) {
  return cljs.core.hash_symbol(a) + 2654435769 | 0;
};
cljs.core.compare_keywords = function(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  }
  if (cljs.core.truth_(function() {
    var c = cljs.core.not(a.ns);
    return c ? b.ns : c;
  }())) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    var c = goog.array.defaultCompare(a.ns, b.ns);
    return 0 === c ? goog.array.defaultCompare(a.name, b.name) : c;
  }
  return goog.array.defaultCompare(a.name, b.name);
};
cljs.core.Keyword = function(a, b, c, d) {
  this.ns = a;
  this.name = b;
  this.fqn = c;
  this._hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Keyword ? this.fqn === b.fqn : !1;
};
cljs.core.Keyword.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, this);
  }, c = function(a, b, c) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, this, c);
  };
  a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Keyword.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_keyword(this);
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Keyword.cljs$lang$type = !0;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function(a, b, c, d) {
  return new cljs.core.Keyword(a, b, c, d);
};
cljs.core.keyword_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Keyword && b instanceof cljs.core.Keyword ? a.fqn === b.fqn : !1;
};
cljs.core.symbol_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Symbol && b instanceof cljs.core.Symbol ? a.str === b.str : !1;
};
cljs.core.namespace = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_namespace$arity$1(null);
  }
  throw Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.ident_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function(a) {
  return cljs.core.ident_QMARK_(a) && null == cljs.core.namespace(a);
};
cljs.core.qualified_ident_QMARK_ = function(a) {
  return cljs.core.boolean$(function() {
    var b = cljs.core.ident_QMARK_(a);
    return b ? (b = cljs.core.namespace(a), cljs.core.truth_(b) ? !0 : b) : b;
  }());
};
cljs.core.simple_symbol_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol && null == cljs.core.namespace(a);
};
cljs.core.qualified_symbol_QMARK_ = function(a) {
  return cljs.core.boolean$(function() {
    var b = a instanceof cljs.core.Symbol;
    return b ? (b = cljs.core.namespace(a), cljs.core.truth_(b) ? !0 : b) : b;
  }());
};
cljs.core.simple_keyword_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword && null == cljs.core.namespace(a);
};
cljs.core.qualified_keyword_QMARK_ = function(a) {
  return cljs.core.boolean$(function() {
    var b = a instanceof cljs.core.Keyword;
    return b ? (b = cljs.core.namespace(a), cljs.core.truth_(b) ? !0 : b) : b;
  }());
};
cljs.core.keyword = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (a instanceof cljs.core.Keyword) {
    return a;
  }
  if (a instanceof cljs.core.Symbol) {
    return new cljs.core.Keyword(cljs.core.namespace(a), cljs.core.name(a), a.str, null);
  }
  if ("string" === typeof a) {
    var b = a.split("/");
    return 2 === b.length ? new cljs.core.Keyword(b[0], b[1], a, null) : new cljs.core.Keyword(null, b[0], a, null);
  }
  return null;
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = a instanceof cljs.core.Keyword ? cljs.core.name(a) : a instanceof cljs.core.Symbol ? cljs.core.name(a) : a;
  b = b instanceof cljs.core.Keyword ? cljs.core.name(b) : b instanceof cljs.core.Symbol ? cljs.core.name(b) : b;
  return new cljs.core.Keyword(a, b, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(a) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "/"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(a, b, c, d) {
  this.meta = a;
  this.fn = b;
  this.s = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.LazySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.LazySeq.prototype.sval = function() {
  null != this.fn && (this.s = this.fn.cljs$core$IFn$_invoke$arity$0 ? this.fn.cljs$core$IFn$_invoke$arity$0() : this.fn.call(null), this.fn = null);
  return this.s;
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null == this.s ? null : cljs.core.next(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return cljs.core.not(this.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null == this.s ? null : cljs.core.first(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null != this.s ? cljs.core.rest(this.s) : cljs.core.List.EMPTY;
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  this.sval();
  if (null == this.s) {
    return null;
  }
  for (a = this.s;;) {
    if (a instanceof cljs.core.LazySeq) {
      a = a.sval();
    } else {
      return this.s = a, cljs.core.seq(this.s);
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(b, function(a) {
    return function() {
      return a.cljs$core$ISeqable$_seq$arity$1(null);
    };
  }(this), null, this.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = !0;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function(a, b, c, d) {
  return new cljs.core.LazySeq(a, b, c, d);
};
var G__10543_10546 = cljs.core.LazySeq.prototype, G__10544_10547 = cljs.core.ITER_SYMBOL, G__10545_10548 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10543_10546, G__10544_10547);
goog.object.set(G__10543_10546, G__10544_10547, G__10545_10548);
cljs.core.ChunkBuffer = function(a, b) {
  this.buf = a;
  this.end = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(a) {
  this.buf[this.end] = a;
  return this.end += 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var a = new cljs.core.ArrayChunk(this.buf, 0, this.end);
  this.buf = null;
  return a;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = !0;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function(a, b) {
  return new cljs.core.ChunkBuffer(a, b);
};
cljs.core.chunk_buffer = function(a) {
  return new cljs.core.ChunkBuffer(Array(a), 0);
};
cljs.core.ArrayChunk = function(a, b, c) {
  this.arr = a;
  this.off = b;
  this.end = c;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return this.arr[this.off + b];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.end - this.off ? this.arr[this.off + b] : c;
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(a) {
  if (this.off === this.end) {
    throw Error("-drop-first of empty chunk");
  }
  return new cljs.core.ArrayChunk(this.arr, this.off + 1, this.end);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.off], this.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = !0;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.ArrayChunk(a, 0, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.ArrayChunk(a, b, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(a, b, c, d) {
  this.chunk = a;
  this.more = b;
  this.meta = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedCons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  if (1 < cljs.core._count(this.chunk)) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, this.meta, null);
  }
  a = cljs.core._seq(this.more);
  return null == a ? null : a;
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 < cljs.core._count(this.chunk) ? new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, this.meta, null) : null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return this.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  return null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ChunkedCons(this.chunk, this.more, b, this.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  return null == this.more ? null : this.more;
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = !0;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function(a, b, c, d) {
  return new cljs.core.ChunkedCons(a, b, c, d);
};
var G__10554_10557 = cljs.core.ChunkedCons.prototype, G__10555_10558 = cljs.core.ITER_SYMBOL, G__10556_10559 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10554_10557, G__10555_10558);
goog.object.set(G__10554_10557, G__10555_10558, G__10556_10559);
cljs.core.chunk_cons = function(a, b) {
  return 0 === cljs.core._count(a) ? b : new cljs.core.ChunkedCons(a, b, null, null);
};
cljs.core.chunk_append = function(a, b) {
  return a.add(b);
};
cljs.core.chunk = function(a) {
  return a.chunk();
};
cljs.core.chunk_first = function(a) {
  return cljs.core._chunked_first(a);
};
cljs.core.chunk_rest = function(a) {
  return cljs.core._chunked_rest(a);
};
cljs.core.chunk_next = function(a) {
  return null != a && (a.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IChunkedNext$) ? cljs.core._chunked_next(a) : cljs.core.seq(cljs.core._chunked_rest(a));
};
cljs.core.to_array = function(a) {
  var b = [];
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b.push(cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.to_array_2d = function(a) {
  var b = Array(cljs.core.count(a)), c = 0;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b[c] = cljs.core.to_array(cljs.core.first(a)), c += 1, a = cljs.core.next(a);
    } else {
      break;
    }
  }
  return b;
};
cljs.core.int_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function(a, b) {
  if (cljs.core.counted_QMARK_(b)) {
    return cljs.core.count(b);
  }
  var c = 0;
  for (b = cljs.core.seq(b);;) {
    if (null != b && c < a) {
      c += 1, b = cljs.core.next(b);
    } else {
      return c;
    }
  }
};
cljs.core.spread = function(a) {
  if (null == a) {
    return null;
  }
  var b = cljs.core.next(a);
  return null == b ? cljs.core.seq(cljs.core.first(a)) : cljs.core.cons(cljs.core.first(a), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.spread.call(null, b));
};
cljs.core.concat = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a);
    return c ? cljs.core.chunked_seq_QMARK_(c) ? cljs.core.chunk_cons(cljs.core.chunk_first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(c), b)) : cljs.core.cons(cljs.core.first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), b)) : b;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return function g(a, b) {
    return new cljs.core.LazySeq(null, function() {
      var c = cljs.core.seq(a);
      return c ? cljs.core.chunked_seq_QMARK_(c) ? cljs.core.chunk_cons(cljs.core.chunk_first(c), g(cljs.core.chunk_rest(c), b)) : cljs.core.cons(cljs.core.first(c), g(cljs.core.rest(c), b)) : cljs.core.truth_(b) ? g(cljs.core.first(b), cljs.core.next(b)) : null;
    }, null, null);
  }(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.concat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq(a);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.cons(a, b);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.cons(a, cljs.core.cons(b, c));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, d)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(e)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function(a) {
  return cljs.core._as_transient(a);
};
cljs.core.persistent_BANG_ = function(a) {
  return cljs.core._persistent_BANG_(a);
};
cljs.core.conj_BANG_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._conj_BANG_(a, b);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._conj_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core._assoc_BANG_(a, b, c);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core._assoc_BANG_(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._dissoc_BANG_(a, b);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._dissoc_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function(a) {
  return cljs.core._pop_BANG_(a);
};
cljs.core.disj_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._disjoin_BANG_(a, b);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._disjoin_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function(a, b, c) {
  var d = cljs.core.seq(c);
  if (0 === b) {
    return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
  }
  c = cljs.core._first(d);
  var e = cljs.core._rest(d);
  if (1 === b) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
  }
  d = cljs.core._first(e);
  var f = cljs.core._rest(e);
  if (2 === b) {
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
  }
  e = cljs.core._first(f);
  var g = cljs.core._rest(f);
  if (3 === b) {
    return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e);
  }
  f = cljs.core._first(g);
  var h = cljs.core._rest(g);
  if (4 === b) {
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(c, d, e, f) : a.call(null, c, d, e, f);
  }
  g = cljs.core._first(h);
  var k = cljs.core._rest(h);
  if (5 === b) {
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g) : a.call(null, c, d, e, f, g);
  }
  h = cljs.core._first(k);
  var l = cljs.core._rest(k);
  if (6 === b) {
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(c, d, e, f, g, h) : a.call(null, c, d, e, f, g, h);
  }
  k = cljs.core._first(l);
  var m = cljs.core._rest(l);
  if (7 === b) {
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(c, d, e, f, g, h, k) : a.call(null, c, d, e, f, g, h, k);
  }
  l = cljs.core._first(m);
  var n = cljs.core._rest(m);
  if (8 === b) {
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(c, d, e, f, g, h, k, l) : a.call(null, c, d, e, f, g, h, k, l);
  }
  m = cljs.core._first(n);
  var p = cljs.core._rest(n);
  if (9 === b) {
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(c, d, e, f, g, h, k, l, m) : a.call(null, c, d, e, f, g, h, k, l, m);
  }
  n = cljs.core._first(p);
  var q = cljs.core._rest(p);
  if (10 === b) {
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(c, d, e, f, g, h, k, l, m, n) : a.call(null, c, d, e, f, g, h, k, l, m, n);
  }
  p = cljs.core._first(q);
  var r = cljs.core._rest(q);
  if (11 === b) {
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(c, d, e, f, g, h, k, l, m, n, p) : a.call(null, c, d, e, f, g, h, k, l, m, n, p);
  }
  q = cljs.core._first(r);
  var t = cljs.core._rest(r);
  if (12 === b) {
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(c, d, e, f, g, h, k, l, m, n, p, q) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  r = cljs.core._first(t);
  var u = cljs.core._rest(t);
  if (13 === b) {
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(c, d, e, f, g, h, k, l, m, n, p, q, r) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  t = cljs.core._first(u);
  var v = cljs.core._rest(u);
  if (14 === b) {
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(c, d, e, f, g, h, k, l, m, n, p, q, r, t) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  u = cljs.core._first(v);
  var w = cljs.core._rest(v);
  if (15 === b) {
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
  }
  v = cljs.core._first(w);
  var x = cljs.core._rest(w);
  if (16 === b) {
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  }
  w = cljs.core._first(x);
  var y = cljs.core._rest(x);
  if (17 === b) {
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
  }
  x = cljs.core._first(y);
  var z = cljs.core._rest(y);
  if (18 === b) {
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
  }
  y = cljs.core._first(z);
  z = cljs.core._rest(z);
  if (19 === b) {
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y);
  }
  var F = cljs.core._first(z);
  cljs.core._rest(z);
  if (20 === b) {
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, F) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, F);
  }
  throw Error("Only up to 20 arguments supported on functions");
};
cljs.core.apply_to_simple = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == b ? a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(a) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(a, cljs.core._first(b), cljs.core.next(b));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null == c ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(a, b) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(a, b, cljs.core._first(c), cljs.core.next(c));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return null == d ? a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(a, b, c) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(a, b, c, cljs.core._first(d), cljs.core.next(d));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return null == e ? a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(a, b, c, d) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(a, b, c, d, cljs.core._first(e), cljs.core.next(e));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  if (null == f) {
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(a, b, c, d, e);
  }
  var g = cljs.core._first(f), h = cljs.core.next(f);
  if (null == h) {
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, g) : a.call(a, b, c, d, e, g);
  }
  f = cljs.core._first(h);
  var k = cljs.core.next(h);
  if (null == k) {
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, g, f) : a.call(a, b, c, d, e, g, f);
  }
  h = cljs.core._first(k);
  var l = cljs.core.next(k);
  if (null == l) {
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(b, c, d, e, g, f, h) : a.call(a, b, c, d, e, g, f, h);
  }
  k = cljs.core._first(l);
  var m = cljs.core.next(l);
  if (null == m) {
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(b, c, d, e, g, f, h, k) : a.call(a, b, c, d, e, g, f, h, k);
  }
  l = cljs.core._first(m);
  var n = cljs.core.next(m);
  if (null == n) {
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(b, c, d, e, g, f, h, k, l) : a.call(a, b, c, d, e, g, f, h, k, l);
  }
  m = cljs.core._first(n);
  var p = cljs.core.next(n);
  if (null == p) {
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(b, c, d, e, g, f, h, k, l, m) : a.call(a, b, c, d, e, g, f, h, k, l, m);
  }
  n = cljs.core._first(p);
  var q = cljs.core.next(p);
  if (null == q) {
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(b, c, d, e, g, f, h, k, l, m, n) : a.call(a, b, c, d, e, g, f, h, k, l, m, n);
  }
  p = cljs.core._first(q);
  var r = cljs.core.next(q);
  if (null == r) {
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(b, c, d, e, g, f, h, k, l, m, n, p) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p);
  }
  q = cljs.core._first(r);
  var t = cljs.core.next(r);
  if (null == t) {
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(b, c, d, e, g, f, h, k, l, m, n, p, q) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q);
  }
  r = cljs.core._first(t);
  var u = cljs.core.next(t);
  if (null == u) {
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(b, c, d, e, g, f, h, k, l, m, n, p, q, r) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r);
  }
  t = cljs.core._first(u);
  var v = cljs.core.next(u);
  if (null == v) {
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t);
  }
  u = cljs.core._first(v);
  var w = cljs.core.next(v);
  if (null == w) {
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u);
  }
  v = cljs.core._first(w);
  var x = cljs.core.next(w);
  if (null == x) {
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v);
  }
  w = cljs.core._first(x);
  var y = cljs.core.next(x);
  if (null == y) {
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v, w) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v, w);
  }
  x = cljs.core._first(y);
  var z = cljs.core.next(y);
  if (null == z) {
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v, w, x) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v, w, x);
  }
  y = cljs.core._first(z);
  z = cljs.core.next(z);
  if (null == z) {
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v, w, x, y) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v, w, x, y);
  }
  b = [b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, u, v, w, x, y];
  for (c = z;;) {
    if (c) {
      b.push(cljs.core._first(c)), c = cljs.core.next(c);
    } else {
      break;
    }
  }
  return a.apply(a, b);
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], b);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (a.cljs$lang$applyTo) {
    var c = a.cljs$lang$maxFixedArity, d = cljs.core.bounded_count(c + 1, b);
    return d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b);
  }
  return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(a, cljs.core.seq(b));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (a.cljs$lang$applyTo) {
    b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(b, c);
    var d = a.cljs$lang$maxFixedArity;
    c = cljs.core.bounded_count(d, c) + 1;
    return c <= d ? cljs.core.apply_to(a, c, b) : a.cljs$lang$applyTo(b);
  }
  return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.seq(c));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a.cljs$lang$applyTo ? (b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(b, c, d), c = a.cljs$lang$maxFixedArity, d = 2 + cljs.core.bounded_count(c - 1, d), d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(a, b, c, cljs.core.seq(d));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return a.cljs$lang$applyTo ? (b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(b, c, d, e), c = a.cljs$lang$maxFixedArity, e = 3 + cljs.core.bounded_count(c - 2, e), e <= c ? cljs.core.apply_to(a, e, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(a, b, c, d, cljs.core.seq(e));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f) {
  return a.cljs$lang$applyTo ? (f = cljs.core.spread(f), b = cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.cons(e, f)))), c = a.cljs$lang$maxFixedArity, f = 4 + cljs.core.bounded_count(c - 3, f), f <= c ? cljs.core.apply_to(a, f, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, cljs.core.spread(f));
};
cljs.core.apply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  f = cljs.core.next(f);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.with_meta(a, function() {
    var c = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.with_meta(a, function() {
    var d = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.with_meta(a, function() {
    var e = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.with_meta(a, function() {
    var f = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$4 ? b.cljs$core$IFn$_invoke$arity$4(f, c, d, e) : b.call(null, f, c, d, e);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.with_meta(a, function() {
    var g = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$5 ? b.cljs$core$IFn$_invoke$arity$5(g, c, d, e, f) : b.call(null, g, c, d, e, f);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.with_meta(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.meta(a), c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !1;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, a, b, c));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function(a) {
  return cljs.core.seq(a) ? a : null;
};
cljs.core.nil_iter = function() {
  "undefined" === typeof cljs.core.t_cljs$core10724 && (cljs.core.t_cljs$core10724 = function(a) {
    this.meta10725 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.t_cljs$core10724.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.t_cljs$core10724(b);
  }, cljs.core.t_cljs$core10724.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta10725;
  }, cljs.core.t_cljs$core10724.prototype.hasNext = function() {
    return !1;
  }, cljs.core.t_cljs$core10724.prototype.next = function() {
    return Error("No such element");
  }, cljs.core.t_cljs$core10724.prototype.remove = function() {
    return Error("Unsupported operation");
  }, cljs.core.t_cljs$core10724.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta10725", "meta10725", -1929649627, null)], null);
  }, cljs.core.t_cljs$core10724.cljs$lang$type = !0, cljs.core.t_cljs$core10724.cljs$lang$ctorStr = "cljs.core/t_cljs$core10724", cljs.core.t_cljs$core10724.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write(b, "cljs.core/t_cljs$core10724");
  }, cljs.core.__GT_t_cljs$core10724 = function(a) {
    return new cljs.core.t_cljs$core10724(a);
  });
  return new cljs.core.t_cljs$core10724(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(a, b) {
  this.s = a;
  this.i = b;
};
cljs.core.StringIter.prototype.hasNext = function() {
  return this.i < this.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var a = this.s.charAt(this.i);
  this.i += 1;
  return a;
};
cljs.core.StringIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.StringIter.cljs$lang$type = !0;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function(a, b) {
  return new cljs.core.StringIter(a, b);
};
cljs.core.string_iter = function(a) {
  return new cljs.core.StringIter(a, 0);
};
cljs.core.ArrayIter = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.ArrayIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = !0;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function(a, b) {
  return new cljs.core.ArrayIter(a, b);
};
cljs.core.array_iter = function(a) {
  return new cljs.core.ArrayIter(a, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(a, b) {
  this._seq = a;
  this._next = b;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  this._seq === cljs.core.INIT ? (this._seq = cljs.core.START, this._next = cljs.core.seq(this._next)) : this._seq === this._next && (this._next = cljs.core.next(this._seq));
  return null != this._next;
};
cljs.core.SeqIter.prototype.next = function() {
  if (this.hasNext()) {
    return this._seq = this._next, cljs.core.first(this._next);
  }
  throw Error("No such element");
};
cljs.core.SeqIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = !0;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function(a, b) {
  return new cljs.core.SeqIter(a, b);
};
cljs.core.seq_iter = function(a) {
  return new cljs.core.SeqIter(cljs.core.INIT, a);
};
cljs.core.iter = function(a) {
  if (cljs.core.iterable_QMARK_(a)) {
    return cljs.core._iterator(a);
  }
  if (null == a) {
    return cljs.core.nil_iter();
  }
  if ("string" === typeof a) {
    return cljs.core.string_iter(a);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.array_iter(a);
  }
  if (cljs.core.seqable_QMARK_(a)) {
    return cljs.core.seq_iter(a);
  }
  throw Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.Many = function(a) {
  this.vals = a;
};
cljs.core.Many.prototype.add = function(a) {
  this.vals.push(a);
  return this;
};
cljs.core.Many.prototype.remove = function() {
  return this.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  return 0 === this.vals.length;
};
cljs.core.Many.prototype.toString = function() {
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = !0;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Many");
};
cljs.core.__GT_Many = function(a) {
  return new cljs.core.Many(a);
};
cljs.core.NONE = {};
cljs.core.Single = function(a) {
  this.val = a;
};
cljs.core.Single.prototype.add = function(a) {
  return this.val === cljs.core.NONE ? (this.val = a, this) : new cljs.core.Many([this.val, a]);
};
cljs.core.Single.prototype.remove = function() {
  if (this.val === cljs.core.NONE) {
    throw Error("Removing object from empty buffer");
  }
  var a = this.val;
  this.val = cljs.core.NONE;
  return a;
};
cljs.core.Single.prototype.isEmpty = function() {
  return this.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Single.cljs$lang$type = !0;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Single");
};
cljs.core.__GT_Single = function(a) {
  return new cljs.core.Single(a);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(a) {
  return new cljs.core.Single(a);
};
cljs.core.Empty.prototype.remove = function() {
  throw Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  return !0;
};
cljs.core.Empty.prototype.toString = function() {
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = !0;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(a) {
  this.iters = a;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  for (var a = cljs.core.seq(this.iters);;) {
    if (null != a) {
      if (cljs.core.first(a).hasNext()) {
        a = cljs.core.next(a);
      } else {
        return !1;
      }
    } else {
      return !0;
    }
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  for (var a = [], b = this.iters.length, c = 0;;) {
    if (c < b) {
      a[c] = this.iters[c].next(), c += 1;
    } else {
      break;
    }
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = !0;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function(a) {
  return new cljs.core.MultiIterator(a);
};
cljs.core.chunkIteratorSeq = function(a) {
  return new cljs.core.LazySeq(null, function() {
    if (a.hasNext()) {
      for (var b = [], c = 0;;) {
        if (cljs.core.truth_(function() {
          var b = a.hasNext();
          return cljs.core.truth_(b) ? 32 > c : b;
        }())) {
          b[c] = a.next(), c += 1;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(b, 0, c), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.chunkIteratorSeq.call(null, a));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(a, b, c, d, e, f) {
  this.buffer = a;
  this._next = b;
  this.completed = c;
  this.xf = d;
  this.sourceIter = e;
  this.multi = f;
};
cljs.core.TransformerIterator.prototype.step = function() {
  if (this._next !== cljs.core.NONE) {
    return !0;
  }
  for (;;) {
    if (this._next === cljs.core.NONE) {
      if (this.buffer.isEmpty()) {
        if (this.completed) {
          return !1;
        }
        if (this.sourceIter.hasNext()) {
          if (this.multi) {
            var a = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(this.xf, cljs.core.cons(null, this.sourceIter.next()));
          } else {
            a = this.sourceIter.next(), a = this.xf.cljs$core$IFn$_invoke$arity$2 ? this.xf.cljs$core$IFn$_invoke$arity$2(null, a) : this.xf.call(null, null, a);
          }
          cljs.core.reduced_QMARK_(a) && (this.xf.cljs$core$IFn$_invoke$arity$1 ? this.xf.cljs$core$IFn$_invoke$arity$1(null) : this.xf.call(null, null), this.completed = !0);
        } else {
          this.xf.cljs$core$IFn$_invoke$arity$1 ? this.xf.cljs$core$IFn$_invoke$arity$1(null) : this.xf.call(null, null), this.completed = !0;
        }
      } else {
        this._next = this.buffer.remove();
      }
    } else {
      return !0;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  return this.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  if (this.hasNext()) {
    var a = this._next;
    this._next = cljs.core.NONE;
    return a;
  }
  throw Error("No such element");
};
cljs.core.TransformerIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = !0;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function(a, b, c, d, e, f) {
  return new cljs.core.TransformerIterator(a, b, c, d, e, f);
};
var G__10734_10737 = cljs.core.TransformerIterator.prototype, G__10735_10738 = cljs.core.ITER_SYMBOL, G__10736_10739 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__10734_10737, G__10735_10738);
goog.object.set(G__10734_10737, G__10735_10738, G__10736_10739);
cljs.core.transformer_iterator = function(a, b, c) {
  var d = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, !1, null, b, c);
  d.xf = function() {
    var b = function(a) {
      return function() {
        var b = null, c = function(b, c) {
          a.buffer = a.buffer.add(c);
          return b;
        };
        b = function(a, b) {
          switch(arguments.length) {
            case 0:
              return null;
            case 1:
              return a;
            case 2:
              return c.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        b.cljs$core$IFn$_invoke$arity$0 = function() {
          return null;
        };
        b.cljs$core$IFn$_invoke$arity$1 = function(a) {
          return a;
        };
        b.cljs$core$IFn$_invoke$arity$2 = c;
        return b;
      }();
    }(d);
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  }();
  return d;
};
cljs.core.TransformerIterator.create = function(a, b) {
  return cljs.core.transformer_iterator(a, b, !1);
};
cljs.core.TransformerIterator.createMulti = function(a, b) {
  return cljs.core.transformer_iterator(a, new cljs.core.MultiIterator(cljs.core.to_array(b)), !0);
};
cljs.core.sequence = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq_QMARK_(a) ? a : (a = cljs.core.seq(a)) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(a, cljs.core.iter(b)));
  return cljs.core.truth_(a) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(a, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(b, c))));
  return cljs.core.truth_(a) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function(a, b) {
  for (;;) {
    if (null == cljs.core.seq(b)) {
      return !0;
    }
    if (cljs.core.truth_(function() {
      var c = cljs.core.first(b);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }())) {
      var c = a, d = cljs.core.next(b);
      a = c;
      b = d;
    } else {
      return !1;
    }
  }
};
cljs.core.not_every_QMARK_ = function(a, b) {
  return !cljs.core.every_QMARK_(a, b);
};
cljs.core.some = function(a, b) {
  for (;;) {
    if (cljs.core.seq(b)) {
      var c = cljs.core.first(b);
      c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(c)) {
        return c;
      }
      b = cljs.core.next(b);
    } else {
      return null;
    }
  }
};
cljs.core.not_any_QMARK_ = function(a, b) {
  return cljs.core.not(cljs.core.some(a, b));
};
cljs.core.even_QMARK_ = function(a) {
  if (cljs.core.integer_QMARK_(a)) {
    return 0 === (a & 1);
  }
  throw Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.odd_QMARK_ = function(a) {
  return !cljs.core.even_QMARK_(a);
};
cljs.core.complement = function(a) {
  return function() {
    var b = null, c = function() {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null));
    }, d = function(b) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
    }, e = function(b, c) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c));
    }, f = function() {
      var b = function(b, c, d) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
      }, c = function(a, c, d) {
        var e = null;
        if (2 < arguments.length) {
          e = 0;
          for (var f = Array(arguments.length - 2); e < f.length;) {
            f[e] = arguments[e + 2], ++e;
          }
          e = new cljs.core.IndexedSeq(f, 0, null);
        }
        return b.call(this, a, c, e);
      };
      c.cljs$lang$maxFixedArity = 2;
      c.cljs$lang$applyTo = function(a) {
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return b(c, d, a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
    b = function(a, b, k) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        default:
          var g = null;
          if (2 < arguments.length) {
            g = 0;
            for (var h = Array(arguments.length - 2); g < h.length;) {
              h[g] = arguments[g + 2], ++g;
            }
            g = new cljs.core.IndexedSeq(h, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, g);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 2;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.constantly = function(a) {
  return function() {
    var b = function(b) {
      if (0 < arguments.length) {
        for (var c = 0, e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        new cljs.core.IndexedSeq(e, 0, null);
      }
      return a;
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      cljs.core.seq(b);
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$variadic = function(b) {
      return a;
    };
    return b;
  }();
};
cljs.core.comp = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      var c = b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(c) {
      c = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, f = function(c, d) {
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, g = function(c, d, e) {
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, d, e) : b.call(null, c, d, e);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, h = function() {
      var c = function(c, d, e, f) {
        c = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var l = Array(arguments.length - 3); k < l.length;) {
              l[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(l, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      var d = c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, f = function(d) {
      d = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, g = function(d, e) {
      d = c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, h = function(d, e, f) {
      d = c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(d, e, f) : c.call(null, d, e, f);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, k = function() {
      var d = function(d, e, f, g) {
        d = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g);
        d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var l = null;
          if (3 < arguments.length) {
            l = 0;
            for (var m = Array(arguments.length - 3); l < m.length;) {
              m[l] = arguments[l + 3], ++l;
            }
            l = new cljs.core.IndexedSeq(m, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, l);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = function(b) {
        b = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), b);
        for (var c = cljs.core.next(a);;) {
          if (c) {
            var d = cljs.core.first(c);
            b = d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b);
            c = cljs.core.next(c);
          } else {
            return b;
          }
        }
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d)));
};
cljs.core.comp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }, e = function(c) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, f = function(c, d) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(c, d, e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function() {
      var c = function(c, d, e, f) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0));
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var l = Array(arguments.length - 3); k < l.length;) {
              l[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(l, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, f = function(d) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(d, e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function(d, e, f) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
    }, k = function() {
      var d = function(d, e, f, g) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g], 0));
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var l = null;
          if (3 < arguments.length) {
            l = 0;
            for (var m = Array(arguments.length - 3); l < m.length;) {
              m[l] = arguments[l + 3], ++l;
            }
            l = new cljs.core.IndexedSeq(m, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, l);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function() {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function(e, f) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
    }, k = function(e, f, g) {
      return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.call(null, b, c, d, e, f, g);
    }, l = function() {
      var e = function(e, f, g, h) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h], 0));
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    e = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return f.call(this);
        case 1:
          return g.call(this, a);
        case 2:
          return h.call(this, a, b);
        case 3:
          return k.call(this, a, b, c);
        default:
          var e = null;
          if (3 < arguments.length) {
            e = 0;
            for (var m = Array(arguments.length - 3); e < m.length;) {
              m[e] = arguments[e + 3], ++e;
            }
            e = new cljs.core.IndexedSeq(m, 0, null);
          }
          return l.cljs$core$IFn$_invoke$arity$variadic(a, b, c, e);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = l.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$0 = f;
    e.cljs$core$IFn$_invoke$arity$1 = g;
    e.cljs$core$IFn$_invoke$arity$2 = h;
    e.cljs$core$IFn$_invoke$arity$3 = k;
    e.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return function() {
    var f = function(f) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, b, c, d, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(e, f));
    }, g = function(a) {
      var b = null;
      if (0 < arguments.length) {
        b = 0;
        for (var c = Array(arguments.length - 0); b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new cljs.core.IndexedSeq(c, 0, null);
      }
      return f.call(this, b);
    };
    g.cljs$lang$maxFixedArity = 0;
    g.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return f(a);
    };
    g.cljs$core$IFn$_invoke$arity$variadic = f;
    return g;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      c = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(c, d) {
      c = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
    }, f = function(c, d, e) {
      c = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e);
    }, g = function() {
      var c = function(c, d, e, f) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == c ? b : c, d, e, f);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, m) {
      switch(arguments.length) {
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d, e) {
      d = null == d ? b : d;
      e = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e);
    }, f = function(d, e, f) {
      d = null == d ? b : d;
      e = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(d, e, f) : a.call(null, d, e, f);
    }, g = function() {
      var d = function(d, e, f, g) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == d ? b : d, null == e ? c : e, f, g);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = g.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$2 = e;
    d.cljs$core$IFn$_invoke$arity$3 = f;
    d.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function(d, e) {
      d = null == d ? b : d;
      e = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e);
    }, g = function(e, f, g) {
      e = null == e ? b : e;
      f = null == f ? c : f;
      g = null == g ? d : g;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(e, f, g) : a.call(null, e, f, g);
    }, h = function() {
      var e = function(e, f, g, h) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == e ? b : e, null == f ? c : f, null == g ? d : g, h);
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    e = function(a, b, c, d) {
      switch(arguments.length) {
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var e = null;
          if (3 < arguments.length) {
            e = 0;
            for (var k = Array(arguments.length - 3); e < k.length;) {
              k[e] = arguments[e + 3], ++e;
            }
            e = new cljs.core.IndexedSeq(k, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, e);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = h.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$2 = f;
    e.cljs$core$IFn$_invoke$arity$3 = g;
    e.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          e = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, e) : a.call(null, f, e);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function f(b, e) {
    return new cljs.core.LazySeq(null, function() {
      var d = cljs.core.seq(e);
      if (d) {
        if (cljs.core.chunked_seq_QMARK_(d)) {
          for (var h = cljs.core.chunk_first(d), k = cljs.core.count(h), l = cljs.core.chunk_buffer(k), m = 0;;) {
            if (m < k) {
              cljs.core.chunk_append(l, function() {
                var d = b + m, e = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, m);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e);
              }()), m += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(l), f(b + k, cljs.core.chunk_rest(d)));
        }
        return cljs.core.cons(function() {
          var e = cljs.core.first(d);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, e) : a.call(null, b, e);
        }(), f(b + 1, cljs.core.rest(d)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return null == d ? c : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            var h = function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }();
            null != h && cljs.core.chunk_append(f, h);
            g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      e = function() {
        var b = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }();
      return null == e ? cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)) : cljs.core.cons(e, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(a, b, c, d) {
  this.state = a;
  this.meta = b;
  this.validator = c;
  this.watches = d;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return this === b;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(a, b, c) {
  a = cljs.core.seq(this.watches);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null);
      g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null);
      g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        cljs.core.chunked_seq_QMARK_(a) ? (d = cljs.core.chunk_first(a), a = cljs.core.chunk_rest(a), h = d, e = cljs.core.count(d), d = h) : (d = cljs.core.first(a), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null), g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c), a = cljs.core.next(a), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(a, b, c) {
  this.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.watches, b, c);
  return this;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(a, b) {
  return this.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.watches, b);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = !0;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function(a, b, c, d) {
  return new cljs.core.Atom(a, b, c, d);
};
cljs.core.atom = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.Atom(a, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, b) : b;
  b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(a, b, c, null);
};
cljs.core.atom.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function(a, b) {
  if (a instanceof cljs.core.Atom) {
    var c = a.validator;
    if (null != c && !cljs.core.truth_(c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b))) {
      throw Error("Validator rejected reference state");
    }
    c = a.state;
    a.state = b;
    null != a.watches && cljs.core._notify_watches(a, c, b);
    return b;
  }
  return cljs.core._reset_BANG_(a, b);
};
cljs.core.reset_vals_BANG_ = function(a, b) {
  var c = a.validator;
  if (null != c && !cljs.core.truth_(c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b))) {
    throw Error("Validator rejected reference state");
  }
  c = a.state;
  a.state = b;
  null != a.watches && cljs.core._notify_watches(a, c, b);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
};
cljs.core.swap_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var c = a.state;
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var d = a.state;
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var e = a.state;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, a.state, c, d, e)) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var c = a.state;
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var d = a.state;
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var e = a.state;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, a.state, c, d, e));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function(a, b, c) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), b) ? (cljs.core.reset_BANG_(a, c), !0) : !1;
};
cljs.core.set_validator_BANG_ = function(a, b) {
  if (null != b && cljs.core.not(function() {
    var c = cljs.core._deref(a);
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }())) {
    throw Error("Validator rejected reference state");
  }
  return a.validator = b;
};
cljs.core.get_validator = function(a) {
  return a.validator;
};
cljs.core.Volatile = function(a) {
  this.state = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(a, b) {
  return this.state = b;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Volatile.cljs$lang$type = !0;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_BANG_ = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_QMARK_ = function(a) {
  return a instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function(a, b) {
  return cljs.core._vreset_BANG_(a, b);
};
cljs.core.keep_indexed = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          e = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, e) : a.call(null, f, e);
          return null == e ? d : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function f(b, e) {
    return new cljs.core.LazySeq(null, function() {
      var d = cljs.core.seq(e);
      if (d) {
        if (cljs.core.chunked_seq_QMARK_(d)) {
          for (var h = cljs.core.chunk_first(d), k = cljs.core.count(h), l = cljs.core.chunk_buffer(k), m = 0;;) {
            if (m < k) {
              var n = function() {
                var d = b + m, e = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, m);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e);
              }();
              null != n && cljs.core.chunk_append(l, n);
              m += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(l), f(b + k, cljs.core.chunk_rest(d)));
        }
        k = function() {
          var e = cljs.core.first(d);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, e) : a.call(null, b, e);
        }();
        return null == k ? f(b + 1, cljs.core.rest(d)) : cljs.core.cons(k, f(b + 1, cljs.core.rest(d)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(b) {
      return cljs.core.boolean$(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
    }, d = function(b, c) {
      return cljs.core.boolean$(function() {
        var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        return cljs.core.truth_(d) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c) : d;
      }());
    }, e = function(b, c, d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        return cljs.core.truth_(e) ? (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), cljs.core.truth_(e) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d) : e) : e;
      }());
    }, f = function() {
      var c = function(c, d, e, f) {
        return cljs.core.boolean$(function() {
          var g = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
          return cljs.core.truth_(g) ? cljs.core.every_QMARK_(a, f) : g;
        }());
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    b = function(a, b, k, l) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return c.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return e.call(this, a, b, k);
        default:
          var g = null;
          if (3 < arguments.length) {
            g = 0;
            for (var h = Array(arguments.length - 3); g < h.length;) {
              h[g] = arguments[g + 3], ++g;
            }
            g = new cljs.core.IndexedSeq(h, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, k, g);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      return cljs.core.boolean$(function() {
        var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(d) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c) : d;
      }());
    }, e = function(c, d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(e) && (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), cljs.core.truth_(e)) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c), cljs.core.truth_(e) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d) : e) : e;
      }());
    }, f = function(c, d, e) {
      return cljs.core.boolean$(function() {
        var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(f) && (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c), cljs.core.truth_(f)))) ? (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(f) ? 
        b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e) : f) : f;
      }());
    }, g = function() {
      var d = function(d, e, f, g) {
        return cljs.core.boolean$(function() {
          var h = c.cljs$core$IFn$_invoke$arity$3(d, e, f);
          return cljs.core.truth_(h) ? cljs.core.every_QMARK_(function(c) {
            return function(c) {
              var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
              return cljs.core.truth_(d) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c) : d;
            };
          }(h), g) : h;
        }());
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    c = function(a, b, c, m) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(e) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(e) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d) : e) : e;
      }());
    }, f = function(d, e) {
      return cljs.core.boolean$(function() {
        var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(f) && (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(f) && (f = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d), cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(f)))) ? (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), cljs.core.truth_(f) ? 
        c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e) : f) : f;
      }());
    }, g = function(d, e, f) {
      return cljs.core.boolean$(function() {
        var g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(g) && (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(g) && (g = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d), cljs.core.truth_(g) && (g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(g) && (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), cljs.core.truth_(g) && 
        (g = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e), cljs.core.truth_(g) && (g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f), cljs.core.truth_(g))))))) ? (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f), cljs.core.truth_(g) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f) : g) : g;
      }());
    }, h = function() {
      var e = function(e, f, g, h) {
        return cljs.core.boolean$(function() {
          var k = d.cljs$core$IFn$_invoke$arity$3(e, f, g);
          return cljs.core.truth_(k) ? cljs.core.every_QMARK_(function(d) {
            return function(d) {
              var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
              return cljs.core.truth_(e) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(e) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d) : e) : e;
            };
          }(k), h) : k;
        }());
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var l = Array(arguments.length - 3); k < l.length;) {
              l[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(l, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function(b) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
          };
        }(a), a);
      }, d = function(b, c) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(d) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c) : d;
          };
        }(a), a);
      }, e = function(b, c, d) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(e) ? (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), cljs.core.truth_(e) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d) : e) : e;
          };
        }(a), a);
      }, l = function() {
        var c = function(c, d, e, f) {
          return cljs.core.boolean$(function() {
            var g = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
            return cljs.core.truth_(g) ? cljs.core.every_QMARK_(function(a, b) {
              return function(a) {
                return cljs.core.every_QMARK_(a, f);
              };
            }(g, a), a) : g;
          }());
        }, d = function(a, b, d, e) {
          var f = null;
          if (3 < arguments.length) {
            f = 0;
            for (var g = Array(arguments.length - 3); f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0, null);
          }
          return c.call(this, a, b, d, f);
        };
        d.cljs$lang$maxFixedArity = 3;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, e, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }();
      b = function(a, b, f, g) {
        switch(arguments.length) {
          case 0:
            return !0;
          case 1:
            return c.call(this, a);
          case 2:
            return d.call(this, a, b);
          case 3:
            return e.call(this, a, b, f);
          default:
            var h = null;
            if (3 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 3); h < k.length;) {
                k[h] = arguments[h + 3], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return l.cljs$core$IFn$_invoke$arity$variadic(a, b, f, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = l.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = function() {
        return !0;
      };
      b.cljs$core$IFn$_invoke$arity$1 = c;
      b.cljs$core$IFn$_invoke$arity$2 = d;
      b.cljs$core$IFn$_invoke$arity$3 = e;
      b.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.every_pred.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(b) {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }, d = function(b, c) {
      b = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      return cljs.core.truth_(b) ? b : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(b, c, d) {
      b = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      if (cljs.core.truth_(b)) {
        return b;
      }
      c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      return cljs.core.truth_(c) ? c : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, f = function() {
      var c = function(c, d, e, f) {
        c = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
        return cljs.core.truth_(c) ? c : cljs.core.some(a, f);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    b = function(a, b, k, l) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return c.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return e.call(this, a, b, k);
        default:
          var g = null;
          if (3 < arguments.length) {
            g = 0;
            for (var h = Array(arguments.length - 3); g < h.length;) {
              h[g] = arguments[g + 3], ++g;
            }
            g = new cljs.core.IndexedSeq(h, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, k, g);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
    }, e = function(c, d) {
      var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(e)) {
        return e;
      }
      c = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      return cljs.core.truth_(c) ? c : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
    }, f = function(c, d, e) {
      var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(f)) {
        return f;
      }
      c = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      if (cljs.core.truth_(c)) {
        return c;
      }
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
    }, g = function() {
      var d = function(d, e, f, g) {
        d = c.cljs$core$IFn$_invoke$arity$3(d, e, f);
        return cljs.core.truth_(d) ? d : cljs.core.some(function(c) {
          return function(c) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
            return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
          };
        }(d), g);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    c = function(a, b, c, m) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d) {
      var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
    }, f = function(d, e) {
      var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      d = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
      return cljs.core.truth_(d) ? d : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e);
    }, g = function(d, e, f) {
      var g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(g)) {
        return g;
      }
      g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      if (cljs.core.truth_(g)) {
        return g;
      }
      d = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
      if (cljs.core.truth_(d)) {
        return d;
      }
      e = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f);
      return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f);
    }, h = function() {
      var e = function(e, f, g, h) {
        e = d.cljs$core$IFn$_invoke$arity$3(e, f, g);
        return cljs.core.truth_(e) ? e : cljs.core.some(function(d) {
          return function(d) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
            if (cljs.core.truth_(e)) {
              return e;
            }
            e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
            return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
          };
        }(e), h);
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var l = Array(arguments.length - 3); k < l.length;) {
              l[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(l, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function(b) {
        return cljs.core.some(function(a) {
          return function(a) {
            return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
          };
        }(a), a);
      }, d = function(b, c) {
        return cljs.core.some(function(a) {
          return function(a) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(d) ? d : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
          };
        }(a), a);
      }, e = function(b, c, d) {
        return cljs.core.some(function(a) {
          return function(a) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            if (cljs.core.truth_(e)) {
              return e;
            }
            e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
            return cljs.core.truth_(e) ? e : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
          };
        }(a), a);
      }, l = function() {
        var c = function(c, d, e, f) {
          c = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
          return cljs.core.truth_(c) ? c : cljs.core.some(function(a, b) {
            return function(a) {
              return cljs.core.some(a, f);
            };
          }(c, a), a);
        }, d = function(a, b, d, e) {
          var f = null;
          if (3 < arguments.length) {
            f = 0;
            for (var g = Array(arguments.length - 3); f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0, null);
          }
          return c.call(this, a, b, d, f);
        };
        d.cljs$lang$maxFixedArity = 3;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, e, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }();
      b = function(a, b, f, g) {
        switch(arguments.length) {
          case 0:
            return null;
          case 1:
            return c.call(this, a);
          case 2:
            return d.call(this, a, b);
          case 3:
            return e.call(this, a, b, f);
          default:
            var h = null;
            if (3 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 3); h < k.length;) {
                k[h] = arguments[h + 3], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return l.cljs$core$IFn$_invoke$arity$variadic(a, b, f, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = l.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = function() {
        return null;
      };
      b.cljs$core$IFn$_invoke$arity$1 = c;
      b.cljs$core$IFn$_invoke$arity$2 = d;
      b.cljs$core$IFn$_invoke$arity$3 = e;
      b.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.some_fn.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      }, g = function() {
        var c = function(c, d, e) {
          d = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(a, d, e);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
        }, d = function(a, b, d) {
          var e = null;
          if (2 < arguments.length) {
            e = 0;
            for (var f = Array(arguments.length - 2); e < f.length;) {
              f[e] = arguments[e + 2], ++e;
            }
            e = new cljs.core.IndexedSeq(f, 0, null);
          }
          return c.call(this, a, b, e);
        };
        d.cljs$lang$maxFixedArity = 2;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }();
      c = function(a, b, c) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
          default:
            var h = null;
            if (2 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 2); h < k.length;) {
                k[h] = arguments[h + 2], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return g.cljs$core$IFn$_invoke$arity$variadic(a, b, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$lang$maxFixedArity = 2;
      c.cljs$lang$applyTo = g.cljs$lang$applyTo;
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
      return c;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            cljs.core.chunk_append(f, function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }()), g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      return cljs.core.cons(function() {
        var b = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(b), e = cljs.core.seq(c);
    return d && e ? cljs.core.cons(function() {
      var b = cljs.core.first(d), c = cljs.core.first(e);
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, cljs.core.rest(d), cljs.core.rest(e))) : null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(b), f = cljs.core.seq(c), g = cljs.core.seq(d);
    return e && f && g ? cljs.core.cons(function() {
      var b = cljs.core.first(e), c = cljs.core.first(f), d = cljs.core.first(g);
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, cljs.core.rest(e), cljs.core.rest(f), cljs.core.rest(g))) : null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  var f = function k(a) {
    return new cljs.core.LazySeq(null, function() {
      var b = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, a);
      return cljs.core.every_QMARK_(cljs.core.identity, b) ? cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, b), k(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, b))) : null;
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
    return function(b) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, b);
    };
  }(f), f(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(e, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c, b], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    return function(a) {
      return function() {
        var c = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(c, d) {
          var e = cljs.core.deref(a), f = cljs.core._vreset_BANG_(a, cljs.core._deref(a) - 1);
          c = 0 < e ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : c;
          return 0 < f ? c : cljs.core.ensure_reduced(c);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = e;
        c.cljs$core$IFn$_invoke$arity$1 = f;
        c.cljs$core$IFn$_invoke$arity$2 = g;
        return c;
      }();
    }(cljs.core.volatile_BANG_(a));
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (0 < a) {
      var c = cljs.core.seq(b);
      return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take.cljs$core$IFn$_invoke$arity$2(a - 1, cljs.core.rest(c))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    return function(a) {
      return function() {
        var c = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(c, d) {
          var e = cljs.core.deref(a);
          cljs.core._vreset_BANG_(a, cljs.core._deref(a) - 1);
          return 0 < e ? c : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = e;
        c.cljs$core$IFn$_invoke$arity$1 = f;
        c.cljs$core$IFn$_invoke$arity$2 = g;
        return c;
      }();
    }(cljs.core.volatile_BANG_(a));
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function(c) {
    return function() {
      return c(a, b);
    };
  }(function(a, b) {
    for (;;) {
      if (b = cljs.core.seq(b), 0 < a && b) {
        --a, b = cljs.core.rest(b);
      } else {
        return b;
      }
    }
  }), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, a);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(a, b) {
    return a;
  }, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function(a, b) {
  var c = cljs.core.seq(b);
  for (a = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));;) {
    if (a) {
      c = cljs.core.next(c), a = cljs.core.next(a);
    } else {
      return c;
    }
  }
};
cljs.core.drop_while = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core.deref(c);
          if (cljs.core.truth_(cljs.core.truth_(f) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e) : f)) {
            return d;
          }
          cljs.core.vreset_BANG_(c, null);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(!0));
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function(c) {
    return function() {
      return c(a, b);
    };
  }(function(a, b) {
    for (;;) {
      var c = cljs.core.seq(b);
      if (cljs.core.truth_(function() {
        var b = c;
        return b ? (b = cljs.core.first(c), a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) : b;
      }())) {
        b = a;
        var d = cljs.core.rest(c);
        a = b;
        b = d;
      } else {
        return c;
      }
    }
  }), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(a, b, c, d, e) {
  this.meta = a;
  this.all = b;
  this.prev = c;
  this.current = d;
  this._next = e;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Cycle.prototype.currentval = function() {
  if (!this.current) {
    var a = cljs.core.next(this.prev);
    this.current = a ? a : this.all;
  }
  return this.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return null != this.current;
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  for (var c = this, d = this.currentval(), e = cljs.core.first(d);;) {
    var f = function() {
      var a = cljs.core.next(d);
      return a ? a : c.all;
    }();
    a = function() {
      var a = e, c = cljs.core.first(f);
      return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, c) : b.call(null, a, c);
    }();
    if (cljs.core.reduced_QMARK_(a)) {
      return cljs.core.deref(a);
    }
    d = f;
    e = a;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  for (var d = this, e = this.currentval(), f = c;;) {
    c = function() {
      var a = f, c = cljs.core.first(e);
      return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, c) : b.call(null, a, c);
    }();
    if (cljs.core.reduced_QMARK_(c)) {
      return cljs.core.deref(c);
    }
    e = a = function() {
      var a = cljs.core.next(e);
      return a ? a : d.all;
    }();
    f = c;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this._next && (this._next = new cljs.core.Cycle(null, this.all, this.currentval(), null, null));
  return this._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Cycle(b, this.all, this.prev, this.current, this._next);
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Cycle.cljs$lang$type = !0;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function(a, b, c, d, e) {
  return new cljs.core.Cycle(a, b, c, d, e);
};
cljs.core.cycle = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.Cycle(null, a, null, a, null) : cljs.core.List.EMPTY;
};
cljs.core.split_at = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.Repeat = function(a, b, c, d, e) {
  this.meta = a;
  this.count = b;
  this.val = c;
  this.next = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Repeat.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, this.count);
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.next ? 1 < this.count ? this.next = new cljs.core.Repeat(null, this.count - 1, this.val, null, null) : -1 === this.count ? this : null : this.next;
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  if (-1 === this.count) {
    for (var c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(this.val, this.val) : b.call(null, this.val, this.val);;) {
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
    }
  } else {
    for (a = 1, c = this.val;;) {
      if (a < this.count) {
        c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
        if (cljs.core.reduced_QMARK_(c)) {
          return cljs.core.deref(c);
        }
        a += 1;
      } else {
        return c;
      }
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  if (-1 === this.count) {
    for (c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);;) {
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
    }
  } else {
    for (a = 0;;) {
      if (a < this.count) {
        c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
        if (cljs.core.reduced_QMARK_(c)) {
          return cljs.core.deref(c);
        }
        a += 1;
      } else {
        return c;
      }
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null == this.next ? 1 < this.count ? this.next = new cljs.core.Repeat(null, this.count - 1, this.val, null, null) : -1 === this.count ? this : cljs.core.List.EMPTY : this.next;
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Repeat(b, this.count, this.val, this.next, null);
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Repeat.cljs$lang$type = !0;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function(a, b, c, d, e) {
  return new cljs.core.Repeat(a, b, c, d, e);
};
cljs.core.repeat = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.Repeat(null, -1, a, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return 0 < a ? new cljs.core.Repeat(null, a, b, null, null) : cljs.core.List.EMPTY;
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(a));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(a, b, c, d, e) {
  this.meta = a;
  this.f = b;
  this.prev_seed = c;
  this.seed = d;
  this.next = e;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return this.seed !== cljs.core.UNREALIZED_SEED;
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  a = this.cljs$core$ISeq$_first$arity$1(null);
  var c = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(a) : this.f.call(null, a);
  for (a = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, c) : b.call(null, a, c);;) {
    if (cljs.core.reduced_QMARK_(a)) {
      return cljs.core.deref(a);
    }
    c = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(c) : this.f.call(null, c);
    a = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, c) : b.call(null, a, c);
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  a = this.cljs$core$ISeq$_first$arity$1(null);
  for (c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);;) {
    if (cljs.core.reduced_QMARK_(c)) {
      return cljs.core.deref(c);
    }
    a = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(a) : this.f.call(null, a);
    c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  cljs.core.UNREALIZED_SEED === this.seed && (this.seed = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(this.prev_seed) : this.f.call(null, this.prev_seed));
  return this.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this.next && (this.next = new cljs.core.Iterate(null, this.f, this.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null));
  return this.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Iterate(b, this.f, this.prev_seed, this.seed, this.next);
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Iterate.cljs$lang$type = !0;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function(a, b, c, d, e) {
  return new cljs.core.Iterate(a, b, c, d, e);
};
cljs.core.iterate = function(a, b) {
  return new cljs.core.Iterate(null, a, null, b, null);
};
cljs.core.interleave = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a), d = cljs.core.seq(b);
    return c && d ? cljs.core.cons(cljs.core.first(c), cljs.core.cons(cljs.core.first(d), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), cljs.core.rest(d)))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(c, b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 0)));
    return cljs.core.every_QMARK_(cljs.core.identity, d) ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, d), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, d))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          if (cljs.core.truth_(cljs.core.deref(c))) {
            return d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, a) : b.call(null, d, a), cljs.core.reduced_QMARK_(d) ? d : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
          }
          cljs.core.vreset_BANG_(c, !0);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(!1));
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function(a) {
  return function e(a, d) {
    return new cljs.core.LazySeq(null, function() {
      var c = cljs.core.seq(a);
      return c ? cljs.core.cons(cljs.core.first(c), e(cljs.core.rest(c), d)) : cljs.core.seq(d) ? e(cljs.core.first(d), cljs.core.rest(d)) : null;
    }, null, null);
  }(null, a);
};
cljs.core.mapcat = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(a), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, a, b));
};
cljs.core.mapcat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : c;
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            cljs.core.truth_(function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }()) && cljs.core.chunk_append(f, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g)), g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      e = cljs.core.first(c);
      c = cljs.core.rest(c);
      return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e)) ? cljs.core.cons(e, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c)) : cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c);
    }
    return null;
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(a));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(a), b);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function(a, b, c) {
  return function f(c) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(c, cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c)], 0)) : null);
    }, null, null);
  }(c);
};
cljs.core.flatten = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(a) {
    return !cljs.core.sequential_QMARK_(a);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, a)));
};
cljs.core.into = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEditableCollection$) ? cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(a), b)), cljs.core.meta(a)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, a, b) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, b);
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEditableCollection$) ? cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, cljs.core.conj_BANG_, cljs.core.transient$(a), c)), cljs.core.meta(a)) : cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, cljs.core.conj, a, c);
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(b, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, b, c));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(b, d) : b;
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.partition = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    if (d) {
      var e = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d);
      return a === cljs.core.count(e) ? cljs.core.cons(e, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(d);
    if (e) {
      var f = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, e);
      return a === cljs.core.count(f) ? cljs.core.cons(f, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(a, b, c, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, e))) : new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(f, c)), null, 1, null);
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, a, b);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.lookup_sentinel;
  for (b = cljs.core.seq(b);;) {
    if (null != b) {
      a = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(b), d);
      if (d === a) {
        return c;
      }
      b = cljs.core.next(b);
    } else {
      return a;
    }
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function(a, b, c) {
  b = cljs.core.seq(b);
  var d = cljs.core.first(b), e = cljs.core.next(b);
  return e ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d);
    return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(b, e, c) : cljs.core.assoc_in.call(null, b, e, c);
  }()) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, c);
};
cljs.core.update_in = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.seq(b);
  var d = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d), b, c)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  b = cljs.core.seq(b);
  var e = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, e, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, e), b, c, d)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, e, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, e);
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(b, d) : c.call(null, b, d);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  b = cljs.core.seq(b);
  var f = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, f, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, f), b, c, d, e)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, f, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, f);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(b, d, e) : c.call(null, b, d, e);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  b = cljs.core.seq(b);
  var g = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, g, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, g), b, c, d, e, f)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, g, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, g);
    return c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(b, d, e, f) : c.call(null, b, d, e, f);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  var h = cljs.core.seq(b);
  b = cljs.core.first(h);
  return (h = cljs.core.next(h)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), h, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g], 0))) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, e, f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([g], 
  0)));
};
cljs.core.update_in.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var e = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(e, d) : c.call(null, e, d);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(f, d, e) : c.call(null, f, d, e);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(g, d, e, f) : c.call(null, g, d, e, f);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, e, f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([g], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(a, b) {
  this.edit = a;
  this.arr = b;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = !0;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function(a, b) {
  return new cljs.core.VectorNode(a, b);
};
cljs.core.pv_fresh_node = function(a) {
  return new cljs.core.VectorNode(a, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function(a, b) {
  return a.arr[b];
};
cljs.core.pv_aset = function(a, b, c) {
  return a.arr[b] = c;
};
cljs.core.pv_clone_node = function(a) {
  return new cljs.core.VectorNode(a.edit, cljs.core.aclone(a.arr));
};
cljs.core.tail_off = function(a) {
  a = a.cnt;
  return 32 > a ? 0 : a - 1 >>> 5 << 5;
};
cljs.core.new_path = function(a, b, c) {
  for (;;) {
    if (0 === b) {
      return c;
    }
    var d = cljs.core.pv_fresh_node(a);
    cljs.core.pv_aset(d, 0, c);
    c = d;
    b -= 5;
  }
};
cljs.core.push_tail = function(a, b, c, d) {
  var e = cljs.core.pv_clone_node(c), f = a.cnt - 1 >>> b & 31;
  5 === b ? cljs.core.pv_aset(e, f, d) : (c = cljs.core.pv_aget(c, f), null != c ? (b -= 5, a = cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : cljs.core.push_tail.call(null, a, b, c, d)) : a = cljs.core.new_path(null, b - 5, d), cljs.core.pv_aset(e, f, a));
  return e;
};
cljs.core.vector_index_out_of_bounds = function(a, b) {
  throw Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.first_array_for_longvec = function(a) {
  var b = a.root;
  for (a = a.shift;;) {
    if (0 < a) {
      b = cljs.core.pv_aget(b, 0), a -= 5;
    } else {
      return b.arr;
    }
  }
};
cljs.core.unchecked_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  var c = a.root;
  for (a = a.shift;;) {
    if (0 < a) {
      c = cljs.core.pv_aget(c, b >>> a & 31), a -= 5;
    } else {
      return c.arr;
    }
  }
};
cljs.core.array_for = function(a, b) {
  return 0 <= b && b < a.cnt ? cljs.core.unchecked_array_for(a, b) : cljs.core.vector_index_out_of_bounds(b, a.cnt);
};
cljs.core.do_assoc = function(a, b, c, d, e) {
  var f = cljs.core.pv_clone_node(c);
  if (0 === b) {
    cljs.core.pv_aset(f, d & 31, e);
  } else {
    var g = d >>> b & 31;
    cljs.core.pv_aset(f, g, function() {
      var f = b - 5, k = cljs.core.pv_aget(c, g);
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(a, f, k, d, e) : cljs.core.do_assoc.call(null, a, f, k, d, e);
    }());
  }
  return f;
};
cljs.core.pop_tail = function(a, b, c) {
  var d = a.cnt - 2 >>> b & 31;
  if (5 < b) {
    b -= 5;
    var e = cljs.core.pv_aget(c, d);
    a = cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(a, b, e) : cljs.core.pop_tail.call(null, a, b, e);
    if (null == a && 0 === d) {
      return null;
    }
    c = cljs.core.pv_clone_node(c);
    cljs.core.pv_aset(c, d, a);
    return c;
  }
  if (0 === d) {
    return null;
  }
  c = cljs.core.pv_clone_node(c);
  cljs.core.pv_aset(c, d, null);
  return c;
};
cljs.core.RangedIterator = function(a, b, c, d, e, f) {
  this.i = a;
  this.base = b;
  this.arr = c;
  this.v = d;
  this.start = e;
  this.end = f;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  return this.i < this.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  32 === this.i - this.base && (this.arr = cljs.core.unchecked_array_for(this.v, this.i), this.base += 32);
  var a = this.arr[this.i & 31];
  this.i += 1;
  return a;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = !0;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function(a, b, c, d, e, f) {
  return new cljs.core.RangedIterator(a, b, c, d, e, f);
};
cljs.core.ranged_iterator = function(a, b, c) {
  return new cljs.core.RangedIterator(b, b - b % 32, b < cljs.core.count(a) ? cljs.core.unchecked_array_for(a, b) : null, a, b, c);
};
cljs.core.pv_reduce = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return c < d ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(a, b, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), c + 1, d) : b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = c;
  c = d;
  for (d = cljs.core.unchecked_array_for(a, d);;) {
    if (c < e) {
      var g = c & 31;
      d = 0 === g ? cljs.core.unchecked_array_for(a, c) : d;
      g = d[g];
      f = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, g) : b.call(null, f, g);
      if (cljs.core.reduced_QMARK_(f)) {
        return cljs.core.deref(f);
      }
      c += 1;
    } else {
      return f;
    }
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.shift = c;
  this.root = d;
  this.tail = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return 0 <= b && b < this.cnt ? new cljs.core.MapEntry(b, cljs.core.unchecked_array_for(this, b)[b & 31], null) : null;
};
cljs.core.PersistentVector.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentVector.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = f + a, h = e[f];
            d = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, g, h) : b.call(null, d, g, h);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return cljs.core.array_for(this, b)[b & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? cljs.core.unchecked_array_for(this, b)[b & 31] : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  if (0 <= b && b < this.cnt) {
    return cljs.core.tail_off(this) <= b ? (a = cljs.core.aclone(this.tail), a[b & 31] = c, new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, a, null)) : new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, cljs.core.do_assoc(this, this.shift, this.root, b, c), this.tail, null);
  }
  if (b === this.cnt) {
    return this.cljs$core$ICollection$_conj$arity$2(null, c);
  }
  throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cnt), "]"].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return cljs.core.ranged_iterator(this, 0, this.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return 0 < this.cnt ? this.cljs$core$IIndexed$_nth$arity$2(null, this.cnt - 1) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (0 === this.cnt) {
    throw Error("Can't pop empty vector");
  }
  if (1 === this.cnt) {
    return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
  }
  if (1 < this.cnt - cljs.core.tail_off(this)) {
    return new cljs.core.PersistentVector(this.meta, this.cnt - 1, this.shift, this.root, this.tail.slice(0, -1), null);
  }
  a = cljs.core.unchecked_array_for(this, this.cnt - 2);
  var b = cljs.core.pop_tail(this, this.shift, this.root);
  b = null == b ? cljs.core.PersistentVector.EMPTY_NODE : b;
  var c = this.cnt - 1;
  return 5 < this.shift && null == cljs.core.pv_aget(b, 1) ? new cljs.core.PersistentVector(this.meta, c, this.shift - 5, cljs.core.pv_aget(b, 0), a, null) : new cljs.core.PersistentVector(this.meta, c, this.shift, b, a, null);
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? new cljs.core.RSeq(this, this.cnt - 1, null) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (b instanceof cljs.core.PersistentVector) {
    if (this.cnt === cljs.core.count(b)) {
      for (a = this.cljs$core$IIterable$_iterator$arity$1(null), b = cljs.core._iterator(b);;) {
        if (a.hasNext()) {
          var c = a.next(), d = b.next();
          if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, d)) {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return cljs.core.equiv_sequential(this, b);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientVector(this.cnt, this.shift, cljs.core.tv_editable_root(this.root), cljs.core.tv_editable_tail(this.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this, b, 0, this.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = e[f];
            d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, g) : b.call(null, d, g);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$IVector$_assoc_n$arity$3(null, b, c);
  }
  throw Error("Vector's key for assoc must be a number.");
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return cljs.core.integer_QMARK_(b) ? 0 <= b && b < this.cnt : !1;
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 === this.cnt ? null : 32 >= this.cnt ? new cljs.core.IndexedSeq(this.tail, 0, null) : cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this, cljs.core.first_array_for_longvec(this), 0, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(b, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (32 > this.cnt - cljs.core.tail_off(this)) {
    a = this.tail.length;
    for (var c = Array(a + 1), d = 0;;) {
      if (d < a) {
        c[d] = this.tail[d], d += 1;
      } else {
        break;
      }
    }
    c[a] = b;
    return new cljs.core.PersistentVector(this.meta, this.cnt + 1, this.shift, this.root, c, null);
  }
  a = (c = this.cnt >>> 5 > 1 << this.shift) ? this.shift + 5 : this.shift;
  c ? (c = cljs.core.pv_fresh_node(null), cljs.core.pv_aset(c, 0, this.root), cljs.core.pv_aset(c, 1, cljs.core.new_path(null, this.shift, new cljs.core.VectorNode(null, this.tail)))) : c = cljs.core.push_tail(this, this.shift, this.root, new cljs.core.VectorNode(null, this.tail));
  return new cljs.core.PersistentVector(this.meta, this.cnt + 1, a, c, [b], null);
};
cljs.core.PersistentVector.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentVector.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = !0;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentVector(a, b, c, d, e, f);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(a, b) {
  var c = a.length;
  a = b ? a : cljs.core.aclone(a);
  if (32 > c) {
    return new cljs.core.PersistentVector(null, c, 5, cljs.core.PersistentVector.EMPTY_NODE, a, null);
  }
  var d = a.slice(0, 32);
  b = 32;
  for (var e = (new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, d, null)).cljs$core$IEditableCollection$_as_transient$arity$1(null);;) {
    if (b < c) {
      d = b + 1, e = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(e, a[b]), b = d;
    } else {
      return cljs.core.persistent_BANG_(e);
    }
  }
};
var G__11327_11330 = cljs.core.PersistentVector.prototype, G__11328_11331 = cljs.core.ITER_SYMBOL, G__11329_11332 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11327_11330, G__11328_11331);
goog.object.set(G__11327_11330, G__11328_11331, G__11329_11332);
cljs.core.vec = function(a) {
  return cljs.core.array_QMARK_(a) ? cljs.core.PersistentVector.fromArray(a, !0) : cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), a));
};
cljs.core.vector = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return a instanceof cljs.core.IndexedSeq && 0 === a.i ? cljs.core.PersistentVector.fromArray(a.arr, !0) : cljs.core.vec(a);
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.ChunkedSeq = function(a, b, c, d, e, f) {
  this.vec = a;
  this.node = b;
  this.i = c;
  this.off = d;
  this.meta = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.off + 1 < this.node.length ? (a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, this.node, this.i, this.off + 1), null == a ? null : a) : this.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this.vec, b, this.i + this.off, cljs.core.count(this.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(this.vec, b, c, this.i + this.off, cljs.core.count(this.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.node[this.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.off + 1 < this.node.length ? (a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, this.node, this.i, this.off + 1), null == a ? cljs.core.List.EMPTY : a) : this.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(this.node, this.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  a = this.i + this.node.length;
  return a < cljs.core._count(this.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, cljs.core.unchecked_array_for(this.vec, a), a, 0) : cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(this.vec, this.node, this.i, this.off, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  a = this.i + this.node.length;
  return a < cljs.core._count(this.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, cljs.core.unchecked_array_for(this.vec, a), a, 0) : null;
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = !0;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function(a, b, c, d, e, f) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, f);
};
var G__11339_11342 = cljs.core.ChunkedSeq.prototype, G__11340_11343 = cljs.core.ITER_SYMBOL, G__11341_11344 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11339_11342, G__11340_11343);
goog.object.set(G__11339_11342, G__11340_11343, G__11341_11344);
cljs.core.chunked_seq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ChunkedSeq(a, cljs.core.array_for(a, b), b, c, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.ChunkedSeq(a, b, c, d, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(a, b, c, d, e) {
  this.meta = a;
  this.v = b;
  this.start = c;
  this.end = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  if (0 > b) {
    return null;
  }
  a = this.start + b;
  return a < this.end ? new cljs.core.MapEntry(b, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this.v, a), null) : null;
};
cljs.core.Subvec.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Subvec.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.start;
  for (var d = 0;;) {
    if (a < this.end) {
      var e = d, f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, a);
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
      a += 1;
    } else {
      return c;
    }
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return 0 > b || this.end <= this.start + b ? cljs.core.vector_index_out_of_bounds(b, this.end - this.start) : cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.start + b);
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 > b || this.end <= this.start + b ? c : cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this.v, this.start + b, c);
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  var d = this, e = d.start + b;
  if (0 > b || d.end + 1 <= e) {
    throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  }
  return cljs.core.build_subvec(d.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d.v, e, c), d.start, function() {
    var a = d.end, b = e + 1;
    return a > b ? a : b;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.ranged_iterator(this.v, this.start, this.end) : cljs.core.seq_iter(this);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Subvec(this.meta, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (this.start === this.end) {
    throw Error("Can't pop empty vector");
  }
  return cljs.core.build_subvec(this.meta, this.v, this.start, this.end - 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return this.start !== this.end ? new cljs.core.RSeq(this, this.end - this.start - 1, null) : null;
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this.v, b, this.start, this.end) : cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(this.v, b, c, this.start, this.end) : cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$IVector$_assoc_n$arity$3(null, b, c);
  }
  throw Error("Subvec's key for assoc must be a number.");
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return function(a) {
    return function f(c) {
      return c === b.end ? null : cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b.v, c), new cljs.core.LazySeq(null, function(a) {
        return function() {
          return f(c + 1);
        };
      }(a), null, null));
    };
  }(this)(b.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.build_subvec(b, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.build_subvec(this.meta, cljs.core._assoc_n(this.v, this.end, b), this.start, this.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.Subvec.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.Subvec.cljs$lang$type = !0;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function(a, b, c, d, e) {
  return new cljs.core.Subvec(a, b, c, d, e);
};
var G__11361_11364 = cljs.core.Subvec.prototype, G__11362_11365 = cljs.core.ITER_SYMBOL, G__11363_11366 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11361_11364, G__11362_11365);
goog.object.set(G__11361_11364, G__11362_11365, G__11363_11366);
cljs.core.build_subvec = function(a, b, c, d, e) {
  for (;;) {
    if (b instanceof cljs.core.Subvec) {
      c = b.start + c, d = b.start + d, b = b.v;
    } else {
      if (!cljs.core.vector_QMARK_(b)) {
        throw Error("v must satisfy IVector");
      }
      var f = cljs.core.count(b);
      if (0 > c || 0 > d || c > f || d > f) {
        throw Error("Index out of bounds");
      }
      return new cljs.core.Subvec(a, b, c, d, e);
    }
  }
};
cljs.core.subvec = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.count(a));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == b || null == c) {
    throw Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, a, b | 0, c | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function(a, b) {
  return a === b.edit ? b : new cljs.core.VectorNode(a, cljs.core.aclone(b.arr));
};
cljs.core.tv_editable_root = function(a) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(a.arr));
};
cljs.core.tv_editable_tail = function(a) {
  var b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(a, 0, b, 0, a.length);
  return b;
};
cljs.core.tv_push_tail = function(a, b, c, d) {
  var e = cljs.core.tv_ensure_editable(a.root.edit, c), f = a.cnt - 1 >>> b & 31;
  cljs.core.pv_aset(e, f, 5 === b ? d : function() {
    var c = cljs.core.pv_aget(e, f);
    if (null != c) {
      var h = b - 5;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(a, h, c, d) : cljs.core.tv_push_tail.call(null, a, h, c, d);
    }
    return cljs.core.new_path(a.root.edit, b - 5, d);
  }());
  return e;
};
cljs.core.tv_pop_tail = function(a, b, c) {
  c = cljs.core.tv_ensure_editable(a.root.edit, c);
  var d = a.cnt - 2 >>> b & 31;
  if (5 < b) {
    b -= 5;
    var e = cljs.core.pv_aget(c, d);
    a = cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(a, b, e) : cljs.core.tv_pop_tail.call(null, a, b, e);
    if (null == a && 0 === d) {
      return null;
    }
    cljs.core.pv_aset(c, d, a);
    return c;
  }
  if (0 === d) {
    return null;
  }
  cljs.core.pv_aset(c, d, null);
  return c;
};
cljs.core.unchecked_editable_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  var c = a.root, d = c;
  for (a = a.shift;;) {
    if (0 < a) {
      d = cljs.core.tv_ensure_editable(c.edit, cljs.core.pv_aget(d, b >>> a & 31)), a -= 5;
    } else {
      return d.arr;
    }
  }
};
cljs.core.TransientVector = function(a, b, c, d) {
  this.cnt = a;
  this.shift = b;
  this.root = c;
  this.tail = d;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (this.root.edit) {
    if (32 > this.cnt - cljs.core.tail_off(this)) {
      this.tail[this.cnt & 31] = b;
    } else {
      a = new cljs.core.VectorNode(this.root.edit, this.tail);
      var c = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      c[0] = b;
      this.tail = c;
      this.cnt >>> 5 > 1 << this.shift ? (b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], c = this.shift + 5, b[0] = this.root, b[1] = cljs.core.new_path(this.root.edit, this.shift, a), this.root = new cljs.core.VectorNode(this.root.edit, b), this.shift = c) : this.root = cljs.core.tv_push_tail(this, this.shift, this.root, a);
    }
    this.cnt += 1;
    return this;
  }
  throw Error("conj! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    this.root.edit = null;
    a = this.cnt - cljs.core.tail_off(this);
    var b = Array(a);
    cljs.core.array_copy(this.tail, 0, b, 0, a);
    return new cljs.core.PersistentVector(null, this.cnt, this.shift, this.root, b, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, b, c);
  }
  throw Error("TransientVector's key for assoc! must be a number.");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(a, b, c) {
  var d = this, e = this;
  if (d.root.edit) {
    if (0 <= b && b < d.cnt) {
      return cljs.core.tail_off(e) <= b ? d.tail[b & 31] = c : (a = function() {
        return function(a) {
          return function l(a, e) {
            e = cljs.core.tv_ensure_editable(d.root.edit, e);
            if (0 === a) {
              cljs.core.pv_aset(e, b & 31, c);
            } else {
              var f = b >>> a & 31;
              cljs.core.pv_aset(e, f, l(a - 5, cljs.core.pv_aget(e, f)));
            }
            return e;
          };
        }(e)(d.shift, d.root);
      }(), d.root = a), e;
    }
    if (b === d.cnt) {
      return e.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, c);
    }
    throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d.cnt)].join(""));
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    if (0 === this.cnt) {
      throw Error("Can't pop empty vector");
    }
    if (1 === this.cnt) {
      this.cnt = 0;
    } else {
      if (0 < (this.cnt - 1 & 31)) {
        --this.cnt;
      } else {
        a = cljs.core.unchecked_editable_array_for(this, this.cnt - 2);
        var b = cljs.core.tv_pop_tail(this, this.shift, this.root);
        b = null != b ? b : new cljs.core.VectorNode(this.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
        5 < this.shift && null == cljs.core.pv_aget(b, 1) ? (this.root = cljs.core.tv_ensure_editable(this.root.edit, cljs.core.pv_aget(b, 0)), this.shift -= 5) : this.root = b;
        --this.cnt;
        this.tail = a;
      }
    }
    return this;
  }
  throw Error("pop! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.root.edit) {
    return this.cnt;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (this.root.edit) {
    return cljs.core.array_for(this, b)[b & 31];
  }
  throw Error("nth after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? this.cljs$core$IIndexed$_nth$arity$2(null, b) : c;
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.TransientVector.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientVector.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = !0;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function(a, b, c, d) {
  return new cljs.core.TransientVector(a, b, c, d);
};
cljs.core.PersistentQueueIter = function(a, b) {
  this.fseq = a;
  this.riter = b;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var a = null != this.fseq && cljs.core.seq(this.fseq);
  return a ? a : (a = null != this.riter) ? this.riter.hasNext() : a;
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  if (null != this.fseq) {
    var a = cljs.core.first(this.fseq);
    this.fseq = cljs.core.next(this.fseq);
    return a;
  }
  if (null != this.riter && this.riter.hasNext()) {
    return this.riter.next();
  }
  throw Error("No such element");
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = !0;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function(a, b) {
  return new cljs.core.PersistentQueueIter(a, b);
};
cljs.core.PersistentQueueSeq = function(a, b, c, d) {
  this.meta = a;
  this.front = b;
  this.rear = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueueSeq(this.meta, a, this.rear, null) : null != this.rear ? new cljs.core.PersistentQueueSeq(this.meta, this.rear, null, null) : null;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueueSeq(this.meta, a, this.rear, null) : null == this.rear ? this.cljs$core$IEmptyableCollection$_empty$arity$1(null) : new cljs.core.PersistentQueueSeq(this.meta, this.rear, null, null);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentQueueSeq(b, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = !0;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function(a, b, c, d) {
  return new cljs.core.PersistentQueueSeq(a, b, c, d);
};
var G__11392_11395 = cljs.core.PersistentQueueSeq.prototype, G__11393_11396 = cljs.core.ITER_SYMBOL, G__11394_11397 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11392_11395, G__11393_11396);
goog.object.set(G__11392_11395, G__11393_11396, G__11394_11397);
cljs.core.PersistentQueue = function(a, b, c, d, e) {
  this.meta = a;
  this.count = b;
  this.front = c;
  this.rear = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueue.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, this.count.cljs$core$IFn$_invoke$arity$1 ? this.count.cljs$core$IFn$_invoke$arity$1(this) : this.count.call(null, this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentQueueIter(this.front, cljs.core._iterator(this.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentQueue(this.meta, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return cljs.core.truth_(this.front) ? (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueue(this.meta, this.count - 1, a, this.rear, null) : new cljs.core.PersistentQueue(this.meta, this.count - 1, cljs.core.seq(this.rear), cljs.core.PersistentVector.EMPTY, null) : this;
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, this.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.rest(cljs.core.seq(this));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this, c = cljs.core.seq(b.rear);
  return cljs.core.truth_(function() {
    var a = b.front;
    return cljs.core.truth_(a) ? a : c;
  }()) ? new cljs.core.PersistentQueueSeq(null, b.front, cljs.core.seq(c), null) : null;
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentQueue(b, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(c.front) ? new cljs.core.PersistentQueue(c.meta, c.count + 1, c.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
    var a = c.rear;
    return cljs.core.truth_(a) ? a : cljs.core.PersistentVector.EMPTY;
  }(), b), null) : new cljs.core.PersistentQueue(c.meta, c.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(c.front, b), cljs.core.PersistentVector.EMPTY, null);
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = !0;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function(a, b, c, d, e) {
  return new cljs.core.PersistentQueue(a, b, c, d, e);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
var G__11400_11403 = cljs.core.PersistentQueue.prototype, G__11401_11404 = cljs.core.ITER_SYMBOL, G__11402_11405 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11400_11403, G__11401_11404);
goog.object.set(G__11400_11403, G__11401_11404, G__11402_11405);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return !1;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = !0;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function(a, b) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(b) && !cljs.core.record_QMARK_(b) ? cljs.core.count(a) === cljs.core.count(b) ? (null != a ? a.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IKVReduce$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, a)) ? cljs.core.reduce_kv(function(a, d, e) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, d, cljs.core.never_equiv), e) ? !0 : cljs.core.reduced(!1);
  }, !0, a) : cljs.core.every_QMARK_(function(a) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.never_equiv), cljs.core.second(a));
  }, a) : null : null);
};
cljs.core.scan_array = function(a, b, c) {
  for (var d = c.length, e = 0;;) {
    if (e < d) {
      if (b === c[e]) {
        return e;
      }
      e += a;
    } else {
      return null;
    }
  }
};
cljs.core.obj_map_compare_keys = function(a, b) {
  a = cljs.core.hash(a);
  b = cljs.core.hash(b);
  return a < b ? -1 : a > b ? 1 : 0;
};
cljs.core.obj_map__GT_hash_map = function(a, b, c) {
  var d = a.keys, e = d.length, f = a.strobj;
  a = cljs.core.meta(a);
  for (var g = 0, h = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (g < e) {
      var k = d[g];
      g += 1;
      h = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, k, goog.object.get(f, k));
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, b, c)), a);
    }
  }
};
cljs.core.obj_clone = function(a, b) {
  for (var c = {}, d = b.length, e = 0;;) {
    if (e < d) {
      var f = b[e], g = c, h = f;
      f = goog.object.get(a, f);
      goog.object.set(g, h, f);
      e += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.ObjMap = function(a, b, c, d, e) {
  this.meta = a;
  this.keys = b;
  this.strobj = c;
  this.update_count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? new cljs.core.MapEntry(b, this.strobj[b], null) : null;
};
cljs.core.ObjMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ObjMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? this.strobj[b] : c;
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.keys.sort(cljs.core.obj_map_compare_keys);
  for (var d = c;;) {
    if (cljs.core.seq(a)) {
      var e = c = cljs.core.first(a);
      c = this.strobj[c];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, e, c) : b.call(null, d, e, c);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      a = cljs.core.rest(a);
      d = c;
    } else {
      return d;
    }
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, this.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys)) {
    a = cljs.core.aclone(this.keys);
    var c = cljs.core.obj_clone(this.strobj, this.keys);
    a.splice(cljs.core.scan_array(1, b, a), 1);
    delete c[b];
    return new cljs.core.ObjMap(this.meta, a, c, this.update_count + 1, null);
  }
  return this;
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if (goog.isString(b)) {
    if (this.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || this.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(this, b, c);
    }
    if (null != cljs.core.scan_array(1, b, this.keys)) {
      return a = cljs.core.obj_clone(this.strobj, this.keys), goog.object.set(a, b, c), new cljs.core.ObjMap(this.meta, this.keys, a, this.update_count + 1, null);
    }
    a = cljs.core.obj_clone(this.strobj, this.keys);
    var d = cljs.core.aclone(this.keys);
    goog.object.set(a, b, c);
    d.push(b);
    return new cljs.core.ObjMap(this.meta, d, a, this.update_count + 1, null);
  }
  return cljs.core.obj_map__GT_hash_map(this, b, c);
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? !0 : !1;
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return 0 < b.keys.length ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(a) {
    return function(a) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b.strobj[a]], null);
    };
  }(this), b.keys.sort(cljs.core.obj_map_compare_keys)) : null;
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ObjMap(b, this.keys, this.strobj, this.update_count, this.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_(b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this, b);
};
cljs.core.ObjMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.ObjMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = !0;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function(a, b, c, d, e) {
  return new cljs.core.ObjMap(a, b, c, d, e);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(a, b) {
  return new cljs.core.ObjMap(null, a, b, 0, null);
};
cljs.core.RecordIter = function(a, b, c, d, e) {
  this.i = a;
  this.record = b;
  this.base_count = c;
  this.fields = d;
  this.ext_map_iter = e;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var a = this.i < this.base_count;
  return a ? a : this.ext_map_iter.hasNext();
};
cljs.core.RecordIter.prototype.next = function() {
  if (this.i < this.base_count) {
    var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.fields, this.i);
    this.i += 1;
    return new cljs.core.MapEntry(a, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this.record, a), null);
  }
  return this.ext_map_iter.next();
};
cljs.core.RecordIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = !0;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function(a, b, c, d, e) {
  return new cljs.core.RecordIter(a, b, c, d, e);
};
cljs.core.ES6EntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s), b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null);
    a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 1, null);
    this.s = cljs.core.next(this.s);
    return {value:[b, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = !0;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function(a) {
  return new cljs.core.ES6EntriesIterator(a);
};
cljs.core.es6_entries_iterator = function(a) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(a));
};
cljs.core.ES6SetEntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:[a, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = !0;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(a);
};
cljs.core.es6_set_entries_iterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(a));
};
cljs.core.array_index_of_nil_QMARK_ = function(a) {
  for (var b = a.length, c = 0;;) {
    if (b <= c) {
      return -1;
    }
    if (null == a[c]) {
      return c;
    }
    c += 2;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function(a, b) {
  var c = a.length;
  b = b.fqn;
  for (var d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (a[d] instanceof cljs.core.Keyword && b === a[d].fqn) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function(a, b) {
  var c = a.length;
  b = b.str;
  for (var d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (a[d] instanceof cljs.core.Symbol && b === a[d].str) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (b === a[d]) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, a[d])) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of = function(a, b) {
  return b instanceof cljs.core.Keyword ? cljs.core.array_index_of_keyword_QMARK_(a, b) : goog.isString(b) || "number" === typeof b ? cljs.core.array_index_of_identical_QMARK_(a, b) : b instanceof cljs.core.Symbol ? cljs.core.array_index_of_symbol_QMARK_(a, b) : null == b ? cljs.core.array_index_of_nil_QMARK_(a) : cljs.core.array_index_of_equiv_QMARK_(a, b);
};
cljs.core.array_map_index_of = function(a, b) {
  return cljs.core.array_index_of(a.arr, b);
};
cljs.core.array_extend_kv = function(a, b, c) {
  for (var d = a.length, e = Array(d + 2), f = 0;;) {
    if (f < d) {
      e[f] = a[f], f += 1;
    } else {
      break;
    }
  }
  e[d] = b;
  e[d + 1] = c;
  return e;
};
cljs.core.array_map_extend_kv = function(a, b, c) {
  return cljs.core.array_extend_kv(a.arr, b, c);
};
cljs.core.MapEntry = function(a, b, c) {
  this.key = a;
  this.val = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.MapEntry(0, this.key, null);
    case 1:
      return new cljs.core.MapEntry(1, this.val, null);
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.val, this.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.key, this.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.MapEntry.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = !0;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function(a, b, c) {
  return new cljs.core.MapEntry(a, b, c);
};
cljs.core.map_entry_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMapEntry$ ? !0 : !1 : !1;
};
cljs.core.PersistentArrayMapSeq = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, this._meta) : null;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return (this.arr.length - this.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return new cljs.core.MapEntry(this.arr[this.i], this.arr[this.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentArrayMapSeq(this.arr, this.i, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = !0;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function(a, b, c) {
  return new cljs.core.PersistentArrayMapSeq(a, b, c);
};
var G__11450_11453 = cljs.core.PersistentArrayMapSeq.prototype, G__11451_11454 = cljs.core.ITER_SYMBOL, G__11452_11455 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11450_11453, G__11451_11454);
goog.object.set(G__11450_11453, G__11451_11454, G__11452_11455);
cljs.core.persistent_array_map_seq = function(a, b, c) {
  return b <= a.length - 2 ? new cljs.core.PersistentArrayMapSeq(a, b, c) : null;
};
cljs.core.PersistentArrayMapIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.cnt = c;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  return this.i < this.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var a = new cljs.core.MapEntry(this.arr[this.i], this.arr[this.i + 1], null);
  this.i += 2;
  return a;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = !0;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function(a, b, c) {
  return new cljs.core.PersistentArrayMapIterator(a, b, c);
};
cljs.core.PersistentArrayMap = function(a, b, c, d) {
  this.meta = a;
  this.cnt = b;
  this.arr = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  a = cljs.core.array_map_index_of(this, b);
  return -1 === a ? null : new cljs.core.MapEntry(this.arr[a], this.arr[a + 1], null);
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentArrayMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentArrayMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  return -1 === a ? c : this.arr[a + 1];
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.arr.length;
  for (var d = 0;;) {
    if (d < a) {
      var e = this.arr[d], f = this.arr[d + 1];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMapIterator(this.arr, 0, 2 * this.cnt);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (cljs.core.map_QMARK_(b) && !cljs.core.record_QMARK_(b)) {
    if (a = this.arr.length, this.cnt === b.cljs$core$ICounted$_count$arity$1(null)) {
      for (var c = 0;;) {
        if (c < a) {
          var d = b.cljs$core$ILookup$_lookup$arity$3(null, this.arr[c], cljs.core.lookup_sentinel);
          if (d !== cljs.core.lookup_sentinel) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[c + 1], d)) {
              c += 2;
            } else {
              return !1;
            }
          } else {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return !1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientArrayMap({}, this.arr.length, cljs.core.aclone(this.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, this.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (0 <= cljs.core.array_map_index_of(this, b)) {
    a = this.arr.length;
    var c = a - 2;
    if (0 === c) {
      return this.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    }
    c = Array(c);
    for (var d = 0, e = 0;;) {
      if (d >= a) {
        return new cljs.core.PersistentArrayMap(this.meta, this.cnt - 1, c, null);
      }
      cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, this.arr[d]) ? d += 2 : (c[e] = this.arr[d], c[e + 1] = this.arr[d + 1], e += 2, d += 2);
    }
  } else {
    return this;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  if (-1 === a) {
    return this.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (c = cljs.core.array_map_extend_kv(this, b, c), new cljs.core.PersistentArrayMap(this.meta, this.cnt + 1, c, null)) : cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this), b, c), this.meta);
  }
  if (c === this.arr[a + 1]) {
    return this;
  }
  b = cljs.core.aclone(this.arr);
  b[a + 1] = c;
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return -1 !== cljs.core.array_map_index_of(this, b);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.persistent_array_map_seq(this.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentArrayMap(b, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  a = this;
  for (b = cljs.core.seq(b);;) {
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    if (cljs.core.vector_QMARK_(c)) {
      a = a.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 1)), b = cljs.core.next(b);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = !0;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function(a, b, c, d) {
  return new cljs.core.PersistentArrayMap(a, b, c, d);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(a, b, c) {
  a = b ? a : cljs.core.aclone(a);
  if (!c) {
    c = [];
    for (b = 0;;) {
      if (b < a.length) {
        var d = a[b], e = a[b + 1];
        -1 === cljs.core.array_index_of(c, d) && (c.push(d), c.push(e));
        b += 2;
      } else {
        break;
      }
    }
    a = c;
  }
  return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(a) {
  for (var b = [], c = 0;;) {
    if (c < a.length) {
      var d = a[c], e = a[c + 1];
      if (-1 === cljs.core.array_index_of(b, d)) {
        var f = b;
        f.push(d);
        f.push(e);
      } else {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
      }
      c += 2;
    } else {
      break;
    }
  }
  return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(a) {
  for (var b = [], c = 0;;) {
    if (c < a.length) {
      var d = a[c], e = a[c + 1], f = cljs.core.array_index_of(b, d);
      -1 === f ? (f = b, f.push(d), f.push(e)) : b[f + 1] = e;
      c += 2;
    } else {
      break;
    }
  }
  return new cljs.core.PersistentArrayMap(null, b.length / 2, b, null);
};
var G__11514_11517 = cljs.core.PersistentArrayMap.prototype, G__11515_11518 = cljs.core.ITER_SYMBOL, G__11516_11519 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11514_11517, G__11515_11518);
goog.object.set(G__11514_11517, G__11515_11518, G__11516_11519);
cljs.core.TransientArrayMap = function(a, b, c) {
  this.editable_QMARK_ = a;
  this.len = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return cljs.core.quot(this.len, 2);
  }
  throw Error("count after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return a = cljs.core.array_map_index_of(this, b), -1 === a ? c : this.arr[a + 1];
  }
  throw Error("lookup after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    if (cljs.core.map_entry_QMARK_(b)) {
      return this.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(b), cljs.core.val(b));
    }
    if (cljs.core.vector_QMARK_(b)) {
      return this.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(0) : b.call(null, 0), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(1) : b.call(null, 1));
    }
    a = cljs.core.seq(b);
    for (b = this;;) {
      var c = cljs.core.first(a);
      if (cljs.core.truth_(c)) {
        a = cljs.core.next(a), b = b.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(c), cljs.core.val(c));
      } else {
        return b;
      }
    }
  } else {
    throw Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return this.editable_QMARK_ = !1, new cljs.core.PersistentArrayMap(null, cljs.core.quot(this.len, 2), this.arr, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    a = cljs.core.array_map_index_of(this, b);
    if (-1 === a) {
      return this.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (this.len += 2, this.arr.push(b), this.arr.push(c), this) : cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(this.len, this.arr), b, c);
    }
    c !== this.arr[a + 1] && (this.arr[a + 1] = c);
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return a = cljs.core.array_map_index_of(this, b), 0 <= a && (this.arr[a] = this.arr[this.len - 2], this.arr[a + 1] = this.arr[this.len - 1], a = this.arr, a.pop(), a.pop(), this.len -= 2), this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, null);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, null);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientArrayMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = !0;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function(a, b, c) {
  return new cljs.core.TransientArrayMap(a, b, c);
};
cljs.core.array__GT_transient_hash_map = function(a, b) {
  for (var c = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY), d = 0;;) {
    if (d < a) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, b[d], b[d + 1]), d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.Box = function(a) {
  this.val = a;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Box.cljs$lang$type = !0;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Box");
};
cljs.core.__GT_Box = function(a) {
  return new cljs.core.Box(a);
};
cljs.core.key_test = function(a, b) {
  return a === b ? !0 : cljs.core.keyword_identical_QMARK_(a, b) ? !0 : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.mask = function(a, b) {
  return a >>> b & 31;
};
cljs.core.clone_and_set = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.aclone(a);
  a[b] = c;
  return a;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  a = cljs.core.aclone(a);
  a[b] = c;
  a[d] = e;
  return a;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function(a, b) {
  var c = Array(a.length - 2);
  cljs.core.array_copy(a, 0, c, 0, 2 * b);
  cljs.core.array_copy(a, 2 * (b + 1), c, 2 * b, c.length - 2 * b);
  return c;
};
cljs.core.bitmap_indexed_node_index = function(a, b) {
  return cljs.core.bit_count(a & b - 1);
};
cljs.core.bitpos = function(a, b) {
  return 1 << (a >>> b & 31);
};
cljs.core.edit_and_set = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  return a;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  a.arr[e] = f;
  return a;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function(a, b, c) {
  for (var d = a.length, e = 0, f = c;;) {
    if (e < d) {
      c = a[e];
      if (null != c) {
        var g = a[e + 1];
        c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(f, c, g) : b.call(null, f, c, g);
      } else {
        c = a[e + 1], c = null != c ? c.kv_reduce(b, f) : f;
      }
      if (cljs.core.reduced_QMARK_(c)) {
        return c;
      }
      e += 2;
      f = c;
    } else {
      return f;
    }
  }
};
cljs.core.NodeIterator = function(a, b, c, d) {
  this.arr = a;
  this.i = b;
  this.next_entry = c;
  this.next_iter = d;
};
cljs.core.NodeIterator.prototype.advance = function() {
  for (var a = this.arr.length;;) {
    if (this.i < a) {
      var b = this.arr[this.i], c = this.arr[this.i + 1];
      null != b ? b = this.next_entry = new cljs.core.MapEntry(b, c, null) : null != c ? (b = cljs.core._iterator(c), b = b.hasNext() ? this.next_iter = b : !1) : b = !1;
      this.i += 2;
      if (b) {
        return !0;
      }
    } else {
      return !1;
    }
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var a = null != this.next_entry;
  return a ? a : (a = null != this.next_iter) ? a : this.advance();
};
cljs.core.NodeIterator.prototype.next = function() {
  if (null != this.next_entry) {
    var a = this.next_entry;
    this.next_entry = null;
    return a;
  }
  if (null != this.next_iter) {
    return a = this.next_iter.next(), this.next_iter.hasNext() || (this.next_iter = null), a;
  }
  if (this.advance()) {
    return this.next();
  }
  throw Error("No such element");
};
cljs.core.NodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = !0;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function(a, b, c, d) {
  return new cljs.core.NodeIterator(a, b, c, d);
};
cljs.core.BitmapIndexedNode = function(a, b, c) {
  this.edit = a;
  this.bitmap = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = cljs.core.bit_count(this.bitmap), c = Array(0 > b ? 4 : 2 * (b + 1));
  cljs.core.array_copy(this.arr, 0, c, 0, 2 * b);
  return new cljs.core.BitmapIndexedNode(a, this.bitmap, c);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = 1 << (c >>> b & 31);
  if (0 === (this.bitmap & f)) {
    return this;
  }
  var g = cljs.core.bitmap_indexed_node_index(this.bitmap, f), h = this.arr[2 * g], k = this.arr[2 * g + 1];
  return null == h ? (b = k.inode_without_BANG_(a, b + 5, c, d, e), b === k ? this : null != b ? cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * g + 1, b) : this.bitmap === f ? null : this.edit_and_remove_pair(a, f, g)) : cljs.core.key_test(d, h) ? (e.val = !0, this.edit_and_remove_pair(a, f, g)) : this;
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(a, b, c) {
  if (this.bitmap === b) {
    return null;
  }
  a = this.ensure_editable(a);
  var d = a.arr, e = d.length;
  a.bitmap ^= b;
  cljs.core.array_copy(d, 2 * (c + 1), d, 2 * c, e - 2 * (c + 1));
  d[e - 2] = null;
  d[e - 1] = null;
  return a;
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e);
  e = this.arr[2 * f];
  f = this.arr[2 * f + 1];
  return null == e ? f.inode_lookup(a + 5, b, c, d) : cljs.core.key_test(c, e) ? f : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = 1 << (c >>> b & 31), h = cljs.core.bitmap_indexed_node_index(this.bitmap, g);
  if (0 === (this.bitmap & g)) {
    var k = cljs.core.bit_count(this.bitmap);
    if (2 * k < this.arr.length) {
      return a = this.ensure_editable(a), b = a.arr, f.val = !0, cljs.core.array_copy_downward(b, 2 * h, b, 2 * (h + 1), 2 * (k - h)), b[2 * h] = d, b[2 * h + 1] = e, a.bitmap |= g, a;
    }
    if (16 <= k) {
      h = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      h[c >>> b & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f);
      for (e = d = 0;;) {
        if (32 > d) {
          0 === (this.bitmap >>> d & 1) ? d += 1 : (h[d] = null != this.arr[e] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, cljs.core.hash(this.arr[e]), this.arr[e], this.arr[e + 1], f) : this.arr[e + 1], e += 2, d += 1);
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(a, k + 1, h);
    }
    b = Array(2 * (k + 4));
    cljs.core.array_copy(this.arr, 0, b, 0, 2 * h);
    b[2 * h] = d;
    b[2 * h + 1] = e;
    cljs.core.array_copy(this.arr, 2 * h, b, 2 * (h + 1), 2 * (k - h));
    f.val = !0;
    a = this.ensure_editable(a);
    a.arr = b;
    a.bitmap |= g;
    return a;
  }
  k = this.arr[2 * h];
  g = this.arr[2 * h + 1];
  if (null == k) {
    return k = g.inode_assoc_BANG_(a, b + 5, c, d, e, f), k === g ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, k);
  }
  if (cljs.core.key_test(d, k)) {
    return e === g ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, e);
  }
  f.val = !0;
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * h, null, 2 * h + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(a, b + 5, k, g, c, d, e));
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = 1 << (b >>> a & 31), g = cljs.core.bitmap_indexed_node_index(this.bitmap, f);
  if (0 === (this.bitmap & f)) {
    var h = cljs.core.bit_count(this.bitmap);
    if (16 <= h) {
      g = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      g[b >>> a & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e);
      for (d = c = 0;;) {
        if (32 > c) {
          0 === (this.bitmap >>> c & 1) ? c += 1 : (g[c] = null != this.arr[d] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, cljs.core.hash(this.arr[d]), this.arr[d], this.arr[d + 1], e) : this.arr[d + 1], d += 2, c += 1);
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(null, h + 1, g);
    }
    a = Array(2 * (h + 1));
    cljs.core.array_copy(this.arr, 0, a, 0, 2 * g);
    a[2 * g] = c;
    a[2 * g + 1] = d;
    cljs.core.array_copy(this.arr, 2 * g, a, 2 * (g + 1), 2 * (h - g));
    e.val = !0;
    return new cljs.core.BitmapIndexedNode(null, this.bitmap | f, a);
  }
  h = this.arr[2 * g];
  f = this.arr[2 * g + 1];
  if (null == h) {
    return h = f.inode_assoc(a + 5, b, c, d, e), h === f ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, h));
  }
  if (cljs.core.key_test(c, h)) {
    return d === f ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, d));
  }
  e.val = !0;
  return new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(this.arr, 2 * g, null, 2 * g + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(a + 5, h, f, b, c, d)));
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e);
  e = this.arr[2 * f];
  f = this.arr[2 * f + 1];
  return null == e ? f.inode_find(a + 5, b, c, d) : cljs.core.key_test(c, e) ? new cljs.core.MapEntry(e, f, null) : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(a, b, c) {
  var d = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & d)) {
    return this;
  }
  var e = cljs.core.bitmap_indexed_node_index(this.bitmap, d), f = this.arr[2 * e], g = this.arr[2 * e + 1];
  return null == f ? (a = g.inode_without(a + 5, b, c), a === g ? this : null != a ? new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * e + 1, a)) : this.bitmap === d ? null : new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e))) : cljs.core.key_test(c, f) ? new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e)) : this;
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = !0;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function(a, b, c) {
  return new cljs.core.BitmapIndexedNode(a, b, c);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function(a, b, c) {
  var d = a.arr, e = d.length;
  a = Array(2 * (a.cnt - 1));
  for (var f = 0, g = 1, h = 0;;) {
    if (f < e) {
      f !== c && null != d[f] ? (a[g] = d[f], g += 2, h |= 1 << f, f += 1) : f += 1;
    } else {
      return new cljs.core.BitmapIndexedNode(b, h, a);
    }
  }
};
cljs.core.ArrayNodeIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.next_iter = c;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  for (var a = this.arr.length;;) {
    if (null != this.next_iter && this.next_iter.hasNext()) {
      return !0;
    }
    if (this.i < a) {
      var b = this.arr[this.i];
      this.i += 1;
      null != b && (this.next_iter = cljs.core._iterator(b));
    } else {
      return !1;
    }
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  if (this.hasNext()) {
    return this.next_iter.next();
  }
  throw Error("No such element");
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = !0;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function(a, b, c) {
  return new cljs.core.ArrayNodeIterator(a, b, c);
};
cljs.core.ArrayNode = function(a, b, c) {
  this.edit = a;
  this.cnt = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(a) {
  return a === this.edit ? this : new cljs.core.ArrayNode(a, this.cnt, cljs.core.aclone(this.arr));
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = c >>> b & 31, g = this.arr[f];
  if (null == g) {
    return this;
  }
  b = g.inode_without_BANG_(a, b + 5, c, d, e);
  if (b === g) {
    return this;
  }
  if (null == b) {
    if (8 >= this.cnt) {
      return cljs.core.pack_array_node(this, a, f);
    }
    a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
    --a.cnt;
    return a;
  }
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(a, b) {
  for (var c = this.arr.length, d = 0;;) {
    if (d < c) {
      var e = this.arr[d];
      if (null != e) {
        b = e.kv_reduce(a, b);
        if (cljs.core.reduced_QMARK_(b)) {
          return b;
        }
        d += 1;
      } else {
        d += 1;
      }
    } else {
      return b;
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_lookup(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = c >>> b & 31, h = this.arr[g];
  if (null == h) {
    return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f)), a.cnt += 1, a;
  }
  b = h.inode_assoc_BANG_(a, b + 5, c, d, e, f);
  return b === h ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, b);
};
cljs.core.ArrayNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = b >>> a & 31, g = this.arr[f];
  if (null == g) {
    return new cljs.core.ArrayNode(null, this.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e)));
  }
  a = g.inode_assoc(a + 5, b, c, d, e);
  return a === g ? this : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, a));
};
cljs.core.ArrayNode.prototype.inode_find = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_find(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_without = function(a, b, c) {
  var d = b >>> a & 31, e = this.arr[d];
  return null != e ? (a = e.inode_without(a + 5, b, c), a === e ? this : null == a ? 8 >= this.cnt ? cljs.core.pack_array_node(this, null, d) : new cljs.core.ArrayNode(null, this.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a)) : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a))) : this;
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.ArrayNodeIterator(this.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = !0;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function(a, b, c) {
  return new cljs.core.ArrayNode(a, b, c);
};
cljs.core.hash_collision_node_find_index = function(a, b, c) {
  b *= 2;
  for (var d = 0;;) {
    if (d < b) {
      if (cljs.core.key_test(c, a[d])) {
        return d;
      }
      d += 2;
    } else {
      return -1;
    }
  }
};
cljs.core.HashCollisionNode = function(a, b, c, d) {
  this.edit = a;
  this.collision_hash = b;
  this.cnt = c;
  this.arr = d;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = Array(2 * (this.cnt + 1));
  cljs.core.array_copy(this.arr, 0, b, 0, 2 * this.cnt);
  return new cljs.core.HashCollisionNode(a, this.collision_hash, this.cnt, b);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
  if (-1 === b) {
    return this;
  }
  e.val = !0;
  if (1 === this.cnt) {
    return null;
  }
  a = this.ensure_editable(a);
  e = a.arr;
  e[b] = e[2 * this.cnt - 2];
  e[b + 1] = e[2 * this.cnt - 1];
  e[2 * this.cnt - 1] = null;
  e[2 * this.cnt - 2] = null;
  --a.cnt;
  return a;
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? this.arr[a + 1] : d;
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  if (c === this.collision_hash) {
    b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
    if (-1 === b) {
      if (this.arr.length > 2 * this.cnt) {
        return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * this.cnt, d, 2 * this.cnt + 1, e), f.val = !0, a.cnt += 1, a;
      }
      b = this.arr.length;
      c = Array(b + 2);
      cljs.core.array_copy(this.arr, 0, c, 0, b);
      c[b] = d;
      c[b + 1] = e;
      f.val = !0;
      return this.ensure_editable_array(a, this.cnt + 1, c);
    }
    return this.arr[b + 1] === e ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, b + 1, e);
  }
  return (new cljs.core.BitmapIndexedNode(a, 1 << (this.collision_hash >>> b & 31), [null, this, null, null])).inode_assoc_BANG_(a, b, c, d, e, f);
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(a, b, c, d, e) {
  return b === this.collision_hash ? (a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c), -1 === a ? (a = 2 * this.cnt, b = Array(a + 2), cljs.core.array_copy(this.arr, 0, b, 0, a), b[a] = c, b[a + 1] = d, e.val = !0, new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt + 1, b)) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[a + 1], d) ? this : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 
  a + 1, d))) : (new cljs.core.BitmapIndexedNode(null, 1 << (this.collision_hash >>> a & 31), [null, this])).inode_assoc(a, b, c, d, e);
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(a, b, c) {
  return a === this.edit ? (this.arr = c, this.cnt = b, this) : new cljs.core.HashCollisionNode(this.edit, this.collision_hash, b, c);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? new cljs.core.MapEntry(this.arr[a], this.arr[a + 1], null) : d;
};
cljs.core.HashCollisionNode.prototype.inode_without = function(a, b, c) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return -1 === a ? this : 1 === this.cnt ? null : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt - 1, cljs.core.remove_pair(this.arr, cljs.core.quot(a, 2)));
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = !0;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function(a, b, c, d) {
  return new cljs.core.HashCollisionNode(a, b, c, d);
};
cljs.core.create_node = function(a) {
  switch(arguments.length) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core.hash(b);
  if (g === d) {
    return new cljs.core.HashCollisionNode(null, g, 2, [b, c, e, f]);
  }
  var h = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a, g, b, c, h).inode_assoc(a, d, e, f, h);
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = cljs.core.hash(c);
  if (h === e) {
    return new cljs.core.HashCollisionNode(null, h, 2, [c, d, f, g]);
  }
  var k = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b, h, c, d, k).inode_assoc_BANG_(a, b, e, f, g, k);
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.NodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.s ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null == this.s ? new cljs.core.MapEntry(this.nodes[this.i], this.nodes[this.i + 1], null) : cljs.core.first(this.s);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = null == this.s ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
  return null != a ? a : cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.NodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = !0;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function(a, b, c, d, e) {
  return new cljs.core.NodeSeq(a, b, c, d, e);
};
var G__11569_11572 = cljs.core.NodeSeq.prototype, G__11570_11573 = cljs.core.ITER_SYMBOL, G__11571_11574 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11569_11572, G__11570_11573);
goog.object.set(G__11569_11572, G__11570_11573, G__11571_11574);
cljs.core.create_inode_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(a, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == c) {
    for (c = a.length;;) {
      if (b < c) {
        if (null != a[b]) {
          return new cljs.core.NodeSeq(null, a, b, null, null);
        }
        var d = a[b + 1];
        if (cljs.core.truth_(d) && (d = d.inode_seq(), cljs.core.truth_(d))) {
          return new cljs.core.NodeSeq(null, a, b + 2, d, null);
        }
        b += 2;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.NodeSeq(null, a, b, c, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, this.nodes, this.i, cljs.core.next(this.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, this.nodes, this.i, cljs.core.next(this.s));
  return null != a ? a : cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ArrayNodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = !0;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function(a, b, c, d, e) {
  return new cljs.core.ArrayNodeSeq(a, b, c, d, e);
};
var G__11582_11585 = cljs.core.ArrayNodeSeq.prototype, G__11583_11586 = cljs.core.ITER_SYMBOL, G__11584_11587 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11582_11585, G__11583_11586);
goog.object.set(G__11582_11585, G__11583_11586, G__11584_11587);
cljs.core.create_array_node_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, a, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null == d) {
    for (d = b.length;;) {
      if (c < d) {
        var e = b[c];
        if (cljs.core.truth_(e) && (e = e.inode_seq(), cljs.core.truth_(e))) {
          return new cljs.core.ArrayNodeSeq(a, b, c + 1, e, null);
        }
        c += 1;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.ArrayNodeSeq(a, b, c, d, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(a, b, c) {
  this.nil_val = a;
  this.root_iter = b;
  this.seen = c;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  return !this.seen || this.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  if (this.seen) {
    return this.root_iter.next();
  }
  this.seen = !0;
  return new cljs.core.MapEntry(null, this.nil_val, null);
};
cljs.core.HashMapIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = !0;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function(a, b, c) {
  return new cljs.core.HashMapIter(a, b, c);
};
cljs.core.PersistentHashMap = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.root = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ ? new cljs.core.MapEntry(null, this.nil_val, null) : null : null == this.root ? null : this.root.inode_find(0, cljs.core.hash(b), b, null);
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentHashMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.has_nil_QMARK_ ? b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, null, this.nil_val) : b.call(null, c, null, this.nil_val) : c;
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : null != this.root ? cljs.core.unreduced(this.root.kv_reduce(b, a)) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  a = this.root ? cljs.core._iterator(this.root) : cljs.core.nil_iter();
  return this.has_nil_QMARK_ ? new cljs.core.HashMapIter(this.nil_val, a, !1) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashMap(this.meta, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashMap({}, this.root, this.cnt, this.has_nil_QMARK_, this.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, this.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (null == b) {
    return this.has_nil_QMARK_ ? new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, this.root, !1, null, null) : this;
  }
  if (null == this.root) {
    return this;
  }
  a = this.root.inode_without(0, cljs.core.hash(b), b);
  return a === this.root ? this : new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, a, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if (null == b) {
    return this.has_nil_QMARK_ && c === this.nil_val ? this : new cljs.core.PersistentHashMap(this.meta, this.has_nil_QMARK_ ? this.cnt : this.cnt + 1, this.root, !0, c, null);
  }
  a = new cljs.core.Box(!1);
  b = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc(0, cljs.core.hash(b), b, c, a);
  return b === this.root ? this : new cljs.core.PersistentHashMap(this.meta, a.val ? this.cnt + 1 : this.cnt, b, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ : null == this.root ? !1 : this.root.inode_lookup(0, cljs.core.hash(b), b, cljs.core.lookup_sentinel) !== cljs.core.lookup_sentinel;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? (a = null != this.root ? this.root.inode_seq() : null, this.has_nil_QMARK_ ? cljs.core.cons(new cljs.core.MapEntry(null, this.nil_val, null), a) : a) : null;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashMap(b, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  a = this;
  for (b = cljs.core.seq(b);;) {
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    if (cljs.core.vector_QMARK_(c)) {
      a = a.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 1)), b = cljs.core.next(b);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = !0;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentHashMap(a, b, c, d, e, f);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, !1, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(a, b) {
  a = b ? a : cljs.core.aclone(a);
  b = a.length;
  for (var c = 0, d = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (c < b) {
      var e = c + 2;
      d = cljs.core._assoc_BANG_(d, a[c], a[c + 1]);
      c = e;
    } else {
      return cljs.core._persistent_BANG_(d);
    }
  }
};
cljs.core.PersistentHashMap.fromArrays = function(a, b) {
  for (var c = a.length, d = 0, e = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (d < c) {
      var f = d + 1;
      e = e.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, a[d], b[d]);
      d = f;
    } else {
      return cljs.core.persistent_BANG_(e);
    }
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(a) {
  for (var b = a.length, c = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._assoc_BANG_(c, a[d], a[d + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(c), d / 2 + 1)) {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a[d])].join(""));
      }
      d += 2;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
var G__11627_11630 = cljs.core.PersistentHashMap.prototype, G__11628_11631 = cljs.core.ITER_SYMBOL, G__11629_11632 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11627_11630, G__11628_11631);
goog.object.set(G__11627_11630, G__11628_11631, G__11629_11632);
cljs.core.TransientHashMap = function(a, b, c, d, e) {
  this.edit = a;
  this.root = b;
  this.count = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(a) {
  if (this.edit) {
    if (cljs.core.map_entry_QMARK_(a)) {
      return this.assoc_BANG_(cljs.core.key(a), cljs.core.val(a));
    }
    if (cljs.core.vector_QMARK_(a)) {
      return this.assoc_BANG_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(0) : a.call(null, 0), a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(1) : a.call(null, 1));
    }
    a = cljs.core.seq(a);
    for (var b = this;;) {
      var c = cljs.core.first(a);
      if (cljs.core.truth_(c)) {
        a = cljs.core.next(a), b = b.assoc_BANG_(cljs.core.key(c), cljs.core.val(c));
      } else {
        return b;
      }
    }
  } else {
    throw Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(a, b) {
  if (this.edit) {
    if (null == a) {
      this.nil_val !== b && (this.nil_val = b), this.has_nil_QMARK_ || (this.count += 1, this.has_nil_QMARK_ = !0);
    } else {
      var c = new cljs.core.Box(!1);
      a = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc_BANG_(this.edit, 0, cljs.core.hash(a), a, b, c);
      a !== this.root && (this.root = a);
      c.val && (this.count += 1);
    }
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(a) {
  if (this.edit) {
    if (null == a) {
      this.has_nil_QMARK_ && (this.has_nil_QMARK_ = !1, this.nil_val = null, --this.count);
    } else {
      if (null != this.root) {
        var b = new cljs.core.Box(!1);
        a = this.root.inode_without_BANG_(this.edit, 0, cljs.core.hash(a), a, b);
        a !== this.root && (this.root = a);
        b.val && --this.count;
      }
    }
    return this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  if (this.edit) {
    return this.edit = null, new cljs.core.PersistentHashMap(null, this.count, this.root, this.has_nil_QMARK_, this.nil_val, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.edit) {
    return this.count;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : null : null == this.root ? null : this.root.inode_lookup(0, cljs.core.hash(b), b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  return this.conj_BANG_(b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return this.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  return this.assoc_BANG_(b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  return this.without_BANG_(b);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientHashMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = !0;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function(a, b, c, d, e) {
  return new cljs.core.TransientHashMap(a, b, c, d, e);
};
cljs.core.tree_map_seq_push = function(a, b, c) {
  for (var d = b;;) {
    if (null != a) {
      b = c ? a.left : a.right, d = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(d, a), a = b;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentTreeMapSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.stack = b;
  this.ascending_QMARK_ = c;
  this.cnt = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = cljs.core.first(this.stack);
  a = cljs.core.tree_map_seq_push(this.ascending_QMARK_ ? a.right : a.left, cljs.core.next(this.stack), this.ascending_QMARK_);
  return null == a ? null : new cljs.core.PersistentTreeMapSeq(null, a, this.ascending_QMARK_, this.cnt - 1, null);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0 > this.cnt ? cljs.core.count(cljs.core.next(this)) + 1 : this.cnt;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.peek(this.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = cljs.core.first(this.stack);
  a = cljs.core.tree_map_seq_push(this.ascending_QMARK_ ? a.right : a.left, cljs.core.next(this.stack), this.ascending_QMARK_);
  return null != a ? new cljs.core.PersistentTreeMapSeq(null, a, this.ascending_QMARK_, this.cnt - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeMapSeq(b, this.stack, this.ascending_QMARK_, this.cnt, this.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = !0;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMapSeq(a, b, c, d, e);
};
var G__11641_11644 = cljs.core.PersistentTreeMapSeq.prototype, G__11642_11645 = cljs.core.ITER_SYMBOL, G__11643_11646 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11641_11644, G__11642_11645);
goog.object.set(G__11641_11644, G__11642_11645, G__11643_11646);
cljs.core.create_tree_map_seq = function(a, b, c) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(a, null, b), b, c, null);
};
cljs.core.balance_left = function(a, b, c, d) {
  return c instanceof cljs.core.RedNode ? c.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, c.left.blacken(), new cljs.core.BlackNode(a, b, c.right, d, null), null) : c.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.right.key, c.right.val, new cljs.core.BlackNode(c.key, c.val, c.left, c.right.left, null), new cljs.core.BlackNode(a, b, c.right.right, d, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_right = function(a, b, c, d) {
  return d instanceof cljs.core.RedNode ? d.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.key, d.val, new cljs.core.BlackNode(a, b, c, d.left, null), d.right.blacken(), null) : d.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), new cljs.core.BlackNode(d.key, d.val, d.left.right, d.right, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_left_del = function(a, b, c, d) {
  if (c instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c.blacken(), d, null);
  }
  if (d instanceof cljs.core.BlackNode) {
    return cljs.core.balance_right(a, b, c, d.redden());
  }
  if (d instanceof cljs.core.RedNode && d.left instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), cljs.core.balance_right(d.key, d.val, d.left.right, d.right.redden()), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.balance_right_del = function(a, b, c, d) {
  if (d instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c, d.blacken(), null);
  }
  if (c instanceof cljs.core.BlackNode) {
    return cljs.core.balance_left(a, b, c.redden(), d);
  }
  if (c instanceof cljs.core.RedNode && c.right instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(c.right.key, c.right.val, cljs.core.balance_left(c.key, c.val, c.left.redden(), c.right.left), new cljs.core.BlackNode(a, b, c.right.right, d, null), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.tree_map_kv_reduce = function(a, b, c) {
  var d = null != a.left ? function() {
    var d = a.left;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(d, b, c) : cljs.core.tree_map_kv_reduce.call(null, d, b, c);
  }() : c;
  if (cljs.core.reduced_QMARK_(d)) {
    return d;
  }
  var e = function() {
    var c = a.key, e = a.val;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, c, e) : b.call(null, d, c, e);
  }();
  if (cljs.core.reduced_QMARK_(e)) {
    return e;
  }
  if (null != a.right) {
    var f = a.right;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(f, b, e) : cljs.core.tree_map_kv_reduce.call(null, f, b, e);
  }
  return e;
};
cljs.core.BlackNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.MapEntry(0, this.key, null);
    case 1:
      return new cljs.core.MapEntry(1, this.val, null);
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.BlackNode.prototype.add_right = function(a) {
  return a.balance_right(this);
};
cljs.core.BlackNode.prototype.redden = function() {
  return new cljs.core.RedNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  return this;
};
cljs.core.BlackNode.prototype.add_left = function(a) {
  return a.balance_left(this);
};
cljs.core.BlackNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.BlackNode.prototype.balance_left = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.BlackNode.prototype.remove_left = function(a) {
  return cljs.core.balance_left_del(this.key, this.val, a, this.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.BlackNode.prototype.remove_right = function(a) {
  return cljs.core.balance_right_del(this.key, this.val, this.left, a);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.val, this.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.key, this.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.BlackNode.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = !0;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function(a, b, c, d, e) {
  return new cljs.core.BlackNode(a, b, c, d, e);
};
var G__11662_11665 = cljs.core.BlackNode.prototype, G__11663_11666 = cljs.core.ITER_SYMBOL, G__11664_11667 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11662_11665, G__11663_11666);
goog.object.set(G__11662_11665, G__11663_11666, G__11664_11667);
cljs.core.RedNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.MapEntry(0, this.key, null);
    case 1:
      return new cljs.core.MapEntry(1, this.val, null);
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RedNode.prototype.add_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.redden = function() {
  throw Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  return new cljs.core.BlackNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.RedNode.prototype.add_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.RedNode(a, b, c, d, null);
};
cljs.core.RedNode.prototype.balance_left = function(a) {
  return this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, this.left.blacken(), new cljs.core.BlackNode(a.key, a.val, this.right, a.right, null), null) : this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.right.key, this.right.val, new cljs.core.BlackNode(this.key, this.val, this.left, this.right.left, null), new cljs.core.BlackNode(a.key, a.val, this.right.right, a.right, null), null) : new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.RedNode.prototype.balance_right = function(a) {
  return this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left, null), this.right.blacken(), null) : this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.left.key, this.left.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left.left, null), new cljs.core.BlackNode(this.key, this.val, this.left.right, this.right, null), null) : new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.RedNode.prototype.remove_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.RedNode.prototype.remove_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.val, this.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.key, this.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.RedNode.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.RedNode.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.RedNode.cljs$lang$type = !0;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function(a, b, c, d, e) {
  return new cljs.core.RedNode(a, b, c, d, e);
};
var G__11674_11677 = cljs.core.RedNode.prototype, G__11675_11678 = cljs.core.ITER_SYMBOL, G__11676_11679 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11674_11677, G__11675_11678);
goog.object.set(G__11674_11677, G__11675_11678, G__11676_11679);
cljs.core.tree_map_add = function(a, b, c, d, e) {
  if (null == b) {
    return new cljs.core.RedNode(c, d, null, null, null);
  }
  var f = function() {
    var d = b.key;
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
  }();
  if (0 === f) {
    return e[0] = b, null;
  }
  if (0 > f) {
    return f = function() {
      var f = b.left;
      return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(a, f, c, d, e) : cljs.core.tree_map_add.call(null, a, f, c, d, e);
    }(), null != f ? b.add_left(f) : null;
  }
  f = function() {
    var f = b.right;
    return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(a, f, c, d, e) : cljs.core.tree_map_add.call(null, a, f, c, d, e);
  }();
  return null != f ? b.add_right(f) : null;
};
cljs.core.tree_map_append = function(a, b) {
  if (null == a) {
    return b;
  }
  if (null == b) {
    return a;
  }
  if (a instanceof cljs.core.RedNode) {
    if (b instanceof cljs.core.RedNode) {
      var c = function() {
        var c = a.right, e = b.left;
        return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(c, e) : cljs.core.tree_map_append.call(null, c, e);
      }();
      return c instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, new cljs.core.RedNode(a.key, a.val, a.left, c.left, null), new cljs.core.RedNode(b.key, b.val, c.right, b.right, null), null) : new cljs.core.RedNode(a.key, a.val, a.left, new cljs.core.RedNode(b.key, b.val, c, b.right, null), null);
    }
    return new cljs.core.RedNode(a.key, a.val, a.left, function() {
      var c = a.right;
      return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(c, b) : cljs.core.tree_map_append.call(null, c, b);
    }(), null);
  }
  if (b instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(b.key, b.val, function() {
      var c = b.left;
      return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(a, c) : cljs.core.tree_map_append.call(null, a, c);
    }(), b.right, null);
  }
  c = function() {
    var c = a.right, e = b.left;
    return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(c, e) : cljs.core.tree_map_append.call(null, c, e);
  }();
  return c instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, new cljs.core.BlackNode(a.key, a.val, a.left, c.left, null), new cljs.core.BlackNode(b.key, b.val, c.right, b.right, null), null) : cljs.core.balance_left_del(a.key, a.val, a.left, new cljs.core.BlackNode(b.key, b.val, c, b.right, null));
};
cljs.core.tree_map_remove = function(a, b, c, d) {
  if (null != b) {
    var e = function() {
      var d = b.key;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
    }();
    if (0 === e) {
      return d[0] = b, cljs.core.tree_map_append(b.left, b.right);
    }
    if (0 > e) {
      return e = function() {
        var e = b.left;
        return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_remove.call(null, a, e, c, d);
      }(), null != e || null != d[0] ? b.left instanceof cljs.core.BlackNode ? cljs.core.balance_left_del(b.key, b.val, e, b.right) : new cljs.core.RedNode(b.key, b.val, e, b.right, null) : null;
    }
    e = function() {
      var e = b.right;
      return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_remove.call(null, a, e, c, d);
    }();
    return null != e || null != d[0] ? b.right instanceof cljs.core.BlackNode ? cljs.core.balance_right_del(b.key, b.val, b.left, e) : new cljs.core.RedNode(b.key, b.val, b.left, e, null) : null;
  }
  return null;
};
cljs.core.tree_map_replace = function(a, b, c, d) {
  var e = b.key, f = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, e) : a.call(null, c, e);
  return 0 === f ? b.replace(e, d, b.left, b.right) : 0 > f ? b.replace(e, b.val, function() {
    var e = b.left;
    return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_replace.call(null, a, e, c, d);
  }(), b.right) : b.replace(e, b.val, b.left, function() {
    var e = b.right;
    return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_replace.call(null, a, e, c, d);
  }());
};
cljs.core.PersistentTreeMap = function(a, b, c, d, e) {
  this.comp = a;
  this.tree = b;
  this.cnt = c;
  this.meta = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return this.entry_at(b);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(a) {
  for (var b = this.tree;;) {
    if (null != b) {
      var c = a;
      var d = b.key;
      c = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(c, d) : this.comp.call(null, c, d);
      if (0 === c) {
        return b;
      }
      b = 0 > c ? b.left : b.right;
    } else {
      return null;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.entry_at(b);
  return null != a ? a.val : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return null != this.tree ? cljs.core.unreduced(cljs.core.tree_map_kv_reduce(this.tree, b, c)) : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, this.meta, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !1, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  a = [null];
  b = cljs.core.tree_map_remove(this.comp, this.tree, b, a);
  return null == b ? null == cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, 0) ? this : new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, null) : new cljs.core.PersistentTreeMap(this.comp, b.blacken(), this.cnt - 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = [null];
  var d = cljs.core.tree_map_add(this.comp, this.tree, b, c, a);
  return null == d ? (a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, 0), cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, a.val) ? this : new cljs.core.PersistentTreeMap(this.comp, cljs.core.tree_map_replace(this.comp, this.tree, b, c), this.cnt, this.meta, null)) : new cljs.core.PersistentTreeMap(this.comp, d.blacken(), this.cnt + 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null != this.entry_at(b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !0, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, b, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  a = this;
  for (b = cljs.core.seq(b);;) {
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    if (cljs.core.vector_QMARK_(c)) {
      a = a.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 1)), b = cljs.core.next(b);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, b, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  if (0 < this.cnt) {
    a = null;
    for (var d = this.tree;;) {
      if (null != d) {
        var e = b;
        var f = d.key;
        e = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(e, f) : this.comp.call(null, e, f);
        if (0 === e) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), c, -1, null);
        }
        cljs.core.truth_(c) ? 0 > e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.left) : d = d.right : 0 < e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.right) : d = d.left;
      } else {
        return null == a ? null : new cljs.core.PersistentTreeMapSeq(null, a, c, -1, null);
      }
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return cljs.core.key(b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return this.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = !0;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMap(a, b, c, d, e);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
var G__11758_11761 = cljs.core.PersistentTreeMap.prototype, G__11759_11762 = cljs.core.ITER_SYMBOL, G__11760_11763 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11758_11761, G__11759_11762);
goog.object.set(G__11758_11761, G__11759_11762, G__11760_11763);
cljs.core.hash_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (a) {
      var c = cljs.core.nnext(a);
      b = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.second(a));
      a = c;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.array_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = a instanceof cljs.core.IndexedSeq && 0 === a.i ? a.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(a);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.obj_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = [], c = {};
  for (a = cljs.core.seq(a);;) {
    if (a) {
      b.push(cljs.core.first(a));
      var d = c, e = cljs.core.first(a), f = cljs.core.second(a);
      goog.object.set(d, e, f);
      a = cljs.core.nnext(a);
    } else {
      return cljs.core.ObjMap.fromObject(b, c);
    }
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.PersistentTreeMap.EMPTY;;) {
    if (a) {
      var c = cljs.core.nnext(a);
      b = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.second(a));
      a = c;
    } else {
      return b;
    }
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.seq(b);
  for (var c = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(a), null, 0, null, 0);;) {
    if (b) {
      a = cljs.core.nnext(b), c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.first(b), cljs.core.second(b)), b = a;
    } else {
      return c;
    }
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.KeySeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.KeySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.KeySeq(a, this._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.KeySeq(a, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.KeySeq(this.mseq, b);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = !0;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function(a, b) {
  return new cljs.core.KeySeq(a, b);
};
var G__11804_11807 = cljs.core.KeySeq.prototype, G__11805_11808 = cljs.core.ITER_SYMBOL, G__11806_11809 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11804_11807, G__11805_11808);
goog.object.set(G__11804_11807, G__11805_11808, G__11806_11809);
cljs.core.keys = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.KeySeq(a, null) : null;
};
cljs.core.key = function(a) {
  return cljs.core._key(a);
};
cljs.core.ValSeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ValSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.ValSeq(a, this._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.ValSeq(a, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ValSeq(this.mseq, b);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = !0;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function(a, b) {
  return new cljs.core.ValSeq(a, b);
};
var G__11814_11817 = cljs.core.ValSeq.prototype, G__11815_11818 = cljs.core.ITER_SYMBOL, G__11816_11819 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11814_11817, G__11815_11818);
goog.object.set(G__11814_11817, G__11815_11818, G__11816_11819);
cljs.core.vals = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.ValSeq(a, null) : null;
};
cljs.core.val = function(a) {
  return cljs.core._val(a);
};
cljs.core.merge = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.truth_(cljs.core.some(cljs.core.identity, a)) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(a, c) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.truth_(a) ? a : cljs.core.PersistentArrayMap.EMPTY, c);
  }, a) : null;
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.merge_with = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, b))) {
    var c = function(a) {
      return function(b, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, cljs.core.truth_(b) ? b : cljs.core.PersistentArrayMap.EMPTY, cljs.core.seq(c));
      };
    }(function(b, c) {
      var d = cljs.core.first(c), e = cljs.core.second(c);
      return cljs.core.contains_QMARK_(b, d) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, d, function() {
        var c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, d);
        return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, e) : a.call(null, c, e);
      }()) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, d, e);
    });
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(c, b);
  }
  return null;
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.select_keys = function(a, b) {
  var c = cljs.core.PersistentArrayMap.EMPTY;
  for (b = cljs.core.seq(b);;) {
    if (b) {
      var d = cljs.core.first(b), e = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, d, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      c = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(e, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, d, e) : c;
      b = cljs.core.next(b);
    } else {
      return cljs.core._with_meta(c, cljs.core.meta(a));
    }
  }
};
cljs.core.HashSetIter = function(a) {
  this.iter = a;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  return this.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  if (this.iter.hasNext()) {
    return this.iter.next().key;
  }
  throw Error("No such element");
};
cljs.core.HashSetIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = !0;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function(a) {
  return new cljs.core.HashSetIter(a);
};
cljs.core.PersistentHashSet = function(a, b, c) {
  this.meta = a;
  this.hash_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._contains_key_QMARK_(this.hash_map, b) ? b : c;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.HashSetIter(cljs.core._iterator(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(this.meta, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core._count(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.set_QMARK_(b) && cljs.core.count(this) === cljs.core.count(b) && cljs.core.reduce_kv(function(a) {
    return function(a, c) {
      return (a = cljs.core.contains_QMARK_(b, c)) ? a : cljs.core.reduced(!1);
    };
  }(this), !0, this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashSet(cljs.core._as_transient(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, this.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core._dissoc(this.hash_map, b), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(b, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.hash_map, b, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = !0;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function(a, b, c) {
  return new cljs.core.PersistentHashSet(a, b, c);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(a, b) {
  var c = a.length;
  if (c <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    b || cljs.core.aclone(a);
    b = 0;
    for (var d = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);;) {
      if (b < c) {
        var e = b + 1;
        d = cljs.core._assoc_BANG_(d, a[b], null);
        b = e;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(d), null);
      }
    }
  } else {
    for (b = 0, d = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);;) {
      if (b < c) {
        e = b + 1, d = cljs.core._conj_BANG_(d, a[b]), b = e;
      } else {
        return cljs.core._persistent_BANG_(d);
      }
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(a) {
  for (var b = a.length, c = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._conj_BANG_(c, a[d]);
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(c), d + 1)) {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a[d])].join(""));
      }
      d += 1;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(a) {
  for (var b = a.length, c = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._conj_BANG_(c, a[d]), d += 1;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
var G__11871_11874 = cljs.core.PersistentHashSet.prototype, G__11872_11875 = cljs.core.ITER_SYMBOL, G__11873_11876 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11871_11874, G__11872_11875);
goog.object.set(G__11871_11874, G__11872_11875, G__11873_11876);
cljs.core.TransientHashSet = function(a) {
  this.transient_map = a;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, null);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(this.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(this.transient_map, b);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? c : b;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : b;
  }, c = function(a, b, c) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? c : b;
  };
  a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.TransientHashSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : a;
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? b : a;
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = !0;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function(a) {
  return new cljs.core.TransientHashSet(a);
};
cljs.core.PersistentTreeSet = function(a, b, c) {
  this.meta = a;
  this.tree_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.tree_map.entry_at(b);
  return null != a ? a.key : c;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < cljs.core.count(this.tree_map) ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(this.tree_map)) : null;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.set_QMARK_(b) && cljs.core.count(this) === cljs.core.count(b) && cljs.core.reduce_kv(function(a) {
    return function(a, c) {
      return (a = cljs.core.contains_QMARK_(b, c)) ? a : cljs.core.reduced(!1);
    };
  }(this), !0, this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core._empty(this.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.tree_map, b), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(b, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.tree_map, b, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(this.tree_map, b));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(this.tree_map, b, c));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return b;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return cljs.core._comparator(this.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = !0;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function(a, b, c) {
  return new cljs.core.PersistentTreeSet(a, b, c);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
var G__11905_11908 = cljs.core.PersistentTreeSet.prototype, G__11906_11909 = cljs.core.ITER_SYMBOL, G__11907_11910 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__11905_11908, G__11906_11909);
goog.object.set(G__11905_11908, G__11906_11909, G__11907_11910);
cljs.core.set_from_indexed_seq = function(a) {
  a = a.arr;
  a: {
    for (var b = a.length, c = 0, d = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
      if (c < b) {
        var e = c + 1;
        d = d.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, a[c]);
        c = e;
      } else {
        break a;
      }
    }
  }
  return d.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function(a) {
  a = cljs.core.seq(a);
  if (null == a) {
    return cljs.core.PersistentHashSet.EMPTY;
  }
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    return cljs.core.PersistentHashSet.createAsIfByAssoc(a.arr);
  }
  for (var b = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
    if (null != a) {
      var c = cljs.core.next(a);
      b = b.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, a.cljs$core$ISeq$_first$arity$1(null));
      a = c;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_set = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.set(a);
};
cljs.core.hash_set.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, a);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_set_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(a), 0), b);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.replace = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(b) {
    var c = cljs.core.find(a, b);
    return cljs.core.truth_(c) ? cljs.core.val(c) : b;
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    var c = cljs.core.count(b);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b) {
      return function(b, c) {
        var d = cljs.core.find(a, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(b, c));
        return cljs.core.truth_(d) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.second(d)) : b;
      };
    }(c), b, cljs.core.take.cljs$core$IFn$_invoke$arity$2(c, cljs.core.iterate(cljs.core.inc, 0)));
  }
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
    var c = cljs.core.find(a, b);
    return cljs.core.truth_(c) ? cljs.core.second(c) : b;
  }, b);
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    return function(b) {
      return function() {
        var c = null, d = function() {
          return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
        }, e = function(b) {
          return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        }, f = function(c, d) {
          if (cljs.core.contains_QMARK_(cljs.core.deref(b), d)) {
            return c;
          }
          cljs.core._vreset_BANG_(b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(b), d));
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return d.call(this);
            case 1:
              return e.call(this, a);
            case 2:
              return f.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = d;
        c.cljs$core$IFn$_invoke$arity$1 = e;
        c.cljs$core$IFn$_invoke$arity$2 = f;
        return c;
      }();
    }(cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY));
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function e(a, d) {
    return new cljs.core.LazySeq(null, function() {
      var c;
      a: {
        var g = a;
        for (c = d;;) {
          var h = g;
          g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(h, 0, null);
          if (h = cljs.core.seq(h)) {
            if (cljs.core.contains_QMARK_(c, g)) {
              g = cljs.core.rest(h);
            } else {
              c = cljs.core.cons(g, e(cljs.core.rest(h), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(c, g)));
              break a;
            }
          } else {
            c = null;
            break a;
          }
        }
      }
      return c;
    }, null, null);
  }(a, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function(a) {
  for (var b = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.next(a)) {
      b = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return cljs.core.seq(b);
    }
  }
};
cljs.core.name = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_name$arity$1(null);
  }
  if ("string" === typeof a) {
    return a;
  }
  throw Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.zipmap = function(a, b) {
  var c = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  a = cljs.core.seq(a);
  for (b = cljs.core.seq(b);;) {
    if (a && b) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, cljs.core.first(a), cljs.core.first(b)), a = cljs.core.next(a), b = cljs.core.next(b);
    } else {
      return cljs.core.persistent_BANG_(c);
    }
  }
};
cljs.core.max_key = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) > (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.max_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) < (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.min_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(a) {
  this.arr = a;
};
cljs.core.ArrayList.prototype.add = function(a) {
  return this.arr.push(a);
};
cljs.core.ArrayList.prototype.size = function() {
  return this.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  return this.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  return 0 === this.arr.length;
};
cljs.core.ArrayList.prototype.toArray = function() {
  return this.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = !0;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function(a) {
  return new cljs.core.ArrayList(a);
};
cljs.core.array_list = function() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          if (!cljs.core.truth_(c.isEmpty())) {
            var d = cljs.core.vec(c.toArray());
            c.clear();
            a = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, d) : b.call(null, a, d));
          }
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          c.add(e);
          return a === c.size() ? (e = cljs.core.vec(c.toArray()), c.clear(), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e)) : d;
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.array_list());
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    return d ? cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : cljs.core.reduced(c);
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.truth_(function() {
      var b = cljs.core.first(c);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }()) ? cljs.core.cons(cljs.core.first(c), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c))) : null : null;
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function(a, b, c) {
  return function(d) {
    var e = cljs.core._comparator(a);
    d = cljs.core._entry_key(a, d);
    e = e.cljs$core$IFn$_invoke$arity$2 ? e.cljs$core$IFn$_invoke$arity$2(d, c) : e.call(null, d, c);
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, 0) : b.call(null, e, 0);
  };
};
cljs.core.subseq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c);
  return cljs.core.truth_(function() {
    var a = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  }()) ? (a = cljs.core._sorted_seq_from(a, c, !0), cljs.core.truth_(a) ? (c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(c) : d.call(null, c)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !0));
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, c, !0);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(a, d, e), cljs.core.truth_(function() {
      var d = cljs.core.mk_bound_fn(a, b, c);
      return d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(g) : d.call(null, g);
    }()) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c);
  return cljs.core.truth_(function() {
    var a = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  }()) ? (a = cljs.core._sorted_seq_from(a, c, !1), cljs.core.truth_(a) ? (c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(c) : d.call(null, c)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !1));
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, e, !1);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(a, b, c), cljs.core.truth_(function() {
      var b = cljs.core.mk_bound_fn(a, d, e);
      return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(g) : b.call(null, g);
    }()) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(a, b, c) {
  this.i = a;
  this.end = b;
  this.step = c;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  return 0 < this.step ? this.i < this.end : this.i > this.end;
};
cljs.core.RangeIterator.prototype.next = function() {
  var a = this.i;
  this.i += this.step;
  return a;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = !0;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function(a, b, c) {
  return new cljs.core.RangeIterator(a, b, c);
};
cljs.core.Range = function(a, b, c, d, e) {
  this.meta = a;
  this.start = b;
  this.end = c;
  this.step = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Range.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Range.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Range.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 <= b && b < this.cljs$core$ICounted$_count$arity$1(null)) {
    return this.start + b * this.step;
  }
  if (0 <= b && this.start > this.end && 0 === this.step) {
    return this.start;
  }
  throw Error("Index out of bounds");
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cljs$core$ICounted$_count$arity$1(null) ? this.start + b * this.step : 0 <= b && this.start > this.end && 0 === this.step ? this.start : c;
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RangeIterator(this.start, this.end, this.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Range(this.meta, this.start, this.end, this.step, this.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.step ? this.start + this.step < this.end ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : null : this.start + this.step > this.end ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : null;
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.not(this.cljs$core$ISeqable$_seq$arity$1(null)) ? 0 : Math.ceil((this.end - this.start) / this.step);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  for (a = this.start;;) {
    if (0 < this.step ? a < this.end : a > this.end) {
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      a += this.step;
    } else {
      return c;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null == this.cljs$core$ISeqable$_seq$arity$1(null) ? null : this.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null != this.cljs$core$ISeqable$_seq$arity$1(null) ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.step ? this.start < this.end ? this : null : 0 > this.step ? this.start > this.end ? this : null : this.start === this.end ? null : this;
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Range(b, this.start, this.end, this.step, this.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.Range.cljs$lang$type = !0;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Range");
};
cljs.core.__GT_Range = function(a, b, c, d, e) {
  return new cljs.core.Range(a, b, c, d, e);
};
var G__12021_12024 = cljs.core.Range.prototype, G__12022_12025 = cljs.core.ITER_SYMBOL, G__12023_12026 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__12021_12024, G__12022_12025);
goog.object.set(G__12021_12024, G__12022_12025, G__12023_12026);
cljs.core.range = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, a, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(a, b, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.Range(null, a, b, c, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          return 0 === cljs.core.rem(f, a) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e) : d;
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, c))) : null;
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.partition_by = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.array_list(), d = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(c, d) {
      return function() {
        var e = null, f = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, k = function(a) {
          if (!cljs.core.truth_(c.isEmpty())) {
            var d = cljs.core.vec(c.toArray());
            c.clear();
            a = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, d) : b.call(null, a, d));
          }
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, l = function(e, f) {
          var g = cljs.core.deref(d), h = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
          cljs.core.vreset_BANG_(d, h);
          if (cljs.core.keyword_identical_QMARK_(g, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(h, g)) {
            return c.add(f), e;
          }
          g = cljs.core.vec(c.toArray());
          c.clear();
          e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, g) : b.call(null, e, g);
          cljs.core.reduced_QMARK_(e) || c.add(f);
          return e;
        };
        e = function(a, b) {
          switch(arguments.length) {
            case 0:
              return f.call(this);
            case 1:
              return k.call(this, a);
            case 2:
              return l.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        e.cljs$core$IFn$_invoke$arity$0 = f;
        e.cljs$core$IFn$_invoke$arity$1 = k;
        e.cljs$core$IFn$_invoke$arity$2 = l;
        return e;
      }();
    }(c, d);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      var d = cljs.core.first(c), e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      d = cljs.core.cons(d, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(b, c, d, e) {
        return function(b) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
        };
      }(d, e, c, c), cljs.core.next(c)));
      return cljs.core.cons(d, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(a, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(d), c))));
    }
    return null;
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function(a) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, c) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(a, c, cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, c, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), a));
};
cljs.core.reductions = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(c), cljs.core.rest(c)) : new cljs.core.List(null, a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), null, 1, null);
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.reduced_QMARK_(b) ? new cljs.core.List(null, cljs.core.deref(b), null, 1, null) : cljs.core.cons(b, new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    return d ? cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(a, function() {
      var c = cljs.core.first(d);
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }(), cljs.core.rest(d)) : null;
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null)], null);
    }, d = function(b) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)], null);
    }, e = function(b, c) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c)], null);
    }, f = function(b, c, d) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d)], null);
    }, g = function() {
      var b = function(b, c, d, e) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)], null);
      }, c = function(a, c, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return b.call(this, a, c, d, f);
      };
      c.cljs$lang$maxFixedArity = 3;
      c.cljs$lang$applyTo = function(a) {
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return b(c, d, e, a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
    b = function(a, b, l, m) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, l);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, l, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = g.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$3 = f;
    b.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null)], null);
    }, e = function(c) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c)], null);
    }, f = function(c, d) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d)], null);
    }, g = function(c, d, e) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, d, e) : b.call(null, c, d, e)], null);
    }, h = function() {
      var c = function(c, d, e, f) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, c, d, e, f), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f)], null);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var l = Array(arguments.length - 3); k < l.length;) {
              l[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(l, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null)], null);
    }, f = function(d) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d)], null);
    }, g = function(d, e) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e), c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e)], null);
    }, h = function(d, e, f) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(d, e, f) : a.call(null, d, e, f), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, e, f) : b.call(null, d, e, f), c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(d, e, f) : c.call(null, d, e, f)], null);
    }, k = function() {
      var d = function(d, e, f, g) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, d, e, f, g), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, d, e, f, g), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g)], null);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var l = null;
          if (3 < arguments.length) {
            l = 0;
            for (var m = Array(arguments.length - 3); l < m.length;) {
              m[l] = arguments[l + 3], ++l;
            }
            l = new cljs.core.IndexedSeq(m, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, l);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, b) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, d = function(b) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, c) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, e = function(b, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, d) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(b, c) : d.call(null, b, c));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, l = function(b, c, d) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, e) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, e.cljs$core$IFn$_invoke$arity$3 ? e.cljs$core$IFn$_invoke$arity$3(b, c, d) : e.call(null, b, c, d));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, m = function() {
        var b = function(b, c, d, e) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
            return function(a, f) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, b, c, d, e));
            };
          }(a), cljs.core.PersistentVector.EMPTY, a);
        }, c = function(a, c, d, e) {
          var f = null;
          if (3 < arguments.length) {
            f = 0;
            for (var g = Array(arguments.length - 3); f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0, null);
          }
          return b.call(this, a, c, d, f);
        };
        c.cljs$lang$maxFixedArity = 3;
        c.cljs$lang$applyTo = function(a) {
          var c = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return b(c, d, e, a);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = b;
        return c;
      }();
      b = function(a, b, f, g) {
        switch(arguments.length) {
          case 0:
            return c.call(this);
          case 1:
            return d.call(this, a);
          case 2:
            return e.call(this, a, b);
          case 3:
            return l.call(this, a, b, f);
          default:
            var h = null;
            if (3 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 3); h < k.length;) {
                k[h] = arguments[h + 3], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return m.cljs$core$IFn$_invoke$arity$variadic(a, b, f, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = m.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = c;
      b.cljs$core$IFn$_invoke$arity$1 = d;
      b.cljs$core$IFn$_invoke$arity$2 = e;
      b.cljs$core$IFn$_invoke$arity$3 = l;
      b.cljs$core$IFn$_invoke$arity$variadic = m.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.juxt.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (a = cljs.core.seq(a)) {
      a = cljs.core.next(a);
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (cljs.core.seq(b) && 0 < a) {
      --a, b = cljs.core.next(b);
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(a);
  return a;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(a, b);
  return b;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function(a) {
  return a instanceof RegExp;
};
cljs.core.re_matches = function(a, b) {
  if ("string" === typeof b) {
    return a = a.exec(b), cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), b) ? 1 === cljs.core.count(a) ? cljs.core.first(a) : cljs.core.vec(a) : null;
  }
  throw new TypeError("re-matches must match against a string.");
};
cljs.core.re_find = function(a, b) {
  if ("string" === typeof b) {
    return a = a.exec(b), null == a ? null : 1 === cljs.core.count(a) ? cljs.core.first(a) : cljs.core.vec(a);
  }
  throw new TypeError("re-find must match against a string.");
};
cljs.core.re_seq = function(a, b) {
  var c = cljs.core.re_find(a, b), d = b.search(a), e = cljs.core.coll_QMARK_(c) ? cljs.core.first(c) : c, f = d + function() {
    var a = cljs.core.count(e);
    return 1 > a ? 1 : a;
  }(), g = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(b, f);
  return cljs.core.truth_(c) ? new cljs.core.LazySeq(null, function(c, d, e, f, g) {
    return function() {
      return cljs.core.cons(c, f <= cljs.core.count(b) ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2(a, g) : cljs.core.re_seq.call(null, a, g) : null);
    };
  }(c, d, e, f, g), null, null) : null;
};
cljs.core.re_pattern = function(a) {
  if (a instanceof RegExp) {
    return a;
  }
  var b = cljs.core.re_find(/^\(\?([idmsux]*)\)/, a), c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 1, null);
  a = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(a, cljs.core.count(c));
  c = RegExp;
  b = cljs.core.truth_(b) ? b : "";
  return new c(a, b);
};
cljs.core.pr_sequential_writer = function(a, b, c, d, e, f, g) {
  var h = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = null == cljs.core._STAR_print_level_STAR_ ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (null != cljs.core._STAR_print_level_STAR_ && 0 > cljs.core._STAR_print_level_STAR_) {
      return cljs.core._write(a, "#");
    }
    cljs.core._write(a, c);
    if (0 === (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f)) {
      cljs.core.seq(g) && cljs.core._write(a, function() {
        var a = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
        return cljs.core.truth_(a) ? a : "...";
      }());
    } else {
      if (cljs.core.seq(g)) {
        var k = cljs.core.first(g);
        b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(k, a, f) : b.call(null, k, a, f);
      }
      for (var l = cljs.core.next(g), m = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f) - 1;;) {
        if (!l || null != m && 0 === m) {
          cljs.core.seq(l) && 0 === m && (cljs.core._write(a, d), cljs.core._write(a, function() {
            var a = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
            return cljs.core.truth_(a) ? a : "...";
          }()));
          break;
        } else {
          cljs.core._write(a, d);
          var n = cljs.core.first(l);
          c = a;
          g = f;
          b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(n, c, g) : b.call(null, n, c, g);
          var p = cljs.core.next(l);
          c = m - 1;
          l = p;
          m = c;
        }
      }
    }
    return cljs.core._write(a, e);
  } finally {
    cljs.core._STAR_print_level_STAR_ = h;
  }
};
cljs.core.write_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.seq(b);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e);
      cljs.core._write(a, f);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        c = b, cljs.core.chunked_seq_QMARK_(c) ? (b = cljs.core.chunk_first(c), d = cljs.core.chunk_rest(c), c = b, f = cljs.core.count(b), b = d, d = f) : (f = cljs.core.first(c), cljs.core._write(a, f), b = cljs.core.next(c), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.string_print = function(a) {
  if (null == cljs.core._STAR_print_fn_STAR_) {
    throw Error("No *print-fn* fn set for evaluation environment");
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_print_fn_STAR_.call(null, a);
  return null;
};
cljs.core.flush = function() {
  return null;
};
cljs.core.char_escapes = function() {
  return {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
}();
cljs.core.quote_string = function(a) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1('"'), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.replace(/[\\"\b\f\n\r\t]/g, function(a) {
    return cljs.core.char_escapes[a];
  })), cljs.core.str.cljs$core$IFn$_invoke$arity$1('"')].join("");
};
cljs.core.print_meta_QMARK_ = function(a, b) {
  return (a = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "meta", "meta", 1499536964)))) ? (a = null != b ? b.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IMeta$ ? !0 : !1 : !1) ? null != cljs.core.meta(b) : a : a;
};
cljs.core.pr_writer_impl = function(a, b, c) {
  if (null == a) {
    return cljs.core._write(b, "nil");
  }
  cljs.core.print_meta_QMARK_(c, a) && (cljs.core._write(b, "^"), cljs.core.pr_writer(cljs.core.meta(a), b, c), cljs.core._write(b, " "));
  if (a.cljs$lang$type) {
    return a.cljs$lang$ctorPrWriter(a, b, c);
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IPrintWithWriter$)) {
    return a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, b, c);
  }
  if (!0 === a || !1 === a) {
    return cljs.core._write(b, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
  if ("number" === typeof a) {
    return cljs.core._write(b, isNaN(a) ? "##NaN" : a === Number.POSITIVE_INFINITY ? "##Inf" : a === Number.NEGATIVE_INFINITY ? "##-Inf" : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
  if (cljs.core.object_QMARK_(a)) {
    return cljs.core._write(b, "#js "), cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
      var c = cljs.core.MapEntry;
      var d = null != cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, b) ? cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(b) : b;
      return new c(d, a[b], null);
    }, cljs.core.js_keys(a)), cljs.core.pr_writer, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#js [", " ", "]", c, a);
  }
  if (goog.isString(a)) {
    return cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.core._write(b, cljs.core.quote_string(a)) : cljs.core._write(b, a);
  }
  if (goog.isFunction(a)) {
    var d = a.name;
    c = cljs.core.truth_(function() {
      var a = null == d;
      return a ? a : goog.string.isEmpty(d);
    }()) ? "Function" : d;
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, cljs.core._STAR_print_fn_bodies_STAR_ ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")), '"'].join("") : "", "]"], 0));
  }
  if (a instanceof Date) {
    return c = function(a, b) {
      for (a = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");;) {
        if (cljs.core.count(a) < b) {
          a = ["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
        } else {
          return a;
        }
      }
    }, cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.getUTCFullYear())].join(""), "-", c(a.getUTCMonth() + 1, 2), "-", c(a.getUTCDate(), 2), "T", c(a.getUTCHours(), 2), ":", c(a.getUTCMinutes(), 2), ":", c(a.getUTCSeconds(), 2), ".", c(a.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
  }
  if (cljs.core.regexp_QMARK_(a)) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', a.source, '"'], 0));
  }
  if (cljs.core.truth_(function() {
    var b = null == a ? null : a.constructor;
    return null == b ? null : b.cljs$lang$ctorStr;
  }())) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", a.constructor.cljs$lang$ctorStr.replace(/\//g, "."), "]"], 0));
  }
  d = function() {
    var b = null == a ? null : a.constructor;
    return null == b ? null : b.name;
  }();
  c = cljs.core.truth_(function() {
    var a = null == d;
    return a ? a : goog.string.isEmpty(d);
  }()) ? "Object" : d;
  return null == a.constructor ? cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, "]"], 0)) : cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, " ", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), "]"], 0));
};
cljs.core.pr_writer = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(c);
  return cljs.core.truth_(d) ? (c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl), d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c)) : cljs.core.pr_writer_impl(a, b, c);
};
cljs.core.pr_seq_writer = function(a, b, c) {
  cljs.core.pr_writer(cljs.core.first(a), b, c);
  a = cljs.core.seq(cljs.core.next(a));
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f);
      cljs.core._write(b, " ");
      cljs.core.pr_writer(g, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        d = a, cljs.core.chunked_seq_QMARK_(d) ? (a = cljs.core.chunk_first(d), e = cljs.core.chunk_rest(d), d = a, g = cljs.core.count(a), a = e, e = g) : (g = cljs.core.first(d), cljs.core._write(b, " "), cljs.core.pr_writer(g, b, c), a = cljs.core.next(d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_sb_with_opts = function(a, b) {
  var c = new goog.string.StringBuffer, d = new cljs.core.StringBufferWriter(c);
  cljs.core.pr_seq_writer(a, d, b);
  d.cljs$core$IWriter$_flush$arity$1(null);
  return c;
};
cljs.core.pr_str_with_opts = function(a, b) {
  return cljs.core.empty_QMARK_(a) ? "" : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(a, b))].join("");
};
cljs.core.prn_str_with_opts = function(a, b) {
  if (cljs.core.empty_QMARK_(a)) {
    return "\n";
  }
  a = cljs.core.pr_sb_with_opts(a, b);
  a.append("\n");
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
};
cljs.core.pr_with_opts = function(a, b) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(a, b));
};
cljs.core.newline = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.string_print("\n");
  return cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939))) ? cljs.core.flush() : null;
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.pr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.print = function() {
  var a = function(a) {
    return cljs.core.pr_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}();
cljs.core.print_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  return cljs.core._STAR_print_newline_STAR_ ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.pr_opts());
  return cljs.core._STAR_print_newline_STAR_ ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.strip_ns = function(a) {
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(a)) : cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(a));
};
cljs.core.lift_ns = function(a) {
  if (cljs.core._STAR_print_namespace_maps_STAR_) {
    var b = cljs.core.seq(a), c = cljs.core.seq(b), d = cljs.core.first(c);
    cljs.core.next(c);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null);
    c = cljs.core.empty(a);
    for (a = null;;) {
      d = a;
      b = cljs.core.seq(b);
      a = cljs.core.first(b);
      var e = cljs.core.next(b), f = a;
      a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      if (cljs.core.truth_(f)) {
        if (a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(d)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(d, cljs.core.namespace(a))) {
              c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.strip_ns(a), b), a = d, b = e;
            } else {
              return null;
            }
          } else {
            if (d = cljs.core.namespace(a), cljs.core.truth_(d)) {
              c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.strip_ns(a), b), a = d, b = e;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null);
      }
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function(a, b, c, d, e) {
  return cljs.core.pr_sequential_writer(d, function(a, b, d) {
    var e = cljs.core.key(a);
    c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(e, b, d) : c.call(null, e, b, d);
    cljs.core._write(b, " ");
    a = cljs.core.val(a);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(a, b, d) : c.call(null, a, b, d);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "{"].join(""), ", ", "}", e, cljs.core.seq(b));
};
cljs.core.print_map = function(a, b, c, d) {
  var e = cljs.core.map_QMARK_(a) ? cljs.core.lift_ns(a) : null, f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null);
  e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 1, null);
  return cljs.core.truth_(f) ? cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join(""), e, b, c, d) : cljs.core.print_prefix_map(null, a, b, c, d);
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#'");
  return cljs.core.pr_writer(this.sym, b, c);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#queue [", " ", "]", c, cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.alter_meta_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(b, a.meta, c);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.reset_meta_BANG_ = function(a, b) {
  return a.meta = b;
};
cljs.core.add_watch = function(a, b, c) {
  cljs.core._add_watch(a, b, c);
  return a;
};
cljs.core.remove_watch = function(a, b) {
  cljs.core._remove_watch(a, b);
  return a;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(a) {
  null == cljs.core.gensym_counter && (cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0));
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(a, b) {
  this.f = a;
  this.value = b;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  cljs.core.truth_(this.f) && (this.value = this.f.cljs$core$IFn$_invoke$arity$0 ? this.f.cljs$core$IFn$_invoke$arity$0() : this.f.call(null), this.f = null);
  return this.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return cljs.core.not(this.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Delay.cljs$lang$type = !0;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function(a, b) {
  return new cljs.core.Delay(a, b);
};
cljs.core.delay_QMARK_ = function(a) {
  return a instanceof cljs.core.Delay;
};
cljs.core.force = function(a) {
  return cljs.core.delay_QMARK_(a) ? cljs.core.deref(a) : a;
};
cljs.core.realized_QMARK_ = function(a) {
  return cljs.core._realized_QMARK_(a);
};
cljs.core.preserving_reduced = function(a) {
  return function(b, c) {
    b = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return cljs.core.reduced_QMARK_(b) ? cljs.core.reduced(b) : b;
  };
};
cljs.core.cat = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
      }, e = function(b) {
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }, f = function(a, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(b, a, c);
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  }(cljs.core.preserving_reduced(a));
};
cljs.core.halt_when = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(a, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function(c) {
    return function() {
      var d = null, e = function() {
        return c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
      }, f = function(a) {
        return cljs.core.map_QMARK_(a) && cljs.core.contains_QMARK_(a, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)) ? (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(a) : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(a) : c.call(null, a);
      }, g = function(d, e) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e)) ? cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(b) ? function() {
          var a = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, e) : b.call(null, a, e);
        }() : e], null)) : c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e);
      };
      d = function(a, b) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, a);
          case 2:
            return g.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    return function(b) {
      return function() {
        var c = null, d = function() {
          return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
        }, e = function(b) {
          return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        }, f = function(c, d) {
          var e = cljs.core.deref(b);
          cljs.core.vreset_BANG_(b, d);
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e, d) ? c : a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return d.call(this);
            case 1:
              return e.call(this, a);
            case 2:
              return f.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = d;
        c.cljs$core$IFn$_invoke$arity$1 = e;
        c.cljs$core$IFn$_invoke$arity$2 = f;
        return c;
      }();
    }(cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)));
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), a);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(b) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < a;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(b) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < a;
  }, b);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(a, b) {
  this.xform = a;
  this.coll = b;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return cljs.core.TransformerIterator.create(this.xform, cljs.core.iter(this.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(this.xform, this.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), c, this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = !0;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function(a, b) {
  return new cljs.core.Eduction(a, b);
};
var G__12264_12267 = cljs.core.Eduction.prototype, G__12265_12268 = cljs.core.ITER_SYMBOL, G__12266_12269 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__12264_12267, G__12265_12268);
goog.object.set(G__12264_12267, G__12265_12268, G__12266_12269);
cljs.core.eduction = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(a)), cljs.core.last(a));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.run_BANG_ = function(a, b) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
  }, null, b);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function(a) {
  if (null != a && null != a.cljs$core$IEncodeJS$_clj__GT_js$arity$1) {
    return a.cljs$core$IEncodeJS$_clj__GT_js$arity$1(a);
  }
  var b = cljs.core._clj__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clj__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", a);
};
cljs.core._key__GT_js = function(a) {
  if (null != a && null != a.cljs$core$IEncodeJS$_key__GT_js$arity$1) {
    return a.cljs$core$IEncodeJS$_key__GT_js$arity$1(a);
  }
  var b = cljs.core._key__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", a);
};
cljs.core.key__GT_js = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(a, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return (null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEncodeJS$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) ? cljs.core._clj__GT_js(a) : "string" === typeof a || "number" === typeof a || a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a) : cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 
  0));
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, b) : b, d = cljs.core.get.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name), e = function(a, b, c, d) {
    return function(a) {
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(a, f);
    };
  }(b, c, c, d), f = function(a, b, c, d) {
    return function p(a) {
      if (null == a) {
        return null;
      }
      if (null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEncodeJS$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) {
        return cljs.core._clj__GT_js(a);
      }
      if (a instanceof cljs.core.Keyword) {
        return d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(a) : d.call(null, a);
      }
      if (a instanceof cljs.core.Symbol) {
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
      }
      if (cljs.core.map_QMARK_(a)) {
        var b = {};
        a = cljs.core.seq(a);
        for (var c = null, f = 0, g = 0;;) {
          if (g < f) {
            var h = c.cljs$core$IIndexed$_nth$arity$2(null, g), k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(h, 0, null), l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(h, 1, null);
            h = b;
            k = e(k);
            l = p(l);
            goog.object.set(h, k, l);
            g += 1;
          } else {
            if (a = cljs.core.seq(a)) {
              cljs.core.chunked_seq_QMARK_(a) ? (f = cljs.core.chunk_first(a), a = cljs.core.chunk_rest(a), c = f, f = cljs.core.count(f)) : (c = cljs.core.first(a), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), c = b, f = e(f), g = p(g), goog.object.set(c, f, g), a = cljs.core.next(a), c = null, f = 0), g = 0;
            } else {
              break;
            }
          }
        }
        return b;
      }
      if (cljs.core.coll_QMARK_(a)) {
        b = [];
        a = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(p, a));
        c = null;
        for (g = f = 0;;) {
          if (g < f) {
            h = c.cljs$core$IIndexed$_nth$arity$2(null, g), b.push(h), g += 1;
          } else {
            if (a = cljs.core.seq(a)) {
              c = a, cljs.core.chunked_seq_QMARK_(c) ? (a = cljs.core.chunk_first(c), g = cljs.core.chunk_rest(c), c = a, f = cljs.core.count(a), a = g) : (a = cljs.core.first(c), b.push(a), a = cljs.core.next(c), c = null, f = 0), g = 0;
            } else {
              break;
            }
          }
        }
        return b;
      }
      return a;
    };
  }(b, c, c, d);
  return f(a);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function(a, b) {
  if (null != a && null != a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2) {
    return a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(a, b);
  }
  var c = cljs.core._js__GT_clj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._js__GT_clj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", a);
};
cljs.core.js__GT_clj = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !1], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, b) : b, d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252)), e = cljs.core.truth_(d) ? cljs.core.keyword : cljs.core.str;
  return function(a, c, d, e) {
    return function n(f) {
      return (null != f ? cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IEncodeClojure$ || (f.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, f)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, f)) ? cljs.core._js__GT_clj(f, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, b)) : cljs.core.seq_QMARK_(f) ? cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(n, f)) : cljs.core.map_entry_QMARK_(f) ? 
      new cljs.core.MapEntry(n(cljs.core.key(f)), n(cljs.core.val(f)), null) : cljs.core.coll_QMARK_(f) ? cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(f), cljs.core.map.cljs$core$IFn$_invoke$arity$2(n, f)) : cljs.core.array_QMARK_(f) ? cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(n, f)) : cljs.core.type(f) === Object ? cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
        return function(a, b, c, d) {
          return function w(e) {
            return new cljs.core.LazySeq(null, function(a, b, c, d) {
              return function() {
                for (;;) {
                  var a = cljs.core.seq(e);
                  if (a) {
                    if (cljs.core.chunked_seq_QMARK_(a)) {
                      var b = cljs.core.chunk_first(a), c = cljs.core.count(b), g = cljs.core.chunk_buffer(c);
                      a: {
                        for (var h = 0;;) {
                          if (h < c) {
                            var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, h);
                            cljs.core.chunk_append(g, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(k) : d.call(null, k), n(f[k])], null));
                            h += 1;
                          } else {
                            b = !0;
                            break a;
                          }
                        }
                      }
                      return b ? cljs.core.chunk_cons(cljs.core.chunk(g), w(cljs.core.chunk_rest(a))) : cljs.core.chunk_cons(cljs.core.chunk(g), null);
                    }
                    g = cljs.core.first(a);
                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(g) : d.call(null, g), n(f[g])], null), w(cljs.core.rest(a)));
                  }
                  return null;
                }
              };
            }(a, b, c, d), null, null);
          };
        }(a, c, d, e)(cljs.core.js_keys(f));
      }()) : f;
    };
  }(b, c, d, e)(a);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function(a) {
  return function(b) {
    return function() {
      var c = function(c) {
        var d = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(b), c, cljs.core.lookup_sentinel);
        d === cljs.core.lookup_sentinel && (d = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, c), cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(b, cljs.core.assoc, c, d));
        return d;
      }, d = function(a) {
        var b = null;
        if (0 < arguments.length) {
          b = 0;
          for (var d = Array(arguments.length - 0); b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(d, 0, null);
        }
        return c.call(this, b);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return c(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
  }(cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
};
cljs.core.trampoline = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (a = a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), !cljs.core.fn_QMARK_(a)) {
      return a;
    }
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, b);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Math.random() * a;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function(a) {
  return Math.floor(Math.random() * a);
};
cljs.core.rand_nth = function(a) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rand_int(cljs.core.count(a)));
};
cljs.core.group_by = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    var c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.PersistentVector.EMPTY), d));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), b));
};
cljs.core.make_hierarchy = function() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function() {
  null == cljs.core._global_hierarchy && (cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy()));
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), a, b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.isa_QMARK_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), a, b);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, c);
  if (!d && !(d = cljs.core.contains_QMARK_(function() {
    var c = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b);
  }(), c)) && (d = cljs.core.vector_QMARK_(c)) && (d = cljs.core.vector_QMARK_(b))) {
    if (d = cljs.core.count(c) === cljs.core.count(b)) {
      d = !0;
      for (var e = 0;;) {
        if (d && e !== cljs.core.count(c)) {
          d = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(a, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e)), e += 1;
        } else {
          return d;
        }
      }
    } else {
      return d;
    }
  } else {
    return d;
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(cljs.core.namespace(b))) {
    throw Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a, b], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (!cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(b, c)) {
    throw Error("Assert failed: (not\x3d tag parent)");
  }
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), f = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), g = function(a, b, c) {
    return function(d, e, f, g, h) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b, c) {
        return function(a, b) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(h, b, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(g, h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(g) : h.call(null, g))));
        };
      }(a, b, c), d, cljs.core.cons(e, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null, e)));
    };
  }(d, e, f);
  if (cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c)) {
    b = null;
  } else {
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(b) : f.call(null, b), c)) {
      throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "as ancestor"].join(""));
    }
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(c) : f.call(null, c), b)) {
      throw Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "as ancestor"].join(""));
    }
    b = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(d, b, cljs.core.PersistentHashSet.EMPTY), c)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), g((new cljs.core.Keyword(null, "ancestors", 
    "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b, e, c, f), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), g((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), c, f, b, e)], null);
  }
  return cljs.core.truth_(b) ? b : a;
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a, b], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) : cljs.core.PersistentHashSet.EMPTY, f = cljs.core.truth_(cljs.core.not_empty(e)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, b, e) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(d, 
  b), g = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(a, b, c) {
    return function(a) {
      return cljs.core.cons(cljs.core.first(a), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), cljs.core.second(a)));
    };
  }(d, e, f), cljs.core.seq(f)));
  return cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b, c, d) {
    return function(a, b) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, a, b);
    };
  }(d, e, f, g), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, g)) : a;
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function(a, b, c, d) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, function(a) {
    return cljs.core.deref(b);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(c, function(a) {
    return cljs.core.deref(d);
  });
};
cljs.core.prefers_STAR_ = function(a, b, c) {
  var d = function() {
    var b = cljs.core.deref(c);
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }();
  d = cljs.core.truth_(cljs.core.truth_(d) ? d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b) : d) ? !0 : null;
  if (cljs.core.truth_(d)) {
    return d;
  }
  d = function() {
    for (var d = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(b);;) {
      if (0 < cljs.core.count(d)) {
        cljs.core.truth_(function() {
          var b = cljs.core.first(d);
          return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(a, b, c) : cljs.core.prefers_STAR_.call(null, a, b, c);
        }()), d = cljs.core.rest(d);
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(d)) {
    return d;
  }
  d = function() {
    for (var d = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(a);;) {
      if (0 < cljs.core.count(d)) {
        cljs.core.truth_(function() {
          var a = cljs.core.first(d);
          return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(a, b, c) : cljs.core.prefers_STAR_.call(null, a, b, c);
        }()), d = cljs.core.rest(d);
      } else {
        return null;
      }
    }
  }();
  return cljs.core.truth_(d) ? d : !1;
};
cljs.core.dominates = function(a, b, c, d) {
  c = cljs.core.prefers_STAR_(a, b, c);
  return cljs.core.truth_(c) ? c : cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(d, a, b);
};
cljs.core.find_and_cache_best_method = function(a, b, c, d, e, f, g, h) {
  var k = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(d, f) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(c), b, g)) {
      f = cljs.core.truth_(function() {
        var a = null == d;
        return a ? a : cljs.core.dominates(g, cljs.core.first(d), e, cljs.core.deref(c));
      }()) ? f : d;
      if (!cljs.core.truth_(cljs.core.dominates(cljs.core.first(f), g, e, cljs.core.deref(c)))) {
        throw Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(g), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(f)), ", and neither is preferred"].join(""));
      }
      return f;
    }
    return d;
  }, null, cljs.core.deref(d)), l = function() {
    var a;
    if (a = null == k) {
      a = cljs.core.deref(d), a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
    }
    return cljs.core.truth_(a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, a], null) : k;
  }();
  if (cljs.core.truth_(l)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(g), cljs.core.deref(c))) {
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(f, cljs.core.assoc, b, cljs.core.second(l)), cljs.core.second(l);
    }
    cljs.core.reset_cache(f, d, g, c);
    return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : cljs.core.find_and_cache_best_method.call(null, a, b, c, d, e, f, g, h);
  }
  return null;
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_reset$arity$1) {
    return a.cljs$core$IMultiFn$_reset$arity$1(a);
  }
  var b = cljs.core._reset[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._reset._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-reset", a);
};
cljs.core._add_method = function(a, b, c) {
  if (null != a && null != a.cljs$core$IMultiFn$_add_method$arity$3) {
    return a.cljs$core$IMultiFn$_add_method$arity$3(a, b, c);
  }
  var d = cljs.core._add_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-add-method", a);
};
cljs.core._remove_method = function(a, b) {
  if (null != a && null != a.cljs$core$IMultiFn$_remove_method$arity$2) {
    return a.cljs$core$IMultiFn$_remove_method$arity$2(a, b);
  }
  var c = cljs.core._remove_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-remove-method", a);
};
cljs.core._prefer_method = function(a, b, c) {
  if (null != a && null != a.cljs$core$IMultiFn$_prefer_method$arity$3) {
    return a.cljs$core$IMultiFn$_prefer_method$arity$3(a, b, c);
  }
  var d = cljs.core._prefer_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._prefer_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefer-method", a);
};
cljs.core._get_method = function(a, b) {
  if (null != a && null != a.cljs$core$IMultiFn$_get_method$arity$2) {
    return a.cljs$core$IMultiFn$_get_method$arity$2(a, b);
  }
  var c = cljs.core._get_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._get_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-get-method", a);
};
cljs.core._methods = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_methods$arity$1) {
    return a.cljs$core$IMultiFn$_methods$arity$1(a);
  }
  var b = cljs.core._methods[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._methods._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-methods", a);
};
cljs.core._prefers = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_prefers$arity$1) {
    return a.cljs$core$IMultiFn$_prefers$arity$1(a);
  }
  var b = cljs.core._prefers[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._prefers._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefers", a);
};
cljs.core._default_dispatch_val = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_default_dispatch_val$arity$1) {
    return a.cljs$core$IMultiFn$_default_dispatch_val$arity$1(a);
  }
  var b = cljs.core._default_dispatch_val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._default_dispatch_val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", a);
};
cljs.core._dispatch_fn = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_dispatch_fn$arity$1) {
    return a.cljs$core$IMultiFn$_dispatch_fn$arity$1(a);
  }
  var b = cljs.core._dispatch_fn[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._dispatch_fn._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", a);
};
cljs.core.throw_no_method_error = function(a, b) {
  throw Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.MultiFn = function(a, b, c, d, e, f, g, h) {
  this.name = a;
  this.dispatch_fn = b;
  this.default_dispatch_val = c;
  this.hierarchy = d;
  this.method_table = e;
  this.prefer_table = f;
  this.method_cache = g;
  this.cached_hierarchy = h;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    var b = a.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : a.dispatch_fn.call(null), c = this.cljs$core$IMultiFn$_get_method$arity$2(null, b);
    cljs.core.truth_(c) || cljs.core.throw_no_method_error(a.name, b);
    return c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
  }, c = function(a, b) {
    a = this;
    var c = a.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$1(b) : a.dispatch_fn.call(null, b), d = this.cljs$core$IMultiFn$_get_method$arity$2(null, c);
    cljs.core.truth_(d) || cljs.core.throw_no_method_error(a.name, c);
    return d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    var d = a.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$2(b, c) : a.dispatch_fn.call(null, b, c), e = this.cljs$core$IMultiFn$_get_method$arity$2(null, d);
    cljs.core.truth_(e) || cljs.core.throw_no_method_error(a.name, d);
    return e.cljs$core$IFn$_invoke$arity$2 ? e.cljs$core$IFn$_invoke$arity$2(b, c) : e.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    var e = a.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.dispatch_fn.call(null, b, c, d), f = this.cljs$core$IMultiFn$_get_method$arity$2(null, e);
    cljs.core.truth_(f) || cljs.core.throw_no_method_error(a.name, e);
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(b, c, d) : f.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    var f = a.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.dispatch_fn.call(null, b, c, d, e), g = this.cljs$core$IMultiFn$_get_method$arity$2(null, f);
    cljs.core.truth_(g) || cljs.core.throw_no_method_error(a.name, f);
    return g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : g.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    var g = a.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.dispatch_fn.call(null, b, c, d, e, f), h = this.cljs$core$IMultiFn$_get_method$arity$2(null, g);
    cljs.core.truth_(h) || cljs.core.throw_no_method_error(a.name, g);
    return h.cljs$core$IFn$_invoke$arity$5 ? h.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : h.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    var h = a.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.dispatch_fn.call(null, b, c, d, e, f, g), k = this.cljs$core$IMultiFn$_get_method$arity$2(null, h);
    cljs.core.truth_(k) || cljs.core.throw_no_method_error(a.name, h);
    return k.cljs$core$IFn$_invoke$arity$6 ? k.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : k.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    var k = a.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.dispatch_fn.call(null, b, c, d, e, f, g, h), l = this.cljs$core$IMultiFn$_get_method$arity$2(null, k);
    cljs.core.truth_(l) || cljs.core.throw_no_method_error(a.name, k);
    return l.cljs$core$IFn$_invoke$arity$7 ? l.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : l.call(null, b, c, d, e, f, g, h);
  }, l = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    var l = a.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k), m = this.cljs$core$IMultiFn$_get_method$arity$2(null, l);
    cljs.core.truth_(m) || cljs.core.throw_no_method_error(a.name, l);
    return m.cljs$core$IFn$_invoke$arity$8 ? m.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : m.call(null, b, c, d, e, f, g, h, k);
  }, m = function(a, b, c, d, e, f, g, h, k, l) {
    a = this;
    var m = a.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, l) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l), n = this.cljs$core$IMultiFn$_get_method$arity$2(null, m);
    cljs.core.truth_(n) || cljs.core.throw_no_method_error(a.name, m);
    return n.cljs$core$IFn$_invoke$arity$9 ? n.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, l) : n.call(null, b, c, d, e, f, g, h, k, l);
  }, n = function(a, b, c, d, e, f, g, h, k, l, m) {
    a = this;
    var n = a.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, l, m) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m), p = this.cljs$core$IMultiFn$_get_method$arity$2(null, n);
    cljs.core.truth_(p) || cljs.core.throw_no_method_error(a.name, n);
    return p.cljs$core$IFn$_invoke$arity$10 ? p.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, l, m) : p.call(null, b, c, d, e, f, g, h, k, l, m);
  }, p = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    a = this;
    var p = a.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, l, m, n) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n), q = this.cljs$core$IMultiFn$_get_method$arity$2(null, p);
    cljs.core.truth_(q) || cljs.core.throw_no_method_error(a.name, p);
    return q.cljs$core$IFn$_invoke$arity$11 ? q.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, l, m, n) : q.call(null, b, c, d, e, f, g, h, k, l, m, n);
  }, q = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
    a = this;
    var q = a.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, l, m, n, p) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p), r = this.cljs$core$IMultiFn$_get_method$arity$2(null, q);
    cljs.core.truth_(r) || cljs.core.throw_no_method_error(a.name, q);
    return r.cljs$core$IFn$_invoke$arity$12 ? r.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, l, m, n, p) : r.call(null, b, c, d, e, f, g, h, k, l, m, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
    a = this;
    var r = a.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, l, m, n, p, q) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q), t = this.cljs$core$IMultiFn$_get_method$arity$2(null, r);
    cljs.core.truth_(t) || cljs.core.throw_no_method_error(a.name, r);
    return t.cljs$core$IFn$_invoke$arity$13 ? t.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, l, m, n, p, q) : t.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
    a = this;
    var t = a.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, l, m, n, p, q, r) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r), v = this.cljs$core$IMultiFn$_get_method$arity$2(null, t);
    cljs.core.truth_(v) || cljs.core.throw_no_method_error(a.name, t);
    return v.cljs$core$IFn$_invoke$arity$14 ? v.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, l, m, n, p, q, r) : v.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }, u = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    a = this;
    var v = a.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t), u = this.cljs$core$IMultiFn$_get_method$arity$2(null, v);
    cljs.core.truth_(u) || cljs.core.throw_no_method_error(a.name, v);
    return u.cljs$core$IFn$_invoke$arity$15 ? u.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : u.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }, v = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) {
    a = this;
    var u = a.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v), y = this.cljs$core$IMultiFn$_get_method$arity$2(null, u);
    cljs.core.truth_(y) || cljs.core.throw_no_method_error(a.name, u);
    return y.cljs$core$IFn$_invoke$arity$16 ? y.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : y.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
  }, w = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) {
    a = this;
    var y = a.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u), w = this.cljs$core$IMultiFn$_get_method$arity$2(null, y);
    cljs.core.truth_(w) || cljs.core.throw_no_method_error(a.name, y);
    return w.cljs$core$IFn$_invoke$arity$17 ? w.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : w.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
  }, x = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y) {
    a = this;
    var w = a.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y), z = this.cljs$core$IMultiFn$_get_method$arity$2(null, w);
    cljs.core.truth_(z) || cljs.core.throw_no_method_error(a.name, w);
    return z.cljs$core$IFn$_invoke$arity$18 ? z.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y) : z.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y);
  }, y = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w) {
    a = this;
    var z = a.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w), x = this.cljs$core$IMultiFn$_get_method$arity$2(null, z);
    cljs.core.truth_(x) || cljs.core.throw_no_method_error(a.name, z);
    return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w) : x.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w);
  }, z = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z) {
    a = this;
    var x = a.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z), F = this.cljs$core$IMultiFn$_get_method$arity$2(null, x);
    cljs.core.truth_(F) || cljs.core.throw_no_method_error(a.name, x);
    return F.cljs$core$IFn$_invoke$arity$20 ? F.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z) : F.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z);
  }, F = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z, x) {
    a = this;
    var F = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a.dispatch_fn, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z, x], 0)), D = this.cljs$core$IMultiFn$_get_method$arity$2(null, F);
    cljs.core.truth_(D) || cljs.core.throw_no_method_error(a.name, F);
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(D, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, l, m, n, p, q, r, t, v, u, y, w, z, x], 0));
  };
  a = function(a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W, ba) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, A);
      case 3:
        return d.call(this, a, A, C);
      case 4:
        return e.call(this, a, A, C, I);
      case 5:
        return f.call(this, a, A, C, I, D);
      case 6:
        return g.call(this, a, A, C, I, D, H);
      case 7:
        return h.call(this, a, A, C, I, D, H, B);
      case 8:
        return k.call(this, a, A, C, I, D, H, B, G);
      case 9:
        return l.call(this, a, A, C, I, D, H, B, G, K);
      case 10:
        return m.call(this, a, A, C, I, D, H, B, G, K, J);
      case 11:
        return n.call(this, a, A, C, I, D, H, B, G, K, J, M);
      case 12:
        return p.call(this, a, A, C, I, D, H, B, G, K, J, M, E);
      case 13:
        return q.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O);
      case 14:
        return r.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P);
      case 15:
        return t.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L);
      case 16:
        return u.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N);
      case 17:
        return v.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R);
      case 18:
        return w.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S);
      case 19:
        return x.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T);
      case 20:
        return y.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X);
      case 21:
        return z.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W);
      case 22:
        return F.call(this, a, A, C, I, D, H, B, G, K, J, M, E, O, P, L, N, R, S, T, X, W, ba);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = u;
  a.cljs$core$IFn$_invoke$arity$17 = v;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = y;
  a.cljs$core$IFn$_invoke$arity$21 = z;
  a.cljs$core$IFn$_invoke$arity$22 = F;
  return a;
}();
cljs.core.MultiFn.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = this.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : this.dispatch_fn.call(null), b = this.cljs$core$IMultiFn$_get_method$arity$2(null, a);
  cljs.core.truth_(b) || cljs.core.throw_no_method_error(this.name, a);
  return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = this.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : this.dispatch_fn.call(null, a), c = this.cljs$core$IMultiFn$_get_method$arity$2(null, b);
  cljs.core.truth_(c) || cljs.core.throw_no_method_error(this.name, b);
  return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(a) : c.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = this.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : this.dispatch_fn.call(null, a, b), d = this.cljs$core$IMultiFn$_get_method$arity$2(null, c);
  cljs.core.truth_(d) || cljs.core.throw_no_method_error(this.name, c);
  return d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(a, b) : d.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = this.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.dispatch_fn.call(null, a, b, c), e = this.cljs$core$IMultiFn$_get_method$arity$2(null, d);
  cljs.core.truth_(e) || cljs.core.throw_no_method_error(this.name, d);
  return e.cljs$core$IFn$_invoke$arity$3 ? e.cljs$core$IFn$_invoke$arity$3(a, b, c) : e.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = this.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.dispatch_fn.call(null, a, b, c, d), f = this.cljs$core$IMultiFn$_get_method$arity$2(null, e);
  cljs.core.truth_(f) || cljs.core.throw_no_method_error(this.name, e);
  return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : f.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = this.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.dispatch_fn.call(null, a, b, c, d, e), g = this.cljs$core$IMultiFn$_get_method$arity$2(null, f);
  cljs.core.truth_(g) || cljs.core.throw_no_method_error(this.name, f);
  return g.cljs$core$IFn$_invoke$arity$5 ? g.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : g.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = this.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.dispatch_fn.call(null, a, b, c, d, e, f), h = this.cljs$core$IMultiFn$_get_method$arity$2(null, g);
  cljs.core.truth_(h) || cljs.core.throw_no_method_error(this.name, g);
  return h.cljs$core$IFn$_invoke$arity$6 ? h.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : h.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = this.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.dispatch_fn.call(null, a, b, c, d, e, f, g), k = this.cljs$core$IMultiFn$_get_method$arity$2(null, h);
  cljs.core.truth_(k) || cljs.core.throw_no_method_error(this.name, h);
  return k.cljs$core$IFn$_invoke$arity$7 ? k.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : k.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var k = this.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h), l = this.cljs$core$IMultiFn$_get_method$arity$2(null, k);
  cljs.core.truth_(l) || cljs.core.throw_no_method_error(this.name, k);
  return l.cljs$core$IFn$_invoke$arity$8 ? l.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : l.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  var l = this.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k), m = this.cljs$core$IMultiFn$_get_method$arity$2(null, l);
  cljs.core.truth_(m) || cljs.core.throw_no_method_error(this.name, l);
  return m.cljs$core$IFn$_invoke$arity$9 ? m.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : m.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  var m = this.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l), n = this.cljs$core$IMultiFn$_get_method$arity$2(null, m);
  cljs.core.truth_(n) || cljs.core.throw_no_method_error(this.name, m);
  return n.cljs$core$IFn$_invoke$arity$10 ? n.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : n.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  var n = this.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m), p = this.cljs$core$IMultiFn$_get_method$arity$2(null, n);
  cljs.core.truth_(p) || cljs.core.throw_no_method_error(this.name, n);
  return p.cljs$core$IFn$_invoke$arity$11 ? p.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : p.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  var p = this.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n), q = this.cljs$core$IMultiFn$_get_method$arity$2(null, p);
  cljs.core.truth_(q) || cljs.core.throw_no_method_error(this.name, p);
  return q.cljs$core$IFn$_invoke$arity$12 ? q.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  var q = this.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p), r = this.cljs$core$IMultiFn$_get_method$arity$2(null, q);
  cljs.core.truth_(r) || cljs.core.throw_no_method_error(this.name, q);
  return r.cljs$core$IFn$_invoke$arity$13 ? r.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  var r = this.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q), t = this.cljs$core$IMultiFn$_get_method$arity$2(null, r);
  cljs.core.truth_(t) || cljs.core.throw_no_method_error(this.name, r);
  return t.cljs$core$IFn$_invoke$arity$14 ? t.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  var t = this.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r), u = this.cljs$core$IMultiFn$_get_method$arity$2(null, t);
  cljs.core.truth_(u) || cljs.core.throw_no_method_error(this.name, t);
  return u.cljs$core$IFn$_invoke$arity$15 ? u.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  var u = this.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t), v = this.cljs$core$IMultiFn$_get_method$arity$2(null, u);
  cljs.core.truth_(v) || cljs.core.throw_no_method_error(this.name, u);
  return v.cljs$core$IFn$_invoke$arity$16 ? v.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
  var v = this.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u), w = this.cljs$core$IMultiFn$_get_method$arity$2(null, v);
  cljs.core.truth_(w) || cljs.core.throw_no_method_error(this.name, v);
  return w.cljs$core$IFn$_invoke$arity$17 ? w.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
  var w = this.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v), x = this.cljs$core$IMultiFn$_get_method$arity$2(null, w);
  cljs.core.truth_(x) || cljs.core.throw_no_method_error(this.name, w);
  return x.cljs$core$IFn$_invoke$arity$18 ? x.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
  var x = this.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w), y = this.cljs$core$IMultiFn$_get_method$arity$2(null, x);
  cljs.core.truth_(y) || cljs.core.throw_no_method_error(this.name, x);
  return y.cljs$core$IFn$_invoke$arity$19 ? y.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) : y.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
  var y = this.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x), z = this.cljs$core$IMultiFn$_get_method$arity$2(null, y);
  cljs.core.truth_(z) || cljs.core.throw_no_method_error(this.name, y);
  return z.cljs$core$IFn$_invoke$arity$20 ? z.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
  var z = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y], 0)), F = this.cljs$core$IMultiFn$_get_method$arity$2(null, z);
  cljs.core.truth_(F) || cljs.core.throw_no_method_error(this.name, z);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(F, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(cljs.core.prefers_STAR_(b, c, this.prefer_table))) {
    throw Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(a) {
    return function(a) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.PersistentHashSet.EMPTY), c));
    };
  }(this));
  return cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(a) {
  return this.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(a, b) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(this.method_table, cljs.core.dissoc, b);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(a) {
  return cljs.core.deref(this.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(a) {
  return cljs.core.deref(this.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(a) {
  return this.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(a, b, c) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(this.method_table, cljs.core.assoc, b, c);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(a) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_table, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_cache, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.cached_hierarchy, function(a) {
    return function(a) {
      return null;
    };
  }(this));
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(a, b) {
  cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(this.cached_hierarchy), cljs.core.deref(this.hierarchy)) || cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  a = cljs.core.deref(this.method_cache);
  a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  return cljs.core.truth_(a) ? a : cljs.core.find_and_cache_best_method(this.name, b, this.hierarchy, this.method_table, this.prefer_table, this.method_cache, this.cached_hierarchy, this.default_dispatch_val);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return cljs.core._name(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return cljs.core._namespace(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = !0;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function(a, b, c, d, e, f, g, h) {
  return new cljs.core.MultiFn(a, b, c, d, e, f, g, h);
};
cljs.core.remove_all_methods = function(a) {
  return cljs.core._reset(a);
};
cljs.core.remove_method = function(a, b) {
  return cljs.core._remove_method(a, b);
};
cljs.core.prefer_method = function(a, b, c) {
  return cljs.core._prefer_method(a, b, c);
};
cljs.core.methods$ = function(a) {
  return cljs.core._methods(a);
};
cljs.core.get_method = function(a, b) {
  return cljs.core._get_method(a, b);
};
cljs.core.prefers = function(a) {
  return cljs.core._prefers(a);
};
cljs.core.default_dispatch_val = function(a) {
  return cljs.core._default_dispatch_val(a);
};
cljs.core.dispatch_fn = function(a) {
  return cljs.core._dispatch_fn(a);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(a, b) {
  this.uuid = a;
  this.__hash = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  return this.uuid;
};
cljs.core.UUID.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.UUID && this.uuid === b.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  null == this.__hash && (this.__hash = cljs.core.hash(this.uuid));
  return this.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  return goog.array.defaultCompare(this.uuid, b.uuid);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.UUID.cljs$lang$type = !0;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function(a, b) {
  return new cljs.core.UUID(a, b);
};
cljs.core.uuid = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(a.toLowerCase(), null);
};
cljs.core.random_uuid = function() {
  var a = function() {
    return cljs.core.rand_int(16).toString(16);
  }, b = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a())].join(""));
};
cljs.core.uuid_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IUUID$ ? !0 : !1 : !1;
};
cljs.core.pr_writer_ex_info = function(a, b, c) {
  cljs.core._write(b, "#error {:message ");
  cljs.core.pr_writer(a.message, b, c);
  cljs.core.truth_(a.data) && (cljs.core._write(b, ", :data "), cljs.core.pr_writer(a.data, b, c));
  cljs.core.truth_(a.cause) && (cljs.core._write(b, ", :cause "), cljs.core.pr_writer(a.cause, b, c));
  return cljs.core._write(b, "}");
};
cljs.core.ExceptionInfo = function(a, b, c) {
  var d = Error(a);
  this.message = a;
  this.data = b;
  this.cause = c;
  this.name = d.name;
  this.description = d.description;
  this.number = d.number;
  this.fileName = d.fileName;
  this.lineNumber = d.lineNumber;
  this.columnNumber = d.columnNumber;
  this.stack = d.stack;
  return this;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_writer_ex_info(this, b, c);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ex_info = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(a, b, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ExceptionInfo(a, b, c);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.data : null;
};
cljs.core.ex_message = function(a) {
  return a instanceof Error ? a.message : null;
};
cljs.core.ex_cause = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.cause : null;
};
cljs.core.comparator = function(a) {
  return function(b, c) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c)) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.special_symbol_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), null, new cljs.core.Symbol(null, "finally", 
  "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), 
  null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", 
  "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), a);
};
cljs.core.test = function(a) {
  a = a.cljs$lang$test;
  return cljs.core.truth_(a) ? (a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), new cljs.core.Keyword(null, "ok", "ok", 967785236)) : new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
};
cljs.core.TaggedLiteral = function(a, b) {
  this.tag = a;
  this.form = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.tag, b.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.form, b.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return 31 * cljs.core.hash(this.tag) + cljs.core.hash(this.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "form":
      return this.form;
    default:
      return c;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.tag), " "].join(""));
  return cljs.core.pr_writer(this.form, b, c);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = !0;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function(a, b) {
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.tagged_literal_QMARK_ = function(a) {
  return a instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function(a, b) {
  if (!(a instanceof cljs.core.Symbol)) {
    throw Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.js_reserved_arr = "arguments abstract await boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with yield methods null constructor".split(" ");
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function(a) {
  null == cljs.core.js_reserved && (cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, c) {
    goog.object.set(a, c, !0);
    return a;
  }, {}, cljs.core.js_reserved_arr));
  return cljs.core.js_reserved.hasOwnProperty(a);
};
cljs.core.demunge_pattern = function() {
  cljs.core.truth_(cljs.core.DEMUNGE_PATTERN) || (cljs.core.DEMUNGE_PATTERN = function() {
    for (var a = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
      return b.length - a.length;
    }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP)), b = "";;) {
      if (cljs.core.seq(a)) {
        var c = cljs.core.next(a), d = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
          var a = b;
          return "" !== b ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "|"].join("") : a;
        }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(a))].join("");
        a = c;
        b = d;
      } else {
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "|\\$"].join("");
      }
    }
  }());
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function(a) {
  for (var b = new goog.string.StringBuffer, c = 0;;) {
    if (c < a.length) {
      var d = a.charAt(c), e = goog.object.get(cljs.core.CHAR_MAP, d);
      null != e ? b.append(e) : b.append(d);
      c += 1;
    } else {
      break;
    }
  }
  return b.toString();
};
cljs.core.munge = function(a) {
  var b = cljs.core.munge_str([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  b = ".." === b ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(b)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "$"].join("") : b;
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(b) : b;
};
cljs.core.demunge_str = function(a) {
  var b = new RegExp(cljs.core.demunge_pattern(), "g");
  a = cljs.core.truth_(goog.string.endsWith(a, "$")) ? a.substring(0, a.length - 1) : a;
  for (var c = "", d = 0;;) {
    var e = b.exec(a);
    if (cljs.core.truth_(e)) {
      e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null), c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.substring(d, b.lastIndex - e.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1("$" === e ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, e))].join(""), d = b.lastIndex;
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.substring(d, a.length))].join("");
    }
  }
};
cljs.core.demunge = function(a) {
  var b = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  b = "_DOT__DOT_" === b ? ".." : cljs.core.demunge_str(b);
  a = a instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
};
"undefined" === typeof cljs.core.tapset && (cljs.core.tapset = null);
cljs.core.maybe_init_tapset = function() {
  return null == cljs.core.tapset ? cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY) : null;
};
cljs.core.add_tap = function(a) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, a);
  return null;
};
cljs.core.remove_tap = function(a) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, a);
  return null;
};
cljs.core.tap_GT_ = function(a) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    for (var b = cljs.core.seq(cljs.core.deref(cljs.core.tapset)), c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = c.cljs$core$IIndexed$_nth$arity$2(null, e);
        try {
          f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
        } catch (g) {
          if (!(g instanceof Error)) {
            throw g;
          }
        }
        e += 1;
      } else {
        if (b = cljs.core.seq(b)) {
          c = b;
          if (cljs.core.chunked_seq_QMARK_(c)) {
            b = cljs.core.chunk_first(c), d = cljs.core.chunk_rest(c), c = b, f = cljs.core.count(b), b = d, d = f;
          } else {
            f = cljs.core.first(c);
            try {
              f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
            } catch (g) {
              if (!(g instanceof Error)) {
                throw g;
              }
            }
            b = cljs.core.next(c);
            c = null;
            d = 0;
          }
          e = 0;
        } else {
          return null;
        }
      }
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    for (var b = cljs.core.seq(cljs.core.deref(cljs.core.tapset)), c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = c.cljs$core$IIndexed$_nth$arity$2(null, e);
        try {
          f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
        } catch (g) {
          if (!(g instanceof Error)) {
            throw g;
          }
        }
        e += 1;
      } else {
        if (b = cljs.core.seq(b)) {
          c = b;
          if (cljs.core.chunked_seq_QMARK_(c)) {
            b = cljs.core.chunk_first(c), d = cljs.core.chunk_rest(c), c = b, f = cljs.core.count(b), b = d, d = f;
          } else {
            f = cljs.core.first(c);
            try {
              f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
            } catch (g) {
              if (!(g instanceof Error)) {
                throw g;
              }
            }
            b = cljs.core.next(c);
            c = null;
            d = 0;
          }
          e = 0;
        } else {
          return null;
        }
      }
    }
  });
};
cljs.core.ns_lookup = function(a, b) {
  return function() {
    return goog.object.get(a, b);
  };
};
cljs.core.Namespace = function(a, b) {
  this.obj = a;
  this.name = b;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(a) {
  var b = cljs.core.munge([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  if (goog.object.containsKey(this.obj, b)) {
    a = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
    var c = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this], null);
    return new cljs.core.Var(cljs.core.ns_lookup(this.obj, b), a, c);
  }
  return null;
};
cljs.core.Namespace.prototype.getName = function() {
  return this.name;
};
cljs.core.Namespace.prototype.toString = function() {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Namespace ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.name, b.name) : !1;
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash(this.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = !0;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function(a, b) {
  return new cljs.core.Namespace(a, b);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function(a, b) {
  for (;;) {
    if (null == a) {
      return null;
    }
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    a = goog.object.get(a, c);
    b = cljs.core.next(b);
  }
};
cljs.core.find_ns_obj = function(a) {
  var b = cljs.core.munge([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")).split(".");
  switch(cljs.core._STAR_target_STAR_) {
    case "nodejs":
      return COMPILED ? cljs.core.find_ns_obj_STAR_(function() {
        try {
          var a = eval(cljs.core.first(b));
          return cljs.core.truth_(cljs.core.truth_(a) ? cljs.core.object_QMARK_(a) : a) ? a : null;
        } catch (d) {
          if (d instanceof ReferenceError) {
            return null;
          }
          throw d;
        }
      }(), cljs.core.next(b)) : cljs.core.find_ns_obj_STAR_(goog.global, b);
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, b);
    default:
      throw Error(["find-ns-obj not supported for target ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_)].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function(a) {
  var b = cljs.core.find_ns_obj(a), c = new cljs.core.Namespace(b, a);
  c = function(b, c) {
    return function(d, e) {
      var f = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(e));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, f, new cljs.core.Var(function(a, b, c) {
        return function() {
          return goog.object.get(b, e);
        };
      }(f, b, c), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), c], null)));
    };
  }(b, c);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(c, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(b));
};
cljs.core.create_ns = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, cljs.core.find_ns_obj(a));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.Namespace(b, a);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function(a) {
  null == cljs.core.NS_CACHE && (cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
  var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.find_macros_ns = function(a) {
  null == cljs.core.NS_CACHE && (cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
  var b = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  a = goog.string.contains(b, "$macros") ? a : cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "$macros"].join(""));
  b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.ns_name = function(a) {
  return a.name;
};
cljs.core.uri_QMARK_ = function(a) {
  return a instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function() {
  if ("undefined" !== typeof console) {
    return cljs.core.enable_console_print_BANG_();
  }
  if ("nashorn" === cljs.core._STAR_target_STAR_) {
    var a = Java.type("java.lang.System");
    cljs.core._STAR_print_newline_STAR_ = !1;
    cljs.core.set_print_fn_BANG_(function(a) {
      return function() {
        var b = goog.array.clone(arguments).join("");
        return a.out.println(b);
      };
    }(a));
    return cljs.core.set_print_err_fn_BANG_(function(a) {
      return function() {
        var b = goog.array.clone(arguments).join("");
        return a.error.println(b);
      };
    }(a));
  }
  return null;
};
cljs.core.maybe_enable_print_BANG_();
"undefined" === typeof cljs.core._STAR_eval_STAR_ && (cljs.core._STAR_eval_STAR_ = function(a) {
  throw Error("cljs.core/*eval* not bound");
});
cljs.core.eval = function(a) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_eval_STAR_.call(null, a);
};
cljs.core.async = {};
cljs.core.async.impl = {};
cljs.core.async.impl.protocols = {};
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2) {
    return a.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(a, b);
  }
  var c = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.impl.protocols.take_BANG_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "ReadPort.take!", a);
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3) {
    return a.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.impl.protocols.put_BANG_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "WritePort.put!", a);
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.close_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Channel.close!", a);
};
cljs.core.async.impl.protocols.closed_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.closed_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Channel.closed?", a);
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.active_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.active?", a);
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.blockable_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.blockable?", a);
};
cljs.core.async.impl.protocols.commit = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$commit$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$commit$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.commit[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.commit._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.commit", a);
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.full_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.full?", a);
};
cljs.core.async.impl.protocols.remove_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.remove_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.remove!", a);
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2) {
    return a.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.impl.protocols.add_BANG__STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.add!*", a);
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.close_buf_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", a);
};
cljs.core.async.impl.protocols.add_BANG_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null == b) {
    throw Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, a, b);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
cljs.core.async.impl.buffers = {};
cljs.core.async.impl.buffers.acopy = function(a, b, c, d, e) {
  for (var f = 0;;) {
    if (f < e) {
      c[d + f] = a[b + f], f += 1;
    } else {
      return null;
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(a, b, c, d) {
  this.head = a;
  this.tail = b;
  this.length = c;
  this.arr = d;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  if (0 === this.length) {
    return null;
  }
  var a = this.arr[this.tail];
  this.arr[this.tail] = null;
  this.tail = (this.tail + 1) % this.arr.length;
  --this.length;
  return a;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(a) {
  this.arr[this.head] = a;
  this.head = (this.head + 1) % this.arr.length;
  this.length += 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(a) {
  this.length + 1 === this.arr.length && this.resize();
  return this.unshift(a);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var a = Array(2 * this.arr.length);
  return this.tail < this.head ? (cljs.core.async.impl.buffers.acopy.call(null, this.arr, this.tail, a, 0, this.length), this.tail = 0, this.head = this.length, this.arr = a) : this.tail > this.head ? (cljs.core.async.impl.buffers.acopy.call(null, this.arr, this.tail, a, 0, this.arr.length - this.tail), cljs.core.async.impl.buffers.acopy.call(null, this.arr, 0, a, this.arr.length - this.tail, this.head), this.tail = 0, this.head = this.length, this.arr = a) : this.tail === this.head ? (this.head = 
  this.tail = 0, this.arr = a) : null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(a) {
  for (var b = this.length, c = 0;;) {
    if (c < b) {
      var d = this.pop();
      a.call(null, d) && this.unshift(d);
      c += 1;
    } else {
      return null;
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function(a, b, c, d) {
  return new cljs.core.async.impl.buffers.RingBuffer(a, b, c, d);
};
cljs.core.async.impl.buffers.ring_buffer = function(a) {
  if (!(0 < a)) {
    throw Error("Assert failed: Can't create a ring buffer of size 0\n(\x3e n 0)");
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, Array(a));
};
cljs.core.async.impl.buffers.FixedBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return this.buf.length === this.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.unbounded_unshift(b);
  return this;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.FixedBuffer(a, b);
};
cljs.core.async.impl.buffers.fixed_buffer = function(a) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.length !== this.n && this.buf.unshift(b);
  return this;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(a, b);
};
cljs.core.async.impl.buffers.dropping_buffer = function(a) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.length === this.n && cljs.core.async.impl.protocols.remove_BANG_.call(null, this);
  this.buf.unshift(b);
  return this;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(a, b);
};
cljs.core.async.impl.buffers.sliding_buffer = function(a) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
"undefined" === typeof cljs.core.async.impl.buffers.NO_VAL && (cljs.core.async.impl.buffers.NO_VAL = {});
cljs.core.async.impl.buffers.undelivered_QMARK_ = function(a) {
  return cljs.core.async.impl.buffers.NO_VAL === a;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(a) {
  this.val = a;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) && (this.val = b);
  return this;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) ? this.val = null : null;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) ? 0 : 1;
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function(a) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(a);
};
cljs.core.async.impl.buffers.promise_buffer = function() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.debug.entryPointRegistry = {};
goog.debug.EntryPointMonitor = function() {
};
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = !1;
goog.debug.entryPointRegistry.register = function(a) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = a;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    for (var b = goog.debug.entryPointRegistry.monitors_, c = 0; c < b.length; c++) {
      a(goog.bind(b[c].wrap, b[c]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(a) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = !0;
  for (var b = goog.bind(a.wrap, a), c = 0; c < goog.debug.entryPointRegistry.refList_.length; c++) {
    goog.debug.entryPointRegistry.refList_[c](b);
  }
  goog.debug.entryPointRegistry.monitors_.push(a);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(a) {
  var b = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(a == b[b.length - 1], "Only the most recent monitor can be unwrapped.");
  a = goog.bind(a.unwrap, a);
  for (var c = 0; c < goog.debug.entryPointRegistry.refList_.length; c++) {
    goog.debug.entryPointRegistry.refList_[c](a);
  }
  b.length--;
};
goog.dom.HtmlElement = function() {
};
goog.dom.TagName = function(a) {
  this.tagName_ = a;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.labs = {};
goog.labs.userAgent = {};
goog.labs.userAgent.util = {};
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var a = goog.labs.userAgent.util.getNavigator_();
  return a && (a = a.userAgent) ? a : "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(a) {
  goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(b, a);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(b, a);
};
goog.labs.userAgent.util.extractVersionTuples = function(a) {
  for (var b = /(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g, c = [], d; d = b.exec(a);) {
    c.push([d[1], d[2], d[3] || void 0]);
  }
  return c;
};
goog.labs.userAgent.browser = {};
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  function a(a) {
    a = goog.array.find(a, d);
    return c[a] || "";
  }
  var b = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(b);
  }
  b = goog.labs.userAgent.util.extractVersionTuples(b);
  var c = {};
  goog.array.forEach(b, function(a) {
    c[a[0]] = a[1];
  });
  var d = goog.partial(goog.object.containsKey, c);
  return goog.labs.userAgent.browser.isOpera() ? a(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? a(["Edge"]) : goog.labs.userAgent.browser.isChrome() ? a(["Chrome", "CriOS"]) : (b = b[2]) && b[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), a);
};
goog.labs.userAgent.browser.getIEVersion_ = function(a) {
  var b = /rv: *([\d\.]*)/.exec(a);
  if (b && b[1]) {
    return b[1];
  }
  b = "";
  var c = /MSIE +([\d\.]+)/.exec(a);
  if (c && c[1]) {
    if (a = /Trident\/(\d.\d)/.exec(a), "7.0" == c[1]) {
      if (a && a[1]) {
        switch(a[1]) {
          case "4.0":
            b = "8.0";
            break;
          case "5.0":
            b = "9.0";
            break;
          case "6.0":
            b = "10.0";
            break;
          case "7.0":
            b = "11.0";
        }
      } else {
        b = "7.0";
      }
    } else {
      b = c[1];
    }
  }
  return b;
};
goog.labs.userAgent.engine = {};
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var a = goog.labs.userAgent.util.getUserAgent();
  if (a) {
    a = goog.labs.userAgent.util.extractVersionTuples(a);
    var b = goog.labs.userAgent.engine.getEngineTuple_(a);
    if (b) {
      return "Gecko" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, "Firefox") : b[1];
    }
    a = a[0];
    var c;
    if (a && (c = a[2]) && (c = /Trident\/([^\s;]+)/.exec(c))) {
      return c[1];
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(a) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return a[1];
  }
  for (var b = 0; b < a.length; b++) {
    var c = a[b];
    if ("Edge" == c[0]) {
      return c;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a);
};
goog.labs.userAgent.engine.getVersionForKey_ = function(a, b) {
  return (a = goog.array.find(a, function(a) {
    return b == a[0];
  })) && a[1] || "";
};
goog.async = {};
goog.async.throwException = function(a) {
  goog.global.setTimeout(function() {
    throw a;
  }, 0);
};
goog.async.nextTick = function(a, b, c) {
  var d = a;
  b && (d = goog.bind(a, b));
  d = goog.async.nextTick.wrapCallback_(d);
  goog.isFunction(goog.global.setImmediate) && (c || goog.async.nextTick.useSetImmediate_()) ? goog.global.setImmediate(d) : (goog.async.nextTick.setImmediate_ || (goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_()), goog.async.nextTick.setImmediate_(d));
};
goog.async.nextTick.useSetImmediate_ = function() {
  return goog.global.Window && goog.global.Window.prototype && !goog.labs.userAgent.browser.isEdge() && goog.global.Window.prototype.setImmediate == goog.global.setImmediate ? !1 : !0;
};
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var a = goog.global.MessageChannel;
  "undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto() && (a = function() {
    var a = document.createElement("IFRAME");
    a.style.display = "none";
    a.src = "";
    document.documentElement.appendChild(a);
    var b = a.contentWindow;
    a = b.document;
    a.open();
    a.write("");
    a.close();
    var c = "callImmediate" + Math.random(), d = "file:" == b.location.protocol ? "*" : b.location.protocol + "//" + b.location.host;
    a = goog.bind(function(a) {
      if (("*" == d || a.origin == d) && a.data == c) {
        this.port1.onmessage();
      }
    }, this);
    b.addEventListener("message", a, !1);
    this.port1 = {};
    this.port2 = {postMessage:function() {
      b.postMessage(c, d);
    }};
  });
  if ("undefined" !== typeof a && !goog.labs.userAgent.browser.isIE()) {
    var b = new a, c = {}, d = c;
    b.port1.onmessage = function() {
      if (goog.isDef(c.next)) {
        c = c.next;
        var a = c.cb;
        c.cb = null;
        a();
      }
    };
    return function(a) {
      d.next = {cb:a};
      d = d.next;
      b.port2.postMessage(0);
    };
  }
  return "undefined" !== typeof document && "onreadystatechange" in document.createElement("SCRIPT") ? function(a) {
    var b = document.createElement("SCRIPT");
    b.onreadystatechange = function() {
      b.onreadystatechange = null;
      b.parentNode.removeChild(b);
      b = null;
      a();
      a = null;
    };
    document.documentElement.appendChild(b);
  } : function(a) {
    goog.global.setTimeout(a, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(a) {
  goog.async.nextTick.wrapCallback_ = a;
});
cljs.core.async.impl.dispatch = {};
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = !1;
cljs.core.async.impl.dispatch.queued_QMARK_ = !1;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function() {
  cljs.core.async.impl.dispatch.running_QMARK_ = !0;
  cljs.core.async.impl.dispatch.queued_QMARK_ = !1;
  for (var a = 0;;) {
    var b = cljs.core.async.impl.dispatch.tasks.pop();
    if (null != b && (b.call(null), a < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE)) {
      a += 1;
      continue;
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = !1;
  return 0 < cljs.core.async.impl.dispatch.tasks.length ? cljs.core.async.impl.dispatch.queue_dispatcher.call(null) : null;
};
cljs.core.async.impl.dispatch.queue_dispatcher = function() {
  if (cljs.core.async.impl.dispatch.queued_QMARK_ && cljs.core.async.impl.dispatch.running_QMARK_) {
    return null;
  }
  cljs.core.async.impl.dispatch.queued_QMARK_ = !0;
  return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
};
cljs.core.async.impl.dispatch.run = function(a) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(a);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function(a, b) {
  return setTimeout(a, b);
};
cljs.core.async.impl.channels = {};
cljs.core.async.impl.channels.box = function(a) {
  "undefined" === typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451 && (cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451 = function(a, c) {
    this.val = a;
    this.meta6452 = c;
    this.cljs$lang$protocol_mask$partition0$ = 425984;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451(this.val, c);
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta6452;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
    return this.val;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta6452", "meta6452", -946221781, null)], null);
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451.cljs$lang$type = !0, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels6451", cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels6451");
  }, cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels6451 = function(a, c) {
    return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451(a, c);
  });
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels6451(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(a, b) {
  this.handler = a;
  this.val = b;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = !0;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function(a, b) {
  return new cljs.core.async.impl.channels.PutBox(a, b);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function(a) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, a.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function(a) {
  if (null != a && null != a.cljs$core$async$impl$channels$MMC$abort$arity$1) {
    return a.cljs$core$async$impl$channels$MMC$abort$arity$1(a);
  }
  var b = cljs.core.async.impl.channels.abort[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.channels.abort._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "MMC.abort", a);
};
cljs.core.async.impl.channels.ManyToManyChannel = function(a, b, c, d, e, f, g) {
  this.takes = a;
  this.dirty_takes = b;
  this.puts = c;
  this.dirty_puts = d;
  this.buf = e;
  this.closed = f;
  this.add_BANG_ = g;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(a) {
  for (;;) {
    a = this.puts.pop();
    if (null != a) {
      var b = a.handler, c = a.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, b)) {
        var d = cljs.core.async.impl.protocols.commit.call(null, b);
        cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, k) {
          return function() {
            return a.call(null, !0);
          };
        }(d, b, c, a, this));
      } else {
        continue;
      }
    }
    break;
  }
  this.puts.cleanup(cljs.core.constantly.call(null, !1));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, c) {
  var d = this;
  if (null == b) {
    throw Error("Assert failed: Can't put nil in on a channel\n(not (nil? val))");
  }
  if ((a = d.closed) || !cljs.core.async.impl.protocols.active_QMARK_.call(null, c)) {
    return cljs.core.async.impl.channels.box.call(null, !a);
  }
  if (cljs.core.truth_(function() {
    var a = d.buf;
    return cljs.core.truth_(a) ? cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, d.buf)) : a;
  }())) {
    cljs.core.async.impl.protocols.commit.call(null, c);
    for (c = cljs.core.reduced_QMARK_.call(null, d.add_BANG_.call(null, d.buf, b));;) {
      if (0 < d.takes.length && 0 < cljs.core.count.call(null, d.buf)) {
        var e = d.takes.pop();
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, e)) {
          var f = cljs.core.async.impl.protocols.commit.call(null, e), g = cljs.core.async.impl.protocols.remove_BANG_.call(null, d.buf);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f) {
            return function() {
              return a.call(null, b);
            };
          }(f, g, e, c, a, this));
        } else {
          continue;
        }
      }
      break;
    }
    c && cljs.core.async.impl.channels.abort.call(null, this);
    return cljs.core.async.impl.channels.box.call(null, !0);
  }
  e = function() {
    for (;;) {
      var a = d.takes.pop();
      if (cljs.core.truth_(a)) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, a))) {
          return a;
        }
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(e)) {
    return f = cljs.core.async.impl.protocols.commit.call(null, e), cljs.core.async.impl.protocols.commit.call(null, c), cljs.core.async.impl.dispatch.run.call(null, function(a, c, d, e) {
      return function() {
        return a.call(null, b);
      };
    }(f, e, a, this)), cljs.core.async.impl.channels.box.call(null, !0);
  }
  64 < d.dirty_puts ? (d.dirty_puts = 0, d.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)) : d.dirty_puts += 1;
  if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, c))) {
    if (!(1024 > d.puts.length)) {
      throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending puts are allowed on a single channel. Consider using a windowed buffer."].join("")), "\n(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)"].join(""));
    }
    d.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(c, b));
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
  var c = this;
  if (cljs.core.async.impl.protocols.active_QMARK_.call(null, b)) {
    if (null != c.buf && 0 < cljs.core.count.call(null, c.buf)) {
      a = cljs.core.async.impl.protocols.commit.call(null, b);
      for (var d = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, c.buf));;) {
        if (!cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, c.buf))) {
          var e = c.puts.pop();
          if (null != e) {
            var f = e.handler, g = e.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, f)) {
              var h = cljs.core.async.impl.protocols.commit.call(null, f);
              cljs.core.async.impl.protocols.commit.call(null, b);
              cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g) {
                return function() {
                  return a.call(null, !0);
                };
              }(h, f, g, e, a, d, this));
              cljs.core.reduced_QMARK_.call(null, c.add_BANG_.call(null, c.buf, g)) && cljs.core.async.impl.channels.abort.call(null, this);
            }
            continue;
          }
        }
        break;
      }
      return d;
    }
    a = function() {
      for (;;) {
        var a = c.puts.pop();
        if (cljs.core.truth_(a)) {
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, a.handler)) {
            return a;
          }
        } else {
          return null;
        }
      }
    }();
    if (cljs.core.truth_(a)) {
      return d = cljs.core.async.impl.protocols.commit.call(null, a.handler), cljs.core.async.impl.protocols.commit.call(null, b), cljs.core.async.impl.dispatch.run.call(null, function(a, b, c) {
        return function() {
          return a.call(null, !0);
        };
      }(d, a, this)), cljs.core.async.impl.channels.box.call(null, a.val);
    }
    if (cljs.core.truth_(c.closed)) {
      return cljs.core.truth_(c.buf) && c.add_BANG_.call(null, c.buf), cljs.core.truth_(function() {
        var a = cljs.core.async.impl.protocols.active_QMARK_.call(null, b);
        return cljs.core.truth_(a) ? cljs.core.async.impl.protocols.commit.call(null, b) : a;
      }()) ? (a = function() {
        var a = c.buf;
        return cljs.core.truth_(a) ? 0 < cljs.core.count.call(null, c.buf) : a;
      }(), a = cljs.core.truth_(a) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, c.buf) : null, cljs.core.async.impl.channels.box.call(null, a)) : null;
    }
    64 < c.dirty_takes ? (c.dirty_takes = 0, c.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)) : c.dirty_takes += 1;
    if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, b))) {
      if (!(1024 > c.takes.length)) {
        throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending takes are allowed on a single channel."].join("")), "\n(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)"].join(""));
      }
      c.takes.unbounded_unshift(b);
    }
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(a) {
  return this.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
  var b = this;
  if (!b.closed) {
    b.closed = !0;
    for (cljs.core.truth_(function() {
      var a = b.buf;
      return cljs.core.truth_(a) ? 0 === b.puts.length : a;
    }()) && b.add_BANG_.call(null, b.buf);;) {
      if (a = b.takes.pop(), null != a) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, a)) {
          var c = cljs.core.async.impl.protocols.commit.call(null, a), d = cljs.core.truth_(function() {
            var a = b.buf;
            return cljs.core.truth_(a) ? 0 < cljs.core.count.call(null, b.buf) : a;
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, b.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d) {
            return function() {
              return a.call(null, b);
            };
          }(c, d, a, this));
        }
      } else {
        break;
      }
    }
    cljs.core.truth_(b.buf) && cljs.core.async.impl.protocols.close_buf_BANG_.call(null, b.buf);
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = !0;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function(a, b, c, d, e, f, g) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(a, b, c, d, e, f, g);
};
cljs.core.async.impl.channels.ex_handler = function(a) {
  console.log(a);
  return null;
};
cljs.core.async.impl.channels.handle = function(a, b, c) {
  b = cljs.core.truth_(b) ? b : cljs.core.async.impl.channels.ex_handler;
  c = b.call(null, c);
  return null == c ? a : cljs.core.async.impl.protocols.add_BANG_.call(null, a, c);
};
cljs.core.async.impl.channels.chan = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.impl.channels.chan.call(null, a, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.impl.channels.chan.call(null, a, b, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, a, !1, function() {
    return function(a) {
      return function() {
        var b = null, d = function(b) {
          try {
            return a.call(null, b);
          } catch (k) {
            return cljs.core.async.impl.channels.handle.call(null, b, c, k);
          }
        }, g = function(b, d) {
          try {
            return a.call(null, b, d);
          } catch (l) {
            return cljs.core.async.impl.channels.handle.call(null, b, c, l);
          }
        };
        b = function(a, b) {
          switch(arguments.length) {
            case 1:
              return d.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        b.cljs$core$IFn$_invoke$arity$1 = d;
        b.cljs$core$IFn$_invoke$arity$2 = g;
        return b;
      }();
    }(cljs.core.truth_(b) ? b.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.ioc_helpers = {};
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function(a, b, c) {
  return a[b][c];
};
cljs.core.async.impl.ioc_helpers.aget_object = function(a, b) {
  return a[b];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function(a) {
  return cljs.core.keyword_identical_QMARK_.call(null, a[1], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function(a) {
  "undefined" === typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780 && (cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780 = function(a, c) {
    this.f = a;
    this.meta9781 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780(this.f, c);
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta9781;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    return this.f;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta9781", "meta9781", 1238307774, null)], null);
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.cljs$lang$type = !0, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers9780", cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers9780");
  }, cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers9780 = function(a, c) {
    return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780(a, c);
  });
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers9780(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function(a) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 0).call(null, a);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function(a) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, a);
  } catch (c) {
    if (c instanceof Object) {
      var b = c;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 6));
      throw b;
    }
    throw c;
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function(a, b, c) {
  c = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
    a[2] = c;
    a[1] = b;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
  }));
  return cljs.core.truth_(c) ? (a[2] = cljs.core.deref.call(null, c), a[1] = b, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function(a, b, c, d) {
  c = cljs.core.async.impl.protocols.put_BANG_.call(null, c, d, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
    a[2] = c;
    a[1] = b;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
  }));
  return cljs.core.truth_(c) ? (a[2] = cljs.core.deref.call(null, c), a[1] = b, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.impl.ioc_helpers.return_chan = function(a, b) {
  a = a[6];
  null != b && cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(a) {
    return function() {
      return null;
    };
  }(a)));
  cljs.core.async.impl.protocols.close_BANG_.call(null, a);
  return a;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(a, b, c, d, e, f, g, h) {
  this.catch_block = a;
  this.catch_exception = b;
  this.finally_block = c;
  this.continue_block = d;
  this.prev = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "catch-block":
      return this.catch_block;
    case "catch-exception":
      return this.catch_exception;
    case "finally-block":
      return this.finally_block;
    case "continue-block":
      return this.continue_block;
    case "prev":
      return this.prev;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), this.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "catch-exception", "catch-exception", -1997306795), this.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), this.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), this.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), this.prev], null)], null), this.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), cljs.core.truth_(this.__extmap) ? 
  cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, this.__extmap, this.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 846900531 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.catch_block, b.catch_block) && cljs.core._EQ_.call(null, this.catch_exception, b.catch_exception) && cljs.core._EQ_.call(null, this.finally_block, b.finally_block) && cljs.core._EQ_.call(null, this.continue_block, b.continue_block) && cljs.core._EQ_.call(null, this.prev, b.prev) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(c, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, c, this.finally_block, this.continue_block, 
  this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, c, this.continue_block, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, 
  this.catch_exception, this.finally_block, c, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, c, this.__meta, this.__extmap, null) : new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, 
  this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), this.catch_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), this.catch_exception, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), this.finally_block, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), this.continue_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prev", "prev", -1597069226), this.prev, null)], null), this.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, b, this.__extmap, this.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = !0;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.core.async.impl.ioc-helpers/ExceptionFrame", null, 1, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function(a, b, c, d, e) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(a, b, c, d, e, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function(a) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226))), null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function(a, b, c, d, e) {
  a[4] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, b, c, d, e, cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 4));
  return a;
};
cljs.core.async.impl.ioc_helpers.process_exception = function(a) {
  for (;;) {
    var b = cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 4), c = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(b), d = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(b), e = cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 5);
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? cljs.core.not.call(null, b) : a;
    }())) {
      throw e;
    }
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? (a = c, cljs.core.truth_(a) ? cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), d) || e instanceof d : a) : a;
    }())) {
      return a[1] = c, a[2] = e, a[5] = null, a[4] = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null), a;
    }
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? cljs.core.not.call(null, c) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b)) : a;
    }())) {
      a[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(b);
    } else {
      if (cljs.core.truth_(function() {
        var a = e;
        return cljs.core.truth_(a) ? (a = cljs.core.not.call(null, c)) ? (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b) : a : a;
      }()) || cljs.core.truth_(function() {
        var a = cljs.core.not.call(null, e);
        return a ? (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b) : a;
      }())) {
        return a[1] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b), a[4] = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null), a;
      }
      if (cljs.core.not.call(null, e) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b))) {
        return a[1] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(b), a[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(b), a;
      }
      throw Error("No matching clause");
    }
  }
};
cljs.core.async.impl.timers = {};
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = .5;
cljs.core.async.impl.timers.random_level = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (Math.random() < cljs.core.async.impl.timers.P && a < cljs.core.async.impl.timers.MAX_LEVEL) {
      a += 1;
    } else {
      return a;
    }
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(a, b, c) {
  this.key = a;
  this.val = b;
  this.forward = c;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return new cljs.core.List(null, this.key, new cljs.core.List(null, this.val, null, 1, null), 2, null);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = !0;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function(a, b, c) {
  return new cljs.core.async.impl.timers.SkipListNode(a, b, c);
};
cljs.core.async.impl.timers.skip_list_node = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, a);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = Array(c + 1);
  for (var d = 0;;) {
    if (d < c.length) {
      c[d] = null, d += 1;
    } else {
      break;
    }
  }
  return new cljs.core.async.impl.timers.SkipListNode(a, b, c);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, a, b, c, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (;;) {
    if (0 > c) {
      return a;
    }
    a: {
      for (;;) {
        var e = a.forward[c];
        if (cljs.core.truth_(e)) {
          if (e.key < b) {
            a = e;
          } else {
            break a;
          }
        } else {
          break a;
        }
      }
    }
    null != d && (d[c] = a);
    --c;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(a, b) {
  this.header = a;
  this.level = b;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(a, b) {
  var c = Array(cljs.core.async.impl.timers.MAX_LEVEL), d = cljs.core.async.impl.timers.least_greater_node.call(null, this.header, a, this.level, c).forward[0];
  if (null != d && d.key === a) {
    return d.val = b;
  }
  d = cljs.core.async.impl.timers.random_level.call(null);
  if (d > this.level) {
    for (var e = this.level + 1;;) {
      if (e <= d + 1) {
        c[e] = this.header, e += 1;
      } else {
        break;
      }
    }
    this.level = d;
  }
  for (a = cljs.core.async.impl.timers.skip_list_node.call(null, a, b, Array(d));;) {
    return 0 <= this.level ? (c = c[0].forward, a.forward[0] = c[0], c[0] = a) : null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(a) {
  var b = Array(cljs.core.async.impl.timers.MAX_LEVEL), c = cljs.core.async.impl.timers.least_greater_node.call(null, this.header, a, this.level, b).forward[0];
  if (null != c && c.key === a) {
    for (a = 0;;) {
      if (a <= this.level) {
        var d = b[a].forward;
        d[a] === c && (d[a] = c.forward[a]);
        a += 1;
      } else {
        break;
      }
    }
    for (;;) {
      if (0 < this.level && null == this.header.forward[this.level]) {
        --this.level;
      } else {
        return null;
      }
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(a) {
  for (var b = this.header, c = this.level;;) {
    if (0 > c) {
      return b === this.header ? null : b;
    }
    var d;
    a: {
      for (d = b;;) {
        if (d = d.forward[c], null == d) {
          d = null;
          break a;
        } else {
          if (d.key >= a) {
            break a;
          }
        }
      }
    }
    null != d ? (--c, b = d) : --c;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(a) {
  for (var b = this.header, c = this.level;;) {
    if (0 > c) {
      return b === this.header ? null : b;
    }
    var d;
    a: {
      for (d = b;;) {
        var e = d.forward[c];
        if (null != e) {
          if (e.key > a) {
            break a;
          }
          d = e;
        } else {
          d = 0 === c ? d : null;
          break a;
        }
      }
    }
    cljs.core.truth_(d) ? (--c, b = d) : --c;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return function(a) {
    return function e(b) {
      return new cljs.core.LazySeq(null, function(a) {
        return function() {
          return null == b ? null : cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.key, b.val], null), e.call(null, b.forward[0]));
        };
      }(a), null, null);
    };
  }(this).call(null, this.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "{", ", ", "}", c, this);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = !0;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function(a, b) {
  return new cljs.core.async.impl.timers.SkipList(a, b);
};
cljs.core.async.impl.timers.skip_list = function() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function(a) {
  var b = (new Date).valueOf() + a, c = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(b), d = cljs.core.truth_(cljs.core.truth_(c) ? c.key < b + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS : c) ? c.val : null;
  if (cljs.core.truth_(d)) {
    return d;
  }
  var e = cljs.core.async.impl.channels.chan.call(null, null);
  cljs.core.async.impl.timers.timeouts_map.put(b, e);
  cljs.core.async.impl.dispatch.queue_delay.call(null, function(a, b, c, d) {
    return function() {
      cljs.core.async.impl.timers.timeouts_map.remove(c);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, a);
    };
  }(e, d, b, c), a);
  return e;
};
cljs.core.async.fn_handler = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.fn_handler.call(null, a, !0);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async9916 && (cljs.core.async.t_cljs$core$async9916 = function(a, b, e) {
    this.f = a;
    this.blockable = b;
    this.meta9917 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async9916.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async9916(this.f, this.blockable, b);
  }, cljs.core.async.t_cljs$core$async9916.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta9917;
  }, cljs.core.async.t_cljs$core$async9916.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async9916.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.t_cljs$core$async9916.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return this.blockable;
  }, cljs.core.async.t_cljs$core$async9916.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    return this.f;
  }, cljs.core.async.t_cljs$core$async9916.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta9917", "meta9917", 154459458, null)], null);
  }, cljs.core.async.t_cljs$core$async9916.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async9916.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async9916", cljs.core.async.t_cljs$core$async9916.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async9916");
  }, cljs.core.async.__GT_t_cljs$core$async9916 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async9916(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async9916(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function(a) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, a);
};
cljs.core.async.dropping_buffer = function(a) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, a);
};
cljs.core.async.sliding_buffer = function(a) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, a);
};
cljs.core.async.unblocking_buffer_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$async$impl$protocols$UnblockingBuffer$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, a);
};
cljs.core.async.chan = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.chan.call(null, a, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.chan.call(null, a, b, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core._EQ_.call(null, a, 0) ? null : a;
  if (cljs.core.truth_(b) && !cljs.core.truth_(a)) {
    throw Error("Assert failed: buffer must be supplied when transducer is\nbuf-or-n");
  }
  return cljs.core.async.impl.channels.chan.call(null, "number" === typeof a ? cljs.core.async.buffer.call(null, a) : a, b, c);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.promise_chan.call(null, a, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), a, b);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function(a) {
  return cljs.core.async.impl.timers.timeout.call(null, a);
};
cljs.core.async._LT__BANG_ = function(a) {
  throw Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.take_BANG_.call(null, a, b, !0);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.async.impl.protocols.take_BANG_.call(null, a, cljs.core.async.fn_handler.call(null, b));
  if (cljs.core.truth_(a)) {
    var d = cljs.core.deref.call(null, a);
    cljs.core.truth_(c) ? b.call(null, d) : cljs.core.async.impl.dispatch.run.call(null, function(a, c) {
      return function() {
        return b.call(null, a);
      };
    }(d, a));
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function(a) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function(a, b) {
  throw Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fhnop);
  return cljs.core.truth_(a) ? cljs.core.deref.call(null, a) : !0;
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.put_BANG_.call(null, a, b, c, !0);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fn_handler.call(null, c));
  return cljs.core.truth_(a) ? (b = cljs.core.deref.call(null, a), cljs.core.truth_(d) ? c.call(null, b) : cljs.core.async.impl.dispatch.run.call(null, function(a, b, d) {
    return function() {
      return c.call(null, a);
    };
  }(b, a, a)), b) : !0;
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function(a) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, a);
};
cljs.core.async.random_array = function(a) {
  for (var b = Array(a), c = 0;;) {
    if (c < a) {
      b[c] = 0, c += 1;
    } else {
      break;
    }
  }
  for (c = 1;;) {
    if (cljs.core._EQ_.call(null, c, a)) {
      return b;
    }
    var d = cljs.core.rand_int.call(null, c);
    b[c] = b[d];
    b[d] = c;
    c += 1;
  }
};
cljs.core.async.alt_flag = function() {
  var a = cljs.core.atom.call(null, !0);
  "undefined" === typeof cljs.core.async.t_cljs$core$async9938 && (cljs.core.async.t_cljs$core$async9938 = function(a, c) {
    this.flag = a;
    this.meta9939 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async9938.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.core.async.t_cljs$core$async9938(this.flag, b);
    };
  }(a), cljs.core.async.t_cljs$core$async9938.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta9939;
    };
  }(a), cljs.core.async.t_cljs$core$async9938.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async9938.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return function(a) {
      return cljs.core.deref.call(null, this.flag);
    };
  }(a), cljs.core.async.t_cljs$core$async9938.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return function(a) {
      return !0;
    };
  }(a), cljs.core.async.t_cljs$core$async9938.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    return function(a) {
      cljs.core.reset_BANG_.call(null, this.flag, null);
      return !0;
    };
  }(a), cljs.core.async.t_cljs$core$async9938.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta9939", "meta9939", -1913728061, null)], null);
    };
  }(a), cljs.core.async.t_cljs$core$async9938.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async9938.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async9938", cljs.core.async.t_cljs$core$async9938.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, e) {
      return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async9938");
    };
  }(a), cljs.core.async.__GT_t_cljs$core$async9938 = function(a) {
    return function(a, b) {
      return new cljs.core.async.t_cljs$core$async9938(a, b);
    };
  }(a));
  return new cljs.core.async.t_cljs$core$async9938(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async9941 && (cljs.core.async.t_cljs$core$async9941 = function(a, b, e) {
    this.flag = a;
    this.cb = b;
    this.meta9942 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async9941.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async9941(this.flag, this.cb, b);
  }, cljs.core.async.t_cljs$core$async9941.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta9942;
  }, cljs.core.async.t_cljs$core$async9941.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async9941.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.active_QMARK_.call(null, this.flag);
  }, cljs.core.async.t_cljs$core$async9941.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.t_cljs$core$async9941.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    cljs.core.async.impl.protocols.commit.call(null, this.flag);
    return this.cb;
  }, cljs.core.async.t_cljs$core$async9941.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta9942", "meta9942", -1963673604, null)], null);
  }, cljs.core.async.t_cljs$core$async9941.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async9941.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async9941", cljs.core.async.t_cljs$core$async9941.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async9941");
  }, cljs.core.async.__GT_t_cljs$core$async9941 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async9941(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async9941(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function(a, b, c) {
  var d = cljs.core.async.alt_flag.call(null), e = cljs.core.count.call(null, b), f = cljs.core.async.random_array.call(null, e), g = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(c), h = function() {
    for (var c = 0;;) {
      if (c < e) {
        var h = cljs.core.truth_(g) ? c : f[c], m = cljs.core.nth.call(null, b, h), n = cljs.core.vector_QMARK_.call(null, m) ? m.call(null, 0) : null, p = cljs.core.truth_(n) ? function() {
          var b = m.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, n, b, cljs.core.async.alt_handler.call(null, d, function(b, c, d, e, f, g, h, k, l) {
            return function(b) {
              return a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, f], null));
            };
          }(c, b, h, m, n, d, e, f, g)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, m, cljs.core.async.alt_handler.call(null, d, function(b, c, d, e, f, g, h, k) {
          return function(b) {
            return a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, d], null));
          };
        }(c, h, m, n, d, e, f, g)));
        if (cljs.core.truth_(p)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, p), function() {
            var a = n;
            return cljs.core.truth_(a) ? a : m;
          }()], null));
        }
        c += 1;
      } else {
        return null;
      }
    }
  }();
  return cljs.core.truth_(h) ? h : cljs.core.contains_QMARK_.call(null, c, new cljs.core.Keyword(null, "default", "default", -1987822328)) ? (h = function() {
    var a = cljs.core.async.impl.protocols.active_QMARK_.call(null, d);
    return cljs.core.truth_(a) ? cljs.core.async.impl.protocols.commit.call(null, d) : a;
  }(), cljs.core.truth_(h) ? cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "default", "default", -1987822328)], null)) : null) : null;
};
cljs.core.async.alts_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) && cljs.core.apply.call(null, cljs.core.hash_map, b);
  throw Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.async.offer_BANG_ = function(a, b) {
  a = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, !1));
  return cljs.core.truth_(a) ? cljs.core.deref.call(null, a) : null;
};
cljs.core.async.poll_BANG_ = function(a) {
  a = cljs.core.async.impl.protocols.take_BANG_.call(null, a, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, !1));
  return cljs.core.truth_(a) ? cljs.core.deref.call(null, a) : null;
};
cljs.core.async.pipe = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.pipe.call(null, a, b, !0);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            return 7 === e ? (d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = d[2], d[7] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === e ? (d[2] = null, d[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            d, 11, b, e)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 12 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, a) : 11 === e ? (e = d[2], cljs.core.truth_(e) ? d[1] = 12 : d[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (d[2] = null, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            5 === e ? (cljs.core.truth_(c) ? d[1] = 8 : d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === e || 10 === e ? (d[2] = d[2], d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = cljs.core.async.close_BANG_.call(null, b), d[2] = e, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return b;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function(a, b, c, d, e, f, g) {
  if (!(0 < a)) {
    throw Error("Assert failed: (pos? n)");
  }
  for (var h = cljs.core.async.chan.call(null, a), k = cljs.core.async.chan.call(null, a), l = function(a, b) {
    return function(d) {
      var e = cljs.core.nth.call(null, d, 0, null), g = cljs.core.nth.call(null, d, 1, null);
      if (null == d) {
        return cljs.core.async.close_BANG_.call(null, b), null;
      }
      var h = cljs.core.async.chan.call(null, 1, c, f), k = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h) {
        return function() {
          var k = function() {
            return function(a, b, c, d, e, f, g, h, k) {
              return function() {
                var b = null, c = function() {
                  var a = [null, null, null, null, null, null, null, null];
                  a[0] = b;
                  a[1] = 1;
                  return a;
                }, d = function(b) {
                  for (;;) {
                    a: {
                      try {
                        for (;;) {
                          var c = a.call(null, b);
                          if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var d = c;
                            break a;
                          }
                        }
                      } catch (fa) {
                        if (fa instanceof Object) {
                          b[5] = fa, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw fa;
                        }
                      }
                    }
                    if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      return d;
                    }
                  }
                };
                b = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return d.call(this, a);
                  }
                  throw Error("Invalid arity: " + (arguments.length - 1));
                };
                b.cljs$core$IFn$_invoke$arity$0 = c;
                b.cljs$core$IFn$_invoke$arity$1 = d;
                return b;
              }();
            }(function(a, b, c, d, e, f, g, h) {
              return function(a) {
                var c = a[1];
                if (1 === c) {
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 2, b, d);
                }
                if (2 === c) {
                  c = a[2];
                  var e = cljs.core.async.close_BANG_.call(null, b);
                  a[7] = c;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, e);
                }
                return null;
              };
            }(a, b, c, d, e, f, g, h), a, b, c, d, e, f, g, h);
          }(), l = function() {
            var b = k.call(null);
            b[6] = a;
            return b;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
        };
      }(k, h, d, e, g, d, a, b));
      cljs.core.async.put_BANG_.call(null, g, h);
      return !0;
    };
  }(h, k), m = function(a, b, d) {
    return function(a) {
      var d = cljs.core.nth.call(null, a, 0, null), e = cljs.core.nth.call(null, a, 1, null);
      if (null == a) {
        return cljs.core.async.close_BANG_.call(null, b), null;
      }
      a = cljs.core.async.chan.call(null, 1);
      c.call(null, d, a);
      cljs.core.async.put_BANG_.call(null, e, a);
      return !0;
    };
  }(h, k, l), n = 0;;) {
    if (n < a) {
      var p = g, q = p instanceof cljs.core.Keyword ? p.fqn : null;
      switch(q) {
        case "compute":
          var r = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k) {
            return function() {
              var l = function() {
                var l = function(a, b, c, d, e, f, g, h, k) {
                  return function(a) {
                    var b = a[1];
                    return 1 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === b ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, f) : 3 === b ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]) : 4 === b ? (b = h.call(null, a[2]), cljs.core.truth_(b) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
                    6 === b ? (a[2] = null, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 7 === b ? (a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h, k);
                return function(a, b, c, d, e, f, g, h, k, l) {
                  return function() {
                    var a = null, c = function() {
                      var b = [null, null, null, null, null, null, null];
                      b[0] = a;
                      b[1] = 1;
                      return b;
                    }, d = function(a) {
                      for (;;) {
                        a: {
                          try {
                            for (;;) {
                              var c = b.call(null, a);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                var d = c;
                                break a;
                              }
                            }
                          } catch (W) {
                            if (W instanceof Object) {
                              a[5] = W, cljs.core.async.impl.ioc_helpers.process_exception.call(null, a), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw W;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return d;
                        }
                      }
                    };
                    a = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + (arguments.length - 1));
                    };
                    a.cljs$core$IFn$_invoke$arity$0 = c;
                    a.cljs$core$IFn$_invoke$arity$1 = d;
                    return a;
                  }();
                }(a, l, b, c, d, e, f, g, h, k);
              }(), m = function() {
                var a = l.call(null);
                a[6] = b;
                return a;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, m);
            };
          }(n, r, p, q, a, h, k, l, m));
          break;
        case "async":
          r = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k) {
            return function() {
              var l = function() {
                var l = function(a, b, c, d, e, f, g, h, k) {
                  return function(a) {
                    var b = a[1];
                    return 1 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === b ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, f) : 3 === b ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]) : 4 === b ? (b = k.call(null, a[2]), cljs.core.truth_(b) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
                    6 === b ? (a[2] = null, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 7 === b ? (a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h, k);
                return function(a, b, c, d, e, f, g, h, k, l) {
                  return function() {
                    var a = null, c = function() {
                      var b = [null, null, null, null, null, null, null];
                      b[0] = a;
                      b[1] = 1;
                      return b;
                    }, d = function(a) {
                      for (;;) {
                        a: {
                          try {
                            for (;;) {
                              var c = b.call(null, a);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                var d = c;
                                break a;
                              }
                            }
                          } catch (W) {
                            if (W instanceof Object) {
                              a[5] = W, cljs.core.async.impl.ioc_helpers.process_exception.call(null, a), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw W;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return d;
                        }
                      }
                    };
                    a = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + (arguments.length - 1));
                    };
                    a.cljs$core$IFn$_invoke$arity$0 = c;
                    a.cljs$core$IFn$_invoke$arity$1 = d;
                    return a;
                  }();
                }(a, l, b, c, d, e, f, g, h, k);
              }(), m = function() {
                var a = l.call(null);
                a[6] = b;
                return a;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, m);
            };
          }(n, r, p, q, a, h, k, l, m));
          break;
        default:
          throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(q)].join(""));
      }
      n += 1;
    } else {
      break;
    }
  }
  a = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, e, f) {
    return function() {
      var g = function() {
        return function(a, b, c, d, e, f) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (E) {
                    if (E instanceof Object) {
                      b[5] = E, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw E;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, b, c, e, f) {
          return function(a) {
            var e = a[1];
            if (1 === e) {
              return a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, d);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]);
            }
            if (4 === e) {
              return e = a[2], a[7] = e, cljs.core.truth_(null == e) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === e) {
              return e = cljs.core.async.close_BANG_.call(null, b), a[2] = e, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              var f = a[7];
              e = cljs.core.async.chan.call(null, 1);
              f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, e], null);
              a[8] = e;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 8, b, f);
            }
            return 7 === e ? (a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = a[8], a[9] = a[2], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 9, c, e)) : 9 === e ? (a[10] = a[2], a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(a, b, c, e, f), a, b, c, e, f);
      }(), h = function() {
        var b = g.call(null);
        b[6] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(a, h, k, l, m));
  a = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, c, d, f, g) {
    return function() {
      var h = function() {
        return function(a, b, c, d, e, f) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (E) {
                    if (E instanceof Object) {
                      b[5] = E, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw E;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, c, d, f, g) {
          return function(a) {
            var c = a[1];
            if (7 === c) {
              return a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === c) {
              return a[2] = null, a[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === c) {
              return a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === c) {
              return c = a[2], a[7] = c, cljs.core.truth_(null == c) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === c) {
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 18, b, a[8]);
            }
            if (21 === c) {
              return a[2] = a[2], a[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === c) {
              return a[9] = a[2], a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === c) {
              return c = a[7], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 11, c);
            }
            if (17 === c) {
              return c = a[2], cljs.core.truth_(c) ? a[1] = 19 : a[1] = 20, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === c) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]);
            }
            if (12 === c) {
              return c = a[10], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 14, c);
            }
            if (2 === c) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, d);
            }
            if (19 === c) {
              return a[2] = null, a[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === c) {
              return c = a[2], a[10] = c, a[2] = null, a[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === c) {
              return a[2] = null, a[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === c) {
              return cljs.core.truth_(e) ? a[1] = 8 : a[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === c) {
              c = a[2];
              var f = cljs.core.not.call(null, null == c);
              a[8] = c;
              a[11] = f;
              a[1] = f ? 15 : 16;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 16 === c ? (c = a[11], a[2] = c, a[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === c ? (a[2] = a[2], a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === c ? (a[2] = a[2], a[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === c ? (c = cljs.core.async.close_BANG_.call(null, b), a[2] = c, a[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(a, c, d, f, g), a, c, d, f, g);
      }(), k = function() {
        var b = h.call(null);
        b[6] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, k);
    };
  }(a, h, k, l, m));
  return a;
};
cljs.core.async.pipeline_async = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.pipeline_async.call(null, a, b, c, d, !0);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.async.pipeline_STAR_.call(null, a, b, c, d, e, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.pipeline.call(null, a, b, c, d, !0);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.async.pipeline.call(null, a, b, c, d, e, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.async.pipeline_STAR_.call(null, a, b, c, d, e, f, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.split.call(null, a, b, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  c = cljs.core.async.chan.call(null, c);
  d = cljs.core.async.chan.call(null, d);
  var e = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e) {
    return function() {
      var f = function() {
        return function(a, b, c, d) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (y) {
                    if (y instanceof Object) {
                      b[5] = y, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw y;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d, e) {
          return function(c) {
            var f = c[1];
            if (7 === f) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === f) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === f) {
              return f = c[2], c[7] = f, cljs.core.truth_(null == f) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === f) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === f) {
              return f = c[7], f = a.call(null, f), cljs.core.truth_(f) ? c[1] = 9 : c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === f) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === f) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === f) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === f) {
              return f = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 8, c[2], f);
            }
            if (9 === f) {
              return c[2] = d, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === f) {
              var g = cljs.core.async.close_BANG_.call(null, d);
              f = cljs.core.async.close_BANG_.call(null, e);
              c[8] = g;
              c[2] = f;
              c[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 14 === f ? (c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === f ? (c[2] = e, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === f ? (f = c[2], cljs.core.truth_(f) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d, e), c, d, e);
      }(), g = function() {
        var a = f.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(e, c, d));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return e = b, d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = d[2], d[8] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              e = d[7];
              var f = d[8];
              e = a.call(null, e, f);
              f = cljs.core.reduced_QMARK_.call(null, e);
              d[9] = e;
              d[1] = f ? 8 : 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, c) : 9 === e ? (e = d[9], d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = d[7], d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (d[2] = d[2], d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = d[9], 
            e = cljs.core.deref.call(null, e), d[2] = e, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.transduce = function(a, b, c, d) {
  a = a.call(null, b);
  b = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, b) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (v) {
                    if (v instanceof Object) {
                      b[5] = v, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw v;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, b) {
          return function(a) {
            var e = a[1];
            return 1 === e ? (e = cljs.core.async.reduce.call(null, b, c, d), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 2, e)) : 2 === e ? (e = b.call(null, a[2]), cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, e)) : null;
          };
        }(a, b), a, b);
      }(), f = function() {
        var b = e.call(null);
        b[6] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(b, a));
  return b;
};
cljs.core.async.onto_chan = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.onto_chan.call(null, a, b, !0);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            return 7 === e ? (d[2] = d[2], d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (e = cljs.core.seq.call(null, b), d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = d[7], e = cljs.core.first.call(null, e), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 7, a, e)) : 13 === e ? (d[2] = d[2], d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[2], cljs.core.truth_(e) ? 
            d[1] = 8 : d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 12 === e ? (d[2] = null, d[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? (e = d[7], cljs.core.truth_(e) ? d[1] = 4 : d[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = cljs.core.async.close_BANG_.call(null, a), d[2] = e, d[1] = 13, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 9 === e ? (cljs.core.truth_(c) ? d[1] = 11 : d[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = d[7], d[2] = e, d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = d[7], e = cljs.core.next.call(null, e), d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function(a) {
  var b = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, a));
  cljs.core.async.onto_chan.call(null, b, a);
  return b;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mux$muxch_STAR_$arity$1) {
    return a.cljs$core$async$Mux$muxch_STAR_$arity$1(a);
  }
  var b = cljs.core.async.muxch_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.muxch_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mux.muxch*", a);
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$Mult$tap_STAR_$arity$3) {
    return a.cljs$core$async$Mult$tap_STAR_$arity$3(a, b, c);
  }
  var d = cljs.core.async.tap_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.tap_STAR_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.tap*", a);
};
cljs.core.async.untap_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mult$untap_STAR_$arity$2) {
    return a.cljs$core$async$Mult$untap_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.untap_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.untap_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.untap*", a);
};
cljs.core.async.untap_all_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mult$untap_all_STAR_$arity$1) {
    return a.cljs$core$async$Mult$untap_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.untap_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.untap_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", a);
};
cljs.core.async.mult = function(a) {
  var b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async10452 && (cljs.core.async.t_cljs$core$async10452 = function(a, b, c) {
      this.ch = a;
      this.cs = b;
      this.meta10453 = c;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
      return function(a, b) {
        return new cljs.core.async.t_cljs$core$async10452(this.ch, this.cs, b);
      };
    }(b), cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
      return function(a) {
        return this.meta10453;
      };
    }(b), cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(a) {
      return function(a) {
        return this.ch;
      };
    }(b), cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$async$Mult$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(a) {
      return function(a, b, c) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.assoc, b, c);
        return null;
      };
    }(b), cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(a) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.dissoc, b);
        return null;
      };
    }(b), cljs.core.async.t_cljs$core$async10452.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(a) {
      return function(a) {
        cljs.core.reset_BANG_.call(null, this.cs, cljs.core.PersistentArrayMap.EMPTY);
        return null;
      };
    }(b), cljs.core.async.t_cljs$core$async10452.getBasis = function(a) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta10453", "meta10453", 591189093, null)], null);
      };
    }(b), cljs.core.async.t_cljs$core$async10452.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async10452.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async10452", cljs.core.async.t_cljs$core$async10452.cljs$lang$ctorPrWriter = function(a) {
      return function(a, b, c) {
        return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async10452");
      };
    }(b), cljs.core.async.__GT_t_cljs$core$async10452 = function(a) {
      return function(a, b, c) {
        return new cljs.core.async.t_cljs$core$async10452(a, b, c);
      };
    }(b));
    return new cljs.core.async.t_cljs$core$async10452(a, b, cljs.core.PersistentArrayMap.EMPTY);
  }(), d = cljs.core.async.chan.call(null, 1), e = cljs.core.atom.call(null, null), f = function(a, b, c, d) {
    return function(a) {
      return 0 === cljs.core.swap_BANG_.call(null, d, cljs.core.dec) ? cljs.core.async.put_BANG_.call(null, c, !0) : null;
    };
  }(b, c, d, e), g = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, g) {
    return function() {
      var h = function() {
        return function(a, b, c, d, e, f, g) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (H) {
                    if (H instanceof Object) {
                      b[5] = H, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw H;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g) {
          return function(b) {
            var h = b[1];
            if (7 === h) {
              var k = b, l = k;
              l[2] = b[2];
              l[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === h) {
              var m = b[7], n = cljs.core.first.call(null, m), p = cljs.core.nth.call(null, n, 0, null), q = cljs.core.nth.call(null, n, 1, null);
              b[8] = p;
              k = b;
              cljs.core.truth_(q) ? k[1] = 22 : k[1] = 23;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === h) {
              var r = b[9], t = b[10], v = b[11], u = b[12], y = cljs.core._nth.call(null, t, v), w = cljs.core.async.put_BANG_.call(null, y, r, g);
              b[12] = y;
              k = b;
              cljs.core.truth_(w) ? k[1] = 30 : k[1] = 31;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === h) {
              var x = k = b;
              x[2] = null;
              x[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === h) {
              m = b[7];
              var z = b[2], L = cljs.core.next.call(null, m), N = null, R = 0, S = 0;
              b[13] = S;
              b[14] = z;
              b[15] = L;
              b[16] = N;
              b[17] = R;
              var T = k = b;
              T[2] = null;
              T[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (39 === h) {
              var X = k = b;
              X[2] = null;
              X[1] = 41;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === h) {
              r = b[9];
              var W = b[2], ba = null == W;
              b[9] = W;
              k = b;
              cljs.core.truth_(ba) ? k[1] = 5 : k[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === h) {
              S = b[13];
              L = b[15];
              N = b[16];
              R = b[17];
              var sa = b[2], ma = L, fa = N, da = R;
              b[13] = S + 1;
              b[15] = ma;
              b[18] = sa;
              b[16] = fa;
              b[17] = da;
              var V = k = b;
              V[2] = null;
              V[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === h) {
              var aa = b[2], ja = k = b;
              ja[2] = aa;
              ja[1] = 18;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (31 === h) {
              u = b[12];
              var Z = g.call(null, null), na = cljs.core.async.untap_STAR_.call(null, d, u);
              b[19] = Z;
              var ka = k = b;
              ka[2] = na;
              ka[1] = 32;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (32 === h) {
              t = b[10];
              var U = b[20];
              v = b[11];
              var Y = b[21], oa = U, pa = t, ta = Y, ea = v + 1;
              b[22] = b[2];
              b[10] = pa;
              b[20] = oa;
              b[11] = ea;
              b[21] = ta;
              var qa = k = b;
              qa[2] = null;
              qa[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (40 === h) {
              var ra = b[23], va = g.call(null, null), wa = cljs.core.async.untap_STAR_.call(null, d, ra);
              b[24] = va;
              var ua = k = b;
              ua[2] = wa;
              ua[1] = 41;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (33 === h) {
              var ha = b[25], jb = cljs.core.chunked_seq_QMARK_.call(null, ha);
              k = b;
              k[1] = jb ? 36 : 37;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === h) {
              var Aa = b[26], kb = cljs.core.async.close_BANG_.call(null, Aa), Qa = k = b;
              Qa[2] = kb;
              Qa[1] = 15;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === h) {
              p = b[8];
              var lb = cljs.core.async.close_BANG_.call(null, p), Ra = k = b;
              Ra[2] = lb;
              Ra[1] = 24;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (36 === h) {
              ha = b[25];
              var Ba = cljs.core.chunk_first.call(null, ha), Sa = cljs.core.chunk_rest.call(null, ha), mb = cljs.core.count.call(null, Ba);
              U = Sa;
              t = Ba;
              Y = mb;
              v = 0;
              b[10] = t;
              b[20] = U;
              b[11] = v;
              b[21] = Y;
              var ca = k = b;
              ca[2] = null;
              ca[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (41 === h) {
              ha = b[25];
              var nb = b[2];
              U = cljs.core.next.call(null, ha);
              t = null;
              v = Y = 0;
              b[10] = t;
              b[20] = U;
              b[11] = v;
              b[27] = nb;
              b[21] = Y;
              var Ta = k = b;
              Ta[2] = null;
              Ta[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (43 === h) {
              var Ua = k = b;
              Ua[2] = null;
              Ua[1] = 44;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (29 === h) {
              var ob = b[2], Ca = k = b;
              Ca[2] = ob;
              Ca[1] = 26;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (44 === h) {
              b[28] = b[2];
              var Da = k = b;
              Da[2] = null;
              Da[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === h) {
              var Va = b[29], pb = cljs.core.deref.call(null, c), xa = cljs.core.keys.call(null, pb), ya = cljs.core.count.call(null, xa), Wa = cljs.core.reset_BANG_.call(null, f, ya);
              U = cljs.core.seq.call(null, xa);
              t = null;
              v = Y = 0;
              b[30] = Wa;
              b[29] = xa;
              b[10] = t;
              b[20] = U;
              b[11] = v;
              b[21] = Y;
              var Xa = k = b;
              Xa[2] = null;
              Xa[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (28 === h) {
              ha = b[25];
              U = b[20];
              var Ea = cljs.core.seq.call(null, U);
              b[25] = Ea;
              k = b;
              k[1] = Ea ? 33 : 34;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === h) {
              v = b[11];
              Y = b[21];
              var qb = v < Y;
              k = b;
              cljs.core.truth_(qb) ? k[1] = 27 : k[1] = 28;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (34 === h) {
              var Fa = k = b;
              Fa[2] = null;
              Fa[1] = 35;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === h) {
              var Ya = k = b;
              Ya[2] = null;
              Ya[1] = 18;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === h) {
              var rb = b[2];
              k = b;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, k, rb);
            }
            if (12 === h) {
              var Za = b[2], $a = k = b;
              $a[2] = Za;
              $a[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === h) {
              return k = b, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, k, 4, a);
            }
            if (23 === h) {
              var Ga = k = b;
              Ga[2] = null;
              Ga[1] = 24;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (35 === h) {
              var sb = b[2], ia = k = b;
              ia[2] = sb;
              ia[1] = 29;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (19 === h) {
              m = b[7];
              var ab = cljs.core.chunk_first.call(null, m), bb = cljs.core.chunk_rest.call(null, m), tb = cljs.core.count.call(null, ab);
              L = bb;
              N = ab;
              R = tb;
              S = 0;
              b[13] = S;
              b[15] = L;
              b[16] = N;
              b[17] = R;
              var Ha = k = b;
              Ha[2] = null;
              Ha[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === h) {
              L = b[15];
              m = b[7];
              var Ia = cljs.core.seq.call(null, L);
              b[7] = Ia;
              k = b;
              k[1] = Ia ? 16 : 17;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === h) {
              var Ja = b[2], cb = k = b;
              cb[2] = Ja;
              cb[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === h) {
              var db = cljs.core.deref.call(null, c);
              L = cljs.core.seq.call(null, db);
              N = null;
              S = R = 0;
              b[13] = S;
              b[15] = L;
              b[16] = N;
              b[17] = R;
              var Ka = k = b;
              Ka[2] = null;
              Ka[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === h) {
              var la = k = b;
              la[2] = null;
              la[1] = 15;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (45 === h) {
              var La = b[2], za = k = b;
              za[2] = La;
              za[1] = 44;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (26 === h) {
              Va = b[29];
              var Ma = b[2], Na = cljs.core.seq.call(null, Va);
              b[31] = Ma;
              k = b;
              k[1] = Na ? 42 : 43;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (16 === h) {
              m = b[7];
              var eb = cljs.core.chunked_seq_QMARK_.call(null, m);
              k = b;
              k[1] = eb ? 19 : 20;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (38 === h) {
              var Oa = b[2], Pa = k = b;
              Pa[2] = Oa;
              Pa[1] = 35;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (30 === h) {
              var fb = k = b;
              fb[2] = null;
              fb[1] = 32;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === h) {
              S = b[13];
              N = b[16];
              var gb = cljs.core._nth.call(null, N, S);
              Aa = cljs.core.nth.call(null, gb, 0, null);
              var ub = cljs.core.nth.call(null, gb, 1, null);
              b[26] = Aa;
              k = b;
              cljs.core.truth_(ub) ? k[1] = 13 : k[1] = 14;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (18 === h) {
              var vb = b[2], hb = k = b;
              hb[2] = vb;
              hb[1] = 12;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (42 === h) {
              return k = b, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, k, 45, e);
            }
            if (37 === h) {
              r = b[9];
              ha = b[25];
              ra = b[23];
              var ib = cljs.core.first.call(null, ha), wb = cljs.core.async.put_BANG_.call(null, ib, r, g);
              b[23] = ib;
              k = b;
              cljs.core.truth_(wb) ? k[1] = 39 : k[1] = 40;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (8 === h) {
              S = b[13];
              R = b[17];
              var xb = S < R;
              k = b;
              cljs.core.truth_(xb) ? k[1] = 10 : k[1] = 11;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return null;
          };
        }(b, c, d, e, f, g), b, c, d, e, f, g);
      }(), k = function() {
        var a = h.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, k);
    };
  }(g, b, c, d, e, f));
  return c;
};
cljs.core.async.tap = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.tap.call(null, a, b, !0);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  cljs.core.async.tap_STAR_.call(null, a, b, c);
  return b;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function(a, b) {
  return cljs.core.async.untap_STAR_.call(null, a, b);
};
cljs.core.async.untap_all = function(a) {
  return cljs.core.async.untap_all_STAR_.call(null, a);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$admix_STAR_$arity$2) {
    return a.cljs$core$async$Mix$admix_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.admix_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.admix_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.admix*", a);
};
cljs.core.async.unmix_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$unmix_STAR_$arity$2) {
    return a.cljs$core$async$Mix$unmix_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.unmix_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.unmix_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.unmix*", a);
};
cljs.core.async.unmix_all_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mix$unmix_all_STAR_$arity$1) {
    return a.cljs$core$async$Mix$unmix_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.unmix_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.unmix_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", a);
};
cljs.core.async.toggle_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$toggle_STAR_$arity$2) {
    return a.cljs$core$async$Mix$toggle_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.toggle_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.toggle_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.toggle*", a);
};
cljs.core.async.solo_mode_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$solo_mode_STAR_$arity$2) {
    return a.cljs$core$async$Mix$solo_mode_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.solo_mode_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.solo_mode_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", a);
};
cljs.core.async.ioc_alts_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  a[1] = b;
  b = cljs.core.async.do_alts.call(null, function(b, c, d) {
    return function(b) {
      a[2] = b;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
    };
  }(d, e, e), c, e);
  return cljs.core.truth_(b) ? (a[2] = cljs.core.deref.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.async.mix = function(a) {
  var b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null), d = cljs.core.conj.call(null, c, new cljs.core.Keyword(null, "solo", "solo", -316350075)), e = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646)), f = cljs.core.async.chan.call(null), 
  g = function(a, b, c, d, e) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, e, !0);
    };
  }(b, c, d, e, f), h = function(a, b, c, d, e, f) {
    return function(g, h) {
      return cljs.core.reduce_kv.call(null, function(a, b, c, d, e, f) {
        return function(a, b, c) {
          return cljs.core.truth_(g.call(null, c)) ? cljs.core.conj.call(null, a, b) : a;
        };
      }(a, b, c, d, e, f), cljs.core.PersistentHashSet.EMPTY, h);
    };
  }(b, c, d, e, f, g), k = function(a, b, c, d, e, f, g) {
    return function() {
      var b = cljs.core.deref.call(null, a), c = cljs.core.deref.call(null, d), f = g.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), b), h = g.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), b);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), f, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), g.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), b), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, c, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, f) ? cljs.core.vec.call(null, f) : cljs.core.vec.call(null, 
      cljs.core.remove.call(null, h, cljs.core.keys.call(null, b))), e)], null);
    };
  }(b, c, d, e, f, g, h), l = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async10750 && (cljs.core.async.t_cljs$core$async10750 = function(a, b, c, d, e, f, g, h, k, l) {
      this.out = a;
      this.cs = b;
      this.solo_modes = c;
      this.attrs = d;
      this.solo_mode = e;
      this.change = f;
      this.changed = g;
      this.pick = h;
      this.calc_state = k;
      this.meta10751 = l;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        return new cljs.core.async.t_cljs$core$async10750(this.out, this.cs, this.solo_modes, this.attrs, this.solo_mode, this.change, this.changed, this.pick, this.calc_state, b);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b, c, d, e, f, g, h) {
      return function(a) {
        return this.meta10751;
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(a, b, c, d, e, f, g, h) {
      return function(a) {
        return this.out;
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mix$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.assoc, b, cljs.core.PersistentArrayMap.EMPTY);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.dissoc, b);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(a, b, c, d, e, f, g, h) {
      return function(a) {
        cljs.core.reset_BANG_.call(null, this.cs, cljs.core.PersistentArrayMap.EMPTY);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), b);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        if (!cljs.core.truth_(this.solo_modes.call(null, b))) {
          throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["mode must be one of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.solo_modes)].join("")), "\n(solo-modes mode)"].join(""));
        }
        cljs.core.reset_BANG_.call(null, this.solo_mode, b);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.getBasis = function(a, b, c, d, e, f, g, h) {
      return function() {
        return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "change", "change", 477485025, null), new cljs.core.Symbol(null, 
        "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "meta10751", "meta10751", -994565966, null)], null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async10750.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async10750.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async10750", cljs.core.async.t_cljs$core$async10750.cljs$lang$ctorPrWriter = function(a, b, c, d, e, f, g, h) {
      return function(a, b, c) {
        return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async10750");
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.__GT_t_cljs$core$async10750 = function(a, b, c, d, e, f, g, h) {
      return function(a, b, c, d, e, f, g, h, k, l) {
        return new cljs.core.async.t_cljs$core$async10750(a, b, c, d, e, f, g, h, k, l);
      };
    }(b, c, d, e, f, g, h, k));
    return new cljs.core.async.t_cljs$core$async10750(a, b, c, d, e, f, g, h, k, cljs.core.PersistentArrayMap.EMPTY);
  }(), m = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, g, h, k, l, m) {
    return function() {
      var n = function() {
        return function(a, b, c, d, e, f, g, h, k, l, m) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (S) {
                    if (S instanceof Object) {
                      b[5] = S, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw S;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g, h, k, l, m) {
          return function(b) {
            var d = b[1];
            if (7 === d) {
              return d = b, d[2] = b[2], d[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === d) {
              return d = b[7], b[2] = d, b[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === d) {
              return b[2] = null, b[1] = 28, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === d) {
              d = l.call(null);
              var e = cljs.core.not.call(null, null == d);
              b[8] = d;
              b[1] = e ? 2 : 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === d) {
              var f = b[10];
              e = b[11];
              d = e.call(null, f);
              b[9] = d;
              cljs.core.truth_(d) ? b[1] = 29 : b[1] = 30;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === d) {
              return d = b[2], cljs.core.truth_(d) ? b[1] = 8 : b[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === d) {
              return d = b[2], cljs.core.truth_(d) ? b[1] = 19 : b[1] = 20, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === d) {
              f = b[2];
              e = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
              d = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
              var h = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
              b[12] = f;
              b[13] = d;
              b[11] = e;
              return cljs.core.async.ioc_alts_BANG_.call(null, b, 22, h);
            }
            return 31 === d ? (d = b[2], cljs.core.truth_(d) ? b[1] = 32 : b[1] = 33, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 32 === d ? (d = b[14], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 35, a, d)) : 33 === d ? (d = b[12], b[7] = d, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === d ? (d = b[7], e = cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$, d = d.cljs$lang$protocol_mask$partition0$ & 64 || e, cljs.core.truth_(d) ? 
            b[1] = 16 : b[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 22 === d ? (e = b[2], d = cljs.core.nth.call(null, e, 0, null), h = cljs.core.nth.call(null, e, 1, null), e = null == d, f = cljs.core._EQ_.call(null, h, g), b[14] = d, b[10] = h, cljs.core.truth_(e || f) ? b[1] = 23 : b[1] = 24, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 36 === d ? (d = b[12], b[7] = d, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            29 === d ? (d = b[9], b[2] = d, b[1] = 31, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === d ? (b[2] = !1, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 28 === d ? (e = b[2], d = l.call(null), b[7] = d, b[15] = e, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 25 === d ? (d = b[2], b[2] = d, b[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 34 === d ? (d = b[2], b[2] = d, b[1] = 25, 
            new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 17 === d ? (b[2] = !1, b[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === d ? (b[2] = !1, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 12 === d ? (d = b[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, d)) : 2 === d ? (d = b[8], e = cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$, d = d.cljs$lang$protocol_mask$partition0$ & 64 || e, cljs.core.truth_(d) ? b[1] = 
            5 : b[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 23 === d ? (d = b[14], cljs.core.truth_(null == d) ? b[1] = 26 : b[1] = 27, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 35 === d ? (d = b[2], cljs.core.truth_(d) ? b[1] = 36 : b[1] = 37, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === d ? (d = b[7], d = cljs.core.apply.call(null, cljs.core.hash_map, d), b[2] = d, b[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            11 === d ? (d = b[7], d = cljs.core.not.call(null, null == d), b[1] = d ? 13 : 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === d ? (d = b[8], b[2] = d, b[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === d ? (b[2] = !0, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === d ? (b[2] = !1, b[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 26 === d ? (f = b[10], d = cljs.core.swap_BANG_.call(null, 
            c, cljs.core.dissoc, f), b[2] = d, b[1] = 28, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === d ? (b[2] = !0, b[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 38 === d ? (d = b[2], b[2] = d, b[1] = 34, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 30 === d ? (d = b[13], f = b[10], e = b[11], e = cljs.core.empty_QMARK_.call(null, e), d = d.call(null, f), d = cljs.core.not.call(null, d), b[2] = e && d, b[1] = 31, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 10 === d ? (d = b[8], h = b[2], e = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "solos", "solos", 1441458643)), f = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309)), h = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "reads", "reads", -1215067361)), b[7] = d, b[16] = f, b[17] = h, b[18] = e, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === d ? (d = b[2], 
            b[2] = d, b[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 37 === d ? (b[2] = null, b[1] = 38, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === d ? (d = b[8], d = cljs.core.apply.call(null, cljs.core.hash_map, d), b[2] = d, b[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c, d, e, f, g, h, k, l, m), b, c, d, e, f, g, h, k, l, m);
      }(), p = function() {
        var a = n.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, p);
    };
  }(m, b, c, d, e, f, g, h, k, l));
  return l;
};
cljs.core.async.admix = function(a, b) {
  return cljs.core.async.admix_STAR_.call(null, a, b);
};
cljs.core.async.unmix = function(a, b) {
  return cljs.core.async.unmix_STAR_.call(null, a, b);
};
cljs.core.async.unmix_all = function(a) {
  return cljs.core.async.unmix_all_STAR_.call(null, a);
};
cljs.core.async.toggle = function(a, b) {
  return cljs.core.async.toggle_STAR_.call(null, a, b);
};
cljs.core.async.solo_mode = function(a, b) {
  return cljs.core.async.solo_mode_STAR_.call(null, a, b);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$async$Pub$sub_STAR_$arity$4) {
    return a.cljs$core$async$Pub$sub_STAR_$arity$4(a, b, c, d);
  }
  var e = cljs.core.async.sub_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = cljs.core.async.sub_STAR_._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.sub*", a);
};
cljs.core.async.unsub_STAR_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_STAR_$arity$3) {
    return a.cljs$core$async$Pub$unsub_STAR_$arity$3(a, b, c);
  }
  var d = cljs.core.async.unsub_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.unsub_STAR_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub*", a);
};
cljs.core.async.unsub_all_STAR_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_all_STAR_$arity$1) {
    return a.cljs$core$async$Pub$unsub_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.unsub_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.unsub_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", a);
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_all_STAR_$arity$2) {
    return a.cljs$core$async$Pub$unsub_all_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.unsub_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.unsub_all_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", a);
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.pub.call(null, a, b, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = function(a) {
    return function(b) {
      var d = cljs.core.get.call(null, cljs.core.deref.call(null, a), b);
      return cljs.core.truth_(d) ? d : cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, a, function(a, d) {
        return function(a) {
          return cljs.core.truth_(a.call(null, b)) ? a : cljs.core.assoc.call(null, a, b, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, c.call(null, b))));
        };
      }(d, a)), b);
    };
  }(d), f = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async10969 && (cljs.core.async.t_cljs$core$async10969 = function(a, b, c, d, e, f) {
      this.ch = a;
      this.topic_fn = b;
      this.buf_fn = c;
      this.mults = d;
      this.ensure_mult = e;
      this.meta10970 = f;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
      return function(a, b) {
        return new cljs.core.async.t_cljs$core$async10969(this.ch, this.topic_fn, this.buf_fn, this.mults, this.ensure_mult, b);
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b) {
      return function(a) {
        return this.meta10970;
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(a, b) {
      return function(a) {
        return this.ch;
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$async$Pub$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(a, b) {
      return function(a, b, c, d) {
        a = this.ensure_mult.call(null, b);
        return cljs.core.async.tap.call(null, a, c, d);
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(a, b) {
      return function(a, b, c) {
        a = cljs.core.get.call(null, cljs.core.deref.call(null, this.mults), b);
        return cljs.core.truth_(a) ? cljs.core.async.untap.call(null, a, c) : null;
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(a, b) {
      return function(a) {
        return cljs.core.reset_BANG_.call(null, this.mults, cljs.core.PersistentArrayMap.EMPTY);
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(a, b) {
      return function(a, b) {
        return cljs.core.swap_BANG_.call(null, this.mults, cljs.core.dissoc, b);
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.getBasis = function(a, b) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta10970", "meta10970", 139169233, null)], 
        null);
      };
    }(d, e), cljs.core.async.t_cljs$core$async10969.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async10969.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async10969", cljs.core.async.t_cljs$core$async10969.cljs$lang$ctorPrWriter = function(a, b) {
      return function(a, b, c) {
        return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async10969");
      };
    }(d, e), cljs.core.async.__GT_t_cljs$core$async10969 = function(a, b) {
      return function(a, b, c, d, e, f) {
        return new cljs.core.async.t_cljs$core$async10969(a, b, c, d, e, f);
      };
    }(d, e));
    return new cljs.core.async.t_cljs$core$async10969(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
  }(), g = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e, f) {
    return function() {
      var g = function() {
        return function(a, b, c, d, e) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (A) {
                    if (A instanceof Object) {
                      b[5] = A, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw A;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d, e, f) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === e) {
              return c[2] = null, c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === e) {
              return e = cljs.core.swap_BANG_.call(null, d, cljs.core.dissoc, c[7]), c[2] = e, c[1] = 25, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = c[2], c[8] = e, cljs.core.truth_(null == e) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return c[2] = c[2], c[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === e) {
              return c[9] = c[2], c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return e = c[10], e = cljs.core.chunked_seq_QMARK_.call(null, e), c[1] = e ? 16 : 17, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === e) {
              return e = c[2], cljs.core.truth_(e) ? c[1] = 23 : c[1] = 24, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              e = c[8];
              e = b.call(null, e);
              var f = cljs.core.deref.call(null, d);
              f = cljs.core.get.call(null, f, e);
              c[7] = e;
              c[11] = f;
              cljs.core.truth_(f) ? c[1] = 19 : c[1] = 20;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === e) {
              return c[2] = c[2], c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === e) {
              return e = c[10], f = cljs.core.first.call(null, e), f = cljs.core.async.muxch_STAR_.call(null, f), f = cljs.core.async.close_BANG_.call(null, f), e = cljs.core.next.call(null, e), c[12] = e, c[13] = 0, c[14] = f, c[15] = 0, c[16] = null, c[2] = null, c[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === e) {
              return c[2] = c[2], c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, a);
            }
            if (23 === e) {
              return c[2] = null, c[1] = 25, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (19 === e) {
              return e = c[8], f = c[11], f = cljs.core.async.muxch_STAR_.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 22, f, e);
            }
            if (11 === e) {
              return e = c[12], e = cljs.core.seq.call(null, e), c[10] = e, c[1] = e ? 13 : 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === e) {
              return c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === e) {
              return e = cljs.core.deref.call(null, d), e = cljs.core.vals.call(null, e), e = cljs.core.seq.call(null, e), c[12] = e, c[13] = 0, c[15] = 0, c[16] = null, c[2] = null, c[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === e) {
              return c[2] = null, c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (16 === e) {
              e = c[10];
              f = cljs.core.chunk_first.call(null, e);
              e = cljs.core.chunk_rest.call(null, e);
              var g = cljs.core.count.call(null, f);
              c[12] = e;
              c[13] = g;
              c[15] = 0;
              c[16] = f;
              c[2] = null;
              c[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === e) {
              e = c[12];
              g = c[13];
              f = c[15];
              var h = c[16];
              var k = cljs.core._nth.call(null, h, f);
              k = cljs.core.async.muxch_STAR_.call(null, k);
              k = cljs.core.async.close_BANG_.call(null, k);
              c[12] = e;
              c[13] = g;
              c[17] = k;
              c[15] = f + 1;
              c[16] = h;
              c[2] = null;
              c[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 18 === e ? (c[2] = c[2], c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (g = c[13], f = c[15], e = f < g, cljs.core.truth_(e) ? c[1] = 10 : c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d, e, f), c, d, e, f);
      }(), h = function() {
        var a = g.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(g, d, e, f));
  return f;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.sub.call(null, a, b, c, !0);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.sub_STAR_.call(null, a, b, c, d);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function(a, b, c) {
  return cljs.core.async.unsub_STAR_.call(null, a, b, c);
};
cljs.core.async.unsub_all = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.unsub_all_STAR_.call(null, a);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.unsub_all_STAR_.call(null, a, b);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.map.call(null, a, b, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.vec.call(null, b);
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.count.call(null, b), e = cljs.core.object_array.call(null, d), f = cljs.core.async.chan.call(null, 1), g = cljs.core.atom.call(null, null), h = cljs.core.mapv.call(null, function(a, b, c, d, e, f) {
    return function(g) {
      return function(a, b, c, d, e, f) {
        return function(a) {
          d[g] = a;
          return 0 === cljs.core.swap_BANG_.call(null, f, cljs.core.dec) ? cljs.core.async.put_BANG_.call(null, e, d.slice(0)) : null;
        };
      }(a, b, c, d, e, f);
    };
  }(b, c, d, e, f, g), cljs.core.range.call(null, d)), k = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, g, h, k) {
    return function() {
      var l = function() {
        return function(a, b, c, d, e, f, g, h, k) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (E) {
                    if (E instanceof Object) {
                      b[5] = E, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw E;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g, h, k) {
          return function(b) {
            var f = b[1];
            if (7 === f) {
              return b[2] = null, b[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === f) {
              return b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === f) {
              return f = b[7], f = f < e, cljs.core.truth_(f) ? b[1] = 6 : b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === f) {
              return b[2] = b[2], b[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === f) {
              return f = cljs.core.async.close_BANG_.call(null, d), b[2] = f, b[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === f) {
              return b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === f) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, b[2]);
            }
            if (12 === f) {
              var l = b[2];
              f = cljs.core.some.call(null, cljs.core.nil_QMARK_, l);
              b[8] = l;
              cljs.core.truth_(f) ? b[1] = 13 : b[1] = 14;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 2 === f ? (f = cljs.core.reset_BANG_.call(null, h, e), b[9] = f, b[7] = 0, b[2] = null, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === f ? (f = b[7], cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, b, 10, Object, null, 9), l = c.call(null, f), f = k.call(null, f), f = cljs.core.async.take_BANG_.call(null, l, f), b[2] = f, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), new cljs.core.Keyword(null, "recur", "recur", 
            -437573268)) : 9 === f ? (f = b[7], l = b[2], b[7] = f + 1, b[10] = l, b[2] = null, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === f ? (b[11] = b[2], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 12, g)) : 14 === f ? (f = b[8], f = cljs.core.apply.call(null, a, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 16, d, f)) : 16 === f ? (b[12] = b[2], b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === 
            f ? (l = b[2], f = cljs.core.swap_BANG_.call(null, h, cljs.core.dec), b[13] = l, b[2] = f, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === f ? (b[2] = b[2], b[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c, d, e, f, g, h, k), b, c, d, e, f, g, h, k);
      }(), m = function() {
        var a = l.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, m);
    };
  }(k, b, c, d, e, f, g, h));
  return c;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.merge.call(null, a, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  b = cljs.core.async.chan.call(null, b);
  var c = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              var f = d[7], g = d[8], h = d[2], k = cljs.core.nth.call(null, h, 0, null), l = cljs.core.nth.call(null, h, 1, null);
              d[7] = k;
              d[8] = h;
              d[9] = l;
              cljs.core.truth_(null == k) ? d[1] = 8 : d[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var u = cljs.core.vec.call(null, a);
              d[10] = u;
              d[2] = null;
              d[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 4 === e ? (u = d[10], cljs.core.async.ioc_alts_BANG_.call(null, d, 7, u)) : 6 === e ? (d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 2 === e ? (u = d[10], k = cljs.core.count.call(null, u), cljs.core.truth_(0 < k) ? d[1] = 4 : d[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (u = d[10], d[11] = d[2], d[10] = u, d[2] = null, d[1] = 2, 
            new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (f = d[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 11, c, f)) : 5 === e ? (k = cljs.core.async.close_BANG_.call(null, c), d[2] = k, d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (d[2] = d[2], d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (f = d[7], g = d[8], l = d[9], u = d[10], k = function() {
              return function(a, b, c, d, e, f, g, h, k, l, m) {
                return function(a) {
                  return cljs.core.not_EQ_.call(null, d, a);
                };
              }(u, g, f, l, f, g, l, u, e, b, c);
            }(), k = cljs.core.filterv.call(null, k, u), d[10] = k, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c), b, c);
      }(), e = function() {
        var a = d.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, e);
    };
  }(c, b));
  return b;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function(a, b) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, a, b);
};
cljs.core.async.take = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.take.call(null, a, b, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (v) {
                    if (v instanceof Object) {
                      b[5] = v, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw v;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              e = c[2];
              var f = cljs.core.not.call(null, null == e);
              c[7] = e;
              c[1] = f ? 8 : 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 1 === e ? (c[8] = 0, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 7, b) : 6 === e ? (c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? (e = c[2], f = cljs.core.async.close_BANG_.call(null, d), c[9] = e, cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, f)) : 2 === e ? (e = c[8], e = e < a, cljs.core.truth_(e) ? c[1] = 4 : 
            c[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = c[8], c[10] = c[2], c[8] = e + 1, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (c[2] = null, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (c[2] = null, c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (c[2] = c[2], c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            8 === e ? (e = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async11341 && (cljs.core.async.t_cljs$core$async11341 = function(a, b, e) {
    this.f = a;
    this.ch = b;
    this.meta11342 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async11341(this.f, this.ch, b);
  }, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta11342;
  }, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
    var c = this, d = this;
    a = cljs.core.async.impl.protocols.take_BANG_.call(null, c.ch, function() {
      "undefined" === typeof cljs.core.async.t_cljs$core$async11344 && (cljs.core.async.t_cljs$core$async11344 = function(a, b, c, d, e, f) {
        this.f = a;
        this.ch = b;
        this.meta11342 = c;
        this._ = d;
        this.fn1 = e;
        this.meta11345 = f;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, cljs.core.async.t_cljs$core$async11344.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
        return function(a, b) {
          return new cljs.core.async.t_cljs$core$async11344(this.f, this.ch, this.meta11342, this._, this.fn1, b);
        };
      }(d), cljs.core.async.t_cljs$core$async11344.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
        return function(a) {
          return this.meta11345;
        };
      }(d), cljs.core.async.t_cljs$core$async11344.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11344.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
        return function(a) {
          return cljs.core.async.impl.protocols.active_QMARK_.call(null, this.fn1);
        };
      }(d), cljs.core.async.t_cljs$core$async11344.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
        return function(a) {
          return !0;
        };
      }(d), cljs.core.async.t_cljs$core$async11344.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
        return function(a) {
          var b = this;
          return function(a, c, d) {
            return function(c) {
              return a.call(null, null == c ? null : b.f.call(null, c));
            };
          }(cljs.core.async.impl.protocols.commit.call(null, b.fn1), this, a);
        };
      }(d), cljs.core.async.t_cljs$core$async11344.getBasis = function(a) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta11342", "meta11342", 2070013373, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async11341", 
          "cljs.core.async/t_cljs$core$async11341", 1493495026, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta11345", "meta11345", 1096746973, null)], null);
        };
      }(d), cljs.core.async.t_cljs$core$async11344.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async11344.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async11344", cljs.core.async.t_cljs$core$async11344.cljs$lang$ctorPrWriter = function(a) {
        return function(a, b, c) {
          return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async11344");
        };
      }(d), cljs.core.async.__GT_t_cljs$core$async11344 = function(a) {
        return function(a, b, c, d, e, f) {
          return new cljs.core.async.t_cljs$core$async11344(a, b, c, d, e, f);
        };
      }(d));
      return new cljs.core.async.t_cljs$core$async11344(c.f, c.ch, c.meta11342, d, b, cljs.core.PersistentArrayMap.EMPTY);
    }());
    return cljs.core.truth_(cljs.core.truth_(a) ? null != cljs.core.deref.call(null, a) : a) ? cljs.core.async.impl.channels.box.call(null, c.f.call(null, cljs.core.deref.call(null, a))) : a;
  }, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11341.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, e) {
    return cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, b, e);
  }, cljs.core.async.t_cljs$core$async11341.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta11342", "meta11342", 2070013373, null)], null);
  }, cljs.core.async.t_cljs$core$async11341.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async11341.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async11341", cljs.core.async.t_cljs$core$async11341.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async11341");
  }, cljs.core.async.__GT_t_cljs$core$async11341 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async11341(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async11341(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async11347 && (cljs.core.async.t_cljs$core$async11347 = function(a, b, e) {
    this.f = a;
    this.ch = b;
    this.meta11348 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async11347(this.f, this.ch, b);
  }, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta11348;
  }, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
    return cljs.core.async.impl.protocols.take_BANG_.call(null, this.ch, b);
  }, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11347.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, e) {
    return cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, this.f.call(null, b), e);
  }, cljs.core.async.t_cljs$core$async11347.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta11348", "meta11348", -1721880735, null)], null);
  }, cljs.core.async.t_cljs$core$async11347.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async11347.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async11347", cljs.core.async.t_cljs$core$async11347.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async11347");
  }, cljs.core.async.__GT_t_cljs$core$async11347 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async11347(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async11347(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async11350 && (cljs.core.async.t_cljs$core$async11350 = function(a, b, e) {
    this.p = a;
    this.ch = b;
    this.meta11351 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async11350(this.p, this.ch, b);
  }, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta11351;
  }, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
    return cljs.core.async.impl.protocols.take_BANG_.call(null, this.ch, b);
  }, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async11350.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, e) {
    return cljs.core.truth_(this.p.call(null, b)) ? cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, b, e) : cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch)));
  }, cljs.core.async.t_cljs$core$async11350.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta11351", "meta11351", 1494583283, null)], null);
  }, cljs.core.async.t_cljs$core$async11350.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async11350.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async11350", cljs.core.async.t_cljs$core$async11350.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async11350");
  }, cljs.core.async.__GT_t_cljs$core$async11350 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async11350(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async11350(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function(a, b) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, a), b);
};
cljs.core.async.filter_LT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.filter_LT_.call(null, a, b, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (v) {
                    if (v instanceof Object) {
                      b[5] = v, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw v;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            return 7 === e ? (c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = c[2], c[7] = e, cljs.core.truth_(null == e) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = c[7], e = a.call(null, e), cljs.core.truth_(e) ? c[1] = 8 : c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === 
            e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b) : 11 === e ? (c[2] = c[2], c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (c[2] = null, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = cljs.core.async.close_BANG_.call(null, d), c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? 
            (c[8] = c[2], c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.remove_LT_.call(null, a, b, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, a), b, c);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === e) {
              var f = d[7], g = d[2];
              e = cljs.core.next.call(null, f);
              d[8] = null;
              d[9] = 0;
              d[10] = g;
              d[11] = 0;
              d[12] = e;
              d[2] = null;
              d[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = d[2], d[13] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return d[2] = null, d[1] = 16, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === e) {
              return d[2] = null, d[1] = 23, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              f = d[8];
              g = d[9];
              var h = d[11];
              e = d[12];
              var k = d[2];
              d[8] = f;
              d[9] = g;
              d[14] = k;
              d[11] = h + 1;
              d[12] = e;
              d[2] = null;
              d[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 22 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[13], e = a.call(null, e), e = cljs.core.seq.call(null, e), d[8] = null, d[9] = 0, d[11] = 0, d[12] = e, d[2] = null, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 17 === e ? (f = d[7], e = cljs.core.chunk_first.call(null, f), f = cljs.core.chunk_rest.call(null, f), g = cljs.core.count.call(null, e), d[8] = e, d[9] = g, d[11] = 0, d[12] = f, d[2] = 
            null, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 12 === e ? (d[2] = d[2], d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, b) : 23 === e ? (d[2] = d[2], d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === e ? (d[2] = d[2], d[1] = 16, new cljs.core.Keyword(null, "recur", 
            "recur", -437573268)) : 11 === e ? (e = d[12], e = cljs.core.seq.call(null, e), d[7] = e, d[1] = e ? 14 : 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (f = d[2], e = cljs.core.async.impl.protocols.closed_QMARK_.call(null, c), d[15] = f, cljs.core.truth_(e) ? d[1] = 21 : d[1] = 22, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = cljs.core.async.close_BANG_.call(null, c), d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", 
            -437573268)) : 14 === e ? (f = d[7], e = cljs.core.chunked_seq_QMARK_.call(null, f), d[1] = e ? 17 : 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === e ? (d[2] = d[2], d[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (f = d[8], h = d[11], e = cljs.core._nth.call(null, f, h), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 13, c, e)) : 18 === e ? (f = d[7], e = cljs.core.first.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            d, 20, c, e)) : 8 === e ? (g = d[9], h = d[11], e = h < g, cljs.core.truth_(e) ? d[1] = 10 : d[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.mapcat_LT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.mapcat_LT_.call(null, a, b, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  cljs.core.async.mapcat_STAR_.call(null, a, b, c);
  return c;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.mapcat_GT_.call(null, a, b, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  cljs.core.async.mapcat_STAR_.call(null, a, c, b);
  return c;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.unique.call(null, a, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  b = cljs.core.async.chan.call(null, b);
  var c = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(b) {
            var d = b[1];
            if (7 === d) {
              return b[2] = b[2], b[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === d) {
              return b[7] = null, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === d) {
              d = b[2];
              var e = cljs.core.not.call(null, null == d);
              b[8] = d;
              b[1] = e ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 6 === d ? (b[2] = null, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === d ? (d = b[2], e = cljs.core.async.close_BANG_.call(null, c), b[9] = d, cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, e)) : 2 === d ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 4, a) : 11 === d ? (d = b[8], e = b[2], b[10] = e, b[7] = d, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === d ? (d = b[8], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            b, 11, c, d)) : 5 === d ? (e = b[7], d = b[8], d = cljs.core._EQ_.call(null, d, e), b[1] = d ? 8 : 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === d ? (b[2] = b[2], b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === d ? (e = b[7], b[7] = e, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c), b, c);
      }(), e = function() {
        var a = d.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, e);
    };
  }(c, b));
  return b;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.partition.call(null, a, b, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (v) {
                    if (v instanceof Object) {
                      b[5] = v, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw v;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return e = Array(a), c[7] = 0, c[8] = e, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              e = c[2];
              var f = cljs.core.not.call(null, null == e);
              c[9] = e;
              c[1] = f ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return c[2] = c[2], c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              return f = c[7], cljs.core.truth_(0 < f) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === e) {
              return e = c[8], e = cljs.core.vec.call(null, e), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 15, d, e);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === e) {
              return f = c[2], e = Array(a), c[10] = f, c[7] = 0, c[8] = e, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === e) {
              return e = c[8], e = cljs.core.vec.call(null, e), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e);
            }
            if (5 === e) {
              var g = c[9];
              f = c[7];
              e = c[8];
              e = e[f] = g;
              g = f + 1;
              f = g < a;
              c[11] = g;
              c[12] = e;
              cljs.core.truth_(f) ? c[1] = 8 : c[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 14 === e ? (f = c[2], e = cljs.core.async.close_BANG_.call(null, d), c[13] = f, c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (f = c[11], e = c[8], c[7] = f, c[8] = e, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.partition_by.call(null, a, b, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (v) {
                    if (v instanceof Object) {
                      b[5] = v, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw v;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var f = [];
              e = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
              c[7] = e;
              c[8] = f;
              c[2] = null;
              c[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              e = c[2];
              var g = cljs.core.not.call(null, null == e);
              c[9] = e;
              c[1] = g ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return c[2] = c[2], c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              return f = c[8], e = f.length, cljs.core.truth_(0 < e) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === e) {
              return f = c[8], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 15, d, e);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === e) {
              e = c[10];
              g = c[9];
              f = c[2];
              var h = [];
              g = h.push(g);
              c[7] = e;
              c[8] = h;
              c[11] = g;
              c[12] = f;
              c[2] = null;
              c[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 9 === e ? (f = c[8], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : 5 === e ? (e = c[7], g = c[9], f = a.call(null, g), g = cljs.core._EQ_.call(null, f, e), e = cljs.core.keyword_identical_QMARK_.call(null, e, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123)), c[10] = f, cljs.core.truth_(g || e) ? c[1] = 8 : c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === 
            e ? (g = c[2], e = cljs.core.async.close_BANG_.call(null, d), c[13] = g, c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (f = c[8], e = c[10], g = c[9], g = f.push(g), c[7] = e, c[8] = f, c[14] = g, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
var cljs_node_io = {fs:{}};
cljs_node_io.fs.fs = require("fs");
cljs_node_io.fs.path = require("path");
cljs_node_io.fs.sep = cljs_node_io.fs.path.sep;
cljs_node_io.fs.stat = function(a) {
  return cljs_node_io.fs.fs.statSync(a);
};
cljs_node_io.fs.astat = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.stat(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.lstat = function(a) {
  return cljs_node_io.fs.fs.lstatSync(a);
};
cljs_node_io.fs.alstat = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.lstat(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.stat__GT_clj = function(a) {
  var b = goog.object.getKeys(a), c = goog.object.getValues(a);
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.call(null, cljs.core.remove.call(null, function(a, b) {
    return function(a) {
      return cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), "_checkModeProperty");
    };
  }(b, c)), cljs.core.map.call(null, function(b, c) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, c), cljs.core.fn_QMARK_.call(null, b) ? b.apply(a) : b], null);
    };
  }(b, c))), cljs.core.map.call(null, cljs.core.vector, b, c));
};
cljs_node_io.fs.bita__GT_int = function(a) {
  return parseInt(a.join(""), 2);
};
cljs_node_io.fs.stat__GT_perm_bita = function(a) {
  a = a.mode;
  a = [a & 256, a & 128, a & 64, a & 32, a & 16, a & 8, a & 4, a & 2, a & 1];
  for (var b = a.length, c = cljs.core.aclone.call(null, a), d = 0;;) {
    if (d < b) {
      c[d] = 0 !== a[d] ? 1 : 0, d += 1;
    } else {
      return c;
    }
  }
};
cljs_node_io.fs.permissions = function(a) {
  return cljs_node_io.fs.bita__GT_int.call(null, cljs_node_io.fs.stat__GT_perm_bita.call(null, a));
};
cljs_node_io.fs.gid_uid = function() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gid", "gid", -714078321), process.getgid(), new cljs.core.Keyword(null, "uid", "uid", -1447769400), process.getuid()], null);
};
cljs_node_io.fs.hidden_QMARK_ = function(a) {
  return /(^|\/)\.[^\/\.]/.test(a);
};
cljs_node_io.fs.dir_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstring)");
  }
  try {
    var b = cljs_node_io.fs.fs.statSync(a);
  } catch (c) {
    if (c instanceof Error) {
      b = !1;
    } else {
      throw c;
    }
  }
  return cljs.core.not.call(null, b) ? !1 : b.isDirectory();
};
cljs_node_io.fs.adir_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  a = cljs_node_io.fs.astat.call(null, a);
  cljs.core.async.take_BANG_.call(null, a, function(a, b) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, c) ? b.isDirectory() : !1);
    };
  }(b, a));
  return b;
};
cljs_node_io.fs.file_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstring)");
  }
  try {
    var b = cljs_node_io.fs.lstat.call(null, a);
  } catch (c) {
    if (c instanceof Error) {
      b = !1;
    } else {
      throw c;
    }
  }
  return cljs.core.not.call(null, b) ? !1 : b.isFile();
};
cljs_node_io.fs.afile_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  a = cljs_node_io.fs.alstat.call(null, a);
  cljs.core.async.take_BANG_.call(null, a, function(a, b) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, c) ? b.isFile() : !1);
    };
  }(b, a));
  return b;
};
cljs_node_io.fs.absolute_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  return cljs_node_io.fs.path.isAbsolute.call(null, a);
};
cljs_node_io.fs.fexists_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.F_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.afexists_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.F_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.readable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.R_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.areadable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.R_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.writable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.W_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.awritable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.W_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.executable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (cljs.core._EQ_.call(null, "win32", process.platform)) {
    throw Error("Testing if a file is executable has no effect on Windows");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.X_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.aexecutable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (cljs.core._EQ_.call(null, "win32", process.platform)) {
    throw Error("Testing if a file is executable has no effect on Windows");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.X_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.symlink_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    var b = cljs_node_io.fs.lstat.call(null, a);
  } catch (c) {
    if (c instanceof Error) {
      b = !1;
    } else {
      throw c;
    }
  }
  return cljs.core.not.call(null, b) ? !1 : b.isSymbolicLink();
};
cljs_node_io.fs.asymlink_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  a = cljs_node_io.fs.alstat.call(null, a);
  cljs.core.async.take_BANG_.call(null, a, function(a, b) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, c) ? b.isSymbolicLink() : !1);
    };
  }(b, a));
  return b;
};
cljs_node_io.fs.dirname = function(a) {
  return cljs_node_io.fs.path.dirname(a);
};
cljs_node_io.fs.basename = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.fs.path.basename(a);
};
cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.fs.path.basename(a, b);
};
cljs_node_io.fs.basename.cljs$lang$maxFixedArity = 2;
cljs_node_io.fs.resolve_path = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs_node_io.fs.resolve_path.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs_node_io.fs.resolve_path.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs_node_io.fs.path.resolve.apply(null, cljs.core.apply.call(null, cljs.core.array, a));
};
cljs_node_io.fs.resolve_path.cljs$lang$maxFixedArity = 0;
cljs_node_io.fs.resolve_path.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs_node_io.fs.normalize_path = function(a) {
  return cljs_node_io.fs.path.normalize(a);
};
cljs_node_io.fs.ext = function(a) {
  return cljs_node_io.fs.path.extname(a);
};
cljs_node_io.fs.realpath = function(a) {
  return cljs_node_io.fs.fs.realpathSync(a);
};
cljs_node_io.fs.arealpath = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.realpath(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.readlink = function(a) {
  return cljs_node_io.fs.fs.readlinkSync(a);
};
cljs_node_io.fs.areadlink = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.readlink(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.readdir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? dirpath)");
  }
  return cljs.core.vec.call(null, cljs_node_io.fs.fs.readdirSync(a));
};
cljs_node_io.fs.areaddir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? dirpath)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.readdir(a, function(a) {
    return function(b, c) {
      return cljs.core.async.put_BANG_.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.vec.call(null, c)], null));
    };
  }(b));
  return b;
};
cljs_node_io.fs.chmod = function(a, b) {
  return cljs_node_io.fs.fs.chmodSync(a, b);
};
cljs_node_io.fs.achmod = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.chmod(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.lchmod = function(a, b) {
  return cljs_node_io.fs.fs.lchmodSync(a, b);
};
cljs_node_io.fs.alchmod = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.lchmod(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.chown = function(a, b, c) {
  return cljs_node_io.fs.fs.chownSync(a, b, c);
};
cljs_node_io.fs.achown = function(a, b, c) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.chown(a, b, c, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.lchown = function(a, b, c) {
  return cljs_node_io.fs.fs.lchownSync(a, b, c);
};
cljs_node_io.fs.alchown = function(a, b, c) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.lchown(a, b, c, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.utimes = function(a, b, c) {
  return cljs_node_io.fs.fs.utimesSync(a, b, c);
};
cljs_node_io.fs.autimes = function(a, b, c) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.utimes(a, b, c, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.mkdir = function(a) {
  return cljs_node_io.fs.fs.mkdirSync(a);
};
cljs_node_io.fs.amkdir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.mkdir(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.rmdir = function(a) {
  return cljs_node_io.fs.fs.rmdirSync(a);
};
cljs_node_io.fs.armdir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.rmdir(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.link = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? srcpathstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? dstpathstr)");
  }
  return cljs_node_io.fs.fs.linkSync(a, b);
};
cljs_node_io.fs.alink = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? srcpathstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? dstpathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.link(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.symlink = function(a, b) {
  return cljs_node_io.fs.fs.symlinkSync(a, b);
};
cljs_node_io.fs.asymlink = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? targetstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.symlink(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.unlink = function(a) {
  return cljs_node_io.fs.fs.unlinkSync(a);
};
cljs_node_io.fs.aunlink = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.unlink(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.rm = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  return cljs_node_io.fs.dir_QMARK_.call(null, a) ? cljs_node_io.fs.rmdir.call(null, a) : cljs_node_io.fs.unlink.call(null, a);
};
cljs_node_io.fs.arm = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null), c = cljs_node_io.fs.adir_QMARK_.call(null, a);
  cljs.core.async.take_BANG_.call(null, c, function(b, c) {
    return function(d) {
      return cljs.core.async.take_BANG_.call(null, cljs.core.truth_(d) ? cljs_node_io.fs.armdir.call(null, a) : cljs_node_io.fs.aunlink.call(null, a), function(a, b) {
        return function(b) {
          return cljs.core.async.put_BANG_.call(null, a, b);
        };
      }(b, c));
    };
  }(b, c));
  return b;
};
cljs_node_io.fs.rm_r = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (!1 !== cljs.core.boolean$.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["/", null, "\\\\", null, "\\", null, "//", null], null), null)).call(null, a))) {
    throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["you just tried to delete root, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), ", be more careful."].join("")), '\n(false? (boolean (#{"/" "\\\\\\\\" "\\\\" "//"} pathstr)))'].join(""));
  }
  if (cljs_node_io.fs.dir_QMARK_.call(null, a)) {
    for (var b = cljs.core.seq.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs_node_io.fs.resolve_path, a), cljs_node_io.fs.readdir.call(null, a))), c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = cljs.core._nth.call(null, c, e);
        cljs_node_io.fs.rm_r.call(null, f);
        e += 1;
      } else {
        if (b = cljs.core.seq.call(null, b)) {
          c = b, cljs.core.chunked_seq_QMARK_.call(null, c) ? (b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e) : (b = cljs.core.first.call(null, c), cljs_node_io.fs.rm_r.call(null, b), b = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return cljs_node_io.fs.rmdir.call(null, a);
  }
  return cljs_node_io.fs.unlink.call(null, a);
};
cljs_node_io.fs.arm_r = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (!1 !== cljs.core.boolean$.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["/", null, "\\\\", null, "\\", null, "//", null], null), null)).call(null, a))) {
    throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["you just tried to delete root, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), ", be more careful."].join("")), '\n(false? (boolean (#{"/" "\\\\\\\\" "\\\\" "//"} pathstr)))'].join(""));
  }
  var b = cljs.core.async.promise_chan.call(null), c = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(b) {
            var d = b[1];
            if (7 === d) {
              d = b[7];
              var e = cljs.core.partial.call(null, cljs_node_io.fs.resolve_path, a);
              d = cljs.core.mapv.call(null, e, d);
              b[8] = d;
              b[2] = null;
              b[1] = 10;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === d) {
              return b[2] = b[2], b[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === d) {
              return d = cljs_node_io.fs.adir_QMARK_.call(null, a), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 2, d);
            }
            if (24 === d) {
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 23, c, b[2]);
            }
            if (4 === d) {
              return d = cljs_node_io.fs.aunlink.call(null, a), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 24, d);
            }
            if (15 === d) {
              return e = cljs.core.nth.call(null, b[2], 0, null), d = e instanceof Error, b[9] = e, cljs.core.truth_(d) ? b[1] = 16 : b[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === d) {
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 20, c, b[2]);
            }
            if (13 === d) {
              return b[2] = null, b[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === d) {
              return b[2] = b[2], b[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === d) {
              d = b[2];
              e = cljs.core.nth.call(null, d, 0, null);
              d = cljs.core.nth.call(null, d, 1, null);
              var f = cljs.core.not.call(null, e);
              b[10] = e;
              b[7] = d;
              b[1] = f ? 7 : 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 17 === d ? (d = b[8], d = cljs.core.next.call(null, d), b[8] = d, b[2] = null, b[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === d ? (d = cljs_node_io.fs.areaddir.call(null, a), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 6, d)) : 12 === d ? (d = b[8], d = cljs.core.first.call(null, d), d = cljs_node_io.fs.arm_r.call(null, d), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 15, d)) : 2 === d ? (d = b[2], cljs.core.truth_(d) ? 
            b[1] = 3 : b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 23 === d ? (b[2] = b[2], b[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === d ? (b[2] = b[2], b[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === d ? (d = b[2], e = cljs_node_io.fs.armdir.call(null, a), b[11] = d, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 21, e)) : 9 === d ? (b[2] = b[2], b[1] = 5, new cljs.core.Keyword(null, "recur", 
            "recur", -437573268)) : 5 === d ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, b[2]) : 14 === d ? (b[2] = b[2], b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === d ? (d = b[9], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 19, c, d)) : 10 === d ? (d = b[8], d = cljs.core.not.call(null, null == d), b[1] = d ? 12 : 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === d ? (b[2] = b[2], b[1] = 14, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 8 === d ? (d = b[10], d = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 22, c, d)) : null;
          };
        }(b, c), b, c);
      }(), e = function() {
        var a = d.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, e);
    };
  }(c, b));
  return b;
};
cljs_node_io.fs.rename = function(a, b) {
  return cljs_node_io.fs.fs.renameSync(a, b);
};
cljs_node_io.fs.arename = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? oldpathstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? newpathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.rename(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.truncate = function(a, b) {
  return cljs_node_io.fs.fs.truncateSync(a, b);
};
cljs_node_io.fs.atruncate = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.truncate(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.readFile = function(a, b) {
  return cljs_node_io.fs.fs.readFileSync(a, b);
};
cljs_node_io.fs.areadFile = function(a, b) {
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.readFile(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.writeFile = function(a, b, c) {
  return cljs_node_io.fs.fs.writeFileSync(a, b, {flag:function() {
    var a = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : cljs.core.truth_((new cljs.core.Keyword(null, "append", "append", -291298229)).cljs$core$IFn$_invoke$arity$1(c)) ? "a" : "w";
  }(), mode:function() {
    var a = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : 438;
  }(), encoding:function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }()});
};
cljs_node_io.fs.awriteFile = function(a, b, c) {
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.writeFile(a, b, {flag:function() {
    var a = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : cljs.core.truth_((new cljs.core.Keyword(null, "append", "append", -291298229)).cljs$core$IFn$_invoke$arity$1(c)) ? "a" : "w";
  }(), mode:function() {
    var a = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : 438;
  }(), encoding:function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }()}, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.watcher__GT_ch = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.fs.watcher__GT_ch.call(null, a, b, null);
};
cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "key", "key", -1516042587)), f = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719), 10);
  a.on("change", function(a, c, d, e, f) {
    return function(a, c) {
      return cljs.core.async.put_BANG_.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, a)], null));
    };
  }(a, c, d, e, f));
  a.on("error", function(a, c, d, e, f) {
    return function(a) {
      return cljs.core.async.put_BANG_.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null)], null));
    };
  }(a, c, d, e, f));
  return b;
};
cljs_node_io.fs.watcher__GT_ch.cljs$lang$maxFixedArity = 3;
cljs_node_io.fs.Watcher = function(a, b) {
  this.FSWatcher = a;
  this.out = b;
};
cljs_node_io.fs.Watcher.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.fs.Watcher.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
  return cljs.core.async.impl.protocols.take_BANG_.call(null, this.out, b);
};
cljs_node_io.fs.Watcher.prototype.close = function() {
  var a = this;
  a.FSWatcher.close();
  return cljs.core.async.put_BANG_.call(null, a.out, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "close", "close", 1835149582)], null), function(b) {
    return function() {
      return cljs.core.async.close_BANG_.call(null, a.out);
    };
  }(this));
};
cljs_node_io.fs.Watcher.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "FSWatcher", "FSWatcher", -1658877931, null), new cljs.core.Symbol(null, "out", "out", 729986010, null)], null);
};
cljs_node_io.fs.Watcher.cljs$lang$type = !0;
cljs_node_io.fs.Watcher.cljs$lang$ctorStr = "cljs-node-io.fs/Watcher";
cljs_node_io.fs.Watcher.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs-node-io.fs/Watcher");
};
cljs_node_io.fs.__GT_Watcher = function(a, b) {
  return new cljs_node_io.fs.Watcher(a, b);
};
cljs_node_io.fs.watch = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.fs.watch.call(null, a, null);
};
cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "persistent", "persistent", 885415113), !0, new cljs.core.Keyword(null, "recursive", "recursive", 718885872), !1, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), "utf8", new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719), 10], null);
  b = cljs.core.merge.call(null, c, b);
  c = cljs.core.async.chan.call(null, cljs.core.get.call(null, b, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719)), cljs.core.map.call(null, function(b, c) {
    return function(b) {
      return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null), b);
    };
  }(c, b)));
  b = cljs_node_io.fs.fs.watch.call(null, a, cljs.core.clj__GT_js.call(null, b));
  return cljs_node_io.fs.__GT_Watcher.call(null, b, cljs_node_io.fs.watcher__GT_ch.call(null, b, c));
};
cljs_node_io.fs.watch.cljs$lang$maxFixedArity = 2;
cljs_node_io.fs.watchFile = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.fs.watchFile.call(null, a, null);
};
cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "interval", "interval", 1708495417), 5007, new cljs.core.Keyword(null, "persistent", "persistent", 885415113), !0, new cljs.core.Keyword(null, "edn?", "edn?", -499466946), !0, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719), 10], null), d = cljs.core.merge.call(null, c, b);
  b = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  var e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "edn?", "edn?", -499466946)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719)), g = cljs.core.async.chan.call(null, f, cljs.core.map.call(null, function(b, c, d, e, f, g) {
    return function(b) {
      return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null), b);
    };
  }(c, d, b, b, e, f)));
  c = function(a, b, c, d, e, f, g) {
    return function(a, b) {
      return cljs.core.async.put_BANG_.call(null, g, cljs.core.truth_(e) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_node_io.fs.stat__GT_clj.call(null, a), cljs_node_io.fs.stat__GT_clj.call(null, b)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null));
    };
  }(c, d, b, b, e, f, g);
  cljs_node_io.fs.fs.watchFile.call(null, a, cljs.core.clj__GT_js.call(null, b), c);
  return g;
};
cljs_node_io.fs.watchFile.cljs$lang$maxFixedArity = 2;
cljs_node_io.fs.unwatchFile = function(a) {
  return cljs_node_io.fs.fs.unwatchFile.call(null, a);
};
cljs_node_io.fs.touch = function(a) {
  return cljs_node_io.fs.writeFile.call(null, a, "", null);
};
cljs_node_io.fs.atouch = function(a) {
  return cljs_node_io.fs.awriteFile.call(null, a, "", null);
};
goog.json = {};
goog.json.USE_NATIVE_JSON = !1;
goog.json.TRY_NATIVE_JSON = !1;
goog.json.isValid = function(a) {
  return /^\s*$/.test(a) ? !1 : /^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g, "@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g, "]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, ""));
};
goog.json.errorLogger_ = goog.nullFunction;
goog.json.setErrorLogger = function(a) {
  goog.json.errorLogger_ = a;
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(a) {
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global.JSON.parse(a);
    } catch (d) {
      var b = d;
    }
  }
  a = String(a);
  if (goog.json.isValid(a)) {
    try {
      var c = eval("(" + a + ")");
      b && goog.json.errorLogger_("Invalid JSON: " + a, b);
      return c;
    } catch (d) {
    }
  }
  throw Error("Invalid JSON string: " + a);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(a) {
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global.JSON.parse(a);
    } catch (d) {
      var b = d;
    }
  }
  var c = eval("(" + a + ")");
  b && goog.json.errorLogger_("Invalid JSON: " + a, b);
  return c;
};
goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function(a, b) {
  return (new goog.json.Serializer(b)).serialize(a);
};
goog.json.Serializer = function(a) {
  this.replacer_ = a;
};
goog.json.Serializer.prototype.serialize = function(a) {
  var b = [];
  this.serializeInternal(a, b);
  return b.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(a, b) {
  if (null == a) {
    b.push("null");
  } else {
    if ("object" == typeof a) {
      if (goog.isArray(a)) {
        this.serializeArray(a, b);
        return;
      }
      if (a instanceof String || a instanceof Number || a instanceof Boolean) {
        a = a.valueOf();
      } else {
        this.serializeObject_(a, b);
        return;
      }
    }
    switch(typeof a) {
      case "string":
        this.serializeString_(a, b);
        break;
      case "number":
        this.serializeNumber_(a, b);
        break;
      case "boolean":
        b.push(String(a));
        break;
      case "function":
        b.push("null");
        break;
      default:
        throw Error("Unknown type: " + typeof a);
    }
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("￿") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(a, b) {
  b.push('"', a.replace(goog.json.Serializer.charsToReplace_, function(a) {
    var b = goog.json.Serializer.charToJsonCharCache_[a];
    b || (b = "\\u" + (a.charCodeAt(0) | 65536).toString(16).substr(1), goog.json.Serializer.charToJsonCharCache_[a] = b);
    return b;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(a, b) {
  b.push(isFinite(a) && !isNaN(a) ? String(a) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(a, b) {
  var c = a.length;
  b.push("[");
  for (var d = "", e = 0; e < c; e++) {
    b.push(d), d = a[e], this.serializeInternal(this.replacer_ ? this.replacer_.call(a, String(e), d) : d, b), d = ",";
  }
  b.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(a, b) {
  b.push("{");
  var c = "", d;
  for (d in a) {
    if (Object.prototype.hasOwnProperty.call(a, d)) {
      var e = a[d];
      "function" != typeof e && (b.push(c), this.serializeString_(d, b), b.push(":"), this.serializeInternal(this.replacer_ ? this.replacer_.call(a, d, e) : e, b), c = ",");
    }
  }
  b.push("}");
};
goog.labs.userAgent.platform = {};
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var a = goog.labs.userAgent.util.getUserAgent(), b = "";
  goog.labs.userAgent.platform.isWindows() ? (b = /Windows (?:NT|Phone) ([0-9.]+)/, b = (a = b.exec(a)) ? a[1] : "0.0") : goog.labs.userAgent.platform.isIos() ? (b = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/, b = (a = b.exec(a)) && a[1].replace(/_/g, ".")) : goog.labs.userAgent.platform.isMacintosh() ? (b = /Mac OS X ([0-9_.]+)/, b = (a = b.exec(a)) ? a[1].replace(/_/g, ".") : "10") : goog.labs.userAgent.platform.isAndroid() ? (b = /Android\s+([^\);]+)(\)|;)/, b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isChromeOS() && 
  (b = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/, b = (a = b.exec(a)) && a[1]);
  return b || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a);
};
goog.userAgent = {};
goog.userAgent.ASSUME_IE = !1;
goog.userAgent.ASSUME_EDGE = !1;
goog.userAgent.ASSUME_GECKO = !1;
goog.userAgent.ASSUME_WEBKIT = !1;
goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;
goog.userAgent.ASSUME_OPERA = !1;
goog.userAgent.ASSUME_ANY_VERSION = !1;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global.navigator || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var a = goog.userAgent.getNavigator();
  return a && a.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = !1;
goog.userAgent.ASSUME_WINDOWS = !1;
goog.userAgent.ASSUME_LINUX = !1;
goog.userAgent.ASSUME_X11 = !1;
goog.userAgent.ASSUME_ANDROID = !1;
goog.userAgent.ASSUME_IPHONE = !1;
goog.userAgent.ASSUME_IPAD = !1;
goog.userAgent.ASSUME_IPOD = !1;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var a = goog.userAgent.getNavigator();
  return !!a && goog.string.contains(a.appVersion || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();
goog.userAgent.determineVersion_ = function() {
  var a = "", b = goog.userAgent.getVersionRegexResult_();
  b && (a = b ? b[1] : "");
  return goog.userAgent.IE && (b = goog.userAgent.getDocumentMode_(), null != b && b > parseFloat(a)) ? String(b) : a;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var a = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv:([^\);]+)(\)|;)/.exec(a);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(a);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(a);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(a);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var a = goog.global.document;
  return a ? a.documentMode : void 0;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(a, b) {
  return goog.string.compareVersions(a, b);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(a) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, a, function() {
    return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a);
  });
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(a) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= a;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var a = goog.global.document, b = goog.userAgent.getDocumentMode_();
  if (a && goog.userAgent.IE) {
    return b || ("CSS1Compat" == a.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5);
  }
}();
goog.userAgent.product = {};
goog.userAgent.product.ASSUME_FIREFOX = !1;
goog.userAgent.product.ASSUME_IPHONE = !1;
goog.userAgent.product.ASSUME_IPAD = !1;
goog.userAgent.product.ASSUME_ANDROID = !1;
goog.userAgent.product.ASSUME_CHROME = !1;
goog.userAgent.product.ASSUME_SAFARI = !1;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.EDGE = goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.crypt.base64 = {};
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/\x3d";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;
goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || "function" == typeof goog.global.btoa;
goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && "function" == typeof goog.global.atob;
goog.crypt.base64.encodeByteArray = function(a, b) {
  goog.asserts.assert(goog.isArrayLike(a), "encodeByteArray takes an array as a parameter");
  goog.crypt.base64.init_();
  b = b ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  for (var c = [], d = 0; d < a.length; d += 3) {
    var e = a[d], f = d + 1 < a.length, g = f ? a[d + 1] : 0, h = d + 2 < a.length, k = h ? a[d + 2] : 0, l = e >> 2;
    e = (e & 3) << 4 | g >> 4;
    g = (g & 15) << 2 | k >> 6;
    k &= 63;
    h || (k = 64, f || (g = 64));
    c.push(b[l], b[e], b[g], b[k]);
  }
  return c.join("");
};
goog.crypt.base64.encodeString = function(a, b) {
  return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b ? goog.global.btoa(a) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a), b);
};
goog.crypt.base64.decodeString = function(a, b) {
  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b) {
    return goog.global.atob(a);
  }
  var c = "";
  goog.crypt.base64.decodeStringInternal_(a, function(a) {
    c += String.fromCharCode(a);
  });
  return c;
};
goog.crypt.base64.decodeStringToByteArray = function(a, b) {
  var c = [];
  goog.crypt.base64.decodeStringInternal_(a, function(a) {
    c.push(a);
  });
  return c;
};
goog.crypt.base64.decodeStringToUint8Array = function(a) {
  goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
  var b = new Uint8Array(Math.ceil(3 * a.length / 4)), c = 0;
  goog.crypt.base64.decodeStringInternal_(a, function(a) {
    b[c++] = a;
  });
  return b.subarray(0, c);
};
goog.crypt.base64.decodeStringInternal_ = function(a, b) {
  function c(b) {
    for (; d < a.length;) {
      var c = a.charAt(d++), e = goog.crypt.base64.charToByteMap_[c];
      if (null != e) {
        return e;
      }
      if (!goog.string.isEmptyOrWhitespace(c)) {
        throw Error("Unknown base64 encoding at char: " + c);
      }
    }
    return b;
  }
  goog.crypt.base64.init_();
  for (var d = 0;;) {
    var e = c(-1), f = c(0), g = c(64), h = c(64);
    if (64 === h && -1 === e) {
      break;
    }
    b(e << 2 | f >> 4);
    64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));
  }
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    for (var a = 0; a < goog.crypt.base64.ENCODED_VALS.length; a++) {
      goog.crypt.base64.byteToCharMap_[a] = goog.crypt.base64.ENCODED_VALS.charAt(a), goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]] = a, goog.crypt.base64.byteToCharMapWebSafe_[a] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a), a >= goog.crypt.base64.ENCODED_VALS_BASE.length && (goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)] = a);
    }
  }
};
var clojure = {string:{}};
clojure.string.seq_reverse = function(a) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, a);
};
clojure.string.re_surrogate_pair = /([\uD800-\uDBFF])([\uDC00-\uDFFF])/g;
clojure.string.reverse = function(a) {
  return a.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function(a, b, c) {
  var d = RegExp, e = b.source;
  var f = cljs.core.truth_(b.ignoreCase) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1("g"), "i"].join("") : "g";
  f = cljs.core.truth_(b.multiline) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f), "m"].join("") : f;
  b = cljs.core.truth_(b.unicode) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f), "u"].join("") : f;
  d = new d(e, b);
  return a.replace(d, c);
};
clojure.string.replace_with = function(a) {
  return function() {
    var b = function(b) {
      b = cljs.core.drop_last.call(null, 2, b);
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, b), 1) ? a.call(null, cljs.core.first.call(null, b)) : a.call(null, cljs.core.vec.call(null, b));
    }, c = function(a) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var d = Array(arguments.length - 0); c < d.length;) {
          d[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(d, 0, null);
      }
      return b.call(this, c);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return b(a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
clojure.string.replace = function(a, b, c) {
  if ("string" === typeof b) {
    return a.replace(new RegExp(goog.string.regExpEscape(b), "g"), c);
  }
  if (b instanceof RegExp) {
    return "string" === typeof c ? clojure.string.replace_all.call(null, a, b, c) : clojure.string.replace_all.call(null, a, b, clojure.string.replace_with.call(null, c));
  }
  throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
};
clojure.string.replace_first = function(a, b, c) {
  return a.replace(b, c);
};
clojure.string.join = function(a) {
  switch(arguments.length) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new goog.string.StringBuffer;
  for (a = cljs.core.seq.call(null, a);;) {
    if (null != a) {
      b = b.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))].join("")), a = cljs.core.next.call(null, a);
    } else {
      return b.toString();
    }
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = new goog.string.StringBuffer;
  for (b = cljs.core.seq.call(null, b);;) {
    if (null != b) {
      c.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, b))].join("")), b = cljs.core.next.call(null, b), null != b && c.append(a);
    } else {
      return c.toString();
    }
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function(a) {
  return a.toUpperCase();
};
clojure.string.lower_case = function(a) {
  return a.toLowerCase();
};
clojure.string.capitalize = function(a) {
  return goog.string.capitalize(a);
};
clojure.string.pop_last_while_empty = function(a) {
  for (;;) {
    if ("" === cljs.core.peek.call(null, a)) {
      a = cljs.core.pop.call(null, a);
    } else {
      return a;
    }
  }
};
clojure.string.discard_trailing_if_needed = function(a, b) {
  return 0 === a && 1 < cljs.core.count.call(null, b) ? clojure.string.pop_last_while_empty.call(null, b) : b;
};
clojure.string.split_with_empty_regex = function(a, b) {
  if (0 >= b || b >= 2 + cljs.core.count.call(null, a)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a)))), "");
  }
  var c = cljs.core._EQ__EQ_;
  if (cljs.core.truth_(c.call(null, 1, b))) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
  if (cljs.core.truth_(c.call(null, 2, b))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", a], null);
  }
  b -= 2;
  return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a))), 0, b))), cljs.core.subs.call(null, a, b));
};
clojure.string.split = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.string.split.call(null, a, b, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return clojure.string.discard_trailing_if_needed.call(null, c, "/(?:)/" === [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") ? clojure.string.split_with_empty_regex.call(null, a, c) : 1 > c ? cljs.core.vec.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("").split(b)) : function() {
    for (var d = a, e = c, f = cljs.core.PersistentVector.EMPTY;;) {
      if (1 === e) {
        return cljs.core.conj.call(null, f, d);
      }
      var g = cljs.core.re_find.call(null, b, d);
      if (null != g) {
        var h = d.indexOf(g);
        g = d.substring(h + cljs.core.count.call(null, g));
        --e;
        f = cljs.core.conj.call(null, f, d.substring(0, h));
        d = g;
      } else {
        return cljs.core.conj.call(null, f, d);
      }
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function(a) {
  return clojure.string.split.call(null, a, /\n|\r\n/);
};
clojure.string.trim = function(a) {
  return goog.string.trim(a);
};
clojure.string.triml = function(a) {
  return goog.string.trimLeft(a);
};
clojure.string.trimr = function(a) {
  return goog.string.trimRight(a);
};
clojure.string.trim_newline = function(a) {
  for (var b = a.length;;) {
    if (0 === b) {
      return "";
    }
    var c = cljs.core.get.call(null, a, b - 1);
    if ("\n" === c || "\r" === c) {
      --b;
    } else {
      return a.substring(0, b);
    }
  }
};
clojure.string.blank_QMARK_ = function(a) {
  return goog.string.isEmptySafe(a);
};
clojure.string.escape = function(a, b) {
  for (var c = new goog.string.StringBuffer, d = a.length, e = 0;;) {
    if (d === e) {
      return c.toString();
    }
    var f = a.charAt(e), g = cljs.core.get.call(null, b, f);
    null != g ? c.append([cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)].join("")) : c.append(f);
    e += 1;
  }
};
clojure.string.index_of = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = a.indexOf(b);
  return 0 > a ? null : a;
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.indexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = a.lastIndexOf(b);
  return 0 > a ? null : a;
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.lastIndexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function(a, b) {
  return goog.string.startsWith(a, b);
};
clojure.string.ends_with_QMARK_ = function(a, b) {
  return goog.string.endsWith(a, b);
};
clojure.string.includes_QMARK_ = function(a, b) {
  return goog.string.contains(a, b);
};
cljs.pprint = {};
cljs.pprint.print = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, a));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.apply.call(null, cljs.pprint.print, a);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.print_char = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var b = cljs.core._EQ_;
    return cljs.core.truth_(b.call(null, "\b", a)) ? "\\backspace" : cljs.core.truth_(b.call(null, "\t", a)) ? "\\tab" : cljs.core.truth_(b.call(null, "\n", a)) ? "\\newline" : cljs.core.truth_(b.call(null, "\f", a)) ? "\\formfeed" : cljs.core.truth_(b.call(null, "\r", a)) ? "\\return" : cljs.core.truth_(b.call(null, '"', a)) ? '\\"' : cljs.core.truth_(b.call(null, "\\", a)) ? "\\\\" : ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  }());
};
cljs.pprint.pr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, a));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.prn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.apply.call(null, cljs.pprint.pr, a);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.float_QMARK_ = function(a) {
  return "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) !== parseInt(a, 10);
};
cljs.pprint.char_code = function(a) {
  if ("number" === typeof a) {
    return a;
  }
  if ("string" === typeof a && 1 === a.length) {
    return a.charCodeAt(0);
  }
  throw Error("Argument to char must be a character or number");
};
cljs.pprint.map_passing_context = function(a, b, c) {
  var d = c;
  for (c = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.empty_QMARK_.call(null, d)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
    }
    var e = cljs.core.first.call(null, d);
    d = cljs.core.next.call(null, d);
    e = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, b], null));
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    c = cljs.core.conj.call(null, c, b);
    b = e;
  }
};
cljs.pprint.consume = function(a, b) {
  var c = b;
  for (b = cljs.core.PersistentVector.EMPTY;;) {
    var d = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null));
    c = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    if (cljs.core.not.call(null, c)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, d], null);
    }
    b = cljs.core.conj.call(null, b, c);
    c = d;
  }
};
cljs.pprint.consume_while = function(a, b) {
  for (var c = cljs.core.PersistentVector.EMPTY;;) {
    var d = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null)), e = cljs.core.nth.call(null, d, 0, null), f = cljs.core.nth.call(null, d, 1, null);
    d = cljs.core.nth.call(null, d, 2, null);
    if (cljs.core.not.call(null, f)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
    }
    b = d;
    c = cljs.core.conj.call(null, c, e);
  }
};
cljs.pprint.unzip_map = function(a) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function d(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var c = cljs.core.seq.call(null, a);
          if (c) {
            if (cljs.core.chunked_seq_QMARK_.call(null, c)) {
              var f = cljs.core.chunk_first.call(null, c), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var l = cljs.core._nth.call(null, f, k), m = cljs.core.nth.call(null, l, 0, null);
                    l = cljs.core.nth.call(null, l, 1, null);
                    var n = cljs.core.nth.call(null, l, 0, null);
                    cljs.core.nth.call(null, l, 1, null);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, n], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, c))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            f = cljs.core.first.call(null, c);
            h = cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            g = cljs.core.nth.call(null, f, 0, null);
            cljs.core.nth.call(null, f, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, g], null), d.call(null, cljs.core.rest.call(null, c)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function d(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var c = cljs.core.seq.call(null, a);
          if (c) {
            if (cljs.core.chunked_seq_QMARK_.call(null, c)) {
              var f = cljs.core.chunk_first.call(null, c), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var l = cljs.core._nth.call(null, f, k), m = cljs.core.nth.call(null, l, 0, null);
                    l = cljs.core.nth.call(null, l, 1, null);
                    cljs.core.nth.call(null, l, 0, null);
                    l = cljs.core.nth.call(null, l, 1, null);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, l], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, c))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            f = cljs.core.first.call(null, c);
            h = cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, f], null), d.call(null, cljs.core.rest.call(null, c)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }())], null);
};
cljs.pprint.tuple_map = function(a, b) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function e(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var d = cljs.core.seq.call(null, a);
          if (d) {
            if (cljs.core.chunked_seq_QMARK_.call(null, d)) {
              var g = cljs.core.chunk_first.call(null, d), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var l = 0;;) {
                  if (l < h) {
                    var m = cljs.core._nth.call(null, g, l), n = cljs.core.nth.call(null, m, 0, null);
                    m = cljs.core.nth.call(null, m, 1, null);
                    cljs.core.chunk_append.call(null, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, b], null)], null));
                    l += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), e.call(null, cljs.core.chunk_rest.call(null, d))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            g = cljs.core.first.call(null, d);
            k = cljs.core.nth.call(null, g, 0, null);
            g = cljs.core.nth.call(null, g, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, b], null)], null), e.call(null, cljs.core.rest.call(null, d)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }());
};
cljs.pprint.rtrim = function(a, b) {
  var c = cljs.core.count.call(null, a);
  if (0 < c && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, cljs.core.count.call(null, a) - 1), b)) {
    for (--c;;) {
      if (0 > c) {
        return "";
      }
      if (cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, c), b)) {
        --c;
      } else {
        return cljs.core.subs.call(null, a, 0, c + 1);
      }
    }
  } else {
    return a;
  }
};
cljs.pprint.ltrim = function(a, b) {
  var c = cljs.core.count.call(null, a);
  if (0 < c && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), b)) {
    for (var d = 0;;) {
      if (cljs.core._EQ_.call(null, d, c) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, d), b)) {
        return cljs.core.subs.call(null, a, d);
      }
      d += 1;
    }
  } else {
    return a;
  }
};
cljs.pprint.prefix_count = function(a, b) {
  b = cljs.core.coll_QMARK_.call(null, b) ? cljs.core.set.call(null, b) : cljs.core.PersistentHashSet.createAsIfByAssoc([b]);
  for (var c = 0;;) {
    if (cljs.core._EQ_.call(null, c, cljs.core.count.call(null, a)) || cljs.core.not.call(null, b.call(null, cljs.core.nth.call(null, a, c)))) {
      return c;
    }
    c += 1;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function(a) {
  if (null != a && null != a.cljs$pprint$IPrettyFlush$_ppflush$arity$1) {
    return a.cljs$pprint$IPrettyFlush$_ppflush$arity$1(a);
  }
  var b = cljs.pprint._ppflush[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.pprint._ppflush._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", a);
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function(a, b) {
  return b.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
};
cljs.pprint.set_field = function(a, b, c) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, b, c);
};
cljs.pprint.get_column = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function(a, b) {
  cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "max", "max", 61366548), b);
  return null;
};
cljs.pprint.get_writer = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function(a, b) {
  cljs.core._EQ_.call(null, b, "\n") ? (cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0), cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1)) : cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 
  1);
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "base", "base", 185279322)), b);
};
cljs.pprint.column_writer = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.pprint.column_writer.call(null, a, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), b, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), a], null));
  "undefined" === typeof cljs.pprint.t_cljs$pprint6656 && (cljs.pprint.t_cljs$pprint6656 = function(a, b, c, g) {
    this.writer = a;
    this.max_columns = b;
    this.fields = c;
    this.meta6657 = g;
    this.cljs$lang$protocol_mask$partition0$ = 1074167808;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint6656.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.pprint.t_cljs$pprint6656(this.writer, this.max_columns, this.fields, b);
    };
  }(c), cljs.pprint.t_cljs$pprint6656.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta6657;
    };
  }(c), cljs.pprint.t_cljs$pprint6656.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
    return function(a) {
      return this.fields;
    };
  }(c), cljs.pprint.t_cljs$pprint6656.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
    return function(a) {
      return cljs.core._flush.call(null, this.writer);
    };
  }(c), cljs.pprint.t_cljs$pprint6656.prototype.cljs$core$IWriter$_write$arity$2 = function(a) {
    return function(b, c) {
      b = cljs.core._EQ_;
      var d = cljs.core.type.call(null, c);
      if (cljs.core.truth_(b.call(null, String, d))) {
        var e = c.lastIndexOf("\n");
        0 > e ? cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, c)) : (cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, c) - e - 1), cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, 
        this, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(a, b, c, d, e, f) {
          return function(a) {
            return cljs.core._EQ_.call(null, a, "\n");
          };
        }(c, e, b, d, this, a), c))));
        return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
      }
      if (cljs.core.truth_(b.call(null, Number, d))) {
        return cljs.pprint.c_write_char.call(null, this, c);
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
    };
  }(c), cljs.pprint.t_cljs$pprint6656.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta6657", "meta6657", -891722402, null)], null);
    };
  }(c), cljs.pprint.t_cljs$pprint6656.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint6656.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint6656", cljs.pprint.t_cljs$pprint6656.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.pprint/t_cljs$pprint6656");
    };
  }(c), cljs.pprint.__GT_t_cljs$pprint6656 = function(a) {
    return function(a, b, c, d) {
      return new cljs.pprint.t_cljs$pprint6656(a, b, c, d);
    };
  }(c));
  return new cljs.pprint.t_cljs$pprint6656(a, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  this.parent = a;
  this.section = b;
  this.start_col = c;
  this.indent = d;
  this.done_nl = e;
  this.intra_block_nl = f;
  this.prefix = g;
  this.per_line_prefix = h;
  this.suffix = k;
  this.logical_block_callback = l;
  this.__meta = m;
  this.__extmap = n;
  this.__hash = p;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "parent":
      return this.parent;
    case "section":
      return this.section;
    case "start-col":
      return this.start_col;
    case "indent":
      return this.indent;
    case "done-nl":
      return this.done_nl;
    case "intra-block-nl":
      return this.intra_block_nl;
    case "prefix":
      return this.prefix;
    case "per-line-prefix":
      return this.per_line_prefix;
    case "suffix":
      return this.suffix;
    case "logical-block-callback":
      return this.logical_block_callback;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.logical-block{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), this.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", 
  "section", -300141526), this.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), this.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), this.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", 
  "done-nl", -381024340), this.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), this.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "per-line-prefix", "per-line-prefix", 846941813), this.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), this.logical_block_callback], null)], null), this.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 10 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1977012399 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.parent, b.parent) && cljs.core._EQ_.call(null, this.section, b.section) && cljs.core._EQ_.call(null, this.start_col, b.start_col) && cljs.core._EQ_.call(null, this.indent, b.indent) && cljs.core._EQ_.call(null, this.done_nl, b.done_nl) && cljs.core._EQ_.call(null, this.intra_block_nl, b.intra_block_nl) && cljs.core._EQ_.call(null, this.prefix, b.prefix) && cljs.core._EQ_.call(null, this.per_line_prefix, b.per_line_prefix) && 
  cljs.core._EQ_.call(null, this.suffix, b.suffix) && cljs.core._EQ_.call(null, this.logical_block_callback, b.logical_block_callback) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), b)) ? new cljs.pprint.logical_block(c, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), b)) ? new cljs.pprint.logical_block(this.parent, c, this.start_col, this.indent, 
  this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), b)) ? new cljs.pprint.logical_block(this.parent, this.section, c, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "indent", "indent", -148200125), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, c, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, c, this.intra_block_nl, 
  this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, c, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "prefix", "prefix", -265908465), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, c, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, 
  c, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, c, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 
  1612691194), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, c, this.__meta, this.__extmap, null) : new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parent", "parent", -878878779), this.parent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "section", "section", -300141526), this.section, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-col", "start-col", 668080143), this.start_col, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "indent", "indent", -148200125), this.indent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), this.done_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), this.intra_block_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), this.per_line_prefix, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), this.logical_block_callback, null)], null), this.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, b, this.__extmap, this.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = !0;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/logical-block", null, 1, null);
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function(a, b, c, d, e, f, g, h, k, l) {
  return new cljs.pprint.logical_block(a, b, c, d, e, f, g, h, k, l, null, null, null);
};
cljs.pprint.map__GT_logical_block = function(a) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", 
  -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194))), null);
};
cljs.pprint.ancestor_QMARK_ = function(a, b) {
  for (b = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b);;) {
    if (null == b) {
      return !1;
    }
    if (a === b) {
      return !0;
    }
    b = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b);
  }
};
cljs.pprint.buffer_length = function(a) {
  return (a = cljs.core.seq.call(null, a)) ? (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, a)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a)) : 0;
};
cljs.pprint.buffer_blob = function(a, b, c, d, e, f, g, h) {
  this.type_tag = a;
  this.data = b;
  this.trailing_white_space = c;
  this.start_pos = d;
  this.end_pos = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "data":
      return this.data;
    case "trailing-white-space":
      return this.trailing_white_space;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.buffer-blob{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", 
  "data", -232669377), this.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), this.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? 
  cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1809113693 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.data, b.data) && cljs.core._EQ_.call(null, this.trailing_white_space, b.trailing_white_space) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.buffer_blob(c, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), b)) ? new cljs.pprint.buffer_blob(this.type_tag, c, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "data", "data", -232669377), this.data, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), this.trailing_white_space, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = !0;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/buffer-blob", null, 1, null);
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function(a, b, c, d, e) {
  return new cljs.pprint.buffer_blob(a, b, c, d, e, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function(a) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", 
  -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926))), null);
};
cljs.pprint.make_buffer_blob = function(a, b, c, d) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), a, b, c, d, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(a, b, c, d, e, f, g, h) {
  this.type_tag = a;
  this.type = b;
  this.logical_block = c;
  this.start_pos = d;
  this.end_pos = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "type":
      return this.type;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.nl-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 
  1174270348), this.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, 
  this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1640656800 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.type, b.type) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? 
  cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.nl_t(c, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), b)) ? new cljs.pprint.nl_t(this.type_tag, c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.nl_t(this.type_tag, this.type, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.nl_t(this.type_tag, 
  this.type, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "type", "type", 1174270348), this.type, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = !0;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/nl-t", null, 1, null);
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function(a, b, c, d, e) {
  return new cljs.pprint.nl_t(a, b, c, d, e, null, null, null);
};
cljs.pprint.map__GT_nl_t = function(a) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926))), null);
};
cljs.pprint.make_nl_t = function(a, b, c, d) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), a, b, c, d, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(a, b, c, d, e, f, g) {
  this.type_tag = a;
  this.logical_block = b;
  this.start_pos = c;
  this.end_pos = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.start-block-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", 
  "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -414877272 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.start_block_t(c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.start_block_t(this.type_tag, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.start_block_t(this.type_tag, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = !0;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/start-block-t", null, 1, null);
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function(a, b, c, d) {
  return new cljs.pprint.start_block_t(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function(a) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, 
  a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926))), null);
};
cljs.pprint.make_start_block_t = function(a, b, c) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), a, b, c, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(a, b, c, d, e, f, g) {
  this.type_tag = a;
  this.logical_block = b;
  this.start_pos = c;
  this.end_pos = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.end-block-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", 
  "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1365867980 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.end_block_t(c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.end_block_t(this.type_tag, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.end_block_t(this.type_tag, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = !0;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/end-block-t", null, 1, null);
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function(a, b, c, d) {
  return new cljs.pprint.end_block_t(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function(a) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, 
  a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926))), null);
};
cljs.pprint.make_end_block_t = function(a, b, c) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), a, b, c, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(a, b, c, d, e, f, g, h, k) {
  this.type_tag = a;
  this.logical_block = b;
  this.relative_to = c;
  this.offset = d;
  this.start_pos = e;
  this.end_pos = f;
  this.__meta = g;
  this.__extmap = h;
  this.__hash = k;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "relative-to":
      return this.relative_to;
    case "offset":
      return this.offset;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.indent-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", 
  "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), this.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 6 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1602780238 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.relative_to, b.relative_to) && cljs.core._EQ_.call(null, this.offset, b.offset) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.indent_t(c, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.indent_t(this.type_tag, c, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, c, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.indent_t(this.type_tag, 
  this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), this.relative_to, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "offset", "offset", 296498311), this.offset, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = !0;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/indent-t", null, 1, null);
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function(a, b, c, d, e, f) {
  return new cljs.pprint.indent_t(a, b, c, d, e, f, null, null, null);
};
cljs.pprint.map__GT_indent_t = function(a) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 
  668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926))), null);
};
cljs.pprint.make_indent_t = function(a, b, c, d, e) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), a, b, c, d, e, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function() {
  return "\n";
};
"undefined" === typeof cljs.pprint.write_token && (cljs.pprint.write_token = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(a, b, c, d, e) {
    return function(a, b) {
      return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(b);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  cljs.core.truth_(c) && c.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  b = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  c = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  a = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(b), a);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(b), a);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  cljs.core.truth_(c) && c.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  b = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b));
  return cljs.core.truth_(b) ? cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b) : null;
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(c), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(b) + function() {
    var d = cljs.core._EQ_, e = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(b);
    if (cljs.core.truth_(d.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), e))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(c));
    }
    if (cljs.core.truth_(d.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), e))) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
    }
    throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""));
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(a, b) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(b));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(a, b) {
  if (cljs.core.truth_(function() {
    var a = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    return a ? a : (a = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "fill", "fill", 883462889))) ? cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b))) : a;
  }())) {
    cljs.pprint.emit_nl.call(null, a, b);
  } else {
    var c = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
    cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function(a, b, c) {
  b = cljs.core.seq.call(null, b);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(g), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var h = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
        cljs.core.truth_(h) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), h);
      }
      cljs.pprint.write_token.call(null, a, g);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(g));
      g = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
      cljs.core.truth_(cljs.core.truth_(c) ? g : c) && (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), g), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null));
      f += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        cljs.core.chunked_seq_QMARK_.call(null, b) ? (d = cljs.core.chunk_first.call(null, b), b = cljs.core.chunk_rest.call(null, b), g = d, e = cljs.core.count.call(null, d), d = g) : (g = cljs.core.first.call(null, b), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(g), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114)) || (d = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        cljs.core.deref.call(null, a))), cljs.core.truth_(d) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d)), cljs.pprint.write_token.call(null, a, g), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", 
        "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(g)), g = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.core.truth_(cljs.core.truth_(c) ? g : c) && (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), g), cljs.core.swap_BANG_.call(null, 
        cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null)), b = cljs.core.next.call(null, b), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.pprint.tokens_fit_QMARK_ = function(a, b) {
  var c = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  return null == c || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))) + cljs.pprint.buffer_length.call(null, b) < c;
};
cljs.pprint.linear_nl_QMARK_ = function(a, b, c) {
  b = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(b));
  return cljs.core.truth_(b) ? b : cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, a, c));
};
cljs.pprint.miser_nl_QMARK_ = function(a, b, c) {
  var d = cljs.pprint.get_miser_width.call(null, a), e = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  return cljs.core.truth_(d) ? cljs.core.truth_(e) ? (d = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(b)) >= e - d) ? cljs.pprint.linear_nl_QMARK_.call(null, a, b, c) : d : e : d;
};
"undefined" === typeof cljs.pprint.emit_nl_QMARK_ && (cljs.pprint.emit_nl_QMARK_ = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(a, b, c, d, e) {
    return function(a, b, c, d) {
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.pprint.linear_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.pprint.miser_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  var e = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a));
  return cljs.core.truth_(e) ? e : (d = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, b, d))) ? d : cljs.pprint.miser_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(a, b, c, d) {
  return !0;
});
cljs.pprint.get_section = function(a) {
  var b = cljs.core.first.call(null, a), c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  b = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(a, b) {
    return function(a) {
      return cljs.core.not.call(null, function() {
        var c = cljs.pprint.nl_t_QMARK_.call(null, a);
        return cljs.core.truth_(c) ? cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), b) : c;
      }());
    };
  }(b, c), cljs.core.next.call(null, a)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, b) + 1, a))], null);
};
cljs.pprint.get_sub_section = function(a) {
  var b = cljs.core.first.call(null, a), c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  return cljs.core.seq.call(null, cljs.core.take_while.call(null, function(a, b) {
    return function(a) {
      var c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.not.call(null, function() {
        var d = cljs.pprint.nl_t_QMARK_.call(null, a);
        return cljs.core.truth_(d) ? (d = cljs.core._EQ_.call(null, c, b)) ? d : cljs.pprint.ancestor_QMARK_.call(null, c, b) : d;
      }());
    };
  }(b, c), cljs.core.next.call(null, a)));
};
cljs.pprint.update_nl_state = function(a) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), !0);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), !0);
  for (a = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a);;) {
    if (cljs.core.truth_(a)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), !0), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), !0), a = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a);
    } else {
      return null;
    }
  }
};
cljs.pprint.emit_nl = function(a, b) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  b = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  var c = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  c = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(b)) - cljs.core.count.call(null, c), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  return cljs.pprint.update_nl_state.call(null, b);
};
cljs.pprint.split_at_newline = function(a) {
  var b = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(a) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, a));
  }, a));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, b), a))], null);
};
cljs.pprint.write_token_string = function(a, b) {
  var c = cljs.pprint.split_at_newline.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  var d = cljs.core.nth.call(null, c, 1, null);
  cljs.core.truth_(b) && cljs.pprint.write_tokens.call(null, a, b, !1);
  if (cljs.core.truth_(d)) {
    c = cljs.pprint.get_section.call(null, d);
    b = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    var e = cljs.core.first.call(null, d), f = cljs.pprint.emit_nl_QMARK_.call(null, e, a, b, cljs.pprint.get_sub_section.call(null, d));
    cljs.core.truth_(f) && (cljs.pprint.emit_nl.call(null, a, e), d = cljs.core.next.call(null, d));
    cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, a, d)) ? (d = cljs.pprint.write_token_string.call(null, a, b), cljs.core._EQ_.call(null, d, b) ? (cljs.pprint.write_tokens.call(null, a, b, !1), a = c) : a = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, d, c))) : a = d;
    return a;
  }
  return null;
};
cljs.pprint.write_line = function(a) {
  for (var b = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));;) {
    if (cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, b)), cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, a, b))) {
      var c = cljs.pprint.write_token_string.call(null, a, b);
      if (b !== c) {
        b = c;
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.pprint.add_to_buffer = function(a, b) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b));
  return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, a, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))))) ? cljs.pprint.write_line.call(null, a) : null;
};
cljs.pprint.write_buffered_output = function(a) {
  cljs.pprint.write_line.call(null, a);
  var b = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.core.truth_(b) ? (cljs.pprint.write_tokens.call(null, a, b, !0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY)) : null;
};
cljs.pprint.write_white_space = function(a) {
  var b = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.core.truth_(b) ? (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null)) : null;
};
cljs.pprint.write_initial_lines = function(a, b) {
  var c = clojure.string.split.call(null, b, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, c), 1)) {
    return b;
  }
  b = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))));
  var d = cljs.core.first.call(null, c);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))))) {
    var e = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), f = e + cljs.core.count.call(null, d);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), f);
    cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_buffer_blob.call(null, d, null, e, f));
    cljs.pprint.write_buffered_output.call(null, a);
  } else {
    cljs.pprint.write_white_space.call(null, a), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d);
  }
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), "\n");
  d = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, c)));
  e = null;
  for (var g = f = 0;;) {
    if (g < f) {
      var h = cljs.core._nth.call(null, e, g);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), h);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null));
      cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b);
      g += 1;
    } else {
      if (d = cljs.core.seq.call(null, d)) {
        e = d, cljs.core.chunked_seq_QMARK_.call(null, e) ? (d = cljs.core.chunk_first.call(null, e), g = cljs.core.chunk_rest.call(null, e), e = d, f = cljs.core.count.call(null, d), d = g) : (d = cljs.core.first.call(null, e), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null)), cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b), d = cljs.core.next.call(null, e), e = null, f = 0), g = 0;
      } else {
        break;
      }
    }
  }
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
  return cljs.core.last.call(null, c);
};
cljs.pprint.p_write_char = function(a, b) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b);
  }
  if (cljs.core._EQ_.call(null, b, "\n")) {
    return cljs.pprint.write_initial_lines.call(null, a, "\n");
  }
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d = c + 1;
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), d);
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, b), null, c, d));
};
cljs.pprint.pretty_writer = function(a, b, c) {
  var d = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, !1), cljs.core.atom.call(null, !1), null, null, null, null, null, null, null), e = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), 
  new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", 
  "buffer", 617295198)], [d, c, d, !0, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, a, b), 1, cljs.core.PersistentVector.EMPTY]));
  "undefined" === typeof cljs.pprint.t_cljs$pprint6798 && (cljs.pprint.t_cljs$pprint6798 = function(a, b, c, d, e, m) {
    this.writer = a;
    this.max_columns = b;
    this.miser_width = c;
    this.lb = d;
    this.fields = e;
    this.meta6799 = m;
    this.cljs$lang$protocol_mask$partition0$ = 1074167808;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint6798.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return function(a, b) {
      return new cljs.pprint.t_cljs$pprint6798(this.writer, this.max_columns, this.miser_width, this.lb, this.fields, b);
    };
  }(d, e), cljs.pprint.t_cljs$pprint6798.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b) {
    return function(a) {
      return this.meta6799;
    };
  }(d, e), cljs.pprint.t_cljs$pprint6798.prototype.cljs$core$IDeref$_deref$arity$1 = function(a, b) {
    return function(a) {
      return this.fields;
    };
  }(d, e), cljs.pprint.t_cljs$pprint6798.prototype.cljs$core$IWriter$_write$arity$2 = function(a, b) {
    return function(a, b) {
      a = cljs.core._EQ_;
      var c = cljs.core.type.call(null, b);
      if (cljs.core.truth_(a.call(null, String, c))) {
        c = cljs.pprint.write_initial_lines.call(null, this, b);
        b = clojure.string.replace_first.call(null, c, /\s+$/, "");
        a = cljs.core.subs.call(null, c, cljs.core.count.call(null, b));
        var d = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this)));
        if (cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
          return cljs.pprint.write_white_space.call(null, this), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), b), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), a);
        }
        d = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this)));
        c = d + cljs.core.count.call(null, c);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), c);
        return cljs.pprint.add_to_buffer.call(null, this, cljs.pprint.make_buffer_blob.call(null, b, a, d, c));
      }
      if (cljs.core.truth_(a.call(null, Number, c))) {
        return cljs.pprint.p_write_char.call(null, this, b);
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""));
    };
  }(d, e), cljs.pprint.t_cljs$pprint6798.prototype.cljs$core$IWriter$_flush$arity$1 = function(a, b) {
    return function(a) {
      cljs.pprint._ppflush.call(null, this);
      return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))));
    };
  }(d, e), cljs.pprint.t_cljs$pprint6798.prototype.cljs$pprint$IPrettyFlush$ = cljs.core.PROTOCOL_SENTINEL, cljs.pprint.t_cljs$pprint6798.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(a, b) {
    return function(a) {
      return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613)) ? (cljs.pprint.write_tokens.call(null, this, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), !0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, 
      this), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY)) : cljs.pprint.write_white_space.call(null, this);
    };
  }(d, e), cljs.pprint.t_cljs$pprint6798.getBasis = function(a, b) {
    return function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta6799", "meta6799", 513082322, null)], 
      null);
    };
  }(d, e), cljs.pprint.t_cljs$pprint6798.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint6798.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint6798", cljs.pprint.t_cljs$pprint6798.cljs$lang$ctorPrWriter = function(a, b) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.pprint/t_cljs$pprint6798");
    };
  }(d, e), cljs.pprint.__GT_t_cljs$pprint6798 = function(a, b) {
    return function(a, b, c, d, e, f) {
      return new cljs.pprint.t_cljs$pprint6798(a, b, c, d, e, f);
    };
  }(d, e));
  return new cljs.pprint.t_cljs$pprint6798(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function(a, b, c, d) {
  c = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, !1), cljs.core.atom.call(null, !1), b, c, d, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), c);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), d = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.core.truth_(d) && d.call(null, new cljs.core.Keyword(null, "start", "start", -355208981)), cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
    cljs.core.deref.call(null, a))), b), a = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(c), a), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(c), a);
  }
  d = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  b = d + (cljs.core.truth_(b) ? cljs.core.count.call(null, b) : 0);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), b);
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_start_block_t.call(null, c, d, b));
};
cljs.pprint.end_block = function(a) {
  var b = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(b);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, a);
    cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
    var d = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
    cljs.core.truth_(d) && d.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
    d = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c = d + (cljs.core.truth_(c) ? cljs.core.count.call(null, c) : 0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), c), cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_end_block_t.call(null, b, d, c));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b));
};
cljs.pprint.nl = function(a, b) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_nl_t.call(null, b, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c, c));
};
cljs.pprint.indent = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(d), c + function() {
      var c = cljs.core._EQ_;
      if (cljs.core.truth_(c.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), b))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(d));
      }
      if (cljs.core.truth_(c.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), b))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
    }());
  }
  var e = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_indent_t.call(null, d, b, c, e, e));
};
cljs.pprint.get_miser_width = function(a) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
};
cljs.pprint._STAR_print_pretty_STAR_ = !0;
"undefined" === typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ && (cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null);
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.table_ize = function(a, b) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(b) {
    var c = cljs.core.get.call(null, a, cljs.core.key.call(null, b));
    return cljs.core.truth_(c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, cljs.core.val.call(null, b)], null) : null;
  }, b));
};
cljs.pprint.pretty_writer_QMARK_ = function(a) {
  var b = null != a ? a.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IDeref$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a);
  return b ? (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))) : b;
};
cljs.pprint.make_pretty_writer = function(a, b, c) {
  return cljs.pprint.pretty_writer.call(null, a, b, c);
};
cljs.pprint.write_out = function(a) {
  var b = cljs.pprint._STAR_current_length_STAR_;
  cljs.core.truth_(b) && (b = cljs.core._STAR_print_length_STAR_, b = cljs.core.truth_(b) ? cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_ : b);
  cljs.pprint._STAR_print_pretty_STAR_ ? cljs.core.truth_(b) ? cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...") : (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_) && (cljs.pprint._STAR_current_length_STAR_ += 1), cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, a)) : cljs.pprint.pr.call(null, a);
  return b;
};
cljs.pprint.write = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), !0], null), cljs.core.apply.call(null, cljs.core.hash_map, b));
  var c = cljs.pprint._STAR_print_base_STAR_, d = cljs.pprint._STAR_print_circle_STAR_, e = cljs.core._STAR_print_length_STAR_, f = cljs.core._STAR_print_level_STAR_, g = cljs.pprint._STAR_print_lines_STAR_, h = cljs.pprint._STAR_print_miser_width_STAR_, k = cljs.pprint._STAR_print_pprint_dispatch_STAR_, l = cljs.pprint._STAR_print_pretty_STAR_, m = cljs.pprint._STAR_print_radix_STAR_, n = cljs.core._STAR_print_readably_STAR_, p = cljs.pprint._STAR_print_right_margin_STAR_, q = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(b, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(b, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(b, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    var r = new goog.string.StringBuffer, t = cljs.core.contains_QMARK_.call(null, b, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(b) : !0, u = !0 === t || null == t ? new cljs.core.StringBufferWriter(r) : t;
    if (cljs.pprint._STAR_print_pretty_STAR_) {
      var v = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, u)), w = cljs.core._STAR_out_STAR_;
      cljs.core._STAR_out_STAR_ = v ? cljs.pprint.make_pretty_writer.call(null, u, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : u;
      try {
        cljs.pprint.write_out.call(null, a), cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.core._STAR_out_STAR_ = w;
      }
    } else {
      var x = cljs.core._STAR_out_STAR_;
      cljs.core._STAR_out_STAR_ = u;
      try {
        cljs.pprint.pr.call(null, a);
      } finally {
        cljs.core._STAR_out_STAR_ = x;
      }
    }
    !0 === t && cljs.core.string_print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(r)].join(""));
    return null == t ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(r)].join("") : null;
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = q, cljs.pprint._STAR_print_right_margin_STAR_ = p, cljs.core._STAR_print_readably_STAR_ = n, cljs.pprint._STAR_print_radix_STAR_ = m, cljs.pprint._STAR_print_pretty_STAR_ = l, cljs.pprint._STAR_print_pprint_dispatch_STAR_ = k, cljs.pprint._STAR_print_miser_width_STAR_ = h, cljs.pprint._STAR_print_lines_STAR_ = g, cljs.core._STAR_print_level_STAR_ = f, cljs.core._STAR_print_length_STAR_ = e, cljs.pprint._STAR_print_circle_STAR_ = d, cljs.pprint._STAR_print_base_STAR_ = 
    c;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.pprint.pprint = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new goog.string.StringBuffer, c = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(b);
  try {
    return cljs.pprint.pprint.call(null, a, cljs.core._STAR_out_STAR_), cljs.core.string_print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = c;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, b)), d = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = c ? cljs.pprint.make_pretty_writer.call(null, b, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : b;
  try {
    var e = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = !0;
    try {
      cljs.pprint.write_out.call(null, a);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = e;
    }
    cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_)) || cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = d;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function(a) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = a;
  return null;
};
cljs.pprint.check_enumerated_arg = function(a, b) {
  if (cljs.core.not.call(null, b.call(null, a))) {
    throw Error(["Bad argument: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), ". It must be one of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  return null;
};
cljs.pprint.level_exceeded = function() {
  var a = cljs.core._STAR_print_level_STAR_;
  return cljs.core.truth_(a) ? cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_ : a;
};
cljs.pprint.pprint_newline = function(a) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, a);
};
cljs.pprint.pprint_indent = function(a, b) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, a, b);
};
cljs.pprint.pprint_tab = function(a, b, c) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  b = "string" === typeof b ? cljs.pprint.compile_format.call(null, b) : b;
  c = cljs.pprint.init_navigator.call(null, c);
  return cljs.pprint.execute_format.call(null, a, b, c);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function(a, b) {
  a = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1("\n"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_format_str_STAR_), cljs.core.str.cljs$core$IFn$_invoke$arity$1("\n"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, b, " "))), "^", cljs.core.str.cljs$core$IFn$_invoke$arity$1("\n")].join("");
  throw Error(a);
};
cljs.pprint.arg_navigator = function(a, b, c, d, e, f) {
  this.seq = a;
  this.rest = b;
  this.pos = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "seq":
      return this.seq;
    case "rest":
      return this.rest;
    case "pos":
      return this.pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.arg-navigator{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), this.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), 
  this.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), this.pos], null)], null), this.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -402038447 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.seq, b.seq) && cljs.core._EQ_.call(null, this.rest, b.rest) && cljs.core._EQ_.call(null, this.pos, b.pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.arg_navigator(this.seq, 
  this.rest, this.pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), b)) ? new cljs.pprint.arg_navigator(c, this.rest, this.pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), b)) ? new cljs.pprint.arg_navigator(this.seq, c, this.pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), b)) ? new cljs.pprint.arg_navigator(this.seq, 
  this.rest, c, this.__meta, this.__extmap, null) : new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "seq", "seq", -1817803783), this.seq, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "rest", "rest", -1241696419), this.rest, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "pos", "pos", -864607220), this.pos, null)], null), this.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, b, this.__extmap, this.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = !0;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/arg-navigator", null, 1, null);
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function(a, b, c) {
  return new cljs.pprint.arg_navigator(a, b, c, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function(a) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220))), null);
};
cljs.pprint.init_navigator = function(a) {
  a = cljs.core.seq.call(null, a);
  return new cljs.pprint.arg_navigator(a, a, 0, null, null, null);
};
cljs.pprint.next_arg = function(a) {
  var b = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a);
  if (cljs.core.truth_(b)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, b), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.next.call(null, b), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + 1, null, null, null)], null);
  }
  throw Error("Not enough arguments for format definition");
};
cljs.pprint.next_arg_or_nil = function(a) {
  var b = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, b), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.next.call(null, b), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + 1, null, null, null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 
  a], null);
};
cljs.pprint.get_format_arg = function(a) {
  var b = cljs.pprint.next_arg.call(null, a);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  a = "string" === typeof a ? cljs.pprint.compile_format.call(null, a) : a;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
};
cljs.pprint.absolute_reposition = function(a, b) {
  return b >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) ? cljs.pprint.relative_reposition.call(null, a, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) - b) : new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.drop.call(null, b, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a)), b, null, null, 
  null);
};
cljs.pprint.relative_reposition = function(a, b) {
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + b;
  return 0 > b ? cljs.pprint.absolute_reposition.call(null, a, c) : new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.drop.call(null, b, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a)), c, null, null, null);
};
cljs.pprint.compiled_directive = function(a, b, c, d, e, f, g) {
  this.func = a;
  this.def = b;
  this.params = c;
  this.offset = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "func":
      return this.func;
    case "def":
      return this.def;
    case "params":
      return this.params;
    case "offset":
      return this.offset;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.pprint.compiled-directive{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), this.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", 
  -1043430536), this.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null)], null), this.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -829256337 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.func, b.func) && cljs.core._EQ_.call(null, this.def, b.def) && cljs.core._EQ_.call(null, this.params, b.params) && cljs.core._EQ_.call(null, this.offset, b.offset) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), b)) ? new cljs.pprint.compiled_directive(c, this.def, this.params, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), b)) ? new cljs.pprint.compiled_directive(this.func, c, this.params, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), 
  b)) ? new cljs.pprint.compiled_directive(this.func, this.def, c, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), b)) ? new cljs.pprint.compiled_directive(this.func, this.def, this.params, c, this.__meta, this.__extmap, null) : new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "func", "func", -238706040), this.func, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "def", "def", -1043430536), this.def, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), this.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", 
  "offset", 296498311), this.offset, null)], null), this.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, b, this.__extmap, this.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = !0;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/compiled-directive", null, 1, null);
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function(a, b, c, d) {
  return new cljs.pprint.compiled_directive(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function(a) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311))), null);
};
cljs.pprint.realize_parameter = function(a, b) {
  var c = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  var d = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  d = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null) : cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196)) ? cljs.pprint.next_arg.call(null, 
  b) : cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(b)), b], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
  b = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null)], null), d], null);
};
cljs.pprint.realize_parameter_list = function(a, b) {
  b = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, b, a);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, a), b], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function(a) {
  return cljs.core.integer_QMARK_.call(null, a) ? cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("") : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
    var a = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
    return cljs.core.truth_(a) ? a : ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_), "r"].join("");
  }() : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, a))].join("") : null;
};
cljs.pprint.format_ascii = function(a, b, c, d) {
  c = cljs.pprint.next_arg.call(null, c);
  d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var e = cljs.pprint.format_simple_number.call(null, d);
  a = cljs.core.truth_(e) ? e : a.call(null, d);
  d = a.length;
  e = d + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(b);
  e = e >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) ? e : e + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) - e - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(b)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(b);
  d = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e - d, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(b)));
  cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")) : cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
  return c;
};
cljs.pprint.integral_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_.call(null, a) ? !0 : cljs.pprint.float_QMARK_.call(null, a) ? cljs.core._EQ_.call(null, a, Math.floor(a)) : !1;
};
cljs.pprint.remainders = function(a, b) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(b) {
    return 0 < b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, b, a), cljs.core.quot.call(null, b, a)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
  }, b)));
};
cljs.pprint.base_str = function(a, b) {
  return 0 === b ? "0" : cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(a) {
    return function(a) {
      return 10 > a ? cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + a) : cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (a - 10));
    };
  }(b), cljs.pprint.remainders.call(null, a, b)));
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function(a, b) {
  return cljs.pprint.base_str.call(null, a, b);
};
cljs.pprint.group_by_STAR_ = function(a, b) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(b) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, a, b))), cljs.core.seq.call(null, cljs.core.drop.call(null, a, b))], null);
  }, cljs.core.reverse.call(null, b))));
};
cljs.pprint.format_integer = function(a, b, c, d) {
  var e = cljs.pprint.next_arg.call(null, c), f = cljs.core.nth.call(null, e, 0, null), g = cljs.core.nth.call(null, e, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, f))) {
    var h = 0 > f, k = h ? -f : f, l = cljs.pprint.opt_base_str.call(null, a, k);
    a = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b)) ? function() {
      var a = cljs.core.map.call(null, function(a, b, c, d, e, f) {
        return function(a) {
          return cljs.core.apply.call(null, cljs.core.str, a);
        };
      }(h, k, l, e, f, g), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(b), l)), c = cljs.core.repeat.call(null, cljs.core.count.call(null, a), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(b));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, c, a)));
    }() : l;
    a = h ? ["-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b)) ? ["+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : a;
    a = a.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) - a.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(b)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : a;
    cljs.pprint.print.call(null, a);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "at", "at", 1476951349), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null)), null);
  }
  return g;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, "zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "), null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, "zeroth first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth fourteenth fifteenth sixteenth seventeenth eighteenth nineteenth".split(" "), null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, "  twenty thirty forty fifty sixty seventy eighty ninety".split(" "), null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, "  twentieth thirtieth fortieth fiftieth sixtieth seventieth eightieth ninetieth".split(" "), null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, " thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion undecillion duodecillion tredecillion quattuordecillion quindecillion sexdecillion septendecillion octodecillion novemdecillion vigintillion".split(" "), null);
cljs.pprint.format_simple_cardinal = function(a) {
  var b = cljs.core.quot.call(null, a, 100), c = cljs.core.rem.call(null, a, 100);
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < b ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b)), " hundred"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < b && 0 < c ? " " : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < c ? 20 > c ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, c) : function() {
    var a = cljs.core.quot.call(null, c, 10), b = cljs.core.rem.call(null, c, 10);
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < a ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, a) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < a && 0 < b ? "-" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < b ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function(a, b) {
  var c = cljs.core.count.call(null, a), d = cljs.core.PersistentVector.EMPTY;
  --c;
  var e = cljs.core.first.call(null, a);
  for (a = cljs.core.next.call(null, a);;) {
    if (null == a) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", d))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.empty_QMARK_.call(null, e) || cljs.core.empty_QMARK_.call(null, d) ? null : ", "), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(!cljs.core.empty_QMARK_.call(null, e) && 0 < c + b ? [" ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, 
      c + b))].join("") : null)].join("");
    }
    d = cljs.core.empty_QMARK_.call(null, e) ? d : cljs.core.conj.call(null, d, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, c + b))].join(""));
    --c;
    e = cljs.core.first.call(null, a);
    a = cljs.core.next.call(null, a);
  }
};
cljs.pprint.format_cardinal_english = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  cljs.core._EQ_.call(null, 0, a) ? cljs.pprint.print.call(null, "zero") : (c = cljs.pprint.remainders.call(null, 1000, 0 > a ? -a : a), cljs.core.count.call(null, c) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers) ? (c = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, c), c = cljs.pprint.add_english_scales.call(null, c, 0), cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 > a ? "minus " : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""))) : 
  cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null)));
  return b;
};
cljs.pprint.format_simple_ordinal = function(a) {
  var b = cljs.core.quot.call(null, a, 100), c = cljs.core.rem.call(null, a, 100);
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < b ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b)), " hundred"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < b && 0 < c ? " " : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < c ? 20 > c ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, c) : function() {
    var a = cljs.core.quot.call(null, c, 10), b = cljs.core.rem.call(null, c, 10);
    return 0 < a && !(0 < b) ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, a) : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < a ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, a) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < a && 0 < b ? "-" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < b ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, b) : null)].join("");
  }() : 0 < b ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function(a, b, c) {
  a = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  if (cljs.core._EQ_.call(null, 0, b)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    if (c = cljs.pprint.remainders.call(null, 1000, 0 > b ? -b : b), cljs.core.count.call(null, c) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var d = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, c));
      d = cljs.pprint.add_english_scales.call(null, d, 1);
      c = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, c));
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 > b ? "minus " : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.empty_QMARK_.call(null, d) || cljs.core.empty_QMARK_.call(null, c) ? cljs.core.empty_QMARK_.call(null, d) ? c : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), "th"].join("") : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), ", ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""))].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null)), c = cljs.core.rem.call(null, b, 100), b = 11 < c || 19 > c, c = cljs.core.rem.call(null, c, 10), cljs.pprint.print.call(null, 
      1 === c && b ? "st" : 2 === c && b ? "nd" : 3 === c && b ? "rd" : "th");
    }
  }
  return a;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "I II III IIII V VI VII VIII VIIII".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "X XX XXX XXXX L LX LXX LXXX LXXXX".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "C CC CCC CCCC D DC DCC DCCC DCCCC".split(" "), 
null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "I II III IV V VI VII VIII IX".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "X XX XXX XL L LX LXX LXXX XC".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "C CC CCC CD D DC DCC DCCC CM".split(" "), 
null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function(a, b, c, d) {
  b = cljs.pprint.next_arg.call(null, c);
  c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  if ("number" === typeof c && 0 < c && 4000 > c) {
    var e = cljs.pprint.remainders.call(null, 10, c);
    c = cljs.core.PersistentVector.EMPTY;
    for (d = cljs.core.count.call(null, e) - 1;;) {
      if (cljs.core.empty_QMARK_.call(null, e)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, c));
        break;
      } else {
        var f = cljs.core.first.call(null, e);
        c = cljs.core._EQ_.call(null, 0, f) ? c : cljs.core.conj.call(null, c, cljs.core.nth.call(null, cljs.core.nth.call(null, a, d), f - 1));
        --d;
        e = cljs.core.next.call(null, e);
      }
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return b;
};
cljs.pprint.format_old_roman = function(a, b, c) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, a, b, c);
};
cljs.pprint.format_new_roman = function(a, b, c) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, a, b, c);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function(a, b, c) {
  a = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  c = cljs.pprint.char_code.call(null, b);
  b = c & 127;
  c &= 128;
  var d = cljs.core.get.call(null, cljs.pprint.special_chars, b);
  0 < c && cljs.pprint.print.call(null, "Meta-");
  cljs.pprint.print.call(null, cljs.core.truth_(d) ? d : 32 > b ? ["Control-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$.call(null, b + 64))].join("") : cljs.core._EQ_.call(null, b, 127) ? "Control-?" : cljs.core.char$.call(null, b));
  return a;
};
cljs.pprint.readable_character = function(a, b, c) {
  c = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = cljs.core._EQ_;
  a = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(a);
  if (cljs.core.truth_(d.call(null, "o", a))) {
    cljs.pprint.cl_format.call(null, !0, "\\o~3, '0o", cljs.pprint.char_code.call(null, b));
  } else {
    if (cljs.core.truth_(d.call(null, "u", a))) {
      cljs.pprint.cl_format.call(null, !0, "\\u~4, '0x", cljs.pprint.char_code.call(null, b));
    } else {
      if (cljs.core.truth_(d.call(null, null, a))) {
        cljs.pprint.print_char.call(null, b);
      } else {
        throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
      }
    }
  }
  return c;
};
cljs.pprint.plain_character = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  cljs.pprint.print.call(null, a);
  return b;
};
cljs.pprint.abort_QMARK_ = function(a) {
  a = cljs.core.first.call(null, a);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), a) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), a);
};
cljs.pprint.execute_sub_format = function(a, b, c) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(a, b) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, b))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, b], null);
    }
    b = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), b);
    var d = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    var e = cljs.pprint.unzip_map.call(null, d);
    d = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    d = cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), c);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b, e], null))], null);
  }, b, a));
};
cljs.pprint.float_parts_base = function(a) {
  a = clojure.string.lower_case.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  var b = a.indexOf("e"), c = a.indexOf(".");
  return 0 > b ? 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count.call(null, a) - 1)].join("")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 0, c)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, c + 1))].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c - 
  1)].join("")], null) : 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, a, 0, b), cljs.core.subs.call(null, a, b + 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 0, 1)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 2, b))].join(""), cljs.core.subs.call(null, a, b + 1)], null);
};
cljs.pprint.float_parts = function(a) {
  a = cljs.pprint.float_parts_base.call(null, a);
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  var c = cljs.pprint.rtrim.call(null, b, "0");
  b = cljs.pprint.ltrim.call(null, c, "0");
  c = cljs.core.count.call(null, c) - cljs.core.count.call(null, b);
  a = 0 < cljs.core.count.call(null, a) && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), "+") ? cljs.core.subs.call(null, a, 1) : a;
  return cljs.core.empty_QMARK_.call(null, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, parseInt(a, 10) - c], null);
};
cljs.pprint.inc_s = function(a) {
  for (var b = cljs.core.count.call(null, a) - 1, c = b | 0;;) {
    if (0 > c) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, b + 1, "0"));
    }
    if (cljs.core._EQ_.call(null, "9", a.charAt(c))) {
      --c;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, a, 0, c), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, a.charAt(c)) + 1), cljs.core.repeat.call(null, b - c, "0"));
    }
  }
};
cljs.pprint.round_str = function(a, b, c, d) {
  if (cljs.core.truth_(cljs.core.truth_(c) ? c : d)) {
    var e = cljs.core.count.call(null, a);
    d = cljs.core.truth_(d) ? 2 > d ? 2 : d : 0;
    cljs.core.truth_(c) ? c = b + c + 1 : 0 <= b ? (c = b + 1, --d, c = c > d ? c : d) : c = d + b;
    var f = cljs.core._EQ_.call(null, c, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), b + 1, 1, e + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c, e], null);
    c = cljs.core.nth.call(null, f, 0, null);
    e = cljs.core.nth.call(null, f, 1, null);
    d = cljs.core.nth.call(null, f, 2, null);
    f = cljs.core.nth.call(null, f, 3, null);
    if (cljs.core.truth_(d)) {
      if (0 > d) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, !1], null);
      }
      if (f > d) {
        return a = cljs.core.nth.call(null, c, d), b = cljs.core.subs.call(null, c, 0, d), cljs.pprint.char_code.call(null, a) >= cljs.pprint.char_code.call(null, "5") ? (a = cljs.pprint.inc_s.call(null, b), b = cljs.core.count.call(null, a) > cljs.core.count.call(null, b), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b ? cljs.core.subs.call(null, a, 0, cljs.core.count.call(null, a) - 1) : a, e, b], null)) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [b, e, !1], null);
      }
    }
  }
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, !1], null);
};
cljs.pprint.expand_fixed = function(a, b, c) {
  b = 0 > b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -b - 1, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
  a = cljs.core.nth.call(null, b, 0, null);
  var d = cljs.core.nth.call(null, b, 1, null);
  b = cljs.core.count.call(null, a);
  c = cljs.core.truth_(c) ? d + c + 1 : d + 1;
  return b < c ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c - b, "0")))].join("") : a;
};
cljs.pprint.insert_decimal = function(a, b) {
  if (0 > b) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  }
  b += 1;
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 0, b)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, b))].join("");
};
cljs.pprint.get_fixed = function(a, b, c) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, a, b, c), b);
};
cljs.pprint.insert_scaled_decimal = function(a, b) {
  return 0 > b ? [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 0, b)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, b))].join("");
};
cljs.pprint.convert_ratio = function(a) {
  return a;
};
cljs.pprint.fixed_float = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.pprint.next_arg.call(null, b);
  var f = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  var g = 0 > f ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -f], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", f], null);
  c = cljs.core.nth.call(null, g, 0, null);
  g = cljs.core.nth.call(null, g, 1, null);
  g = cljs.pprint.convert_ratio.call(null, g);
  g = cljs.pprint.float_parts.call(null, g);
  var h = cljs.core.nth.call(null, g, 0, null), k = cljs.core.nth.call(null, g, 1, null) + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(a);
  g = function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : 0 > f;
  }();
  var l = cljs.core.not.call(null, e) && cljs.core.count.call(null, h) - 1 <= k, m = cljs.pprint.round_str.call(null, h, k, e, cljs.core.truth_(d) ? d - (cljs.core.truth_(g) ? 1 : 0) : null);
  h = cljs.core.nth.call(null, m, 0, null);
  k = cljs.core.nth.call(null, m, 1, null);
  m = cljs.core.nth.call(null, m, 2, null);
  h = cljs.pprint.get_fixed.call(null, h, cljs.core.truth_(m) ? k + 1 : k, e);
  e = cljs.core.truth_(cljs.core.truth_(d) ? cljs.core.truth_(e) ? 1 <= e && cljs.core._EQ_.call(null, h.charAt(0), "0") && cljs.core._EQ_.call(null, h.charAt(1), ".") && cljs.core.count.call(null, h) > d - (cljs.core.truth_(g) ? 1 : 0) : e : d) ? cljs.core.subs.call(null, h, 1) : h;
  k = cljs.core._EQ_.call(null, cljs.core.first.call(null, e), ".");
  if (cljs.core.truth_(d)) {
    h = cljs.core.count.call(null, e);
    h = cljs.core.truth_(g) ? h + 1 : h;
    k = k && !(h >= d);
    l = l && !(h >= d);
    var n = k || l ? h + 1 : h;
    cljs.core.truth_(function() {
      var b = n > d;
      return b ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a) : b;
    }()) ? cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a)))) : cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d - n, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(g) ? 
    c : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(k ? "0" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(l ? "0" : null)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(g) ? c : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(k ? "0" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(l ? "0" : null)].join(""));
  }
  return b;
};
cljs.pprint.exponential_float = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  var d = cljs.pprint.convert_ratio.call(null, c);
  c = cljs.pprint.float_parts.call(null, 0 > d ? -d : d);
  cljs.core.nth.call(null, c, 0, null);
  for (cljs.core.nth.call(null, c, 1, null);;) {
    var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), g = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), k = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(a), l = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(a), m = function() {
      var b = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(b) ? b : "E";
    }();
    c = function() {
      var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(b) ? b : 0 > d;
    }();
    var n = 0 >= l, p = f - (l - 1), q = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(p))].join("");
    m = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 > p ? "-" : "+"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(k) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, k - cljs.core.count.call(null, q), "0")) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(q)].join("");
    var r = cljs.core.count.call(null, m);
    p = cljs.core.count.call(null, e);
    e = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -l, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(h) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, h - (p - 1) - (0 > l ? -l : 0), "0")) : null)].join("");
    p = cljs.core.truth_(g) ? g - r : null;
    e = cljs.pprint.round_str.call(null, e, 0, cljs.core._EQ_.call(null, l, 0) ? h - 1 : 0 < l ? h : 0 > l ? h - 1 : null, cljs.core.truth_(p) ? p - (cljs.core.truth_(c) ? 1 : 0) : null);
    p = cljs.core.nth.call(null, e, 0, null);
    cljs.core.nth.call(null, e, 1, null);
    q = cljs.core.nth.call(null, e, 2, null);
    e = cljs.pprint.insert_scaled_decimal.call(null, p, l);
    h = cljs.core._EQ_.call(null, l, cljs.core.count.call(null, p)) && null == h;
    if (cljs.core.not.call(null, q)) {
      if (cljs.core.truth_(g)) {
        f = cljs.core.count.call(null, e) + r;
        f = cljs.core.truth_(c) ? f + 1 : f;
        var t = (n = n && !cljs.core._EQ_.call(null, f, g)) ? f + 1 : f;
        f = h && t < g;
        cljs.core.truth_(function() {
          var b = t > g;
          b || (b = k, b = cljs.core.truth_(b) ? r - 2 > k : b);
          return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a) : b;
        }()) ? cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, g, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a)))) : cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, g - t - (f ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(c) ? 
        0 > d ? "-" : "+" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(n ? "0" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(f ? "0" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""));
      } else {
        cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(c) ? 0 > d ? "-" : "+" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(n ? "0" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(h ? "0" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""));
      }
      break;
    } else {
      c = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, f + 1], null);
    }
  }
  return b;
};
cljs.pprint.general_float = function(a, b, c) {
  var d = cljs.pprint.next_arg.call(null, b), e = cljs.core.nth.call(null, d, 0, null);
  cljs.core.nth.call(null, d, 1, null);
  d = cljs.pprint.convert_ratio.call(null, e);
  e = cljs.pprint.float_parts.call(null, 0 > d ? -d : d);
  var f = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  var g = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), k = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(a);
  e = cljs.core._EQ_.call(null, d, 0.0) ? 0 : e + 1;
  d = cljs.core.truth_(k) ? k + 2 : 4;
  g = cljs.core.truth_(g) ? g - d : null;
  cljs.core.truth_(h) ? f = h : (f = cljs.core.count.call(null, f), h = 7 > e ? e : 7, f = f > h ? f : h);
  e = f - e;
  return 0 <= e && e <= f ? (a = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), g, new cljs.core.Keyword(null, "d", "d", 1972142424), e, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "padchar", "padchar", 
  2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)], null), b, c), cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d, " "))), a) : cljs.pprint.exponential_float.call(null, a, b, c);
};
cljs.pprint.dollar_float = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  var d = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  c = cljs.pprint.float_parts.call(null, Math.abs(d));
  var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), g = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a);
  c = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a);
  var k = function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : 0 > d;
  }(), l = cljs.pprint.round_str.call(null, e, f, g, null);
  e = cljs.core.nth.call(null, l, 0, null);
  f = cljs.core.nth.call(null, l, 1, null);
  l = cljs.core.nth.call(null, l, 2, null);
  g = cljs.pprint.get_fixed.call(null, e, cljs.core.truth_(l) ? f + 1 : f, g);
  h = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, h - g.indexOf("."), "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)].join("");
  g = cljs.core.count.call(null, h) + (cljs.core.truth_(k) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? k : b;
  }()) ? 0 > d ? "-" : "+" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c - g, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
    var b = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a));
    return b ? k : b;
  }()) ? 0 > d ? "-" : "+" : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""));
  return b;
};
cljs.pprint.choice_conditional = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.truth_(c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null) : cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  b = 0 > b || b >= cljs.core.count.call(null, d) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) : cljs.core.nth.call(null, d, b);
  return cljs.core.truth_(b) ? cljs.pprint.execute_sub_format.call(null, b, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : c;
};
cljs.pprint.boolean_conditional = function(a, b, c) {
  c = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.core.truth_(b) ? cljs.core.second.call(null, d) : cljs.core.first.call(null, d);
  return cljs.core.truth_(b) ? cljs.pprint.execute_sub_format.call(null, b, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : c;
};
cljs.pprint.check_arg_conditional = function(a, b, c) {
  var d = cljs.pprint.next_arg.call(null, b);
  c = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  var e = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  e = cljs.core.truth_(c) ? cljs.core.first.call(null, e) : null;
  return cljs.core.truth_(c) ? cljs.core.truth_(e) ? cljs.pprint.execute_sub_format.call(null, e, b, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : b : d;
};
cljs.pprint.iterate_sublist = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  c = cljs.pprint.next_arg.call(null, c);
  var e = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var f = 0, g = cljs.pprint.init_navigator.call(null, e);
  for (e = -1;;) {
    if (cljs.core.not.call(null, d) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(g), e) && 1 < f) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    }
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(g)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < f);
      return b ? b : cljs.core.truth_(d) ? f >= d : d;
    }())) {
      return c;
    }
    var h = cljs.pprint.execute_sub_format.call(null, b, g, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, h))) {
      return c;
    }
    e = f + 1;
    var k = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(g);
    f = e;
    g = h;
    e = k;
  }
};
cljs.pprint.iterate_list_of_sublists = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  c = cljs.pprint.next_arg.call(null, c);
  var e = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  for (var f = 0, g = e;;) {
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, g) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < f);
      return b ? b : cljs.core.truth_(d) ? f >= d : d;
    }())) {
      return c;
    }
    e = cljs.pprint.execute_sub_format.call(null, b, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, g)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, g)));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, e))) {
      return c;
    }
    e = f + 1;
    var h = cljs.core.next.call(null, g);
    f = e;
    g = h;
  }
};
cljs.pprint.iterate_main_list = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  var e = 0, f = cljs.core.nth.call(null, c, 1, null);
  for (c = -1;;) {
    if (cljs.core.not.call(null, d) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(f), c) && 1 < e) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    }
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(f)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < e);
      return b ? b : cljs.core.truth_(d) ? e >= d : d;
    }())) {
      return f;
    }
    var g = cljs.pprint.execute_sub_format.call(null, b, f, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, g))) {
      return cljs.core.second.call(null, g);
    }
    c = e + 1;
    var h = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(f);
    e = c;
    f = g;
    c = h;
  }
};
cljs.pprint.iterate_main_sublists = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  c = cljs.core.empty_QMARK_.call(null, c) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  b = cljs.core.nth.call(null, c, 0, null);
  for (var e = 0, f = cljs.core.nth.call(null, c, 1, null);;) {
    if (cljs.core.truth_(function() {
      var b = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(f)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < e);
      return b ? b : cljs.core.truth_(d) ? e >= d : d;
    }())) {
      return f;
    }
    var g = cljs.pprint.next_arg_or_nil.call(null, f);
    c = cljs.core.nth.call(null, g, 0, null);
    g = cljs.core.nth.call(null, g, 1, null);
    c = cljs.pprint.execute_sub_format.call(null, b, cljs.pprint.init_navigator.call(null, c), g);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, c))) {
      return g;
    }
    c = g;
    e += 1;
    f = c;
  }
};
cljs.pprint.logical_block_or_justify = function(a, b, c) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) ? cljs.pprint.format_logical_block.call(null, a, b, c) : cljs.pprint.justify_clauses.call(null, a, b, c);
};
cljs.pprint.render_clauses = function(a, b, c) {
  for (var d = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.empty_QMARK_.call(null, a)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
    }
    var e = cljs.core.first.call(null, a);
    a: {
      var f = new goog.string.StringBuffer, g = cljs.core._STAR_out_STAR_;
      cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(f);
      try {
        var h = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, e, b, c), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join("")], null);
        break a;
      } finally {
        cljs.core._STAR_out_STAR_ = g;
      }
      h = void 0;
    }
    b = cljs.core.nth.call(null, h, 0, null);
    e = cljs.core.nth.call(null, h, 1, null);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, b))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, cljs.core.second.call(null, b)], null);
    }
    a = cljs.core.next.call(null, a);
    d = cljs.core.conj.call(null, d, e);
  }
};
cljs.pprint.justify_clauses = function(a, b, c) {
  var d = function() {
    var c = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(c) ? cljs.pprint.render_clauses.call(null, c, b, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : null;
  }();
  c = cljs.core.nth.call(null, d, 0, null);
  c = cljs.core.nth.call(null, c, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  var e = cljs.core.truth_(d) ? d : b;
  d = function() {
    var b = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? cljs.pprint.realize_parameter_list.call(null, b, e) : null;
  }();
  var f = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  var g = cljs.core.truth_(d) ? d : e;
  d = function() {
    var a = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(f));
    return cljs.core.truth_(a) ? a : 0;
  }();
  var h = function() {
    var a = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(f));
    return cljs.core.truth_(a) ? a : cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
  }(), k = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  g = cljs.pprint.render_clauses.call(null, k, g, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
  var l = cljs.core.nth.call(null, g, 0, null);
  g = cljs.core.nth.call(null, g, 1, null);
  var m = function() {
    var b = cljs.core.count.call(null, l) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0);
    return 1 > b ? 1 : b;
  }();
  k = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, l));
  var n = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(a), p = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(a), q = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a), r = k + m * p;
  n = r <= n ? n : n + q * (1 + cljs.core.quot.call(null, r - n - 1, q));
  var t = n - k;
  k = function() {
    var a = cljs.core.quot.call(null, t, m);
    return p > a ? p : a;
  }();
  q = t - k * m;
  k = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, k, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)));
  cljs.core.truth_(cljs.core.truth_(c) ? cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + d + n > h : c) && cljs.pprint.print.call(null, c);
  d = q;
  for (var u = l, v = function() {
    var b = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : cljs.core._EQ_.call(null, cljs.core.count.call(null, u), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a));
  }();;) {
    if (cljs.core.seq.call(null, u)) {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.not.call(null, v) ? cljs.core.first.call(null, u) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
        var b = v;
        return cljs.core.truth_(b) ? b : (b = cljs.core.next.call(null, u)) ? b : (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
      }()) ? k : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < d ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a) : null)].join("")), --d, u = c = cljs.core.truth_(v) ? u : cljs.core.next.call(null, u), v = !1;
    } else {
      break;
    }
  }
  return g;
};
cljs.pprint.downcase_writer = function(a) {
  "undefined" === typeof cljs.pprint.t_cljs$pprint7115 && (cljs.pprint.t_cljs$pprint7115 = function(a, c) {
    this.writer = a;
    this.meta7116 = c;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint7115.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new cljs.pprint.t_cljs$pprint7115(this.writer, c);
  }, cljs.pprint.t_cljs$pprint7115.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta7116;
  }, cljs.pprint.t_cljs$pprint7115.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
    return cljs.core._flush.call(null, this.writer);
  }, cljs.pprint.t_cljs$pprint7115.prototype.cljs$core$IWriter$_write$arity$2 = function(a, c) {
    a = cljs.core._EQ_;
    var b = cljs.core.type.call(null, c);
    if (cljs.core.truth_(a.call(null, String, b))) {
      return cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, c));
    }
    if (cljs.core.truth_(a.call(null, Number, b))) {
      return cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
    }
    throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }, cljs.pprint.t_cljs$pprint7115.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta7116", "meta7116", -1870758197, null)], null);
  }, cljs.pprint.t_cljs$pprint7115.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint7115.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint7115", cljs.pprint.t_cljs$pprint7115.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "cljs.pprint/t_cljs$pprint7115");
  }, cljs.pprint.__GT_t_cljs$pprint7115 = function(a, c) {
    return new cljs.pprint.t_cljs$pprint7115(a, c);
  });
  return new cljs.pprint.t_cljs$pprint7115(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function(a) {
  "undefined" === typeof cljs.pprint.t_cljs$pprint7121 && (cljs.pprint.t_cljs$pprint7121 = function(a, c) {
    this.writer = a;
    this.meta7122 = c;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint7121.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new cljs.pprint.t_cljs$pprint7121(this.writer, c);
  }, cljs.pprint.t_cljs$pprint7121.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta7122;
  }, cljs.pprint.t_cljs$pprint7121.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
    return cljs.core._flush.call(null, this.writer);
  }, cljs.pprint.t_cljs$pprint7121.prototype.cljs$core$IWriter$_write$arity$2 = function(a, c) {
    a = cljs.core._EQ_;
    var b = cljs.core.type.call(null, c);
    if (cljs.core.truth_(a.call(null, String, b))) {
      return cljs.core._write.call(null, this.writer, clojure.string.upper_case.call(null, c));
    }
    if (cljs.core.truth_(a.call(null, Number, b))) {
      return cljs.core._write.call(null, this.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
    }
    throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }, cljs.pprint.t_cljs$pprint7121.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta7122", "meta7122", 562901320, null)], null);
  }, cljs.pprint.t_cljs$pprint7121.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint7121.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint7121", cljs.pprint.t_cljs$pprint7121.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "cljs.pprint/t_cljs$pprint7121");
  }, cljs.pprint.__GT_t_cljs$pprint7121 = function(a, c) {
    return new cljs.pprint.t_cljs$pprint7121(a, c);
  });
  return new cljs.pprint.t_cljs$pprint7121(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function(a, b) {
  var c = cljs.core.first.call(null, a);
  a = cljs.core.truth_(cljs.core.truth_(b) ? cljs.core.truth_(c) ? goog.string.isUnicodeChar(c) : c : b) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, c)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 1))].join("") : a;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(a, b) {
    return function(a) {
      if (cljs.core.empty_QMARK_.call(null, a)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      }
      var b = /\W\w/g.exec(a);
      b = cljs.core.truth_(b) ? b.index + 1 : b;
      return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 0, b)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.nth.call(null, a, b)))].join(""), cljs.core.subs.call(null, a, b + 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, null], null);
    };
  }(c, a), a)));
};
cljs.pprint.capitalize_word_writer = function(a) {
  var b = cljs.core.atom.call(null, !0);
  "undefined" === typeof cljs.pprint.t_cljs$pprint7127 && (cljs.pprint.t_cljs$pprint7127 = function(a, b, e) {
    this.writer = a;
    this.last_was_whitespace_QMARK_ = b;
    this.meta7128 = e;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint7127.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.pprint.t_cljs$pprint7127(this.writer, this.last_was_whitespace_QMARK_, b);
    };
  }(b), cljs.pprint.t_cljs$pprint7127.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta7128;
    };
  }(b), cljs.pprint.t_cljs$pprint7127.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
    return function(a) {
      return cljs.core._flush.call(null, this.writer);
    };
  }(b), cljs.pprint.t_cljs$pprint7127.prototype.cljs$core$IWriter$_write$arity$2 = function(a) {
    return function(a, b) {
      a = cljs.core._EQ_;
      var c = cljs.core.type.call(null, b);
      if (cljs.core.truth_(a.call(null, String, c))) {
        return cljs.core._write.call(null, this.writer, cljs.pprint.capitalize_string.call(null, b.toLowerCase(), cljs.core.deref.call(null, this.last_was_whitespace_QMARK_))), 0 < b.length ? cljs.core.reset_BANG_.call(null, this.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, b, cljs.core.count.call(null, b) - 1))) : null;
      }
      if (cljs.core.truth_(a.call(null, Number, c))) {
        return b = cljs.core.char$.call(null, b), a = cljs.core.truth_(cljs.core.deref.call(null, this.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, b) : b, cljs.core._write.call(null, this.writer, a), cljs.core.reset_BANG_.call(null, this.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(b));
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""));
    };
  }(b), cljs.pprint.t_cljs$pprint7127.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta7128", "meta7128", 1693424407, null)], null);
    };
  }(b), cljs.pprint.t_cljs$pprint7127.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint7127.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint7127", cljs.pprint.t_cljs$pprint7127.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.pprint/t_cljs$pprint7127");
    };
  }(b), cljs.pprint.__GT_t_cljs$pprint7127 = function(a) {
    return function(a, b, c) {
      return new cljs.pprint.t_cljs$pprint7127(a, b, c);
    };
  }(b));
  return new cljs.pprint.t_cljs$pprint7127(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function(a) {
  var b = cljs.core.atom.call(null, !1);
  "undefined" === typeof cljs.pprint.t_cljs$pprint7133 && (cljs.pprint.t_cljs$pprint7133 = function(a, b, e) {
    this.writer = a;
    this.capped = b;
    this.meta7134 = e;
    this.cljs$lang$protocol_mask$partition0$ = 1074135040;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.pprint.t_cljs$pprint7133.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.pprint.t_cljs$pprint7133(this.writer, this.capped, b);
    };
  }(b), cljs.pprint.t_cljs$pprint7133.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta7134;
    };
  }(b), cljs.pprint.t_cljs$pprint7133.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
    return function(a) {
      return cljs.core._flush.call(null, this.writer);
    };
  }(b), cljs.pprint.t_cljs$pprint7133.prototype.cljs$core$IWriter$_write$arity$2 = function(a) {
    return function(a, b) {
      var c = this;
      a = cljs.core._EQ_;
      var d = cljs.core.type.call(null, b);
      if (cljs.core.truth_(a.call(null, String, d))) {
        return b = clojure.string.lower_case.call(null, b), cljs.core.not.call(null, cljs.core.deref.call(null, c.capped)) ? (a = /\S/g.exec(b), a = cljs.core.truth_(a) ? a.index : a, cljs.core.truth_(a) ? (cljs.core._write.call(null, c.writer, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, b, 0, a)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.nth.call(null, b, a))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, 
        cljs.core.subs.call(null, b, a + 1)))].join("")), cljs.core.reset_BANG_.call(null, c.capped, !0)) : cljs.core._write.call(null, c.writer, b)) : cljs.core._write.call(null, c.writer, clojure.string.lower_case.call(null, b));
      }
      if (cljs.core.truth_(a.call(null, Number, d))) {
        var e = cljs.core.char$.call(null, b);
        return cljs.core.truth_(function() {
          var a = cljs.core.not.call(null, cljs.core.deref.call(null, c.capped));
          return a ? goog.string.isUnicodeChar(e) : a;
        }()) ? (cljs.core.reset_BANG_.call(null, c.capped, !0), cljs.core._write.call(null, c.writer, clojure.string.upper_case.call(null, e))) : cljs.core._write.call(null, c.writer, clojure.string.lower_case.call(null, e));
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
    };
  }(b), cljs.pprint.t_cljs$pprint7133.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta7134", "meta7134", 2144649289, null)], null);
    };
  }(b), cljs.pprint.t_cljs$pprint7133.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint7133.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint7133", cljs.pprint.t_cljs$pprint7133.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.pprint/t_cljs$pprint7133");
    };
  }(b), cljs.pprint.__GT_t_cljs$pprint7133 = function(a) {
    return function(a, b, c) {
      return new cljs.pprint.t_cljs$pprint7133(a, b, c);
    };
  }(b));
  return new cljs.pprint.t_cljs$pprint7133(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function(a, b, c, d) {
  d = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(b));
  var e = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = a.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, d, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(b));
  } finally {
    cljs.core._STAR_out_STAR_ = e;
  }
};
cljs.pprint.get_pretty_writer = function(a) {
  return cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, a)) ? a : cljs.pprint.pretty_writer.call(null, a, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
};
cljs.pprint.fresh_line = function() {
  return (null != cljs.core._STAR_out_STAR_ ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === cljs.core._STAR_out_STAR_.cljs$core$IDeref$ || (cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) ? cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, 
  (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))))) ? null : cljs.pprint.prn.call(null) : cljs.pprint.prn.call(null);
};
cljs.pprint.absolute_tabulation = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(a);
  a = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a);
  var d = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  c = d < c ? c - d : cljs.core._EQ_.call(null, a, 0) ? 0 : a - cljs.core.rem.call(null, d - c, a);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c, " ")));
  return b;
};
cljs.pprint.relative_tabulation = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(a);
  a = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a);
  var d = c + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  d = 0 < a ? cljs.core.rem.call(null, d, a) : 0;
  c += cljs.core._EQ_.call(null, 0, d) ? 0 : a - d;
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c, " ")));
  return b;
};
cljs.pprint.format_logical_block = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.count.call(null, d);
  c = 1 < e ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, d)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? "(" : null;
  var f = cljs.core.nth.call(null, d, 1 < e ? 1 : 0);
  d = 2 < e ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, d, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? ")" : null;
  e = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var g = cljs.pprint._STAR_current_level_STAR_, h = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, c, null, d), cljs.pprint.execute_sub_format.call(null, f, cljs.pprint.init_navigator.call(null, b), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = h, cljs.pprint._STAR_current_level_STAR_ = g;
    }
  }
  return e;
};
cljs.pprint.set_indent = function(a, b, c) {
  c = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, c, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a));
  return b;
};
cljs.pprint.conditional_newline = function(a, b, c) {
  a = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "miser", "miser", 
  -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, a);
  return b;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays("ASDBOXRPCFEG$%\x26|~\nT*?()[;]{}\x3c\x3e^W_I".split(""), [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], 
null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), 
new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 
811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 10, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 2, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 8, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    return cljs.pprint.format_integer.call(null, 16, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(a))) ? function(a, b, e) {
    return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(a), a, b, e);
  } : cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : b;
  }()) ? function(a, b, e) {
    return cljs.pprint.format_old_roman.call(null, a, b, e);
  } : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    return cljs.pprint.format_new_roman.call(null, a, b, e);
  } : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    return cljs.pprint.format_ordinal_english.call(null, a, b, e);
  } : function(a, b, e) {
    return cljs.pprint.format_cardinal_english.call(null, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    b = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.relative_reposition.call(null, b, -1) : b;
    a = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    e = cljs.pprint.next_arg.call(null, b);
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, b, 1) ? cljs.core.first.call(null, a) : cljs.core.second.call(null, a));
    return e;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.pretty_character : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.readable_character : cljs.pprint.plain_character;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(a);
    for (e = 0;;) {
      if (e < a) {
        cljs.pprint.prn.call(null), e += 1;
      } else {
        break;
      }
    }
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(a);
    0 < a && cljs.pprint.fresh_line.call(null);
    --a;
    for (e = 0;;) {
      if (e < a) {
        cljs.pprint.prn.call(null), e += 1;
      } else {
        break;
      }
    }
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(a);
    for (e = 0;;) {
      if (e < a) {
        cljs.pprint.print.call(null, "\f"), e += 1;
      } else {
        break;
      }
    }
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    a = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, a, "~")));
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.pprint.prn.call(null);
    return b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    return cljs.pprint.relative_tabulation.call(null, a, b, e);
  } : function(a, b, e) {
    return cljs.pprint.absolute_tabulation.call(null, a, b, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    e = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.absolute_reposition.call(null, b, e) : cljs.pprint.relative_reposition.call(null, b, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? -e : e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(a, b, e) {
    e = cljs.pprint.get_format_arg.call(null, b);
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return cljs.pprint.execute_sub_format.call(null, b, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
  } : function(a, b, e) {
    e = cljs.pprint.get_format_arg.call(null, b);
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    var c = cljs.pprint.next_arg.call(null, e);
    e = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    e = cljs.pprint.init_navigator.call(null, e);
    cljs.pprint.execute_sub_format.call(null, b, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    return c;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a) {
    return function(b, c, f) {
      return cljs.pprint.modify_case.call(null, a, b, c, f);
    };
  }(cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : b;
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), !0, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.boolean_conditional : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.check_arg_conditional : cljs.pprint.choice_conditional;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), !0], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
!1], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : b;
  }()) ? cljs.pprint.iterate_main_sublists : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.iterate_list_of_sublists : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.iterate_main_list : cljs.pprint.iterate_sublist;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
!0, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(a, b, e) {
    e = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a);
    var c = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), d = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), h = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    return cljs.core.truth_(cljs.core.truth_(e) ? cljs.core.truth_(c) ? d : c : e) ? e <= c && c <= d ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, b], null) : b : cljs.core.truth_(cljs.core.truth_(e) ? c : e) ? cljs.core._EQ_.call(null, e, c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, b], null) : b : cljs.core.truth_(e) ? cljs.core._EQ_.call(null, e, 0) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [h, b], null) : b : (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(b))) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, b], null) : b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
  }()) ? function(a) {
    return function(b, c, f) {
      c = cljs.pprint.next_arg.call(null, c);
      b = cljs.core.nth.call(null, c, 0, null);
      c = cljs.core.nth.call(null, c, 1, null);
      return cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, b, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), c], null) : c;
    };
  }(cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), !0], null) : cljs.core.PersistentVector.EMPTY)) : function(a, b, e) {
    b = cljs.pprint.next_arg.call(null, b);
    a = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return cljs.core.truth_(cljs.pprint.write_out.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), b], null) : b;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null), d = cljs.core.nth.call(null, a, 2, null);
  a = new RegExp(cljs.pprint.param_pattern.source, "g");
  var e = a.exec(b);
  return cljs.core.truth_(e) ? (d = cljs.core.first.call(null, e), b = cljs.core.subs.call(null, b, a.lastIndex), a = c + a.lastIndex, cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, b, 0)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, b, 1), a + 1, 
  !0], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, !1], null)], null)) : cljs.core.truth_(d) ? cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", c) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null)], null);
};
cljs.pprint.extract_params = function(a, b) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, !1], null));
};
cljs.pprint.translate_param = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, b.length, 0) ? null : cljs.core._EQ_.call(null, b.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, b, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, b.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, b, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, b.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, b, 0)) ? cljs.core.nth.call(null, b, 1) : parseInt(b, 10), a], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function(a, b) {
  return cljs.pprint.consume.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
    a = cljs.core.nth.call(null, a, 2, null);
    if (cljs.core.empty_QMARK_.call(null, b)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c, a], null)], null);
    }
    var f = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, b));
    return cljs.core.truth_(f) ? cljs.core.contains_QMARK_.call(null, a, f) ? cljs.pprint.format_error.call(null, ['Flag "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, b)), '" appears more than once in a directive'].join(""), c) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, b, 1), c + 1, cljs.core.assoc.call(null, a, f, 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, c], null))], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c, a], null)], null);
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function(a, b) {
  var c = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(a);
  cljs.core.truth_(function() {
    var a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(c));
    return a ? (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b) : a;
  }()) && cljs.pprint.format_error.call(null, ['"@" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), 1));
  cljs.core.truth_(function() {
    var a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(c));
    return a ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b) : a;
  }()) && cljs.pprint.format_error.call(null, ['":" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b), 1));
  return cljs.core.truth_(function() {
    var a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(c));
    return a ? (a = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.truth_(a) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b) : a) : a;
  }()) ? cljs.pprint.format_error.call(null, ['Cannot combine "@" and ":" flags for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), '"'].join(""), function() {
    var a = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b), 1), c = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), 1);
    return a < c ? a : c;
  }()) : null;
};
cljs.pprint.map_params = function(a, b, c, d) {
  cljs.pprint.check_flags.call(null, a, c);
  cljs.core.count.call(null, b) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.count.call(null, b), cljs.core.count.call(null, 
  (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a))), cljs.core.second.call(null, cljs.core.first.call(null, b)));
  cljs.core.doall.call(null, cljs.core.map.call(null, function(b, c) {
    var d = cljs.core.first.call(null, b);
    return null == d || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, d) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, c)), cljs.core.type.call(null, d)) ? null : cljs.pprint.format_error.call(null, ["Parameter ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, cljs.core.first.call(null, c))), ' has bad type in directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 
    793559132)).cljs$core$IFn$_invoke$arity$1(a)), '": ', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type.call(null, d))].join(""), cljs.core.second.call(null, b));
  }, b, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    return function g(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var b = cljs.core.seq.call(null, a);
          if (b) {
            if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
              var c = cljs.core.chunk_first.call(null, b), f = cljs.core.count.call(null, c), m = cljs.core.chunk_buffer.call(null, f);
              a: {
                for (var n = 0;;) {
                  if (n < f) {
                    var p = cljs.core._nth.call(null, c, n), q = cljs.core.nth.call(null, p, 0, null);
                    p = cljs.core.nth.call(null, p, 1, null);
                    p = cljs.core.nth.call(null, p, 0, null);
                    cljs.core.chunk_append.call(null, m, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [q, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, d], null)], null));
                    n += 1;
                  } else {
                    c = !0;
                    break a;
                  }
                }
              }
              return c ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, m), g.call(null, cljs.core.chunk_rest.call(null, b))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, m), null);
            }
            c = cljs.core.first.call(null, b);
            m = cljs.core.nth.call(null, c, 0, null);
            c = cljs.core.nth.call(null, c, 1, null);
            c = cljs.core.nth.call(null, c, 0, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null)], null), g.call(null, cljs.core.rest.call(null, b)));
          }
          return null;
        }
      }, null, null);
    }.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a));
  }())), cljs.core.reduce.call(null, function(a, b) {
    return cljs.core.apply.call(null, cljs.core.assoc, a, b);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(a) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, a, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)), b))), c);
};
cljs.pprint.compile_directive = function(a, b) {
  b = cljs.pprint.extract_params.call(null, a, b);
  a = cljs.core.nth.call(null, b, 0, null);
  var c = cljs.core.nth.call(null, b, 1, null);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  b = cljs.pprint.extract_flags.call(null, b, c);
  cljs.core.nth.call(null, b, 0, null);
  c = cljs.core.nth.call(null, b, 1, null);
  var d = cljs.core.nth.call(null, c, 0, null);
  b = cljs.core.nth.call(null, c, 1, null);
  var e = cljs.core.nth.call(null, c, 2, null), f = cljs.core.first.call(null, d);
  c = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, f));
  var g = cljs.core.truth_(c) ? cljs.pprint.map_params.call(null, c, cljs.core.map.call(null, cljs.pprint.translate_param, a), e, b) : null;
  cljs.core.not.call(null, f) && cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", b);
  cljs.core.not.call(null, c) && cljs.pprint.format_error.call(null, ['Directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(f), '" is undefined'].join(""), b);
  a = cljs.core.PersistentVector;
  f = cljs.core.PersistentVector.EMPTY_NODE;
  e = new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(c).call(null, g, b), c, g, b, null, null, null);
  d = cljs.core.subs.call(null, d, 1);
  b += 1;
  c = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(c)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(g)) ? cljs.pprint.prefix_count.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
  d = cljs.core.subs.call(null, d, c);
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b + c], null);
  return new a(null, 2, 5, f, [e, b], null);
};
cljs.pprint.compile_raw_string = function(a, b) {
  return new cljs.pprint.compiled_directive(function(b, d, e) {
    cljs.pprint.print.call(null, a);
    return d;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), a], null), b, null, null, null);
};
cljs.pprint.right_bracket = function(a) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.pprint.separator_QMARK_ = function(a) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.pprint.else_separator_QMARK_ = function(a) {
  var b = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)) : b;
};
cljs.pprint.process_bracket = function(a, b) {
  var c = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), cljs.pprint.tuple_map.call(null, b, (new cljs.core.Keyword(null, "offset", 
  "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), null, null, null), c], null);
};
cljs.pprint.process_clause = function(a, b, c) {
  return cljs.pprint.consume.call(null, function(c) {
    if (cljs.core.empty_QMARK_.call(null, c)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", b);
    }
    var d = cljs.core.first.call(null, c);
    c = cljs.core.next.call(null, c);
    return cljs.core.truth_(cljs.pprint.right_bracket.call(null, d)) ? cljs.pprint.process_bracket.call(null, d, c) : cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(d))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(d), null, c], null)], null) : cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, d)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(d), c], null)], null) : cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, d)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, c], 
    null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null);
  }, c);
};
cljs.pprint.collect_clauses = function(a, b, c) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(c) {
    var d = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null);
    c = cljs.core.nth.call(null, c, 2, null);
    var g = cljs.pprint.process_clause.call(null, a, b, c);
    c = cljs.core.nth.call(null, g, 0, null);
    var h = cljs.core.nth.call(null, g, 1, null);
    g = cljs.core.nth.call(null, h, 0, null);
    var k = cljs.core.nth.call(null, h, 1, null), l = cljs.core.nth.call(null, h, 2, null);
    h = cljs.core.nth.call(null, h, 3, null);
    return cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, d, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.truth_(f) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", 
    "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), k])), h], null)], null) : cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(d)) ? cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', 
    b) : cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', b) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(d)) ? 
    cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', b) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, 
    cljs.core.concat, d, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), new cljs.core.Keyword(null, "else-params", "else-params", -832171646), l], null)), !1, h], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, 
    cljs.core.concat, d, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)], null)), !0, h], null)], null) : cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "separator", "separator", -1628749125)) ? cljs.core.truth_(f) ? cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', 
    b) : cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, d, new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)], null)), !1, h], null)], null) : null;
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), !1, c], null)));
};
cljs.pprint.process_nesting = function(a) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(a) {
    var b = cljs.core.first.call(null, a);
    a = cljs.core.next.call(null, a);
    var d = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(b));
    return cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(d)) ? cljs.pprint.process_bracket.call(null, b, a) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
  }, a));
};
cljs.pprint.compile_format = function(a) {
  var b = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = a;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(a) {
      return function(a) {
        var b = cljs.core.nth.call(null, a, 0, null);
        a = cljs.core.nth.call(null, a, 1, null);
        if (cljs.core.empty_QMARK_.call(null, b)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, b], null);
        }
        var c = b.indexOf("~");
        return 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, b, a), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", a + b.length], null)], null) : 0 === c ? cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, b, 1), a + 1) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, 
        b, 0, c), a), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, b, c), c + a], null)], null);
      };
    }(b), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = b;
  }
};
cljs.pprint.needs_pretty = function(a) {
  for (var b = a;;) {
    if (cljs.core.empty_QMARK_.call(null, b)) {
      return !1;
    }
    if (cljs.core.truth_(function() {
      var a = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, b))));
      if (cljs.core.truth_(a)) {
        return a;
      }
      a = cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, b)))));
      return cljs.core.truth_(a) ? a : cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, b)))));
    }())) {
      return !0;
    }
    b = cljs.core.next.call(null, b);
  }
};
cljs.pprint.execute_format = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = new goog.string.StringBuffer, e = cljs.core.not.call(null, a) || !0 === a ? new cljs.core.StringBufferWriter(d) : a, f = cljs.core.truth_(function() {
    var a = cljs.pprint.needs_pretty.call(null, b);
    return cljs.core.truth_(a) ? cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, e)) : a;
  }()) ? cljs.pprint.get_pretty_writer.call(null, e) : e, g = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = f;
  try {
    try {
      cljs.pprint.execute_format.call(null, b, c);
    } finally {
      e !== f && cljs.core._flush.call(null, f);
    }
    return cljs.core.not.call(null, a) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("") : !0 === a ? cljs.core.string_print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("")) : null;
  } finally {
    cljs.core._STAR_out_STAR_ = g;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.pprint.map_passing_context.call(null, function(a, b) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, b))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, b], null);
    }
    b = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), b);
    var c = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    var d = cljs.pprint.unzip_map.call(null, c);
    c = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    c = cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), b);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b, d], null))], null);
  }, b, a);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function(a, b, c) {
  return cljs.core._add_method.call(null, a, b, c);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function(a) {
  var b = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, a));
  return cljs.core.truth_(cljs.core.truth_(b) ? cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, a)) : b) ? (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, b), cljs.pprint.write_out.call(null, cljs.core.second.call(null, a)), !0) : null;
};
cljs.pprint.pprint_simple_list = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e);
            d = a;
            e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function(a) {
  return cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, a)) ? cljs.pprint.pprint_simple_list.call(null, a) : null;
};
cljs.pprint.pprint_vector = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e);
            d = a;
            e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return a.call(this, c);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e"));
}();
cljs.pprint.pprint_map = function(a) {
  var b = cljs.core.record_QMARK_.call(null, a) ? null : (new cljs.core.Var(function() {
    return cljs.core.lift_ns;
  }, new cljs.core.Symbol("cljs.core", "lift-ns", "cljs.core/lift-ns", 463499081, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "lift-ns", "lift-ns", 602311926, null), "cljs/core.cljs", 15, 1, 10104, 10104, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null)], null)), "Returns [lifted-ns lifted-map] or nil if m can't be lifted.", cljs.core.truth_(cljs.core.lift_ns) ? cljs.core.lift_ns.cljs$lang$test : null]))).call(null, a), c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  a = cljs.core.truth_(b) ? b : a;
  var d = cljs.core.truth_(c) ? ["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "{"].join("") : "{";
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    c = cljs.pprint._STAR_current_level_STAR_;
    b = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, d, null, "}");
      d = 0;
      for (var e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ += 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, e)), cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697)), cljs.pprint._STAR_current_length_STAR_ = 0, cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
              }
            }
            if (cljs.core.next.call(null, e)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              a = d + 1;
              var h = cljs.core.next.call(null, e);
              d = a;
              e = h;
              continue;
            }
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = b, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, a));
};
cljs.pprint.pprint_set = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return a.call(this, c);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e"));
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function(a) {
  var b = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, a);
  b = cljs.core.truth_(b) ? cljs.pprint.type_map.call(null, b) : null;
  return cljs.core.truth_(b) ? b : a;
};
cljs.pprint.pprint_ideref = function(a) {
  var b = ["#\x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, a).name)), "@", cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(a)), ": "].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var c = cljs.pprint._STAR_current_level_STAR_, d = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, b, null, "\x3e"), cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, b) - 2)), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697)), cljs.pprint.write_out.call(null, function() {
        var b = null != a ? a.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IPending$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, a);
        return b ? !cljs.core._realized_QMARK_.call(null, a) : b;
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, a)), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = d, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return a.call(this, c);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e"));
}();
cljs.pprint.type_dispatcher = function(a) {
  return a instanceof cljs.core.PersistentQueue ? new cljs.core.Keyword(null, "queue", "queue", 1455835879) : (null != a ? a.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IDeref$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a)) ? new cljs.core.Keyword(null, "deref", "deref", -145586795) : a instanceof cljs.core.Symbol ? 
  new cljs.core.Keyword(null, "symbol", "symbol", -1038572696) : cljs.core.seq_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "list", "list", 765357683) : cljs.core.map_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "map", "map", 1371690461) : cljs.core.vector_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "vector", "vector", 1902966158) : cljs.core.set_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "set", "set", 304602554) : null == a ? null : new cljs.core.Keyword(null, "default", 
  "default", -1987822328);
};
"undefined" === typeof cljs.pprint.simple_dispatch && (cljs.pprint.simple_dispatch = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
};
cljs.pprint.pprint_ns_reference = function(a) {
  if (cljs.core.sequential_QMARK_.call(null, a)) {
    var b = cljs.pprint.brackets.call(null, a), c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = cljs.core.seq.call(null, a), f = cljs.core.first.call(null, e), g = cljs.core.next.call(null, e);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var h = cljs.pprint._STAR_current_level_STAR_, k = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, c, null, d);
        (function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w~:i", cljs.pprint.cached_compile.call(null, "~w~:i"), h, k, b, c, d, a, e, f, g, f, g);
        })().call(null, f);
        for (var l = g;;) {
          if (cljs.core.seq.call(null, l)) {
            (function() {
              var m = cljs.pprint.cached_compile.call(null, " ");
              return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
                return function() {
                  var a = function(a) {
                    a = cljs.pprint.init_navigator.call(null, a);
                    return cljs.pprint.execute_format.call(null, c, a);
                  }, b = function(b) {
                    var c = null;
                    if (0 < arguments.length) {
                      c = 0;
                      for (var d = Array(arguments.length - 0); c < d.length;) {
                        d[c] = arguments[c + 0], ++c;
                      }
                      c = new cljs.core.IndexedSeq(d, 0, null);
                    }
                    return a.call(this, c);
                  };
                  b.cljs$lang$maxFixedArity = 0;
                  b.cljs$lang$applyTo = function(b) {
                    b = cljs.core.seq(b);
                    return a(b);
                  };
                  b.cljs$core$IFn$_invoke$arity$variadic = a;
                  return b;
                }();
              }(l, " ", m, h, k, b, c, d, a, e, f, g, f, g);
            })().call(null);
            var m = cljs.core.first.call(null, l);
            if (cljs.core.sequential_QMARK_.call(null, m)) {
              var n = cljs.pprint.brackets.call(null, m), p = cljs.core.nth.call(null, n, 0, null), q = cljs.core.nth.call(null, n, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var r = cljs.pprint._STAR_current_level_STAR_, t = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, p, null, q);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, m), 3) && cljs.core.second.call(null, m) instanceof cljs.core.Keyword) {
                    var u = m, v = cljs.core.nth.call(null, u, 0, null), w = cljs.core.nth.call(null, u, 1, null), x = cljs.core.nth.call(null, u, 2, null);
                    (function() {
                      var y = cljs.pprint.cached_compile.call(null, "~w ~w ");
                      return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, y, v, w, x, X, W, ba) {
                        return function() {
                          var a = function(a) {
                            a = cljs.pprint.init_navigator.call(null, a);
                            return cljs.pprint.execute_format.call(null, c, a);
                          }, b = function(b) {
                            var c = null;
                            if (0 < arguments.length) {
                              c = 0;
                              for (var d = Array(arguments.length - 0); c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new cljs.core.IndexedSeq(d, 0, null);
                            }
                            return a.call(this, c);
                          };
                          b.cljs$lang$maxFixedArity = 0;
                          b.cljs$lang$applyTo = function(b) {
                            b = cljs.core.seq(b);
                            return a(b);
                          };
                          b.cljs$core$IFn$_invoke$arity$variadic = a;
                          return b;
                        }();
                      }(l, "~w ~w ", y, u, v, w, x, r, t, n, p, q, m, h, k, b, c, d, a, e, f, g, f, g);
                    })().call(null, v, w);
                    cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var y = cljs.core.vector_QMARK_.call(null, x) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e", z = "string" === typeof y ? cljs.pprint.cached_compile.call(null, y) : y;
                      return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, y, v, w, x, z, ba, sa) {
                        return function() {
                          var a = function(a) {
                            a = cljs.pprint.init_navigator.call(null, a);
                            return cljs.pprint.execute_format.call(null, c, a);
                          }, b = function(b) {
                            var c = null;
                            if (0 < arguments.length) {
                              c = 0;
                              for (var d = Array(arguments.length - 0); c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new cljs.core.IndexedSeq(d, 0, null);
                            }
                            return a.call(this, c);
                          };
                          b.cljs$lang$maxFixedArity = 0;
                          b.cljs$lang$applyTo = function(b) {
                            b = cljs.core.seq(b);
                            return a(b);
                          };
                          b.cljs$core$IFn$_invoke$arity$variadic = a;
                          return b;
                        }();
                      }(l, y, z, u, v, w, x, r, t, n, p, q, m, h, k, b, c, d, a, e, f, g, f, g);
                    }().call(null, x) : cljs.pprint.write_out.call(null, x);
                  } else {
                    cljs.core.apply.call(null, function() {
                      var u = cljs.pprint.cached_compile.call(null, "~w ~:i~@{~w~^ ~:_~}");
                      return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, y, v, w) {
                        return function() {
                          var a = function(a) {
                            a = cljs.pprint.init_navigator.call(null, a);
                            return cljs.pprint.execute_format.call(null, c, a);
                          }, b = function(b) {
                            var c = null;
                            if (0 < arguments.length) {
                              c = 0;
                              for (var d = Array(arguments.length - 0); c < d.length;) {
                                d[c] = arguments[c + 0], ++c;
                              }
                              c = new cljs.core.IndexedSeq(d, 0, null);
                            }
                            return a.call(this, c);
                          };
                          b.cljs$lang$maxFixedArity = 0;
                          b.cljs$lang$applyTo = function(b) {
                            b = cljs.core.seq(b);
                            return a(b);
                          };
                          b.cljs$core$IFn$_invoke$arity$variadic = a;
                          return b;
                        }();
                      }(l, "~w ~:i~@{~w~^ ~:_~}", u, r, t, n, p, q, m, h, k, b, c, d, a, e, f, g, f, g);
                    }(), m);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = t, cljs.pprint._STAR_current_level_STAR_ = r;
                }
              }
              cljs.core.next.call(null, l) && function() {
                var r = cljs.pprint.cached_compile.call(null, "~_");
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, y) {
                  return function() {
                    var a = function(a) {
                      a = cljs.pprint.init_navigator.call(null, a);
                      return cljs.pprint.execute_format.call(null, c, a);
                    }, b = function(b) {
                      var c = null;
                      if (0 < arguments.length) {
                        c = 0;
                        for (var d = Array(arguments.length - 0); c < d.length;) {
                          d[c] = arguments[c + 0], ++c;
                        }
                        c = new cljs.core.IndexedSeq(d, 0, null);
                      }
                      return a.call(this, c);
                    };
                    b.cljs$lang$maxFixedArity = 0;
                    b.cljs$lang$applyTo = function(b) {
                      b = cljs.core.seq(b);
                      return a(b);
                    };
                    b.cljs$core$IFn$_invoke$arity$variadic = a;
                    return b;
                  }();
                }(l, "~_", r, n, p, q, m, h, k, b, c, d, a, e, f, g, f, g);
              }().call(null);
            } else {
              cljs.pprint.write_out.call(null, m), cljs.core.next.call(null, l) && function() {
                var n = cljs.pprint.cached_compile.call(null, "~:_");
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
                  return function() {
                    var a = function(a) {
                      a = cljs.pprint.init_navigator.call(null, a);
                      return cljs.pprint.execute_format.call(null, c, a);
                    }, b = function(b) {
                      var c = null;
                      if (0 < arguments.length) {
                        c = 0;
                        for (var d = Array(arguments.length - 0); c < d.length;) {
                          d[c] = arguments[c + 0], ++c;
                        }
                        c = new cljs.core.IndexedSeq(d, 0, null);
                      }
                      return a.call(this, c);
                    };
                    b.cljs$lang$maxFixedArity = 0;
                    b.cljs$lang$applyTo = function(b) {
                      b = cljs.core.seq(b);
                      return a(b);
                    };
                    b.cljs$core$IFn$_invoke$arity$variadic = a;
                    return b;
                  }();
                }(l, "~:_", n, m, h, k, b, c, d, a, e, f, g, f, g);
              }().call(null);
            }
            l = cljs.core.next.call(null, l);
          } else {
            break;
          }
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = k, cljs.pprint._STAR_current_level_STAR_ = h;
      }
    }
    return null;
  }
  return cljs.pprint.write_out.call(null, a);
};
cljs.pprint.pprint_ns = function(a) {
  if (cljs.core.next.call(null, a)) {
    var b = cljs.core.seq.call(null, a), c = cljs.core.first.call(null, b), d = cljs.core.next.call(null, b), e = cljs.core.first.call(null, d), f = cljs.core.next.call(null, d), g = "string" === typeof cljs.core.first.call(null, f) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, f), cljs.core.next.call(null, f)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, f], null), h = cljs.core.nth.call(null, 
    g, 0, null), k = cljs.core.nth.call(null, g, 1, null), l = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, k)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, k), cljs.core.next.call(null, k)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, k], null), m = cljs.core.nth.call(null, l, 0, null), n = cljs.core.nth.call(null, l, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var p = cljs.pprint._STAR_current_level_STAR_, q = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E, O) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w ~1I~@_~w", cljs.pprint.cached_compile.call(null, "~w ~1I~@_~w"), p, q, a, b, c, d, c, e, f, e, f, g, h, k, l, m, n);
        })().call(null, c, e);
        cljs.core.truth_(cljs.core.truth_(h) ? h : cljs.core.truth_(m) ? m : cljs.core.seq.call(null, n)) && function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E, O) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~@:_", cljs.pprint.cached_compile.call(null, "~@:_"), p, q, a, b, c, d, c, e, f, e, f, g, h, k, l, m, n);
        }().call(null);
        cljs.core.truth_(h) && cljs.pprint.cl_format.call(null, !0, '"~a"~:[~;~:@_~]', h, cljs.core.truth_(m) ? m : cljs.core.seq.call(null, n));
        cljs.core.truth_(m) && function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E, O) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w~:[~;~:@_~]", cljs.pprint.cached_compile.call(null, "~w~:[~;~:@_~]"), p, q, a, b, c, d, c, e, f, e, f, g, h, k, l, m, n);
        }().call(null, m, cljs.core.seq.call(null, n));
        for (var r = n;;) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, r));
          var t = cljs.core.next.call(null, r);
          if (t) {
            var u = t;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            r = u;
          } else {
            break;
          }
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = q, cljs.pprint._STAR_current_level_STAR_ = p;
      }
    }
    return null;
  }
  return cljs.pprint.write_out.call(null, a);
};
cljs.pprint.pprint_hold_first = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return a.call(this, c);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e", cljs.pprint.cached_compile.call(null, "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e"));
}();
cljs.pprint.single_defn = function(a, b) {
  return cljs.core.seq.call(null, a) ? (cljs.core.truth_(b) ? function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            c = 0;
            for (var d = Array(arguments.length - 0); c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0, null);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }(" ~_", cljs.pprint.cached_compile.call(null, " ~_"));
  }().call(null) : function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            c = 0;
            for (var d = Array(arguments.length - 0); c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0, null);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }(" ~@_", cljs.pprint.cached_compile.call(null, " ~@_"));
  }().call(null), function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            c = 0;
            for (var d = Array(arguments.length - 0); c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0, null);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }("~{~w~^ ~_~}", cljs.pprint.cached_compile.call(null, "~{~w~^ ~_~}"));
  }().call(null, a)) : null;
};
cljs.pprint.multi_defn = function(a, b) {
  return cljs.core.seq.call(null, a) ? function() {
    return function(a, b) {
      return function() {
        var a = function(a) {
          a = cljs.pprint.init_navigator.call(null, a);
          return cljs.pprint.execute_format.call(null, b, a);
        }, c = function(b) {
          var c = null;
          if (0 < arguments.length) {
            c = 0;
            for (var d = Array(arguments.length - 0); c < d.length;) {
              d[c] = arguments[c + 0], ++c;
            }
            c = new cljs.core.IndexedSeq(d, 0, null);
          }
          return a.call(this, c);
        };
        c.cljs$lang$maxFixedArity = 0;
        c.cljs$lang$applyTo = function(b) {
          b = cljs.core.seq(b);
          return a(b);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = a;
        return c;
      }();
    }(" ~_~{~w~^ ~_~}", cljs.pprint.cached_compile.call(null, " ~_~{~w~^ ~_~}"));
  }().call(null, a) : null;
};
cljs.pprint.pprint_defn = function(a) {
  if (cljs.core.next.call(null, a)) {
    var b = cljs.core.seq.call(null, a), c = cljs.core.first.call(null, b), d = cljs.core.next.call(null, b), e = cljs.core.first.call(null, d), f = cljs.core.next.call(null, d), g = "string" === typeof cljs.core.first.call(null, f) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, f), cljs.core.next.call(null, f)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, f], null), h = cljs.core.nth.call(null, 
    g, 0, null), k = cljs.core.nth.call(null, g, 1, null), l = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, k)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, k), cljs.core.next.call(null, k)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, k], null), m = cljs.core.nth.call(null, l, 0, null), n = cljs.core.nth.call(null, l, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var p = cljs.pprint._STAR_current_level_STAR_, q = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")"), function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, H, B, G, K, J) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w ~1I~@_~w", cljs.pprint.cached_compile.call(null, "~w ~1I~@_~w"), p, q, a, b, c, d, c, e, f, e, f, g, h, k, l, m, n);
        }().call(null, c, e), cljs.core.truth_(h) && function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, H, B, G, K, J) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }(" ~_~w", cljs.pprint.cached_compile.call(null, " ~_~w"), p, q, a, b, c, d, c, e, f, e, f, g, h, k, l, m, n);
        }().call(null, h), cljs.core.truth_(m) && function() {
          return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, H, B, G, K, J) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }(" ~_~w", cljs.pprint.cached_compile.call(null, " ~_~w"), p, q, a, b, c, d, c, e, f, e, f, g, h, k, l, m, n);
        }().call(null, m), cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, n)) ? cljs.pprint.single_defn.call(null, n, cljs.core.truth_(h) ? h : m) : cljs.pprint.multi_defn.call(null, n, cljs.core.truth_(h) ? h : m), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = q, cljs.pprint._STAR_current_level_STAR_ = p;
      }
    }
    return null;
  }
  return cljs.pprint.pprint_simple_code_list.call(null, a);
};
cljs.pprint.pprint_binding_form = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      for (var d = 0;;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, a)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var e = cljs.pprint._STAR_current_level_STAR_, f = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ += 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, a)), cljs.core.next.call(null, a) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, a))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = f, cljs.pprint._STAR_current_level_STAR_ = e;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, a))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var g = d + 1, h = cljs.core.next.call(null, cljs.core.rest.call(null, a));
              d = g;
              a = h;
              continue;
            }
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function(a) {
  var b = cljs.core.first.call(null, a);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var c = cljs.pprint._STAR_current_level_STAR_, d = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")"), cljs.core.next.call(null, a) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, a)) ? (function() {
        return function(a, b, c, d, k) {
          return function() {
            var a = function(a) {
              a = cljs.pprint.init_navigator.call(null, a);
              return cljs.pprint.execute_format.call(null, b, a);
            }, c = function(b) {
              var c = null;
              if (0 < arguments.length) {
                c = 0;
                for (var d = Array(arguments.length - 0); c < d.length;) {
                  d[c] = arguments[c + 0], ++c;
                }
                c = new cljs.core.IndexedSeq(d, 0, null);
              }
              return a.call(this, c);
            };
            c.cljs$lang$maxFixedArity = 0;
            c.cljs$lang$applyTo = function(b) {
              b = cljs.core.seq(b);
              return a(b);
            };
            c.cljs$core$IFn$_invoke$arity$variadic = a;
            return c;
          }();
        }("~w ~1I~@_", cljs.pprint.cached_compile.call(null, "~w ~1I~@_"), c, d, b);
      }().call(null, b), cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, a)), function() {
        return function(a, b, c, d, k) {
          return function() {
            var a = function(a) {
              a = cljs.pprint.init_navigator.call(null, a);
              return cljs.pprint.execute_format.call(null, b, a);
            }, c = function(b) {
              var c = null;
              if (0 < arguments.length) {
                c = 0;
                for (var d = Array(arguments.length - 0); c < d.length;) {
                  d[c] = arguments[c + 0], ++c;
                }
                c = new cljs.core.IndexedSeq(d, 0, null);
              }
              return a.call(this, c);
            };
            c.cljs$lang$maxFixedArity = 0;
            c.cljs$lang$applyTo = function(b) {
              b = cljs.core.seq(b);
              return a(b);
            };
            c.cljs$core$IFn$_invoke$arity$variadic = a;
            return c;
          }();
        }(" ~_~{~w~^ ~_~}", cljs.pprint.cached_compile.call(null, " ~_~{~w~^ ~_~}"), c, d, b);
      }().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, a)))) : cljs.pprint.pprint_simple_code_list.call(null, a), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = d, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  return function(a, b) {
    return function() {
      var a = function(a) {
        a = cljs.pprint.init_navigator.call(null, a);
        return cljs.pprint.execute_format.call(null, b, a);
      }, d = function(b) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return a.call(this, c);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(b) {
        b = cljs.core.seq(b);
        return a(b);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = a;
      return d;
    }();
  }("~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e", cljs.pprint.cached_compile.call(null, "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e"));
}();
cljs.pprint.pprint_cond = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, a));
      if (cljs.core.next.call(null, a)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        for (var d = 0, e = cljs.core.next.call(null, a);;) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
            if (e) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, e))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                a = d + 1;
                var h = cljs.core.next.call(null, cljs.core.rest.call(null, e));
                d = a;
                e = h;
                continue;
              }
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function(a) {
  if (3 < cljs.core.count.call(null, a)) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          return function(a, b, c, d) {
            return function() {
              var a = function(a) {
                a = cljs.pprint.init_navigator.call(null, a);
                return cljs.pprint.execute_format.call(null, b, a);
              }, c = function(b) {
                var c = null;
                if (0 < arguments.length) {
                  c = 0;
                  for (var d = Array(arguments.length - 0); c < d.length;) {
                    d[c] = arguments[c + 0], ++c;
                  }
                  c = new cljs.core.IndexedSeq(d, 0, null);
                }
                return a.call(this, c);
              };
              c.cljs$lang$maxFixedArity = 0;
              c.cljs$lang$applyTo = function(b) {
                b = cljs.core.seq(b);
                return a(b);
              };
              c.cljs$core$IFn$_invoke$arity$variadic = a;
              return c;
            }();
          }("~w ~@_~w ~@_~w ~_", cljs.pprint.cached_compile.call(null, "~w ~@_~w ~@_~w ~_"), b, c);
        }(), a);
        for (var d = 0, e = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, a));;) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
            if (e) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, e))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                a = d + 1;
                var h = cljs.core.next.call(null, cljs.core.rest.call(null, e));
                d = a;
                e = h;
                continue;
              }
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
      }
    }
    return null;
  }
  return cljs.pprint.pprint_simple_code_list.call(null, a);
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function(a) {
  var b = cljs.core.second.call(null, a), c = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, a)));
  if (cljs.core.vector_QMARK_.call(null, b)) {
    var d = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, b)) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first.call(null, b), "%"]) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a, b, c) {
      return function(a, b) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, [cljs.core.str.cljs$core$IFn$_invoke$arity$1("%"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")], null);
      };
    }(d, b, c), b, cljs.core.range.call(null, 1, cljs.core.count.call(null, b) + 1)));
    try {
      return function() {
        return function(a, b, c, d, k) {
          return function() {
            var a = function(a) {
              a = cljs.pprint.init_navigator.call(null, a);
              return cljs.pprint.execute_format.call(null, b, a);
            }, c = function(b) {
              var c = null;
              if (0 < arguments.length) {
                c = 0;
                for (var d = Array(arguments.length - 0); c < d.length;) {
                  d[c] = arguments[c + 0], ++c;
                }
                c = new cljs.core.IndexedSeq(d, 0, null);
              }
              return a.call(this, c);
            };
            c.cljs$lang$maxFixedArity = 0;
            c.cljs$lang$applyTo = function(b) {
              b = cljs.core.seq(b);
              return a(b);
            };
            c.cljs$core$IFn$_invoke$arity$variadic = a;
            return c;
          }();
        }("~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e", cljs.pprint.cached_compile.call(null, "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e"), d, b, c);
      }().call(null, c);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = d;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, a);
  }
};
cljs.pprint.pprint_simple_code_list = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e);
            d = a;
            e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.two_forms = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    return function d(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var c = cljs.core.seq.call(null, a);
          if (c) {
            if (cljs.core.chunked_seq_QMARK_.call(null, c)) {
              var f = cljs.core.chunk_first.call(null, c), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var l = cljs.core._nth.call(null, f, k);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, l))), cljs.core.second.call(null, l)], null)], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, c))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            h = cljs.core.first.call(null, c);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, h))), cljs.core.second.call(null, h)], null)], null), d.call(null, cljs.core.rest.call(null, c)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }()));
};
cljs.pprint.add_core_ns = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null), e = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.not.call(null, function() {
        var a = cljs.core.namespace.call(null, c);
        return cljs.core.truth_(a) ? a : cljs.core.special_symbol_QMARK_.call(null, c);
      }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, a, cljs.core.name.call(null, c)), e], null) : b;
    };
  }("clojure.core"), a));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function(a) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, a))) {
    var b = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, a));
    return cljs.core.truth_(b) ? b.call(null, a) : cljs.pprint.pprint_simple_code_list.call(null, a);
  }
  return null;
};
cljs.pprint.pprint_code_symbol = function(a) {
  var b = a.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  return cljs.core.truth_(b) ? cljs.pprint.print.call(null, b) : cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint.print.call(null, cljs.core.name.call(null, a)) : cljs.pprint.pr.call(null, a);
};
"undefined" === typeof cljs.pprint.code_dispatch && (cljs.pprint.code_dispatch = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function(a, b) {
  a -= cljs.core.count.call(null, b);
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, 0 > a ? 0 : a, " ")), b);
};
cljs.pprint.print_table = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, b)) {
      var d = cljs.core.map.call(null, function(a) {
        return function(c) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("")), cljs.core.map.call(null, function(a) {
            return function(a) {
              return cljs.core.count.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, a, c))].join(""));
            };
          }(a), b));
        };
      }(c), a), e = cljs.core.map.call(null, function(a, b) {
        return function(a) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, a, "-"));
        };
      }(d, c), d), f = function(b, c, d) {
        return function(e, f, g, h) {
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, f, function() {
            var e = function(a, b, c) {
              return function D(d) {
                return new cljs.core.LazySeq(null, function(a, b, c) {
                  return function() {
                    for (;;) {
                      var a = cljs.core.seq.call(null, d);
                      if (a) {
                        if (cljs.core.chunked_seq_QMARK_.call(null, a)) {
                          var b = cljs.core.chunk_first.call(null, a), c = cljs.core.count.call(null, b), e = cljs.core.chunk_buffer.call(null, c);
                          a: {
                            for (var f = 0;;) {
                              if (f < c) {
                                var g = cljs.core._nth.call(null, b, f), h = cljs.core.nth.call(null, g, 0, null);
                                g = cljs.core.nth.call(null, g, 1, null);
                                cljs.core.chunk_append.call(null, e, cljs.pprint.add_padding.call(null, g, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join("")));
                                f += 1;
                              } else {
                                b = !0;
                                break a;
                              }
                            }
                          }
                          return b ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, e), D.call(null, cljs.core.chunk_rest.call(null, a))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, e), null);
                        }
                        b = cljs.core.first.call(null, a);
                        e = cljs.core.nth.call(null, b, 0, null);
                        b = cljs.core.nth.call(null, b, 1, null);
                        return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, b, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join("")), D.call(null, cljs.core.rest.call(null, a)));
                      }
                      return null;
                    }
                  };
                }(a, b, c), null, null);
              };
            }(b, c, d);
            return e.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(a, b, c, d) {
              return function(a) {
                return cljs.core.get.call(null, h, a);
              };
            }(e, b, c, d), a), b));
          }()))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)].join("");
        };
      }(d, e, c);
      cljs.core.println.call(null);
      cljs.core.println.call(null, f.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, a, a)));
      cljs.core.println.call(null, f.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, a, e)));
      var g = cljs.core.seq.call(null, b);
      d = null;
      for (var h = e = 0;;) {
        if (h < e) {
          var k = cljs.core._nth.call(null, d, h);
          cljs.core.println.call(null, f.call(null, "| ", " | ", " |", k));
          h += 1;
        } else {
          var l = cljs.core.seq.call(null, g);
          if (l) {
            var m = l;
            if (cljs.core.chunked_seq_QMARK_.call(null, m)) {
              var n = cljs.core.chunk_first.call(null, m), p = cljs.core.chunk_rest.call(null, m);
              m = n;
              var q = cljs.core.count.call(null, n);
              g = p;
              d = m;
              e = q;
            } else {
              k = cljs.core.first.call(null, m), cljs.core.println.call(null, f.call(null, "| ", " | ", " |", k)), g = cljs.core.next.call(null, m), d = null, e = 0;
            }
            h = 0;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = c;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, a)), a);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.string.format = function(a, b) {
  var c = Array.prototype.slice.call(arguments), d = c.shift();
  if ("undefined" == typeof d) {
    throw Error("[goog.string.format] Template required");
  }
  return d.replace(/%([0\- \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g, function(a, b, d, h, k, l, m, n) {
    if ("%" == l) {
      return "%";
    }
    var e = c.shift();
    if ("undefined" == typeof e) {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = e;
    return goog.string.format.demuxes_[l].apply(null, arguments);
  });
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_.s = function(a, b, c, d, e, f, g, h) {
  return isNaN(c) || "" == c || a.length >= Number(c) ? a : a = -1 < b.indexOf("-", 0) ? a + goog.string.repeat(" ", Number(c) - a.length) : goog.string.repeat(" ", Number(c) - a.length) + a;
};
goog.string.format.demuxes_.f = function(a, b, c, d, e, f, g, h) {
  d = a.toString();
  isNaN(e) || "" == e || (d = parseFloat(a).toFixed(e));
  f = 0 > Number(a) ? "-" : 0 <= b.indexOf("+") ? "+" : 0 <= b.indexOf(" ") ? " " : "";
  0 <= Number(a) && (d = f + d);
  if (isNaN(c) || d.length >= Number(c)) {
    return d;
  }
  d = isNaN(e) ? Math.abs(Number(a)).toString() : Math.abs(Number(a)).toFixed(e);
  a = Number(c) - d.length - f.length;
  0 <= b.indexOf("-", 0) ? d = f + d + goog.string.repeat(" ", a) : (b = 0 <= b.indexOf("0", 0) ? "0" : " ", d = f + goog.string.repeat(b, a) + d);
  return d;
};
goog.string.format.demuxes_.d = function(a, b, c, d, e, f, g, h) {
  return goog.string.format.demuxes_.f(parseInt(a, 10), b, c, d, 0, f, g, h);
};
goog.string.format.demuxes_.i = goog.string.format.demuxes_.d;
goog.string.format.demuxes_.u = goog.string.format.demuxes_.d;
cljs_node_io.protocols = {};
cljs_node_io.protocols.Coercions = function() {
};
cljs_node_io.protocols.as_file = function(a) {
  if (null != a && null != a.cljs_node_io$protocols$Coercions$as_file$arity$1) {
    return a.cljs_node_io$protocols$Coercions$as_file$arity$1(a);
  }
  var b = cljs_node_io.protocols.as_file[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs_node_io.protocols.as_file._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Coercions.as-file", a);
};
cljs_node_io.protocols.as_url = function(a) {
  if (null != a && null != a.cljs_node_io$protocols$Coercions$as_url$arity$1) {
    return a.cljs_node_io$protocols$Coercions$as_url$arity$1(a);
  }
  var b = cljs_node_io.protocols.as_url[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs_node_io.protocols.as_url._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Coercions.as-url", a);
};
cljs_node_io.protocols.IOFactory = function() {
};
cljs_node_io.protocols.make_reader = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_reader$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_reader$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_reader[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_reader._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-reader", a);
};
cljs_node_io.protocols.make_writer = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_writer$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_writer$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_writer[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_writer._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-writer", a);
};
cljs_node_io.protocols.make_input_stream = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_input_stream[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_input_stream._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-input-stream", a);
};
cljs_node_io.protocols.make_output_stream = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_output_stream[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_output_stream._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-output-stream", a);
};
cljs_node_io.protocols.IFile = function() {
};
cljs_node_io.protocols.IInputStream = function() {
};
cljs_node_io.protocols.IOutputStream = function() {
};
cljs_node_io.protocols.IChildProcess = function() {
};
cljs_node_io.streams = {};
cljs_node_io.streams.fs = require("fs");
cljs_node_io.streams.stream = require("stream");
cljs_node_io.streams.input_IOF_BANG_ = function(a) {
  a.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an OutputStream."].join(""));
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an OutputStream."].join(""));
    };
  }(a);
  return a;
};
cljs_node_io.streams.output_IOF_BANG_ = function(a) {
  a.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an InputStream."].join(""));
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an InputStream."].join(""));
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  return a;
};
cljs_node_io.streams.duplex_IOF_BANG_ = function(a) {
  a.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  return a;
};
cljs_node_io.streams.ReadableStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least a :read k-v pair\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "read", "read", 1140058661)))) {
    throw Error("Assert failed: you must supply an internal :read function when creating a read stream\n(fn? (get opts :read))");
  }
  return cljs_node_io.streams.input_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Readable(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.WritableStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least a :write k-v pair\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "write", "write", -1857649168)))) {
    throw Error("Assert failed: you must supply an internal :write function when creating writable streams\n(fn? (get opts :write))");
  }
  return cljs_node_io.streams.output_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Writable(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.DuplexStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least :read \x26 :write fns\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "read", "read", 1140058661))) || !cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "write", "write", -1857649168)))) {
    throw Error("Assert failed: you must supply :read \x26 :write fns when creating duplex streams.\n(and (fn? (get opts :read)) (fn? (get opts :write)))");
  }
  return cljs_node_io.streams.duplex_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Duplex(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.TransformStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least a :transform fn\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "transform", "transform", 1381301764)))) {
    throw Error("Assert failed: you must supply a :transform fn when creating a transform stream.\n(fn? (get opts :transform))");
  }
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "flush", "flush", -1138711199));
  b = cljs.core.truth_(b) ? cljs.core.fn_QMARK_.call(null, b) : !0;
  if (!b) {
    throw Error("Assert failed: :flush must be a fn\n(if-let [flush (get opts :flush)] (fn? flush) true)");
  }
  return cljs_node_io.streams.duplex_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Transform(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.BufferReadStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.BufferReadStream.call(null, a, null);
};
cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(Buffer.isBuffer(a))) {
    throw Error("Assert failed: source must be a Buffer instance\n(js/Buffer.isBuffer source)");
  }
  var c = function(b, c) {
    return function(d) {
      if (cljs.core.deref.call(null, b) < c) {
        var e = a.slice(cljs.core.deref.call(null, b), cljs.core.deref.call(null, b) + d);
        this.push(e);
        return cljs.core.swap_BANG_.call(null, b, cljs.core._PLUS_, d);
      }
      return this.push(null);
    };
  }(cljs.core.atom.call(null, 0), a.length);
  b = cljs_node_io.streams.ReadableStream.call(null, cljs.core.merge.call(null, b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "read", "read", 1140058661), c], null)));
  return cljs_node_io.streams.input_IOF_BANG_.call(null, b);
};
cljs_node_io.streams.BufferReadStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.streams.BufferWriteStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.BufferWriteStream.call(null, a, null);
};
cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = [], d = cljs.core.atom.call(null, null), e = function(a, b) {
    return function(b, c, d) {
      a.push(b);
      return d.call(null);
    };
  }(c, d);
  b = cljs_node_io.streams.WritableStream.call(null, cljs.core.merge.call(null, b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "write", "write", -1857649168), e], null)));
  var f = b.buf = c, g = b.on("finish", function(b, c, d, e, f) {
    return function() {
      var d = Buffer.concat(b);
      cljs.core.reset_BANG_.call(null, c, d);
      return a.call(null, d);
    };
  }(c, d, e, b, f)), h = cljs_node_io.streams.output_IOF_BANG_.call(null, b);
  h.toString = function(a, b, c, d, e, f, g) {
    return function() {
      return cljs.core.truth_(cljs.core.deref.call(null, c)) ? cljs.core.deref.call(null, c).toString() : null;
    };
  }(h, c, d, e, b, f, g);
  h.toBuffer = function(a, b, c, d, e, f, g) {
    return function() {
      return cljs.core.deref.call(null, c);
    };
  }(h, c, d, e, b, f, g);
  return h;
};
cljs_node_io.streams.BufferWriteStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.streams.fd_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, a, a >>> 0);
};
cljs_node_io.streams.filepath = function(a, b, c) {
  var d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "fd", "fd", -1524403000));
  if (cljs_node_io.streams.fd_QMARK_.call(null, d)) {
    return null;
  }
  if ("string" === typeof a) {
    return a;
  }
  d = (d = null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IFile$ ? !0 : !1 : !1) ? d : cljs.core._EQ_.call(null, goog.Uri, cljs.core.type.call(null, a));
  if (d) {
    return a.getPath();
  }
  throw new TypeError(["Unrecognized path configuration passed to File", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "Stream constructor.\n    You passed ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, b)), "\n    You must pass a [pathstring opts], [uri opts], [file opts], or include :fd in opts ."].join(""));
};
cljs_node_io.streams.FileInputStream_STAR_ = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "flags", "flags", 1775418075)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)), f = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "fd", "fd", -1524403000)), g = cljs.core.get.call(null, c, new cljs.core.Keyword(null, 
  "mode", "mode", 654403691)), h = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "autoClose?", "autoClose?", 375814080)), k = {encoding:cljs.core.truth_(e) ? e : null, flags:cljs.core.truth_(d) ? d : "r", fd:cljs.core.truth_(f) ? f : null, mode:cljs.core.truth_(g) ? g : 438, autoClose:cljs.core.truth_(h) ? h : !0};
  a = cljs_node_io.streams.fs.createReadStream(a, k);
  var l = cljs.core.atom.call(null, null), m = a.on("open", function(a, b, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core.reset_BANG_.call(null, l, a);
    };
  }(b, c, d, e, f, g, h, k, a, l));
  a.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs$core$IEquiv$_equiv$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, F) {
    return function(a, b) {
      return cljs.core._EQ_.call(null, cljs.core.type.call(null, this), cljs.core.type.call(null, b)) && cljs.core._EQ_.call(null, this.path, b.path);
    };
  }(a, b, c, d, e, f, g, h, k, a, l, m);
  a.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c, d, e, f, g, h, k, l, m, F) {
    return function(a, b, c) {
      cljs.core._write.call(null, b, "#object [FileInputStream");
      return cljs.core._write.call(null, b, ["  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.path), "]"].join(""));
    };
  }(a, b, c, d, e, f, g, h, k, a, l, m);
  a.getFd = function(a, b, c, d, e, f, g, h, k, l, m, F) {
    return function() {
      return cljs.core.deref.call(null, m);
    };
  }(a, b, c, d, e, f, g, h, k, a, l, m);
  return cljs_node_io.streams.input_IOF_BANG_.call(null, a);
};
cljs_node_io.streams.FileInputStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.FileInputStream.call(null, a, null);
};
cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileInputStream_STAR_.call(null, cljs_node_io.streams.filepath.call(null, a, b, "Input"), b);
};
cljs_node_io.streams.FileInputStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.streams.FileOutputStream_STAR_ = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "append", "append", -291298229)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "flags", "flags", 1775418075)), f = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)), g = cljs.core.get.call(null, c, new cljs.core.Keyword(null, 
  "mode", "mode", 654403691)), h = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "fd", "fd", -1524403000)), k = {defaultEncoding:cljs.core.truth_(f) ? f : "utf8", flags:cljs.core.truth_(e) ? e : cljs.core.truth_(d) ? "a" : "w", fd:cljs.core.truth_(h) ? h : null, mode:cljs.core.truth_(g) ? g : 438};
  a = cljs_node_io.streams.fs.createWriteStream(a, k);
  var l = cljs.core.atom.call(null, null), m = a.on("open", function(a, b, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core.reset_BANG_.call(null, l, a);
    };
  }(b, c, d, e, f, g, h, k, a, l));
  a.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs$core$IEquiv$_equiv$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, F) {
    return function(a, b) {
      return cljs.core._EQ_.call(null, cljs.core.type.call(null, this), cljs.core.type.call(null, b)) && cljs.core._EQ_.call(null, this.path, b.path);
    };
  }(a, b, c, d, e, f, g, h, k, a, l, m);
  a.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c, d, e, f, g, h, k, l, m, F) {
    return function(a, b, c) {
      cljs.core._write.call(null, b, "#object [FileOutputStream");
      return cljs.core._write.call(null, b, ["  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.path), "]"].join(""));
    };
  }(a, b, c, d, e, f, g, h, k, a, l, m);
  a.getFd = function(a, b, c, d, e, f, g, h, k, l, m, F) {
    return function() {
      return cljs.core.deref.call(null, m);
    };
  }(a, b, c, d, e, f, g, h, k, a, l, m);
  return cljs_node_io.streams.output_IOF_BANG_.call(null, a);
};
cljs_node_io.streams.FileOutputStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.FileOutputStream.call(null, a, null);
};
cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileOutputStream_STAR_.call(null, cljs_node_io.streams.filepath.call(null, a, b, "Output"), b);
};
cljs_node_io.streams.FileOutputStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.file = {};
cljs_node_io.file.setReadable_STAR_ = function(a, b, c) {
  var d = cljs.core._EQ_;
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null);
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !0], null), b))) {
    return a | 256;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !0], null), b))) {
    return a & -257;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !1], null), b))) {
    return a | 292;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !1], null), b))) {
    return a & -293;
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs_node_io.file.setReadable = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.file.setReadable.call(null, a, b, !0);
};
cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs_node_io.fs.permissions.call(null, cljs_node_io.fs.stat.call(null, a));
  b = cljs_node_io.file.setReadable_STAR_.call(null, d, b, c);
  return cljs_node_io.fs.chmod.call(null, a, b);
};
cljs_node_io.file.setReadable.cljs$lang$maxFixedArity = 3;
cljs_node_io.file.setWritable_STAR_ = function(a, b, c) {
  var d = cljs.core._EQ_;
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null);
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !0], null), b))) {
    return a | 128;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !0], null), b))) {
    return a & -129;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !1], null), b))) {
    return a | 146;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !1], null), b))) {
    return a & -147;
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs_node_io.file.setWritable = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.file.setWritable.call(null, a, b, !0);
};
cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs_node_io.fs.permissions.call(null, cljs_node_io.fs.stat.call(null, a));
  b = cljs_node_io.file.setWritable_STAR_.call(null, d, b, c);
  return cljs_node_io.fs.chmod.call(null, a, b);
};
cljs_node_io.file.setWritable.cljs$lang$maxFixedArity = 3;
cljs_node_io.file.setExecutable_STAR_ = function(a, b, c) {
  var d = cljs.core._EQ_;
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null);
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !0], null), b))) {
    return a | 64;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !0], null), b))) {
    return a & -65;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !1], null), b))) {
    return a | 73;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !1], null), b))) {
    return a & -74;
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs_node_io.file.setExecutable = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.file.setExecutable.call(null, a, b, !0);
};
cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs_node_io.fs.permissions.call(null, cljs_node_io.fs.stat.call(null, a));
  b = cljs_node_io.file.setExecutable_STAR_.call(null, d, b, c);
  return cljs_node_io.fs.chmod.call(null, a, b);
};
cljs_node_io.file.setExecutable.cljs$lang$maxFixedArity = 3;
cljs_node_io.file.get_non_dirs = function(a) {
  return cljs.core.reverse.call(null, cljs.core.take_while.call(null, cljs.core.complement.call(null, cljs_node_io.fs.dir_QMARK_), cljs.core.iterate.call(null, cljs_node_io.fs.dirname, a)));
};
cljs_node_io.file.File = function(a) {
  this.pathstring = a;
  this.cljs$lang$protocol_mask$partition0$ = 2149580800;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IFile$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.file.File.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  a = cljs.core.juxt.call(null, function(a) {
    return function(a) {
      return a.getPath;
    };
  }(this), cljs.core.type);
  return cljs.core._EQ_.call(null, a.call(null, this), a.call(null, b));
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$as_file$arity$1 = function(a) {
  return this;
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$as_url$arity$1 = function(a) {
  return this.to_url();
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.make_input_stream.call(null, this, b), b);
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.make_output_stream.call(null, this, b), b);
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileInputStream.call(null, this, b);
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileOutputStream.call(null, this, b);
};
cljs_node_io.file.File.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write.call(null, b, "#object [cljs-node-io.File");
  return cljs.core._write.call(null, b, ["  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.getPath()), " ]"].join(""));
};
cljs_node_io.file.File.prototype.canExecute = function() {
  return cljs_node_io.fs.executable_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.isDirectory = function() {
  return cljs_node_io.fs.dir_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.getParent = function() {
  return cljs_node_io.fs.dirname.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.setReadable = function() {
  var a = null, b = function(a) {
    return cljs_node_io.file.setReadable.call(null, this.pathstring, a);
  }, c = function(a, b) {
    return cljs_node_io.file.setReadable.call(null, this.pathstring, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs_node_io.file.File.prototype.canWrite = function() {
  return cljs_node_io.fs.writable_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.stats = function() {
  return cljs_node_io.fs.stat__GT_clj.call(null, cljs_node_io.fs.stat.call(null, this.pathstring));
};
cljs_node_io.file.File.prototype.getName = function() {
  return cljs_node_io.fs.basename.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.exists = function() {
  return cljs_node_io.fs.fexists_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.setLastModified = function(a) {
  return cljs_node_io.fs.utimes.call(null, this.pathstring, a, a);
};
cljs_node_io.file.File.prototype.canRead = function() {
  return cljs_node_io.fs.readable_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.createNewFile = function() {
  try {
    return this.write("", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "flags", "flags", 1775418075), "wx"], null)), !0;
  } catch (a) {
    if (a instanceof Error) {
      return !1;
    }
    throw a;
  }
};
cljs_node_io.file.File.prototype.isAbsolute = function() {
  return cljs_node_io.fs.absolute_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.read = function() {
  var a = null, b = function() {
    return cljs_node_io.fs.readFile.call(null, this.pathstring, "utf8");
  }, c = function(a) {
    return cljs_node_io.fs.readFile.call(null, this.pathstring, a);
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.listFiles = function() {
  var a = null, b = function() {
    var a = this;
    return cljs.core.mapv.call(null, function(b) {
      return function(b) {
        return new cljs_node_io.file.File([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.pathstring), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_node_io.fs.sep), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
      };
    }(this), this.list());
  }, c = function(a) {
    var b = this.listFiles();
    return cljs.core.truth_(b) ? cljs.core.filterv.call(null, cljs.core.partial.call(null, a, this.pathstring), b) : null;
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.mkdir = function() {
  try {
    return cljs_node_io.fs.mkdir.call(null, this.pathstring), !0;
  } catch (a) {
    if (a instanceof Error) {
      return !1;
    }
    throw a;
  }
};
cljs_node_io.file.File.prototype.isFile = function() {
  return cljs_node_io.fs.file_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.toURI = function() {
  return new goog.Uri(["file:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.pathstring)].join(""));
};
cljs_node_io.file.File.prototype.mkdirs = function() {
  var a = this.getPath();
  a = cljs_node_io.file.get_non_dirs.call(null, a);
  try {
    var b = cljs.core.seq.call(null, a);
    a = null;
    for (var c = 0, d = 0;;) {
      if (d < c) {
        var e = cljs.core._nth.call(null, a, d);
        cljs_node_io.fs.mkdir.call(null, e);
        d += 1;
      } else {
        var f = cljs.core.seq.call(null, b);
        if (f) {
          var g = f;
          if (cljs.core.chunked_seq_QMARK_.call(null, g)) {
            var h = cljs.core.chunk_first.call(null, g), k = cljs.core.chunk_rest.call(null, g);
            g = h;
            var l = cljs.core.count.call(null, h);
            b = k;
            a = g;
            c = l;
          } else {
            var m = cljs.core.first.call(null, g);
            cljs_node_io.fs.mkdir.call(null, m);
            b = cljs.core.next.call(null, g);
            a = null;
            c = 0;
          }
          d = 0;
        } else {
          break;
        }
      }
    }
    return !0;
  } catch (n) {
    if (n instanceof Error) {
      return !1;
    }
    throw n;
  }
};
cljs_node_io.file.File.prototype.setReadOnly = function() {
  return this.setWritable(!1, !1);
};
cljs_node_io.file.File.prototype.getCanonicalFile = function() {
  return new cljs_node_io.file.File(this.getCanonicalPath());
};
cljs_node_io.file.File.prototype.getAbsoluteFile = function() {
  return new cljs_node_io.file.File(this.getAbsolutePath());
};
cljs_node_io.file.File.prototype.getExt = function() {
  return cljs_node_io.fs.ext.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.delete = function() {
  try {
    return cljs_node_io.fs.rm.call(null, this.pathstring), !0;
  } catch (a) {
    if (a instanceof Error) {
      return !1;
    }
    throw a;
  }
};
cljs_node_io.file.File.prototype.getPath = function() {
  return this.pathstring;
};
cljs_node_io.file.File.prototype.toString = function() {
  return this.pathstring;
};
cljs_node_io.file.File.prototype.equals = function(a) {
  return cljs.core._EQ_.call(null, this, a);
};
cljs_node_io.file.File.prototype.aread = function() {
  var a = null, b = function() {
    return cljs_node_io.fs.areadFile.call(null, this.pathstring, "utf8");
  }, c = function(a) {
    return cljs_node_io.fs.areadFile.call(null, this.pathstring, a);
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.write = function(a, b) {
  return cljs_node_io.fs.writeFile.call(null, this.pathstring, a, b);
};
cljs_node_io.file.File.prototype.renameTo = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: destination must be a string\n(string? dest)");
  }
  try {
    return cljs_node_io.fs.rename.call(null, this.pathstring, a), cljs_node_io.fs.unlink.call(null, this.pathstring), this.pathstring = a, !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.file.File.prototype.deleteOnExit = function() {
  return process.on("exit", function(a) {
    return function(b) {
      return a.delete();
    };
  }(this));
};
cljs_node_io.file.File.prototype.setExecutable = function() {
  var a = null, b = function(a) {
    return cljs_node_io.file.setExecutable.call(null, this.pathstring, a);
  }, c = function(a, b) {
    return cljs_node_io.file.setExecutable.call(null, this.pathstring, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs_node_io.file.File.prototype.hashCode = function() {
  return cljs.core.hash.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.lastModified = function() {
  try {
    var a = cljs_node_io.fs.stat.call(null, this.pathstring);
  } catch (b) {
    if (b instanceof Error) {
      a = !1;
    } else {
      throw b;
    }
  }
  return cljs.core.truth_(a) ? a.mtime.valueOf() : 0;
};
cljs_node_io.file.File.prototype.setWritable = function() {
  var a = null, b = function(a) {
    return cljs_node_io.file.setWritable.call(null, this.pathstring, a);
  }, c = function(a, b) {
    return cljs_node_io.file.setWritable.call(null, this.pathstring, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs_node_io.file.File.prototype.list = function() {
  var a = null, b = function() {
    if (cljs_node_io.fs.dir_QMARK_.call(null, this.pathstring)) {
      try {
        return cljs_node_io.fs.readdir.call(null, this.pathstring);
      } catch (d) {
        if (d instanceof Error) {
          return null;
        }
        throw d;
      }
    } else {
      return null;
    }
  }, c = function(a) {
    var b = this.list();
    return cljs.core.truth_(b) ? cljs.core.filterv.call(null, cljs.core.partial.call(null, a, this.pathstring), b) : null;
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.length = function() {
  try {
    var a = cljs_node_io.fs.stat.call(null, this.pathstring);
  } catch (b) {
    if (b instanceof Error) {
      a = !1;
    } else {
      throw b;
    }
  }
  return cljs.core.truth_(a) ? cljs.core.truth_(a.isDirectory()) ? null : a.size : 0;
};
cljs_node_io.file.File.prototype.getAbsolutePath = function() {
  return cljs_node_io.fs.realpath.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.getCanonicalPath = function() {
  return cljs_node_io.fs.normalize_path.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.awrite = function(a, b) {
  return cljs_node_io.fs.awriteFile.call(null, this.pathstring, a, b);
};
cljs_node_io.file.File.prototype.getParentFile = function() {
  return new cljs_node_io.file.File(this.getParent());
};
cljs_node_io.file.File.prototype.isHidden = function() {
  return cljs_node_io.fs.hidden_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pathstring", "pathstring", -647531094, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs_node_io.file.File.cljs$lang$type = !0;
cljs_node_io.file.File.cljs$lang$ctorStr = "cljs-node-io.file/File";
cljs_node_io.file.File.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs-node-io.file/File");
};
cljs_node_io.file.__GT_File = function(a) {
  return new cljs_node_io.file.File(a);
};
cljs_node_io.core = {};
cljs_node_io.core.path = require("path");
Buffer.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Buffer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  try {
    return this.equals(b);
  } catch (c) {
    if (c instanceof Error) {
      return !1;
    }
    throw c;
  }
};
cljs_node_io.core.filepath = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.core.filepath.call(null, a, null);
};
cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._EQ_, d = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, a), cljs.core.type.call(null, b)], null);
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [goog.Uri, null], null), d))) {
    return a.getPath();
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String, null], null), d))) {
    return a;
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String, String], null), d))) {
    return cljs_node_io.core.path.join.call(null, a, b);
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_node_io.file.File, String], null), d))) {
    return cljs_node_io.core.path.join.call(null, a.getPath(), b);
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.Keyword(null, "else", "else", -1508377146), d))) {
    throw new TypeError(["Unrecognized path configuration passed to File constructor.\nYou passed ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, b)), "\nYou must pass a [string], [uri], [string string], or [file string]."].join(""));
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
};
cljs_node_io.core.filepath.cljs$lang$maxFixedArity = 2;
goog.object.set(cljs_node_io.protocols.Coercions, "null", !0);
goog.object.set(cljs_node_io.protocols.as_file, "null", function(a) {
  return null;
});
goog.object.set(cljs_node_io.protocols.as_url, "null", function(a) {
  return null;
});
goog.object.set(cljs_node_io.protocols.Coercions, "string", !0);
goog.object.set(cljs_node_io.protocols.as_file, "string", function(a) {
  return new cljs_node_io.file.File(cljs_node_io.core.filepath.call(null, a));
});
goog.object.set(cljs_node_io.protocols.as_url, "string", function(a) {
  return (new goog.Uri(a)).getPath();
});
goog.Uri.prototype.cljs_node_io$protocols$Coercions$ = cljs.core.PROTOCOL_SENTINEL;
goog.Uri.prototype.cljs_node_io$protocols$Coercions$as_url$arity$1 = function(a) {
  return this.getPath();
};
goog.Uri.prototype.cljs_node_io$protocols$Coercions$as_file$arity$1 = function(a) {
  if (cljs.core._EQ_.call(null, "file", this.getScheme())) {
    return cljs_node_io.protocols.as_file.call(null, this.getPath());
  }
  throw Error(["IllegalArgumentException : Not a file: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this)].join(""));
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.make_input_stream.call(null, this, b), b);
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.make_output_stream.call(null, this, b), b);
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_input_stream.call(null, cljs.core._EQ_.call(null, "file", this.getScheme()) ? cljs_node_io.streams.FileInputStream.call(null, cljs_node_io.protocols.as_file.call(null, this)) : this.openStream(), b);
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a, b) {
  if (cljs.core._EQ_.call(null, "file", this.getScheme())) {
    return cljs_node_io.protocols.make_output_stream.call(null, cljs_node_io.protocols.as_file.call(null, this), b);
  }
  throw Error(["IllegalArgumentException: Can not write to non-file URL \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), "\x3e"].join(""));
};
goog.object.set(cljs_node_io.protocols.IOFactory, "string", !0);
goog.object.set(cljs_node_io.protocols.make_reader, "string", function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.as_file.call(null, a), b);
});
goog.object.set(cljs_node_io.protocols.make_writer, "string", function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.as_file.call(null, a), b);
});
goog.object.set(cljs_node_io.protocols.make_input_stream, "string", function(a, b) {
  try {
    return cljs_node_io.protocols.make_input_stream.call(null, new goog.Uri(a), b);
  } catch (c) {
    if (c instanceof Error) {
      return cljs_node_io.protocols.make_input_stream.call(null, new cljs_node_io.file.File(a), b);
    }
    throw c;
  }
});
goog.object.set(cljs_node_io.protocols.make_output_stream, "string", function(a, b) {
  try {
    return cljs_node_io.protocols.make_output_stream.call(null, new goog.Uri(a), b);
  } catch (c) {
    if (c instanceof Error) {
      return cljs_node_io.protocols.make_output_stream.call(null, new cljs_node_io.file.File(a), b);
    }
    throw c;
  }
});
Buffer.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.make_input_stream.call(null, this, b), b);
};
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a, b) {
  return cljs_node_io.streams.BufferReadStream.call(null, this, b);
};
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.make_output_stream.call(null, this, b), b);
};
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a, b) {
  throw Error(["IllegalArgumentException : Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an OutputStream."].join(""));
};
cljs_node_io.core.as_relative_path = function(a) {
  a = cljs_node_io.protocols.as_file.call(null, a);
  if (cljs.core.truth_(a.isAbsolute())) {
    throw Error(["IllegalArgumentException: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " is not a relative path"].join(""));
  }
  return a.getPath();
};
cljs_node_io.core.file = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.protocols.as_file.call(null, a);
};
cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs_node_io.file.File(cljs_node_io.core.filepath.call(null, cljs_node_io.protocols.as_file.call(null, a), cljs_node_io.core.as_relative_path.call(null, b)));
};
cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.call(null, cljs_node_io.core.file, cljs_node_io.core.file.call(null, a, b), c);
};
cljs_node_io.core.file.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs_node_io.core.file.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.delete_file = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.nth.call(null, b, 0, null);
  var c = cljs_node_io.core.file.call(null, a).delete();
  if (cljs.core.truth_(c)) {
    return c;
  }
  if (cljs.core.truth_(b)) {
    return b;
  }
  throw Error(["Couldn't delete ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs_node_io.core.delete_file.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.delete_file.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.reader = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.reader.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.reader.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.writer = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.writer.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.writer.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.input_stream = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_input_stream.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.input_stream.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.input_stream.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.output_stream = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_output_stream.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.output_stream.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.output_stream.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.Buffer_QMARK_ = function(a) {
  return Buffer.isBuffer(a);
};
cljs_node_io.core.Error_QMARK_ = function(a) {
  return a instanceof Error;
};
cljs_node_io.core.slurp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.apply.call(null, cljs.core.hash_map, b);
  return cljs_node_io.protocols.as_file.call(null, a).read(function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }());
};
cljs_node_io.core.slurp.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.slurp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.aslurp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.apply.call(null, cljs.core.hash_map, b);
  return cljs_node_io.protocols.as_file.call(null, a).aread(function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }());
};
cljs_node_io.core.aslurp.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.aslurp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.spit = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.apply.call(null, cljs.core.hash_map, c);
  return cljs_node_io.protocols.as_file.call(null, a).write([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), c);
};
cljs_node_io.core.spit.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.spit.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs_node_io.core.aspit = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.apply.call(null, cljs.core.hash_map, c);
  return cljs_node_io.protocols.as_file.call(null, a).awrite([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), c);
};
cljs_node_io.core.aspit.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.aspit.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs_node_io.core.file_seq = function(a) {
  return cljs.core.tree_seq.call(null, function(a) {
    return cljs_node_io.core.file.call(null, a).isDirectory();
  }, function(a) {
    return cljs.core.map.call(null, function(b) {
      return cljs_node_io.core.path.join(a, b);
    }, cljs_node_io.core.file.call(null, a).list());
  }, a);
};
cljs_node_io.core.xml_seq = function(a) {
  return cljs.core.tree_seq.call(null, cljs.core.complement.call(null, cljs.core.string_QMARK_), cljs.core.comp.call(null, cljs.core.seq, new cljs.core.Keyword(null, "content", "content", 15833224)), a);
};
cljs_node_io.core.make_parents = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  a = cljs.core.apply.call(null, cljs_node_io.core.file, a, b).getParentFile();
  return cljs.core.truth_(a) ? a.mkdirs() : null;
};
cljs_node_io.core.make_parents.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.make_parents.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.input_stream_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IInputStream$ ? !0 : !1 : !1;
};
cljs_node_io.core.output_stream_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IOutputStream$ ? !0 : !1 : !1;
};
cljs_node_io.core.stream_type = function(a) {
  return cljs_node_io.core.input_stream_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "InputStream", "InputStream", 1853664890) : cljs_node_io.core.output_stream_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127) : null;
};
cljs_node_io.core.rFile_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IFile$ ? !0 : !1 : !1;
};
"undefined" === typeof cljs_node_io.core.do_copy && (cljs_node_io.core.do_copy = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs-node-io.core", "do-copy"), function(a, b, c, d, e) {
    return function(a, b, c) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var b = cljs_node_io.core.stream_type.call(null, a);
        if (cljs.core.truth_(b)) {
          return b;
        }
        b = cljs.core.truth_(cljs_node_io.core.rFile_QMARK_.call(null, a)) ? new cljs.core.Keyword(null, "File", "File", -1707525042) : null;
        return cljs.core.truth_(b) ? b : cljs.core.type.call(null, a);
      }(), function() {
        var a = cljs_node_io.core.stream_type.call(null, b);
        if (cljs.core.truth_(a)) {
          return a;
        }
        a = cljs.core.truth_(cljs_node_io.core.rFile_QMARK_.call(null, b)) ? new cljs.core.Keyword(null, "File", "File", -1707525042) : null;
        return cljs.core.truth_(a) ? a : cljs.core.type.call(null, b);
      }()], null);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "InputStream", "InputStream", 1853664890), new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127)], null), function(a, b, c) {
  c = cljs.core.async.promise_chan.call(null);
  b.on("finish", function(a) {
    return function() {
      return cljs.core.async.close_BANG_.call(null, a);
    };
  }(c));
  a.pipe(b);
  return c;
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "File", "File", -1707525042), new cljs.core.Keyword(null, "File", "File", -1707525042)], null), function(a, b, c) {
  a = cljs_node_io.streams.FileInputStream.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null));
  b = cljs_node_io.streams.FileOutputStream.call(null, b, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null), c));
  return cljs_node_io.core.do_copy.call(null, a, b, c);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "File", "File", -1707525042), new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127)], null), function(a, b, c) {
  a = cljs_node_io.streams.FileInputStream.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null));
  return cljs_node_io.core.do_copy.call(null, a, b, c);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "InputStream", "InputStream", 1853664890), new cljs.core.Keyword(null, "File", "File", -1707525042)], null), function(a, b, c) {
  b = cljs_node_io.streams.FileOutputStream.call(null, b, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null), c));
  return cljs_node_io.core.do_copy.call(null, a, b, c);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer, new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127)], null), function(a, b, c) {
  return cljs_node_io.core.do_copy.call(null, cljs_node_io.streams.BufferReadStream.call(null, a, c), b, null);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer, new cljs.core.Keyword(null, "File", "File", -1707525042)], null), function(a, b, c) {
  return cljs_node_io.core.do_copy.call(null, cljs_node_io.streams.BufferReadStream.call(null, a, c), b, c);
});
cljs_node_io.core.copy = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = "string" === typeof a ? cljs_node_io.protocols.as_file.call(null, a) : a;
  b = "string" === typeof b ? cljs_node_io.protocols.as_file.call(null, b) : b;
  return cljs_node_io.core.do_copy.call(null, a, b, cljs.core.truth_(c) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : null);
};
cljs_node_io.core.copy.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.copy.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
goog.crypt.BlockCipher = function() {
};
goog.crypt.Aes = function(a) {
  goog.crypt.Aes.assertKeyArray_(a);
  this.key_ = a;
  this.keyLengthInWords_ = this.key_.length / 4;
  this.numberOfRounds_ = this.keyLengthInWords_ + 6;
  this.state_ = [[], [], [], []];
  this.temp_ = [[], [], [], []];
  this.keyExpansion_();
};
goog.crypt.Aes.prototype.BLOCK_SIZE = 16;
goog.crypt.Aes.BLOCK_SIZE_IN_WORDS_ = goog.crypt.Aes.prototype.BLOCK_SIZE / 4;
goog.crypt.Aes.ENABLE_TEST_MODE = !1;
goog.crypt.Aes.prototype.encrypt = function(a) {
  goog.crypt.Aes.ENABLE_TEST_MODE && this.testKeySchedule_(0, this.keySchedule_, 0);
  this.copyInput_(a);
  this.addRoundKey_(0);
  for (a = 1; a < this.numberOfRounds_; ++a) {
    goog.crypt.Aes.ENABLE_TEST_MODE && (this.testKeySchedule_(a, this.keySchedule_, a), this.testStartRound_(a, this.state_)), this.subBytes_(goog.crypt.Aes.SBOX_), goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterSubBytes_(a, this.state_), this.shiftRows_(), goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterShiftRows_(a, this.state_), this.mixColumns_(), goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterMixColumns_(a, this.state_), this.addRoundKey_(a);
  }
  this.subBytes_(goog.crypt.Aes.SBOX_);
  goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterSubBytes_(a, this.state_);
  this.shiftRows_();
  goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterShiftRows_(a, this.state_);
  this.addRoundKey_(this.numberOfRounds_);
  return this.generateOutput_();
};
goog.crypt.Aes.prototype.decrypt = function(a) {
  goog.crypt.Aes.ENABLE_TEST_MODE && this.testKeySchedule_(0, this.keySchedule_, this.numberOfRounds_);
  this.copyInput_(a);
  this.addRoundKey_(this.numberOfRounds_);
  for (a = 1; a < this.numberOfRounds_; ++a) {
    goog.crypt.Aes.ENABLE_TEST_MODE && (this.testKeySchedule_(a, this.keySchedule_, this.numberOfRounds_ - a), this.testStartRound_(a, this.state_)), this.invShiftRows_(), goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterShiftRows_(a, this.state_), this.subBytes_(goog.crypt.Aes.INV_SBOX_), goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterSubBytes_(a, this.state_), this.addRoundKey_(this.numberOfRounds_ - a), goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterAddRoundKey_(a, this.state_), this.invMixColumns_();
  }
  this.invShiftRows_();
  goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterShiftRows_(a, this.state_);
  this.subBytes_(goog.crypt.Aes.INV_SBOX_);
  goog.crypt.Aes.ENABLE_TEST_MODE && this.testAfterSubBytes_(this.numberOfRounds_, this.state_);
  goog.crypt.Aes.ENABLE_TEST_MODE && this.testKeySchedule_(this.numberOfRounds_, this.keySchedule_, 0);
  this.addRoundKey_(0);
  return this.generateOutput_();
};
goog.crypt.Aes.assertKeyArray_ = function(a) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.assert(16 == a.length || 24 == a.length || 32 == a.length, "Key must have length 16, 24, or 32.");
    for (var b = 0; b < a.length; b++) {
      goog.asserts.assertNumber(a[b]), goog.asserts.assert(0 <= a[b] && 255 >= a[b]);
    }
  }
};
goog.crypt.Aes.prototype.testStartRound_ = goog.nullFunction;
goog.crypt.Aes.prototype.testAfterSubBytes_ = goog.nullFunction;
goog.crypt.Aes.prototype.testAfterShiftRows_ = goog.nullFunction;
goog.crypt.Aes.prototype.testAfterMixColumns_ = goog.nullFunction;
goog.crypt.Aes.prototype.testAfterAddRoundKey_ = goog.nullFunction;
goog.crypt.Aes.prototype.testKeySchedule_ = goog.nullFunction;
goog.crypt.Aes.prototype.copyInput_ = function(a) {
  goog.asserts.assert(a.length == this.BLOCK_SIZE, "Expecting input of block size.");
  for (var b = 0; b < goog.crypt.Aes.BLOCK_SIZE_IN_WORDS_; b++) {
    for (var c = 0; 4 > c; c++) {
      var d = 4 * c + b;
      var e = a[d];
      goog.asserts.assert(255 >= e && 0 <= e, "Invalid input. Value %s at position %s is not a byte.", e, d);
      this.state_[b][c] = e;
    }
  }
};
goog.crypt.Aes.prototype.generateOutput_ = function() {
  for (var a = [], b = 0; b < goog.crypt.Aes.BLOCK_SIZE_IN_WORDS_; b++) {
    for (var c = 0; 4 > c; c++) {
      a[4 * c + b] = this.state_[b][c];
    }
  }
  return a;
};
goog.crypt.Aes.prototype.addRoundKey_ = function(a) {
  for (var b = 0; 4 > b; b++) {
    for (var c = 0; 4 > c; c++) {
      this.state_[b][c] ^= this.keySchedule_[4 * a + c][b];
    }
  }
};
goog.crypt.Aes.prototype.subBytes_ = function(a) {
  for (var b = 0; 4 > b; b++) {
    for (var c = 0; 4 > c; c++) {
      this.state_[b][c] = a[this.state_[b][c]];
    }
  }
};
goog.crypt.Aes.prototype.shiftRows_ = function() {
  for (var a = 1; 4 > a; a++) {
    for (var b = 0; 4 > b; b++) {
      this.temp_[a][b] = this.state_[a][b];
    }
  }
  for (a = 1; 4 > a; a++) {
    for (b = 0; 4 > b; b++) {
      this.state_[a][b] = this.temp_[a][(b + a) % goog.crypt.Aes.BLOCK_SIZE_IN_WORDS_];
    }
  }
};
goog.crypt.Aes.prototype.invShiftRows_ = function() {
  for (var a = 1; 4 > a; a++) {
    for (var b = 0; 4 > b; b++) {
      this.temp_[a][(b + a) % goog.crypt.Aes.BLOCK_SIZE_IN_WORDS_] = this.state_[a][b];
    }
  }
  for (a = 1; 4 > a; a++) {
    for (b = 0; 4 > b; b++) {
      this.state_[a][b] = this.temp_[a][b];
    }
  }
};
goog.crypt.Aes.prototype.mixColumns_ = function() {
  for (var a = this.state_, b = this.temp_[0], c = 0; 4 > c; c++) {
    b[0] = a[0][c], b[1] = a[1][c], b[2] = a[2][c], b[3] = a[3][c], a[0][c] = goog.crypt.Aes.MULT_2_[b[0]] ^ goog.crypt.Aes.MULT_3_[b[1]] ^ b[2] ^ b[3], a[1][c] = b[0] ^ goog.crypt.Aes.MULT_2_[b[1]] ^ goog.crypt.Aes.MULT_3_[b[2]] ^ b[3], a[2][c] = b[0] ^ b[1] ^ goog.crypt.Aes.MULT_2_[b[2]] ^ goog.crypt.Aes.MULT_3_[b[3]], a[3][c] = goog.crypt.Aes.MULT_3_[b[0]] ^ b[1] ^ b[2] ^ goog.crypt.Aes.MULT_2_[b[3]];
  }
};
goog.crypt.Aes.prototype.invMixColumns_ = function() {
  for (var a = this.state_, b = this.temp_[0], c = 0; 4 > c; c++) {
    b[0] = a[0][c], b[1] = a[1][c], b[2] = a[2][c], b[3] = a[3][c], a[0][c] = goog.crypt.Aes.MULT_E_[b[0]] ^ goog.crypt.Aes.MULT_B_[b[1]] ^ goog.crypt.Aes.MULT_D_[b[2]] ^ goog.crypt.Aes.MULT_9_[b[3]], a[1][c] = goog.crypt.Aes.MULT_9_[b[0]] ^ goog.crypt.Aes.MULT_E_[b[1]] ^ goog.crypt.Aes.MULT_B_[b[2]] ^ goog.crypt.Aes.MULT_D_[b[3]], a[2][c] = goog.crypt.Aes.MULT_D_[b[0]] ^ goog.crypt.Aes.MULT_9_[b[1]] ^ goog.crypt.Aes.MULT_E_[b[2]] ^ goog.crypt.Aes.MULT_B_[b[3]], a[3][c] = goog.crypt.Aes.MULT_B_[b[0]] ^ 
    goog.crypt.Aes.MULT_D_[b[1]] ^ goog.crypt.Aes.MULT_9_[b[2]] ^ goog.crypt.Aes.MULT_E_[b[3]];
  }
};
goog.crypt.Aes.prototype.keyExpansion_ = function() {
  this.keySchedule_ = Array(goog.crypt.Aes.BLOCK_SIZE_IN_WORDS_ * (this.numberOfRounds_ + 1));
  for (var a = 0; a < this.keyLengthInWords_; a++) {
    this.keySchedule_[a] = [this.key_[4 * a], this.key_[4 * a + 1], this.key_[4 * a + 2], this.key_[4 * a + 3]];
  }
  var b = Array(4);
  for (a = this.keyLengthInWords_; a < goog.crypt.Aes.BLOCK_SIZE_IN_WORDS_ * (this.numberOfRounds_ + 1); a++) {
    b[0] = this.keySchedule_[a - 1][0], b[1] = this.keySchedule_[a - 1][1], b[2] = this.keySchedule_[a - 1][2], b[3] = this.keySchedule_[a - 1][3], 0 == a % this.keyLengthInWords_ ? (this.rotWord_(b), this.subWord_(b), b[0] ^= goog.crypt.Aes.RCON_[a / this.keyLengthInWords_][0], b[1] ^= goog.crypt.Aes.RCON_[a / this.keyLengthInWords_][1], b[2] ^= goog.crypt.Aes.RCON_[a / this.keyLengthInWords_][2], b[3] ^= goog.crypt.Aes.RCON_[a / this.keyLengthInWords_][3]) : 6 < this.keyLengthInWords_ && 4 == a % 
    this.keyLengthInWords_ && this.subWord_(b), this.keySchedule_[a] = Array(4), this.keySchedule_[a][0] = this.keySchedule_[a - this.keyLengthInWords_][0] ^ b[0], this.keySchedule_[a][1] = this.keySchedule_[a - this.keyLengthInWords_][1] ^ b[1], this.keySchedule_[a][2] = this.keySchedule_[a - this.keyLengthInWords_][2] ^ b[2], this.keySchedule_[a][3] = this.keySchedule_[a - this.keyLengthInWords_][3] ^ b[3];
  }
};
goog.crypt.Aes.prototype.subWord_ = function(a) {
  a[0] = goog.crypt.Aes.SBOX_[a[0]];
  a[1] = goog.crypt.Aes.SBOX_[a[1]];
  a[2] = goog.crypt.Aes.SBOX_[a[2]];
  a[3] = goog.crypt.Aes.SBOX_[a[3]];
  return a;
};
goog.crypt.Aes.prototype.rotWord_ = function(a) {
  var b = a[0];
  a[0] = a[1];
  a[1] = a[2];
  a[2] = a[3];
  a[3] = b;
  return a;
};
goog.crypt.Aes.SBOX_ = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 
249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 
14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];
goog.crypt.Aes.INV_SBOX_ = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 
10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 
74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125];
goog.crypt.Aes.RCON_ = [[0, 0, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [4, 0, 0, 0], [8, 0, 0, 0], [16, 0, 0, 0], [32, 0, 0, 0], [64, 0, 0, 0], [128, 0, 0, 0], [27, 0, 0, 0], [54, 0, 0, 0]];
goog.crypt.Aes.MULT_2_ = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 
212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 27, 25, 31, 29, 19, 17, 23, 21, 11, 9, 15, 13, 3, 1, 7, 5, 59, 57, 63, 61, 51, 49, 55, 53, 43, 41, 47, 45, 35, 33, 39, 37, 91, 89, 95, 93, 83, 81, 87, 85, 75, 73, 79, 77, 67, 65, 71, 69, 123, 121, 127, 125, 115, 113, 119, 117, 107, 105, 111, 109, 99, 97, 103, 101, 155, 153, 159, 157, 147, 145, 151, 149, 139, 137, 143, 141, 131, 129, 135, 133, 187, 185, 191, 189, 179, 177, 183, 181, 171, 169, 
175, 173, 163, 161, 167, 165, 219, 217, 223, 221, 211, 209, 215, 213, 203, 201, 207, 205, 195, 193, 199, 197, 251, 249, 255, 253, 243, 241, 247, 245, 235, 233, 239, 237, 227, 225, 231, 229];
goog.crypt.Aes.MULT_3_ = [0, 3, 6, 5, 12, 15, 10, 9, 24, 27, 30, 29, 20, 23, 18, 17, 48, 51, 54, 53, 60, 63, 58, 57, 40, 43, 46, 45, 36, 39, 34, 33, 96, 99, 102, 101, 108, 111, 106, 105, 120, 123, 126, 125, 116, 119, 114, 113, 80, 83, 86, 85, 92, 95, 90, 89, 72, 75, 78, 77, 68, 71, 66, 65, 192, 195, 198, 197, 204, 207, 202, 201, 216, 219, 222, 221, 212, 215, 210, 209, 240, 243, 246, 245, 252, 255, 250, 249, 232, 235, 238, 237, 228, 231, 226, 225, 160, 163, 166, 165, 172, 175, 170, 169, 184, 187, 
190, 189, 180, 183, 178, 177, 144, 147, 150, 149, 156, 159, 154, 153, 136, 139, 142, 141, 132, 135, 130, 129, 155, 152, 157, 158, 151, 148, 145, 146, 131, 128, 133, 134, 143, 140, 137, 138, 171, 168, 173, 174, 167, 164, 161, 162, 179, 176, 181, 182, 191, 188, 185, 186, 251, 248, 253, 254, 247, 244, 241, 242, 227, 224, 229, 230, 239, 236, 233, 234, 203, 200, 205, 206, 199, 196, 193, 194, 211, 208, 213, 214, 223, 220, 217, 218, 91, 88, 93, 94, 87, 84, 81, 82, 67, 64, 69, 70, 79, 76, 73, 74, 107, 104, 
109, 110, 103, 100, 97, 98, 115, 112, 117, 118, 127, 124, 121, 122, 59, 56, 61, 62, 55, 52, 49, 50, 35, 32, 37, 38, 47, 44, 41, 42, 11, 8, 13, 14, 7, 4, 1, 2, 19, 16, 21, 22, 31, 28, 25, 26];
goog.crypt.Aes.MULT_9_ = [0, 9, 18, 27, 36, 45, 54, 63, 72, 65, 90, 83, 108, 101, 126, 119, 144, 153, 130, 139, 180, 189, 166, 175, 216, 209, 202, 195, 252, 245, 238, 231, 59, 50, 41, 32, 31, 22, 13, 4, 115, 122, 97, 104, 87, 94, 69, 76, 171, 162, 185, 176, 143, 134, 157, 148, 227, 234, 241, 248, 199, 206, 213, 220, 118, 127, 100, 109, 82, 91, 64, 73, 62, 55, 44, 37, 26, 19, 8, 1, 230, 239, 244, 253, 194, 203, 208, 217, 174, 167, 188, 181, 138, 131, 152, 145, 77, 68, 95, 86, 105, 96, 123, 114, 5, 
12, 23, 30, 33, 40, 51, 58, 221, 212, 207, 198, 249, 240, 235, 226, 149, 156, 135, 142, 177, 184, 163, 170, 236, 229, 254, 247, 200, 193, 218, 211, 164, 173, 182, 191, 128, 137, 146, 155, 124, 117, 110, 103, 88, 81, 74, 67, 52, 61, 38, 47, 16, 25, 2, 11, 215, 222, 197, 204, 243, 250, 225, 232, 159, 150, 141, 132, 187, 178, 169, 160, 71, 78, 85, 92, 99, 106, 113, 120, 15, 6, 29, 20, 43, 34, 57, 48, 154, 147, 136, 129, 190, 183, 172, 165, 210, 219, 192, 201, 246, 255, 228, 237, 10, 3, 24, 17, 46, 39, 
60, 53, 66, 75, 80, 89, 102, 111, 116, 125, 161, 168, 179, 186, 133, 140, 151, 158, 233, 224, 251, 242, 205, 196, 223, 214, 49, 56, 35, 42, 21, 28, 7, 14, 121, 112, 107, 98, 93, 84, 79, 70];
goog.crypt.Aes.MULT_B_ = [0, 11, 22, 29, 44, 39, 58, 49, 88, 83, 78, 69, 116, 127, 98, 105, 176, 187, 166, 173, 156, 151, 138, 129, 232, 227, 254, 245, 196, 207, 210, 217, 123, 112, 109, 102, 87, 92, 65, 74, 35, 40, 53, 62, 15, 4, 25, 18, 203, 192, 221, 214, 231, 236, 241, 250, 147, 152, 133, 142, 191, 180, 169, 162, 246, 253, 224, 235, 218, 209, 204, 199, 174, 165, 184, 179, 130, 137, 148, 159, 70, 77, 80, 91, 106, 97, 124, 119, 30, 21, 8, 3, 50, 57, 36, 47, 141, 134, 155, 144, 161, 170, 183, 188, 
213, 222, 195, 200, 249, 242, 239, 228, 61, 54, 43, 32, 17, 26, 7, 12, 101, 110, 115, 120, 73, 66, 95, 84, 247, 252, 225, 234, 219, 208, 205, 198, 175, 164, 185, 178, 131, 136, 149, 158, 71, 76, 81, 90, 107, 96, 125, 118, 31, 20, 9, 2, 51, 56, 37, 46, 140, 135, 154, 145, 160, 171, 182, 189, 212, 223, 194, 201, 248, 243, 238, 229, 60, 55, 42, 33, 16, 27, 6, 13, 100, 111, 114, 121, 72, 67, 94, 85, 1, 10, 23, 28, 45, 38, 59, 48, 89, 82, 79, 68, 117, 126, 99, 104, 177, 186, 167, 172, 157, 150, 139, 128, 
233, 226, 255, 244, 197, 206, 211, 216, 122, 113, 108, 103, 86, 93, 64, 75, 34, 41, 52, 63, 14, 5, 24, 19, 202, 193, 220, 215, 230, 237, 240, 251, 146, 153, 132, 143, 190, 181, 168, 163];
goog.crypt.Aes.MULT_D_ = [0, 13, 26, 23, 52, 57, 46, 35, 104, 101, 114, 127, 92, 81, 70, 75, 208, 221, 202, 199, 228, 233, 254, 243, 184, 181, 162, 175, 140, 129, 150, 155, 187, 182, 161, 172, 143, 130, 149, 152, 211, 222, 201, 196, 231, 234, 253, 240, 107, 102, 113, 124, 95, 82, 69, 72, 3, 14, 25, 20, 55, 58, 45, 32, 109, 96, 119, 122, 89, 84, 67, 78, 5, 8, 31, 18, 49, 60, 43, 38, 189, 176, 167, 170, 137, 132, 147, 158, 213, 216, 207, 194, 225, 236, 251, 246, 214, 219, 204, 193, 226, 239, 248, 245, 
190, 179, 164, 169, 138, 135, 144, 157, 6, 11, 28, 17, 50, 63, 40, 37, 110, 99, 116, 121, 90, 87, 64, 77, 218, 215, 192, 205, 238, 227, 244, 249, 178, 191, 168, 165, 134, 139, 156, 145, 10, 7, 16, 29, 62, 51, 36, 41, 98, 111, 120, 117, 86, 91, 76, 65, 97, 108, 123, 118, 85, 88, 79, 66, 9, 4, 19, 30, 61, 48, 39, 42, 177, 188, 171, 166, 133, 136, 159, 146, 217, 212, 195, 206, 237, 224, 247, 250, 183, 186, 173, 160, 131, 142, 153, 148, 223, 210, 197, 200, 235, 230, 241, 252, 103, 106, 125, 112, 83, 
94, 73, 68, 15, 2, 21, 24, 59, 54, 33, 44, 12, 1, 22, 27, 56, 53, 34, 47, 100, 105, 126, 115, 80, 93, 74, 71, 220, 209, 198, 203, 232, 229, 242, 255, 180, 185, 174, 163, 128, 141, 154, 151];
goog.crypt.Aes.MULT_E_ = [0, 14, 28, 18, 56, 54, 36, 42, 112, 126, 108, 98, 72, 70, 84, 90, 224, 238, 252, 242, 216, 214, 196, 202, 144, 158, 140, 130, 168, 166, 180, 186, 219, 213, 199, 201, 227, 237, 255, 241, 171, 165, 183, 185, 147, 157, 143, 129, 59, 53, 39, 41, 3, 13, 31, 17, 75, 69, 87, 89, 115, 125, 111, 97, 173, 163, 177, 191, 149, 155, 137, 135, 221, 211, 193, 207, 229, 235, 249, 247, 77, 67, 81, 95, 117, 123, 105, 103, 61, 51, 33, 47, 5, 11, 25, 23, 118, 120, 106, 100, 78, 64, 82, 92, 
6, 8, 26, 20, 62, 48, 34, 44, 150, 152, 138, 132, 174, 160, 178, 188, 230, 232, 250, 244, 222, 208, 194, 204, 65, 79, 93, 83, 121, 119, 101, 107, 49, 63, 45, 35, 9, 7, 21, 27, 161, 175, 189, 179, 153, 151, 133, 139, 209, 223, 205, 195, 233, 231, 245, 251, 154, 148, 134, 136, 162, 172, 190, 176, 234, 228, 246, 248, 210, 220, 206, 192, 122, 116, 102, 104, 66, 76, 94, 80, 10, 4, 22, 24, 50, 60, 46, 32, 236, 226, 240, 254, 212, 218, 200, 198, 156, 146, 128, 142, 164, 170, 184, 182, 12, 2, 16, 30, 52, 
58, 40, 38, 124, 114, 96, 110, 68, 74, 88, 86, 55, 57, 43, 37, 15, 1, 19, 29, 71, 73, 91, 85, 127, 113, 99, 109, 215, 217, 203, 197, 239, 225, 243, 253, 167, 169, 187, 181, 159, 145, 131, 141];
cljs.tools = {};
cljs.tools.reader = {};
cljs.tools.reader.impl = {};
cljs.tools.reader.impl.utils = {};
cljs.tools.reader.impl.utils.char$ = function(a) {
  return null == a ? null : cljs.core.char$.call(null, a);
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function(a) {
  return a instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(a, b, c, d, e) {
  this.splicing_QMARK_ = a;
  this.form = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "splicing?":
      return this.splicing_QMARK_;
    case "form":
      return this.form;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), this.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "form", "form", -1624062471), this.form], null)], null), this.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, this.form, this.__meta, this.__extmap, this.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -209062840 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.splicing_QMARK_, b.splicing_QMARK_) && cljs.core._EQ_.call(null, this.form, b.form) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), null, new cljs.core.Keyword(null, "form", "form", -1624062471), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, 
  this.form, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), b)) ? new cljs.tools.reader.impl.utils.ReaderConditional(c, this.form, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "form", "form", -1624062471), b)) ? new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, c, this.__meta, this.__extmap, null) : new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, this.form, 
  this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), this.splicing_QMARK_, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "form", "form", -1624062471), this.form, null)], null), this.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(this.splicing_QMARK_, this.form, b, this.__extmap, this.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = !0;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.tools.reader.impl.utils/ReaderConditional", null, 1, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function(a, b) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(a, b, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function(a) {
  return new cljs.tools.reader.impl.utils.ReaderConditional((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471))), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function(a) {
  return a instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function(a, b) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(b, a, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write.call(null, b, ["#?", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(this)) ? "@" : null)].join(""));
  return cljs.core.pr_writer.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(this), b, c);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function(a) {
  return null == a ? null : "," === a ? !0 : cljs.tools.reader.impl.utils.ws_rx.test(a);
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function(a) {
  return null == a ? null : goog.string.isNumeric(a);
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function(a) {
  return "\n" === a || "\n" === a || null == a;
};
cljs.tools.reader.impl.utils.desugar_meta = function(a) {
  return a instanceof cljs.core.Keyword ? cljs.core.PersistentArrayMap.createAsIfByAssoc([a, !0]) : a instanceof cljs.core.Symbol ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), a], null) : "string" === typeof a ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), a], null) : a;
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function() {
  return cljs.core.swap_BANG_.call(null, cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
cljs.tools.reader.impl.utils.namespace_keys = function(a, b) {
  return function e(b) {
    return new cljs.core.LazySeq(null, function() {
      for (;;) {
        var d = cljs.core.seq.call(null, b);
        if (d) {
          if (cljs.core.chunked_seq_QMARK_.call(null, d)) {
            var g = cljs.core.chunk_first.call(null, d), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
            return function() {
              for (var b = 0;;) {
                if (b < h) {
                  var d = cljs.core._nth.call(null, g, b);
                  cljs.core.chunk_append.call(null, k, d instanceof cljs.core.Symbol || d instanceof cljs.core.Keyword ? function() {
                    var b = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, d), e = cljs.core.nth.call(null, b, 0, null);
                    b = cljs.core.nth.call(null, b, 1, null);
                    var f = d instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
                    return null == e ? f.call(null, a, b) : cljs.core._EQ_.call(null, "_", e) ? f.call(null, b) : d;
                  }() : d);
                  b += 1;
                } else {
                  return !0;
                }
              }
            }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), e.call(null, cljs.core.chunk_rest.call(null, d))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
          }
          var l = cljs.core.first.call(null, d);
          return cljs.core.cons.call(null, l instanceof cljs.core.Symbol || l instanceof cljs.core.Keyword ? function() {
            var b = cljs.core.juxt.call(null, cljs.core.namespace, cljs.core.name).call(null, l), d = cljs.core.nth.call(null, b, 0, null);
            b = cljs.core.nth.call(null, b, 1, null);
            var e = l instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.keyword;
            return null == d ? e.call(null, a, b) : cljs.core._EQ_.call(null, "_", d) ? e.call(null, b) : l;
          }() : l, e.call(null, cljs.core.rest.call(null, d)));
        }
        return null;
      }
    }, null, null);
  }.call(null, b);
};
cljs.tools.reader.impl.utils.second_SINGLEQUOTE_ = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  return cljs.core.truth_(b) ? null : a;
};
cljs.tools.reader.reader_types = {};
cljs.tools.reader.reader_types.Reader = function() {
};
cljs.tools.reader.reader_types.read_char = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$Reader$read_char$arity$1) {
    return a.cljs$tools$reader$reader_types$Reader$read_char$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.read_char[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.read_char._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Reader.read-char", a);
};
cljs.tools.reader.reader_types.peek_char = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$Reader$peek_char$arity$1) {
    return a.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.peek_char[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.peek_char._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Reader.peek-char", a);
};
cljs.tools.reader.reader_types.IPushbackReader = function() {
};
cljs.tools.reader.reader_types.unread = function(a, b) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2) {
    return a.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(a, b);
  }
  var c = cljs.tools.reader.reader_types.unread[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.tools.reader.reader_types.unread._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IPushbackReader.unread", a);
};
cljs.tools.reader.reader_types.IndexingReader = function() {
};
cljs.tools.reader.reader_types.get_line_number = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1) {
    return a.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.get_line_number._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IndexingReader.get-line-number", a);
};
cljs.tools.reader.reader_types.get_column_number = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1) {
    return a.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.get_column_number._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IndexingReader.get-column-number", a);
};
cljs.tools.reader.reader_types.get_file_name = function(a) {
  if (null != a && null != a.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1) {
    return a.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(a);
  }
  var b = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.tools.reader.reader_types.get_file_name._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IndexingReader.get-file-name", a);
};
cljs.tools.reader.reader_types.StringReader = function(a, b, c) {
  this.s = a;
  this.s_len = b;
  this.s_pos = c;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  return this.s_len > this.s_pos ? (a = this.s.charAt(this.s_pos), this.s_pos += 1, a) : null;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  return this.s_len > this.s_pos ? this.s.charAt(this.s_pos) : null;
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null), cljs.core.with_meta(new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function(a, b, c) {
  return new cljs.tools.reader.reader_types.StringReader(a, b, c);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(a, b) {
  this.readable = a;
  this.buf = b;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  if (cljs.core.truth_(this.buf)) {
    return a = this.buf[0], this.buf = null, cljs.tools.reader.impl.utils.char$.call(null, a);
  }
  a = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.readable.read(1))].join("");
  return cljs.core.truth_(a) ? cljs.tools.reader.impl.utils.char$.call(null, a) : null;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  cljs.core.truth_(this.buf) || (this.buf = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.readable.read(1))].join(""));
  return cljs.core.truth_(this.buf) ? cljs.tools.reader.impl.utils.char$.call(null, this.buf[0]) : null;
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "readable", "readable", 2113054478, null), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function(a, b) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(a, b);
};
cljs.tools.reader.reader_types.PushbackReader = function(a, b, c, d) {
  this.rdr = a;
  this.buf = b;
  this.buf_len = c;
  this.buf_pos = d;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  a = this.buf_pos < this.buf_len ? this.buf[this.buf_pos] : cljs.tools.reader.reader_types.read_char.call(null, this.rdr);
  this.buf_pos < this.buf_len && (this.buf_pos += 1);
  return cljs.tools.reader.impl.utils.char$.call(null, a);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  a = this.buf_pos < this.buf_len ? this.buf[this.buf_pos] : cljs.tools.reader.reader_types.peek_char.call(null, this.rdr);
  return cljs.tools.reader.impl.utils.char$.call(null, a);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(a, b) {
  if (cljs.core.truth_(b)) {
    if (0 === this.buf_pos) {
      throw Error("Pushback buffer is full");
    }
    --this.buf_pos;
    return this.buf[this.buf_pos] = b;
  }
  return null;
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "buf-pos", "buf-pos", -807229033, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function(a, b, c, d) {
  return new cljs.tools.reader.reader_types.PushbackReader(a, b, c, d);
};
cljs.tools.reader.reader_types.normalize_newline = function(a, b) {
  return "\r" === b ? (b = cljs.tools.reader.reader_types.peek_char.call(null, a), "\f" !== b && "\n" !== b || cljs.tools.reader.reader_types.read_char.call(null, a), "\n") : b;
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(a, b, c, d, e, f, g) {
  this.rdr = a;
  this.line = b;
  this.column = c;
  this.line_start_QMARK_ = d;
  this.prev = e;
  this.prev_column = f;
  this.file_name = g;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  a = cljs.tools.reader.reader_types.read_char.call(null, this.rdr);
  return cljs.core.truth_(a) ? (a = cljs.tools.reader.reader_types.normalize_newline.call(null, this.rdr, a), this.prev = this.line_start_QMARK_, this.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, a), cljs.core.truth_(this.line_start_QMARK_) && (this.prev_column = this.column, this.column = 0, this.line += 1), this.column += 1, a) : null;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.peek_char.call(null, this.rdr);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(a, b) {
  cljs.core.truth_(this.line_start_QMARK_) ? (--this.line, this.column = this.prev_column) : --this.column;
  this.line_start_QMARK_ = this.prev;
  return cljs.tools.reader.reader_types.unread.call(null, this.rdr, b);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(a) {
  return this.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(a) {
  return this.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(a) {
  return this.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null)], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function(a, b, c, d, e, f, g) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(a, b, c, d, e, f, g);
};
cljs.tools.reader.reader_types.merge_meta = function(a, b) {
  var c = cljs.core.meta.call(null, a);
  return cljs.core.with_meta.call(null, a, cljs.core.merge.call(null, b, cljs.core.dissoc.call(null, c, new cljs.core.Keyword(null, "source", "source", -433931539))));
};
cljs.tools.reader.reader_types.peek_source_log = function(a) {
  return cljs.core.subs.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(a))].join(""), cljs.core.first.call(null, (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.tools.reader.reader_types.log_source_char = function(a, b) {
  a = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(a) ? a.append(b) : null;
};
cljs.tools.reader.reader_types.drop_last_logged_char = function(a) {
  a = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(a) ? a.set(cljs.core.subs.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), 0, a.getLength() - 1)) : null;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(a, b, c, d, e, f, g, h) {
  this.rdr = a;
  this.line = b;
  this.column = c;
  this.line_start_QMARK_ = d;
  this.prev = e;
  this.prev_column = f;
  this.file_name = g;
  this.frames = h;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(a) {
  a = cljs.tools.reader.reader_types.read_char.call(null, this.rdr);
  return cljs.core.truth_(a) ? (a = cljs.tools.reader.reader_types.normalize_newline.call(null, this.rdr, a), this.prev = this.line_start_QMARK_, this.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, a), cljs.core.truth_(this.line_start_QMARK_) && (this.prev_column = this.column, this.column = 0, this.line += 1), this.column += 1, cljs.tools.reader.reader_types.log_source_char.call(null, cljs.core.deref.call(null, this.frames), a), a) : null;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.peek_char.call(null, this.rdr);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(a, b) {
  cljs.core.truth_(this.line_start_QMARK_) ? (--this.line, this.column = this.prev_column) : --this.column;
  this.line_start_QMARK_ = this.prev;
  cljs.core.truth_(b) && cljs.tools.reader.reader_types.drop_last_logged_char.call(null, cljs.core.deref.call(null, this.frames));
  return cljs.tools.reader.reader_types.unread.call(null, this.rdr, b);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = cljs.core.PROTOCOL_SENTINEL;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(a) {
  return this.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(a) {
  return this.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(a) {
  return this.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null), new cljs.core.Symbol(null, "frames", "frames", -888748272, null)], 
  null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = !0;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function(a, b, c, d, e, f, g, h) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(a, b, c, d, e, f, g, h);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$tools$reader$reader_types$IndexingReader$ ? !0 : !1 : !1;
};
cljs.tools.reader.reader_types.string_reader = function(a) {
  return new cljs.tools.reader.reader_types.StringReader(a, cljs.core.count.call(null, a), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.string_push_back_reader.call(null, a, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader.call(null, a), cljs.core.object_array.call(null, b), b, b);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function(a) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(a, null), cljs.core.object_array.call(null, 1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, a, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, a, b, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader("string" === typeof a ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, a, b) : a, 1, 1, !0, null, 0, c);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, a, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, a, b, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader("string" === typeof a ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, a, b) : a, 1, 1, !0, null, 0, c, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "buffer", "buffer", 617295198), new goog.string.StringBuffer, new cljs.core.Keyword(null, "offset", "offset", 296498311), cljs.core.list(0)], null)));
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function(a) {
  for (var b = cljs.tools.reader.reader_types.read_char.call(null, a), c = new goog.string.StringBuffer;;) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, b)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
    }
    var d = cljs.tools.reader.reader_types.read_char.call(null, a);
    c = c.append(b);
    b = d;
  }
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function(a) {
  return a instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function(a) {
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? 1 === cljs.tools.reader.reader_types.get_column_number.call(null, a) : null;
};
cljs.tools.reader.reader_types.log_source_STAR_ = function(a, b) {
  var c = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a.frames));
  try {
    cljs.core.swap_BANG_.call(null, a.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.conj, c.getLength());
    var d = b.call(null);
    return null != d && (d.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$IMeta$) ? cljs.tools.reader.reader_types.merge_meta.call(null, d, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "source", "source", -433931539), cljs.tools.reader.reader_types.peek_source_log.call(null, cljs.core.deref.call(null, a.frames))], null)) : d;
  } finally {
    cljs.core.swap_BANG_.call(null, a.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.rest);
  }
};
cljs.tools.reader.impl.inspect = {};
cljs.tools.reader.impl.inspect.inspect_STAR__col = function(a, b, c, d) {
  var e = cljs.core.count.call(null, b);
  a = cljs.core.truth_(a) ? 0 : 10 < e ? 10 : e;
  b = cljs.core.map.call(null, cljs.core.partial.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, !0), cljs.core.take.call(null, a, b));
  b = cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", b));
  e = a < e ? "..." : null;
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("");
};
cljs.tools.reader.impl.inspect.dispatch_inspect = function(a, b) {
  return null == b ? new cljs.core.Keyword(null, "nil", "nil", 99600501) : "string" === typeof b ? new cljs.core.Keyword(null, "string", "string", -1989541586) : b instanceof cljs.core.Keyword ? new cljs.core.Keyword(null, "strable", "strable", 1877668047) : "number" === typeof b ? new cljs.core.Keyword(null, "strable", "strable", 1877668047) : b instanceof cljs.core.Symbol ? new cljs.core.Keyword(null, "strable", "strable", 1877668047) : cljs.core.vector_QMARK_.call(null, b) ? new cljs.core.Keyword(null, 
  "vector", "vector", 1902966158) : cljs.core.list_QMARK_.call(null, b) ? new cljs.core.Keyword(null, "list", "list", 765357683) : cljs.core.map_QMARK_.call(null, b) ? new cljs.core.Keyword(null, "map", "map", 1371690461) : cljs.core.set_QMARK_.call(null, b) ? new cljs.core.Keyword(null, "set", "set", 304602554) : cljs.core._EQ_.call(null, b, !0) ? new cljs.core.Keyword(null, "strable", "strable", 1877668047) : cljs.core._EQ_.call(null, b, !1) ? new cljs.core.Keyword(null, "strable", "strable", 1877668047) : 
  cljs.core.type.call(null, b);
};
"undefined" === typeof cljs.tools.reader.impl.inspect.inspect_STAR_ && (cljs.tools.reader.impl.inspect.inspect_STAR_ = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.tools.reader.impl.inspect", "inspect*"), cljs.tools.reader.impl.inspect.dispatch_inspect, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "string", "string", -1989541586), function(a, b) {
  var c = cljs.core.truth_(a) ? 5 : 20;
  a = b.length > c ? '..."' : '"';
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1('"'), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b.substring(0, function() {
    var a = b.length;
    return c < a ? c : a;
  }())), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "strable", "strable", 1877668047), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.IndexedSeq, function(a, b) {
  return "\x3cindexed seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.PersistentArrayMapSeq, function(a, b) {
  return "\x3cmap seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.NodeSeq, function(a, b) {
  return "\x3cmap seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.Cons, function(a, b) {
  return "\x3ccons\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, cljs.core.LazySeq, function(a, b) {
  return "\x3clazy seq\x3e";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "nil", "nil", 99600501), function(a, b) {
  return "nil";
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "list", "list", 765357683), function(a, b) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, a, b, "(", ")");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "map", "map", 1371690461), function(a, b) {
  var c = cljs.core.count.call(null, b), d = cljs.core.truth_(a) ? 0 : c;
  b = cljs.core.apply.call(null, cljs.core.concat, cljs.core.take.call(null, d, b));
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, a, b, "{", c > d ? "...}" : "}");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "set", "set", 304602554), function(a, b) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, a, b, "#{", "}");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "vector", "vector", 1902966158), function(a, b) {
  return cljs.tools.reader.impl.inspect.inspect_STAR__col.call(null, a, b, "[", "]");
});
cljs.core._add_method.call(null, cljs.tools.reader.impl.inspect.inspect_STAR_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(a, b) {
  return cljs.core.pr_str.call(null, cljs.core.type.call(null, b));
});
cljs.tools.reader.impl.inspect.inspect = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null, !1, a);
};
cljs.tools.reader.impl.inspect.inspect.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.tools.reader.impl.inspect.inspect_STAR_.call(null, a, b);
};
cljs.tools.reader.impl.inspect.inspect.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.impl.errors = {};
cljs.tools.reader.impl.errors.ex_details = function(a, b) {
  b = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), new cljs.core.Keyword(null, "ex-kind", "ex-kind", 1581199296), b], null);
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a), new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, a), new cljs.core.Keyword(null, "col", "col", -1959363084), cljs.tools.reader.reader_types.get_column_number.call(null, a)) : b;
};
cljs.tools.reader.impl.errors.throw_ex = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.tools.reader.impl.errors.throw_ex.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = cljs.tools.reader.impl.errors.ex_details.call(null, a, b);
  b = (new cljs.core.Keyword(null, "file", "file", -1269645878)).cljs$core$IFn$_invoke$arity$1(a);
  var d = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "col", "col", -1959363084)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.core.truth_(b) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " "].join("") : null;
  d = cljs.core.truth_(d) ? ["[line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), ", col ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), "]"].join("") : null;
  e = cljs.core.truth_(cljs.core.truth_(b) ? b : d) ? " " : null;
  c = cljs.core.apply.call(null, cljs.core.str, b, d, e, c);
  throw cljs.core.ex_info.call(null, c, a);
};
cljs.tools.reader.impl.errors.throw_ex.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.impl.errors.throw_ex.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.tools.reader.impl.errors.reader_error = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.tools.reader.impl.errors.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, a, new cljs.core.Keyword(null, "reader-error", "reader-error", 1610253121), cljs.core.apply.call(null, cljs.core.str, b));
};
cljs.tools.reader.impl.errors.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.reader_error.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.tools.reader.impl.errors.illegal_arg_error = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, a, new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170), cljs.core.apply.call(null, cljs.core.str, b));
};
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.illegal_arg_error.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.tools.reader.impl.errors.eof_error = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.tools.reader.impl.errors.eof_error.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.tools.reader.impl.errors.throw_ex.call(null, a, new cljs.core.Keyword(null, "eof", "eof", -489063237), cljs.core.apply.call(null, cljs.core.str, b));
};
cljs.tools.reader.impl.errors.eof_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.errors.eof_error.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.tools.reader.impl.errors.throw_eof_delimited = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, a, b, d, c, null);
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, a, "Unexpected EOF while reading ", cljs.core.truth_(e) ? ["item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), " of "].join("") : null, cljs.core.name.call(null, b), cljs.core.truth_(c) ? [", starting at line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " and column ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("") : null, ".");
};
cljs.tools.reader.impl.errors.throw_eof_delimited.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.impl.errors.throw_odd_map = function(a, b, c, d) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "The map literal starting with ", cljs.tools.reader.impl.inspect.inspect.call(null, cljs.core.first.call(null, d)), cljs.core.truth_(b) ? [" on line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " column ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("") : null, " contains ", cljs.core.count.call(null, d), " form(s). Map literals must contain an even number of forms.");
};
cljs.tools.reader.impl.errors.throw_invalid_number = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid number: ", b, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_literal = function(a, b) {
  throw cljs.tools.reader.impl.errors.illegal_arg_error.call(null, a, "Invalid unicode literal: \\", b, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_escape = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid unicode escape: \\u", b, ".");
};
cljs.tools.reader.impl.errors.throw_invalid = function(a, b, c) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid ", cljs.core.name.call(null, b), ": ", c, ".");
};
cljs.tools.reader.impl.errors.throw_eof_at_start = function(a, b) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, a, "Unexpected EOF while reading start of ", cljs.core.name.call(null, b), ".");
};
cljs.tools.reader.impl.errors.throw_bad_char = function(a, b, c) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid character: ", c, " found while reading ", cljs.core.name.call(null, b), ".");
};
cljs.tools.reader.impl.errors.throw_eof_at_dispatch = function(a) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, a, "Unexpected EOF while reading dispatch character.");
};
cljs.tools.reader.impl.errors.throw_bad_dispatch = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "No dispatch macro for ", b, ".");
};
cljs.tools.reader.impl.errors.throw_unmatch_delimiter = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Unmatched delimiter ", b, ".");
};
cljs.tools.reader.impl.errors.throw_eof_reading = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a: {
    var d = b instanceof cljs.core.Keyword ? b.fqn : null;
    switch(d) {
      case "regex":
        d = '#"';
        break a;
      case "string":
        d = '"';
        break a;
      default:
        throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
    }
  }
  return cljs.tools.reader.impl.errors.eof_error.call(null, a, "Unexpected EOF reading ", cljs.core.name.call(null, b), " starting ", cljs.core.apply.call(null, cljs.core.str, d, c), ".");
};
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.impl.errors.throw_eof_reading.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.tools.reader.impl.errors.throw_no_dispatch = function(a, b) {
  return cljs.tools.reader.impl.errors.throw_bad_dispatch.call(null, a, b);
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_char = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid unicode character \\", b, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token = function(a, b, c) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, a, "Invalid digit ", b, " in unicode character \\", c, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_digit = function(a, b) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, a, "Invalid digit ", b, " in unicode character.");
};
cljs.tools.reader.impl.errors.throw_invalid_unicode_len = function(a, b, c) {
  return cljs.tools.reader.impl.errors.illegal_arg_error.call(null, a, "Invalid unicode literal. Unicode literals should be ", c, "characters long.  ", "value suppled is ", b, "characters long.");
};
cljs.tools.reader.impl.errors.throw_invalid_character_literal = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid character literal \\u", b, ".");
};
cljs.tools.reader.impl.errors.throw_invalid_octal_len = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid octal escape sequence in a character literal:", b, ". Octal escape sequences must be 3 or fewer digits.");
};
cljs.tools.reader.impl.errors.throw_bad_octal_number = function(a) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Octal escape sequence must be in range [0, 377].");
};
cljs.tools.reader.impl.errors.throw_unsupported_character = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Unsupported character: ", b, ".");
};
cljs.tools.reader.impl.errors.throw_eof_in_character = function(a) {
  return cljs.tools.reader.impl.errors.eof_error.call(null, a, "Unexpected EOF while reading character.");
};
cljs.tools.reader.impl.errors.throw_bad_escape_char = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Unsupported escape character: \\", b, ".");
};
cljs.tools.reader.impl.errors.throw_single_colon = function(a) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "A single colon is not a valid keyword.");
};
cljs.tools.reader.impl.errors.throw_bad_metadata = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Metadata cannot be ", cljs.tools.reader.impl.inspect.inspect.call(null, b), ". Metadata must be a Symbol, Keyword, String or Map.");
};
cljs.tools.reader.impl.errors.throw_bad_metadata_target = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Metadata can not be applied to ", cljs.tools.reader.impl.inspect.inspect.call(null, b), ". ", "Metadata can only be applied to IMetas.");
};
cljs.tools.reader.impl.errors.throw_feature_not_keyword = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Feature cannot be ", cljs.tools.reader.impl.inspect.inspect.call(null, b), " Features must be keywords.");
};
cljs.tools.reader.impl.errors.throw_ns_map_no_map = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Namespaced map with namespace ", b, " does not specify a map.");
};
cljs.tools.reader.impl.errors.throw_bad_ns = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid value used as namespace in namespaced map: ", b, ".");
};
cljs.tools.reader.impl.errors.throw_bad_reader_tag = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid reader tag: ", cljs.tools.reader.impl.inspect.inspect.call(null, b), ". Reader tags must be symbols.");
};
cljs.tools.reader.impl.errors.throw_unknown_reader_tag = function(a, b) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, "No reader function for tag ", cljs.tools.reader.impl.inspect.inspect.call(null, b), ".");
};
cljs.tools.reader.impl.errors.duplicate_keys_error = function(a, b) {
  b = function(a) {
    return function f(a) {
      return new cljs.core.LazySeq(null, function() {
        for (var b = a;;) {
          if (b = cljs.core.seq.call(null, b)) {
            if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
              var c = cljs.core.chunk_first.call(null, b), e = cljs.core.count.call(null, c), l = cljs.core.chunk_buffer.call(null, e);
              a: {
                for (var m = 0;;) {
                  if (m < e) {
                    var n = cljs.core._nth.call(null, c, m), p = cljs.core.nth.call(null, n, 0, null);
                    1 < cljs.core.nth.call(null, n, 1, null) && cljs.core.chunk_append.call(null, l, p);
                    m += 1;
                  } else {
                    c = !0;
                    break a;
                  }
                }
              }
              return c ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), f.call(null, cljs.core.chunk_rest.call(null, b))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), null);
            }
            l = cljs.core.first.call(null, b);
            c = cljs.core.nth.call(null, l, 0, null);
            if (1 < cljs.core.nth.call(null, l, 1, null)) {
              return cljs.core.cons.call(null, c, f.call(null, cljs.core.rest.call(null, b)));
            }
            b = cljs.core.rest.call(null, b);
          } else {
            return null;
          }
        }
      }, null, null);
    }.call(null, cljs.core.frequencies.call(null, a));
  }.call(null, b);
  return cljs.core.apply.call(null, cljs.core.str, a, 1 < cljs.core.count.call(null, b) ? "s" : null, ": ", cljs.core.interpose.call(null, ", ", b));
};
cljs.tools.reader.impl.errors.throw_dup_keys = function(a, b, c) {
  return cljs.tools.reader.impl.errors.reader_error.call(null, a, cljs.tools.reader.impl.errors.duplicate_keys_error.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.capitalize.call(null, cljs.core.name.call(null, b))), " literal contains duplicate key"].join(""), c));
};
cljs.tools.reader.impl.errors.throw_eof_error = function(a, b) {
  return cljs.core.truth_(b) ? cljs.tools.reader.impl.errors.eof_error.call(null, a, "EOF while reading, starting at line ", b, ".") : cljs.tools.reader.impl.errors.eof_error.call(null, a, "EOF while reading.");
};
cljs.tools.reader.impl.commons = {};
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function(a, b) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, b) || ("+" === b || "-" === b) && cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a));
};
cljs.tools.reader.impl.commons.read_past = function(a, b) {
  for (var c = cljs.tools.reader.reader_types.read_char.call(null, b);;) {
    if (a.call(null, c)) {
      c = cljs.tools.reader.reader_types.read_char.call(null, b);
    } else {
      return c;
    }
  }
};
cljs.tools.reader.impl.commons.skip_line = function(a) {
  for (; !cljs.tools.reader.impl.utils.newline_QMARK_.call(null, cljs.tools.reader.reader_types.read_char.call(null, a));) {
  }
  return a;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function(a) {
  var b = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.int_pattern, a));
  if (null != b.call(null, 2)) {
    return 0;
  }
  a = "-" === b.call(null, 1);
  b = null != b.call(null, 3) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null, 3), 10], null) : null != b.call(null, 4) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null, 4), 16], null) : null != b.call(null, 5) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null, 5), 8], null) : null != b.call(null, 7) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [b.call(null, 7), parseInt(b.call(null, 6))], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
  var c = b.call(null, 0);
  if (null == c) {
    return null;
  }
  b = parseInt(c, b.call(null, 1));
  a = a ? -1 * b : b;
  return cljs.core.truth_(isNaN(a)) ? null : a;
};
cljs.tools.reader.impl.commons.match_ratio = function(a) {
  var b = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.ratio_pattern, a));
  a = b.call(null, 1);
  b = b.call(null, 2);
  a = cljs.core.truth_(cljs.core.re_find.call(null, /^\+/, a)) ? cljs.core.subs.call(null, a, 1) : a;
  return parseInt(a) / parseInt(b);
};
cljs.tools.reader.impl.commons.match_float = function(a) {
  var b = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.float_pattern, a));
  return null != b.call(null, 4) ? parseFloat(b.call(null, 1)) : parseFloat(a);
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function(a, b) {
  a = cljs.core.re_find.call(null, a, b);
  return cljs.core.nth.call(null, a, 0, null) === b;
};
cljs.tools.reader.impl.commons.match_number = function(a) {
  return cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.int_pattern, a) ? cljs.tools.reader.impl.commons.match_int.call(null, a) : cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.float_pattern, a) ? cljs.tools.reader.impl.commons.match_float.call(null, a) : cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.ratio_pattern, a) ? cljs.tools.reader.impl.commons.match_ratio.call(null, 
  a) : null;
};
cljs.tools.reader.impl.commons.parse_symbol = function(a) {
  if ("" === a || !0 === /:$/.test(a) || !0 === /^::/.test(a)) {
    return null;
  }
  var b = a.indexOf("/"), c = 0 < b ? cljs.core.subs.call(null, a, 0, b) : null;
  if (null != c) {
    b += 1;
    if (b === cljs.core.count.call(null, a)) {
      return null;
    }
    a = cljs.core.subs.call(null, a, b);
    return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.core.nth.call(null, a, 0)) || "" === a || !1 !== /:$/.test(c) || "/" !== a && -1 !== a.indexOf("/") ? null : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, a], null);
  }
  return "/" === a || -1 === a.indexOf("/") ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, a], null) : null;
};
cljs.tools.reader.impl.commons.read_comment = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.tools.reader.impl.commons.skip_line.call(null, a);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.tools.reader.impl.commons.throwing_reader = function(a) {
  return function() {
    var b = function(b, c) {
      return cljs.tools.reader.impl.errors.reader_error.call(null, b, a);
    }, c = function(a, c) {
      var d = null;
      if (1 < arguments.length) {
        d = 0;
        for (var e = Array(arguments.length - 1); d < e.length;) {
          e[d] = arguments[d + 1], ++d;
        }
        d = new cljs.core.IndexedSeq(e, 0, null);
      }
      return b.call(this, a, d);
    };
    c.cljs$lang$maxFixedArity = 1;
    c.cljs$lang$applyTo = function(a) {
      var c = cljs.core.first(a);
      a = cljs.core.rest(a);
      return b(c, a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
cljs.tools.reader.macro_terminating_QMARK_ = function(a) {
  switch(a) {
    case '"':
    case ";":
    case "@":
    case "^":
    case "`":
    case "~":
    case "(":
    case ")":
    case "[":
    case "]":
    case "{":
    case "}":
    case "\\":
      return !0;
    default:
      return !1;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function(a, b, c) {
  if (null == c) {
    return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null, a, b);
  }
  cljs.tools.reader.sb.clear();
  for (b = c;;) {
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) || cljs.tools.reader.macro_terminating_QMARK_.call(null, b) || null == b) {
      return null != b && cljs.tools.reader.reader_types.unread.call(null, a, b), cljs.tools.reader.sb.toString();
    }
    cljs.tools.reader.sb.append(b);
    b = cljs.tools.reader.reader_types.read_char.call(null, a);
  }
};
cljs.tools.reader.read_dispatch = function(a, b, c, d) {
  var e = cljs.tools.reader.reader_types.read_char.call(null, a);
  return cljs.core.truth_(e) ? (b = cljs.tools.reader.dispatch_macros.call(null, e), cljs.core.truth_(b) ? b.call(null, a, e, c, d) : cljs.tools.reader.read_tagged.call(null, function() {
    cljs.tools.reader.reader_types.unread.call(null, a, e);
    return a;
  }(), e, c, d)) : cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null, a);
};
cljs.tools.reader.read_unmatched_delimiter = function(a, b, c, d) {
  return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null, a, b);
};
cljs.tools.reader.read_regex = function(a, b, c, d) {
  b = new goog.string.StringBuffer;
  for (c = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if ('"' === c) {
      return cljs.core.re_pattern.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
    }
    if (null == c) {
      return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, a, new cljs.core.Keyword(null, "regex", "regex", 939488856), b);
    }
    b.append(c);
    "\\" === c && (c = cljs.tools.reader.reader_types.read_char.call(null, a), null == c && cljs.tools.reader.impl.errors.throw_eof_reading.call(null, a, new cljs.core.Keyword(null, "regex", "regex", 939488856), b), b.append(c));
    c = cljs.tools.reader.reader_types.read_char.call(null, a);
  }
};
cljs.tools.reader.char_code = function(a, b) {
  a = parseInt(a, b);
  return cljs.core.truth_(isNaN(a)) ? -1 : a;
};
cljs.tools.reader.read_unicode_char = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  c = b + c;
  cljs.core.count.call(null, a) !== c && cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null, null, a);
  for (var e = 0;;) {
    if (b === c) {
      return String.fromCharCode(e);
    }
    var f = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, a, b), d);
    if (-1 === f) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null, null, cljs.core.nth.call(null, a, b), a);
    }
    e = f + e * d;
    b += 1;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  for (var f = 1, g = cljs.tools.reader.char_code.call(null, b, c);;) {
    if (-1 === g) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, a, b);
    }
    if (f !== d) {
      var h = cljs.tools.reader.reader_types.peek_char.call(null, a);
      if (cljs.core.truth_(function() {
        var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, h);
        if (a) {
          return a;
        }
        a = cljs.tools.reader.macros.call(null, h);
        return cljs.core.truth_(a) ? a : null == h;
      }())) {
        return cljs.core.truth_(e) ? cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null, a, f, d) : String.fromCharCode(g);
      }
      var k = cljs.tools.reader.char_code.call(null, h, c);
      cljs.tools.reader.reader_types.read_char.call(null, a);
      if (-1 === k) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, a, h);
      }
      g = k + g * c;
      f += 1;
    } else {
      return String.fromCharCode(g);
    }
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = 55295;
cljs.tools.reader.lower_limit = 57344;
cljs.tools.reader.valid_octal_QMARK_ = function(a, b) {
  return 255 >= parseInt(a, b);
};
cljs.tools.reader.read_char_STAR_ = function(a, b, c, d) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (null != b) {
    b = cljs.tools.reader.macro_terminating_QMARK_.call(null, b) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : cljs.tools.reader.read_token.call(null, a, new cljs.core.Keyword(null, "character", "character", 380652989), b);
    c = b.length;
    if (1 === c) {
      return b.charAt(0);
    }
    if (cljs.core._EQ_.call(null, b, "newline")) {
      return "\n";
    }
    if (cljs.core._EQ_.call(null, b, "space")) {
      return " ";
    }
    if (cljs.core._EQ_.call(null, b, "tab")) {
      return "\t";
    }
    if (cljs.core._EQ_.call(null, b, "backspace")) {
      return "\b";
    }
    if (cljs.core._EQ_.call(null, b, "formfeed")) {
      return "\f";
    }
    if (cljs.core._EQ_.call(null, b, "return")) {
      return "\r";
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "u"))) {
      return b = cljs.tools.reader.read_unicode_char.call(null, b, 1, 4, 16), c = b.charCodeAt(0), c > cljs.tools.reader.upper_limit && c < cljs.tools.reader.lower_limit ? cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null, a, c.toString(16)) : b;
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "o"))) {
      --c;
      if (3 < c) {
        return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null, a, b);
      }
      c = cljs.tools.reader.read_unicode_char.call(null, b, 1, c, 8);
      return cljs.core.not.call(null, cljs.tools.reader.valid_octal_QMARK_.call(null, cljs.core.subs.call(null, b, 1), 8)) ? cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, a) : c;
    }
    return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null, a, b);
  }
  return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, a);
};
cljs.tools.reader.starting_line_col_info = function(a) {
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, a), cljs.tools.reader.reader_types.get_column_number.call(null, a) - 1 | 0], null) : null;
};
cljs.tools.reader.ending_line_col_info = function(a) {
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, a), cljs.tools.reader.reader_types.get_column_number.call(null, a)], null) : null;
};
"undefined" === typeof cljs.tools.reader.READ_EOF && (cljs.tools.reader.READ_EOF = {});
"undefined" === typeof cljs.tools.reader.READ_FINISHED && (cljs.tools.reader.READ_FINISHED = {});
cljs.tools.reader._STAR_read_delim_STAR_ = !1;
cljs.tools.reader.read_delimited_internal = function(a, b, c, d, e) {
  var f = cljs.tools.reader.starting_line_col_info.call(null, c), g = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  b = cljs.tools.reader.impl.utils.char$.call(null, b);
  for (var h = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    var k = cljs.tools.reader.read_STAR_.call(null, c, !1, cljs.tools.reader.READ_EOF, b, d, e);
    if (k === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_.call(null, h);
    }
    if (k === cljs.tools.reader.READ_EOF) {
      return cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, c, a, g, f, cljs.core.count.call(null, h));
    }
    h = cljs.core.conj_BANG_.call(null, h, k);
  }
};
cljs.tools.reader.read_delimited = function(a, b, c, d, e) {
  var f = cljs.tools.reader._STAR_read_delim_STAR_;
  cljs.tools.reader._STAR_read_delim_STAR_ = !0;
  try {
    return cljs.tools.reader.read_delimited_internal.call(null, a, b, c, d, e);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = f;
  }
};
cljs.tools.reader.read_list = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  c = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "list", "list", 765357683), ")", a, c, d);
  var f = cljs.tools.reader.ending_line_col_info.call(null, a);
  d = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.empty_QMARK_.call(null, c) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, c), cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), d, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), f], null)) : null);
};
cljs.tools.reader.read_vector = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  c = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), "]", a, c, d);
  var f = cljs.tools.reader.ending_line_col_info.call(null, a);
  d = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  return cljs.core.with_meta.call(null, c, cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), d, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), f], null)) : null);
};
cljs.tools.reader.read_map = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  c = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), "}", a, c, d);
  d = cljs.core.count.call(null, c);
  var f = cljs.core.take_nth.call(null, 2, c), g = cljs.core.set.call(null, f), h = cljs.tools.reader.ending_line_col_info.call(null, a), k = cljs.core.nth.call(null, h, 0, null);
  h = cljs.core.nth.call(null, h, 1, null);
  cljs.core.odd_QMARK_.call(null, d) && cljs.tools.reader.impl.errors.throw_odd_map.call(null, a, b, e, c);
  cljs.core._EQ_.call(null, cljs.core.count.call(null, g), cljs.core.count.call(null, f)) || cljs.tools.reader.impl.errors.throw_dup_keys.call(null, a, new cljs.core.Keyword(null, "map", "map", 1371690461), f);
  return cljs.core.with_meta.call(null, d <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null, c), !0, !0) : cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null, c), !0), cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), k, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), h], null)) : null);
};
cljs.tools.reader.read_number = function(a, b) {
  for (var c = function() {
    var a = new goog.string.StringBuffer;
    a.append(b);
    return a;
  }(), d = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if (cljs.core.truth_(function() {
      var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, d);
      if (a) {
        return a;
      }
      a = cljs.tools.reader.macros.call(null, d);
      return cljs.core.truth_(a) ? a : null == d;
    }())) {
      var e = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
      cljs.tools.reader.reader_types.unread.call(null, a, d);
      var f = cljs.tools.reader.impl.commons.match_number.call(null, e);
      return cljs.core.truth_(f) ? f : cljs.tools.reader.impl.errors.throw_invalid_number.call(null, a, e);
    }
    e = function() {
      var a = c;
      a.append(d);
      return a;
    }();
    f = cljs.tools.reader.reader_types.read_char.call(null, a);
    c = e;
    d = f;
  }
};
cljs.tools.reader.escape_char = function(a, b) {
  a = cljs.tools.reader.reader_types.read_char.call(null, b);
  switch(a) {
    case "t":
      return "\t";
    case "r":
      return "\r";
    case "n":
      return "\n";
    case "\\":
      return "\\";
    case '"':
      return '"';
    case "b":
      return "\b";
    case "f":
      return "\f";
    case "u":
      return a = cljs.tools.reader.reader_types.read_char.call(null, b), -1 === parseInt(a | 0, 16) ? cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null, b, a) : cljs.tools.reader.read_unicode_char.call(null, b, a, 16, 4, !0);
    default:
      return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, a) ? (a = cljs.tools.reader.read_unicode_char.call(null, b, a, 8, 3, !1), 255 < (a | 0) ? cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, b) : a) : cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null, b, a);
  }
};
cljs.tools.reader.read_string_STAR_ = function(a, b, c, d) {
  for (var e = new goog.string.StringBuffer, f = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if (null == f) {
      return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, a, new cljs.core.Keyword(null, "string", "string", -1989541586), '"', e);
    }
    switch(f) {
      case "\\":
        b = function() {
          var b = e;
          b.append(cljs.tools.reader.escape_char.call(null, e, a));
          return b;
        }();
        c = cljs.tools.reader.reader_types.read_char.call(null, a);
        e = b;
        f = c;
        continue;
      case '"':
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join("");
      default:
        b = function() {
          var a = e;
          a.append(f);
          return a;
        }(), c = cljs.tools.reader.reader_types.read_char.call(null, a), e = b, f = c;
    }
  }
};
cljs.tools.reader.loc_info = function(a, b, c) {
  if (null == b) {
    return null;
  }
  var d = cljs.tools.reader.reader_types.get_file_name.call(null, a);
  d = null == d ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), d], null);
  var e = cljs.tools.reader.ending_line_col_info.call(null, a);
  a = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  b = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), c, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), a, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), e], null);
  return cljs.core.merge.call(null, d, b);
};
cljs.tools.reader.read_symbol = function(a, b) {
  var c = cljs.tools.reader.starting_line_col_info.call(null, a), d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  b = cljs.tools.reader.read_token.call(null, a, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), b);
  if (null == b) {
    return null;
  }
  switch(b) {
    case "nil":
      return null;
    case "true":
      return !0;
    case "false":
      return !1;
    case "/":
      return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
    default:
      var e = cljs.tools.reader.impl.commons.parse_symbol.call(null, b);
      return null != e ? (b = cljs.core.symbol.call(null, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1)), cljs.core._with_meta.call(null, b, cljs.tools.reader.loc_info.call(null, a, d, c))) : cljs.tools.reader.impl.errors.throw_invalid.call(null, a, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), b);
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_alias = function(a) {
  return cljs.core.get.call(null, cljs.tools.reader._STAR_alias_map_STAR_, a);
};
cljs.tools.reader.resolve_ns = function(a) {
  var b = cljs.tools.reader.resolve_alias.call(null, a);
  if (cljs.core.truth_(b)) {
    return b;
  }
  a = cljs.core.find_ns.call(null, a);
  return cljs.core.truth_(a) ? cljs.core.symbol.call(null, cljs.core.ns_name.call(null, a)) : null;
};
cljs.tools.reader.read_keyword = function(a, b, c, d) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b)) {
    return cljs.tools.reader.impl.errors.throw_single_colon.call(null, a);
  }
  b = cljs.tools.reader.read_token.call(null, a, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), b);
  d = cljs.tools.reader.impl.commons.parse_symbol.call(null, b);
  if (null != d) {
    c = cljs.core._nth.call(null, d, 0);
    d = cljs.core._nth.call(null, d, 1);
    if (":" === b.charAt(0)) {
      if (null != c) {
        return c = cljs.tools.reader.resolve_alias.call(null, cljs.core.symbol.call(null, cljs.core.subs.call(null, c, 1))), cljs.core.truth_(c) ? cljs.core.keyword.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""), d) : cljs.tools.reader.impl.errors.throw_invalid.call(null, a, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(":"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
      }
      c = cljs.core._STAR_ns_STAR_;
      return cljs.core.truth_(c) ? cljs.core.keyword.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""), cljs.core.subs.call(null, d, 1)) : cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid token: :", b);
    }
    return cljs.core.keyword.call(null, c, d);
  }
  return cljs.tools.reader.impl.errors.throw_invalid.call(null, a, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(":"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.tools.reader.wrapping_reader = function(a) {
  return function(b, c, d, e) {
    return new cljs.core.List(null, a, new cljs.core.List(null, cljs.tools.reader.read_STAR_.call(null, b, !0, null, d, e), null, 1, null), 2, null);
  };
};
cljs.tools.reader.read_meta = function(a, b, c, d) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, a) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a))) {
    return cljs.tools.reader.reader_types.log_source_STAR_.call(null, a, function() {
      var b = cljs.tools.reader.starting_line_col_info.call(null, a), e = cljs.core.nth.call(null, b, 0, null), f = cljs.core.nth.call(null, b, 1, null), g = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
      cljs.core.map_QMARK_.call(null, g) || cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, a, g);
      b = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
      return null != b && (b.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IMeta$) ? (e = cljs.core.truth_(cljs.core.truth_(e) ? cljs.core.seq_QMARK_.call(null, b) : e) ? cljs.core.assoc.call(null, g, new cljs.core.Keyword(null, "line", "line", 212345235), e, new cljs.core.Keyword(null, "column", "column", 2078222095), f) : g, null != b && (b.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IWithMeta$) ? cljs.core.with_meta.call(null, 
      b, cljs.core.merge.call(null, cljs.core.meta.call(null, b), e)) : cljs.core.reset_meta_BANG_.call(null, b, e)) : cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, a, b);
    });
  }
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  var f = cljs.core.nth.call(null, e, 1, null), g = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  cljs.core.map_QMARK_.call(null, g) || cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, a, g);
  e = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  return null != e && (e.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === e.cljs$core$IMeta$) ? (b = cljs.core.truth_(cljs.core.truth_(b) ? cljs.core.seq_QMARK_.call(null, e) : b) ? cljs.core.assoc.call(null, g, new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), f) : g, null != e && (e.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === e.cljs$core$IWithMeta$) ? cljs.core.with_meta.call(null, 
  e, cljs.core.merge.call(null, cljs.core.meta.call(null, e), b)) : cljs.core.reset_meta_BANG_.call(null, e, b)) : cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, a, e);
};
cljs.tools.reader.read_set = function(a, b, c, d) {
  var e = cljs.tools.reader.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  e = cljs.core.truth_(e) ? e - 1 | 0 : null;
  c = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "set", "set", 304602554), "}", a, c, d);
  d = cljs.core.set.call(null, c);
  var f = cljs.tools.reader.ending_line_col_info.call(null, a), g = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  cljs.core._EQ_.call(null, cljs.core.count.call(null, c), cljs.core.count.call(null, d)) || cljs.tools.reader.impl.errors.reader_error.call(null, a, cljs.tools.reader.impl.errors.throw_dup_keys.call(null, a, new cljs.core.Keyword(null, "set", "set", 304602554), c));
  return cljs.core.with_meta.call(null, d, cljs.core.truth_(b) ? cljs.core.merge.call(null, function() {
    var b = cljs.tools.reader.reader_types.get_file_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), b], null) : null;
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), e, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), g, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), f], null)) : null);
};
cljs.tools.reader.read_discard = function(a, b, c, d) {
  cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  return a;
};
cljs.tools.reader.read_symbolic_value = function(a, b, c, d) {
  b = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  return cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "NaN", "NaN", 666918153, null), b) ? Number.NaN : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "-Inf", "-Inf", -2123243689, null), b) ? Number.NEGATIVE_INFINITY : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Inf", "Inf", 647172781, null), b) ? Number.POSITIVE_INFINITY : cljs.tools.reader.impl.errors.reader_error.call(null, a, ["Invalid token: ##", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function(a, b, c) {
  return b instanceof cljs.core.Keyword ? cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), b) || cljs.core.contains_QMARK_.call(null, cljs.core.get.call(null, c, new cljs.core.Keyword(null, "features", "features", -1146962336)), b) : cljs.tools.reader.impl.errors.reader_error.call(null, a, "Feature should be a keyword: ", b);
};
cljs.tools.reader.check_eof_error = function(a, b, c) {
  return a === cljs.tools.reader.READ_EOF ? cljs.tools.reader.impl.errors.throw_eof_error.call(null, b, function() {
    var a = 0 > c;
    return a ? c : a;
  }()) : null;
};
cljs.tools.reader.check_reserved_features = function(a, b) {
  return cljs.core.truth_(cljs.core.get.call(null, cljs.tools.reader.RESERVED_FEATURES, b)) ? cljs.tools.reader.impl.errors.reader_error.call(null, a, "Feature name ", b, " is reserved") : null;
};
cljs.tools.reader.check_invalid_read_cond = function(a, b, c) {
  return a === cljs.tools.reader.READ_FINISHED ? 0 > c ? cljs.tools.reader.impl.errors.reader_error.call(null, b, "read-cond requires an even number of forms") : cljs.tools.reader.impl.errors.reader_error.call(null, b, "read-cond starting on line ", c, " requires an even number of forms") : null;
};
cljs.tools.reader.read_suppress = function(a, b, c, d) {
  var e = cljs.tools.reader._STAR_suppress_read_STAR_;
  cljs.tools.reader._STAR_suppress_read_STAR_ = !0;
  try {
    var f = cljs.tools.reader.read_STAR_.call(null, b, !1, cljs.tools.reader.READ_EOF, ")", c, d);
    cljs.tools.reader.check_eof_error.call(null, f, b, a);
    return f === cljs.tools.reader.READ_FINISHED ? cljs.tools.reader.READ_FINISHED : null;
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = e;
  }
};
"undefined" === typeof cljs.tools.reader.NO_MATCH && (cljs.tools.reader.NO_MATCH = {});
cljs.tools.reader.match_feature = function(a, b, c, d) {
  var e = cljs.tools.reader.read_STAR_.call(null, b, !1, cljs.tools.reader.READ_EOF, ")", c, d);
  cljs.tools.reader.check_eof_error.call(null, e, b, a);
  if (cljs.core._EQ_.call(null, e, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  }
  cljs.tools.reader.check_reserved_features.call(null, b, e);
  if (cljs.core.truth_(cljs.tools.reader.has_feature_QMARK_.call(null, b, e, c))) {
    return c = cljs.tools.reader.read_STAR_.call(null, b, !1, cljs.tools.reader.READ_EOF, ")", c, d), cljs.tools.reader.check_eof_error.call(null, c, b, a), cljs.tools.reader.check_invalid_read_cond.call(null, c, b, a), c;
  }
  a = cljs.tools.reader.read_suppress.call(null, a, b, c, d);
  return cljs.core.truth_(a) ? a : cljs.tools.reader.NO_MATCH;
};
cljs.tools.reader.read_cond_delimited = function(a, b, c, d) {
  var e = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? cljs.tools.reader.reader_types.get_line_number.call(null, a) : -1;
  a: {
    for (var f = cljs.tools.reader.NO_MATCH, g = null;;) {
      if (f === cljs.tools.reader.NO_MATCH) {
        if (f = cljs.tools.reader.match_feature.call(null, e, a, c, d), f === cljs.tools.reader.READ_FINISHED) {
          c = cljs.tools.reader.READ_FINISHED;
          break a;
        } else {
          g = null;
        }
      } else {
        if (g !== cljs.tools.reader.READ_FINISHED) {
          g = cljs.tools.reader.read_suppress.call(null, e, a, c, d);
        } else {
          c = f;
          break a;
        }
      }
    }
  }
  return c === cljs.tools.reader.READ_FINISHED ? a : cljs.core.truth_(b) ? null != c && (c.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISequential$) ? (goog.array.insertArrayAt(d, cljs.core.to_array.call(null, c), 0), a) : cljs.tools.reader.impl.errors.reader_error.call(null, a, "Spliced form list in read-cond-splicing must implement ISequential") : c;
};
cljs.tools.reader.read_cond = function(a, b, c, d) {
  if (cljs.core.not.call(null, cljs.core.truth_(c) ? (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), null, new cljs.core.Keyword(null, "allow", "allow", -1857325745), null], null), null)).call(null, (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(c)) : c)) {
    throw cljs.core.ex_info.call(null, "Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
  }
  var e = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.core.truth_(e)) {
    if (e = (b = cljs.core._EQ_.call(null, e, "@")) ? cljs.tools.reader.reader_types.read_char.call(null, a) : e, b && (cljs.tools.reader._STAR_read_delim_STAR_ || cljs.tools.reader.impl.errors.reader_error.call(null, a, "cond-splice not in list")), e = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, e) ? cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, a) : e, cljs.core.truth_(e)) {
      if (cljs.core.not_EQ_.call(null, e, "(")) {
        throw cljs.core.ex_info.call(null, "read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
      }
      var f = cljs.tools.reader._STAR_suppress_read_STAR_, g = cljs.tools.reader;
      var h = cljs.tools.reader._STAR_suppress_read_STAR_;
      h = cljs.core.truth_(h) ? h : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(c));
      g._STAR_suppress_read_STAR_ = h;
      try {
        return cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_) ? cljs.tools.reader.impl.utils.reader_conditional.call(null, cljs.tools.reader.read_list.call(null, a, e, c, d), b) : cljs.tools.reader.read_cond_delimited.call(null, a, b, c, d);
      } finally {
        cljs.tools.reader._STAR_suppress_read_STAR_ = f;
      }
    } else {
      return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, a);
    }
  } else {
    return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, a);
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function(a) {
  return cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(-1 === a ? "rest" : ["p", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")), "__", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)), "#"].join(""));
};
cljs.tools.reader.read_fn = function(a, b, c, d) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.call(null, "Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
  b = cljs.tools.reader.arg_env;
  cljs.tools.reader.arg_env = cljs.core.sorted_map.call(null);
  try {
    var e = cljs.tools.reader.read_STAR_.call(null, function() {
      cljs.tools.reader.reader_types.unread.call(null, a, "(");
      return a;
    }(), !0, null, c, d), f = cljs.core.rseq.call(null, cljs.tools.reader.arg_env), g = f ? function() {
      var a = cljs.core.key.call(null, cljs.core.first.call(null, f)), b = function() {
        for (var b = 1, c = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
          if (b > a) {
            return cljs.core.persistent_BANG_.call(null, c);
          }
          var d = b + 1;
          c = cljs.core.conj_BANG_.call(null, c, function() {
            var a = cljs.core.get.call(null, cljs.tools.reader.arg_env, b);
            return cljs.core.truth_(a) ? a : cljs.tools.reader.garg.call(null, b);
          }());
          b = d;
        }
      }();
      return cljs.core.truth_(cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.call(null, b, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.tools.reader.arg_env.call(null, -1)) : b;
    }() : cljs.core.PersistentVector.EMPTY;
    return new cljs.core.List(null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.List(null, g, new cljs.core.List(null, e, null, 1, null), 2, null), 3, null);
  } finally {
    cljs.tools.reader.arg_env = b;
  }
};
cljs.tools.reader.register_arg = function(a) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var b = cljs.tools.reader.arg_env.call(null, a);
    if (cljs.core.truth_(b)) {
      return b;
    }
    b = cljs.tools.reader.garg.call(null, a);
    cljs.tools.reader.arg_env = cljs.core.assoc.call(null, cljs.tools.reader.arg_env, a, b);
    return b;
  }
  throw cljs.core.ex_info.call(null, "Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
};
cljs.tools.reader.read_arg = function(a, b, c, d) {
  if (null == cljs.tools.reader.arg_env) {
    return cljs.tools.reader.read_symbol.call(null, a, b);
  }
  b = cljs.tools.reader.reader_types.peek_char.call(null, a);
  if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) || cljs.tools.reader.macro_terminating_QMARK_.call(null, b) || null == b) {
    return cljs.tools.reader.register_arg.call(null, 1);
  }
  if (cljs.core._EQ_.call(null, b, "\x26")) {
    return cljs.tools.reader.reader_types.read_char.call(null, a), cljs.tools.reader.register_arg.call(null, -1);
  }
  a = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  if (cljs.core.integer_QMARK_.call(null, a)) {
    return cljs.tools.reader.register_arg.call(null, a);
  }
  throw cljs.core.ex_info.call(null, "Arg literal must be %, %\x26 or %integer", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function(a, b, c, d) {
  b = cljs.tools.reader.reader_types.peek_char.call(null, a);
  return cljs.core.truth_(b) ? cljs.core._EQ_.call(null, "@", b) ? cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null)).call(null, function() {
    cljs.tools.reader.reader_types.read_char.call(null, a);
    return a;
  }(), "@", c, d) : cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null)).call(null, a, "~", c, d) : null;
};
cljs.tools.reader.unquote_splicing_QMARK_ = function(a) {
  return cljs.core.seq_QMARK_.call(null, a) && cljs.core._EQ_.call(null, cljs.core.first.call(null, a), new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null));
};
cljs.tools.reader.unquote_QMARK_ = function(a) {
  return cljs.core.seq_QMARK_.call(null, a) && cljs.core._EQ_.call(null, cljs.core.first.call(null, a), new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null));
};
cljs.tools.reader.expand_list = function(a) {
  a = cljs.core.seq.call(null, a);
  for (var b = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    if (a) {
      var c = cljs.core.first.call(null, a);
      b = cljs.core.conj_BANG_.call(null, b, cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, c)) ? new cljs.core.List(null, new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null), new cljs.core.List(null, cljs.core.second.call(null, c), null, 1, null), 2, null) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, c)) ? cljs.core.second.call(null, c) : new cljs.core.List(null, new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", 
      -1119203325, null), new cljs.core.List(null, cljs.tools.reader.syntax_quote_STAR_.call(null, c), null, 1, null), 2, null));
      a = cljs.core.next.call(null, a);
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, b));
    }
  }
};
cljs.tools.reader.flatten_map = function(a) {
  a = cljs.core.seq.call(null, a);
  for (var b = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    if (a) {
      var c = cljs.core.first.call(null, a);
      a = cljs.core.next.call(null, a);
      b = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, b, cljs.core.key.call(null, c)), cljs.core.val.call(null, c));
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, b));
    }
  }
};
cljs.tools.reader.register_gensym = function(a) {
  if (cljs.core.not.call(null, cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.call(null, "Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
  var b = cljs.core.get.call(null, cljs.tools.reader.gensym_env, a);
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, cljs.core.name.call(null, a), 0, cljs.core.count.call(null, cljs.core.name.call(null, a)) - 1)), "__", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.impl.utils.next_id.call(null)), "__auto__"].join(""));
  cljs.tools.reader.gensym_env = cljs.core.assoc.call(null, cljs.tools.reader.gensym_env, a, b);
  return b;
};
cljs.tools.reader.add_meta = function(a, b) {
  var c = (c = null != a ? a.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IWithMeta$ ? !0 : !1 : !1) ? cljs.core.seq.call(null, cljs.core.dissoc.call(null, cljs.core.meta.call(null, a), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, 
  "file", "file", -1269645878), new cljs.core.Keyword(null, "source", "source", -433931539))) : c;
  return c ? new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null), new cljs.core.List(null, b, new cljs.core.List(null, cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.core.meta.call(null, a)), null, 1, null), 2, null), 3, null) : b;
};
cljs.tools.reader.syntax_quote_coll = function(a, b) {
  b = new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null), cljs.tools.reader.expand_list.call(null, b)), null, 1, null), 2, null);
  return cljs.core.truth_(a) ? new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null), new cljs.core.List(null, a, new cljs.core.List(null, b, null, 1, null), 2, null), 3, null) : b;
};
cljs.tools.reader.map_func = function(a) {
  return 16 <= cljs.core.count.call(null, a) ? new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null) : new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
};
cljs.tools.reader.bool_QMARK_ = function(a) {
  return a instanceof Boolean || !0 === a || !1 === a;
};
cljs.tools.reader.resolve_symbol = function(a) {
  throw cljs.core.ex_info.call(null, "resolve-symbol is not implemented", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), a], null));
};
cljs.tools.reader.syntax_quote_STAR_ = function(a) {
  return cljs.tools.reader.add_meta.call(null, a, cljs.core.special_symbol_QMARK_.call(null, a) ? new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, a, null, 1, null), 2, null) : a instanceof cljs.core.Symbol ? new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, cljs.core.truth_(function() {
    var b = cljs.core.not.call(null, cljs.core.namespace.call(null, a));
    return b ? goog.string.endsWith(cljs.core.name.call(null, a), "#") : b;
  }()) ? cljs.tools.reader.register_gensym.call(null, a) : function() {
    var b = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
    return cljs.core.truth_(goog.string.endsWith(b, ".")) ? (b = cljs.core.symbol.call(null, cljs.core.subs.call(null, b, 0, cljs.core.count.call(null, b) - 1)), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.tools.reader.resolve_symbol.call(null, b)), "."].join(""))) : cljs.tools.reader.resolve_symbol.call(null, a);
  }(), null, 1, null), 2, null) : cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, a)) ? cljs.core.second.call(null, a) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, a)) ? function() {
    throw cljs.core.ex_info.call(null, "unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }() : cljs.core.coll_QMARK_.call(null, a) ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IRecord$) ? a : cljs.core.map_QMARK_.call(null, a) ? cljs.tools.reader.syntax_quote_coll.call(null, cljs.tools.reader.map_func.call(null, a), cljs.tools.reader.flatten_map.call(null, a)) : cljs.core.vector_QMARK_.call(null, a) ? new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "vec", "cljs.core/vec", 307622519, null), new cljs.core.List(null, 
  cljs.tools.reader.syntax_quote_coll.call(null, null, a), null, 1, null), 2, null) : cljs.core.set_QMARK_.call(null, a) ? cljs.tools.reader.syntax_quote_coll.call(null, new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null), a) : cljs.core.seq_QMARK_.call(null, a) || cljs.core.list_QMARK_.call(null, a) ? function() {
    var b = cljs.core.seq.call(null, a);
    return b ? cljs.tools.reader.syntax_quote_coll.call(null, null, b) : cljs.core.list(new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null));
  }() : function() {
    throw cljs.core.ex_info.call(null, "Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953)], null));
  }() : cljs.core.truth_(function() {
    var b = a instanceof cljs.core.Keyword;
    if (b || (b = "number" === typeof a) || (b = "string" === typeof a) || (b = null == a)) {
      return b;
    }
    b = cljs.tools.reader.bool_QMARK_.call(null, a);
    return cljs.core.truth_(b) ? b : a instanceof RegExp;
  }()) ? a : new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, a, null, 1, null), 2, null));
};
cljs.tools.reader.read_syntax_quote = function(a, b, c, d) {
  b = cljs.tools.reader.gensym_env;
  cljs.tools.reader.gensym_env = cljs.core.PersistentArrayMap.EMPTY;
  try {
    return cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  } finally {
    cljs.tools.reader.gensym_env = b;
  }
};
cljs.tools.reader.read_namespaced_map = function(a, b, c, d) {
  var e = cljs.tools.reader.read_token.call(null, a, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), cljs.tools.reader.reader_types.read_char.call(null, a));
  b = cljs.core._EQ_.call(null, e, ":") ? cljs.core.ns_name.call(null, cljs.core._STAR_ns_STAR_) : cljs.core._EQ_.call(null, ":", cljs.core.first.call(null, e)) ? function() {
    var a = null == e ? null : cljs.core.subs.call(null, e, 1);
    a = null == a ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, a);
    a = null == a ? null : cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, a);
    a = null == a ? null : cljs.core.symbol.call(null, a);
    return null == a ? null : cljs.tools.reader.resolve_ns.call(null, a);
  }() : function() {
    var a = null == e ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, e);
    return null == a ? null : cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, a);
  }();
  return cljs.core.truth_(b) ? "{" === cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, a) ? (c = cljs.tools.reader.read_delimited.call(null, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), "}", a, c, d), cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, c)) && cljs.tools.reader.impl.errors.throw_odd_map.call(null, a, null, null, c), d = cljs.tools.reader.impl.utils.namespace_keys.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), 
  cljs.core.take_nth.call(null, 2, c)), c = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, c)), cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.set.call(null, d)), cljs.core.count.call(null, d)) || cljs.tools.reader.impl.errors.throw_dup_keys.call(null, a, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), d), cljs.core.zipmap.call(null, d, c)) : cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null, a, e) : cljs.tools.reader.impl.errors.throw_bad_ns.call(null, 
  a, e);
};
cljs.tools.reader.macros = function(a) {
  switch(a) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
    case ":":
      return cljs.tools.reader.read_keyword;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
    case "@":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null));
    case "^":
      return cljs.tools.reader.read_meta;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
    case "~":
      return cljs.tools.reader.read_unquote;
    case "(":
      return cljs.tools.reader.read_list;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
    case "[":
      return cljs.tools.reader.read_vector;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
    case "{":
      return cljs.tools.reader.read_map;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
    case "%":
      return cljs.tools.reader.read_arg;
    case "#":
      return cljs.tools.reader.read_dispatch;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function(a) {
  switch(a) {
    case "^":
      return cljs.tools.reader.read_meta;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "var", "var", 870848730, null));
    case "(":
      return cljs.tools.reader.read_fn;
    case "{":
      return cljs.tools.reader.read_set;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
    case "\x3d":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "read-eval not supported");
    case '"':
      return cljs.tools.reader.read_regex;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
    case "_":
      return cljs.tools.reader.read_discard;
    case "?":
      return cljs.tools.reader.read_cond;
    case ":":
      return cljs.tools.reader.read_namespaced_map;
    case "#":
      return cljs.tools.reader.read_symbolic_value;
    default:
      return null;
  }
};
cljs.tools.reader.read_tagged = function(a, b, c, d) {
  b = cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d);
  b instanceof cljs.core.Symbol || cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null, a, b);
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal.call(null, b, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  }
  var e = cljs.tools.reader._STAR_data_readers_STAR_.call(null, b);
  e = cljs.core.truth_(e) ? e : cljs.tools.reader.default_data_readers.call(null, b);
  if (cljs.core.truth_(e)) {
    return e.call(null, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d));
  }
  e = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
  return cljs.core.truth_(e) ? e.call(null, b, cljs.tools.reader.read_STAR_.call(null, a, !0, null, c, d)) : cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null, a, b);
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = !1;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function(a, b, c, d, e, f) {
  for (;;) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, a) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a))) {
      return cljs.tools.reader.reader_types.log_source_STAR_.call(null, a, function() {
        for (;;) {
          if (goog.array.isEmpty(f)) {
            var g = cljs.tools.reader.reader_types.read_char.call(null, a);
            if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, g)) {
              if (null == g) {
                return b ? cljs.tools.reader.impl.errors.throw_eof_error.call(null, a, null) : c;
              }
              if (g === d) {
                return cljs.tools.reader.READ_FINISHED;
              }
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, a, g)) {
                return cljs.tools.reader.read_number.call(null, a, g);
              }
              var h = cljs.tools.reader.macros.call(null, g);
              if (null != h) {
                if (g = h.call(null, a, g, e, f), g !== a) {
                  return g;
                }
              } else {
                return cljs.tools.reader.read_symbol.call(null, a, g);
              }
            }
          } else {
            return g = f[0], goog.array.removeAt(f, 0), g;
          }
        }
      });
    }
    if (goog.array.isEmpty(f)) {
      var g = cljs.tools.reader.reader_types.read_char.call(null, a);
      if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, g)) {
        if (null == g) {
          return b ? cljs.tools.reader.impl.errors.throw_eof_error.call(null, a, null) : c;
        }
        if (g === d) {
          return cljs.tools.reader.READ_FINISHED;
        }
        if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, a, g)) {
          return cljs.tools.reader.read_number.call(null, a, g);
        }
        var h = cljs.tools.reader.macros.call(null, g);
        if (null != h) {
          if (g = h.call(null, a, g, e, f), g !== a) {
            return g;
          }
        } else {
          return cljs.tools.reader.read_symbol.call(null, a, g);
        }
      }
    } else {
      return g = f[0], goog.array.removeAt(f, 0), g;
    }
  }
};
cljs.tools.reader.read_STAR_ = function(a) {
  switch(arguments.length) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.tools.reader.read_STAR_.call(null, a, b, c, null, d, e);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  try {
    return cljs.tools.reader.read_STAR__internal.call(null, a, b, c, d, e, f);
  } catch (g) {
    if (g instanceof Error) {
      b = g;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, b)) {
        c = cljs.core.ex_data.call(null, b);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(c))) {
          throw b;
        }
        throw cljs.core.ex_info.call(null, b.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), c, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), b);
      }
      throw cljs.core.ex_info.call(null, b.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
      a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), b);
    }
    throw g;
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.read.call(null, a, !0, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  var c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "eof", "eof", -489063237), new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531));
  return cljs.tools.reader.read_STAR_.call(null, b, cljs.core._EQ_.call(null, c, new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531)), c, null, a, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.tools.reader.read_STAR_.call(null, a, b, c, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.read_string.call(null, cljs.core.PersistentArrayMap.EMPTY, a);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.truth_(cljs.core.truth_(b) ? "" !== b : b) ? cljs.tools.reader.read.call(null, a, cljs.tools.reader.reader_types.string_push_back_reader.call(null, b)) : null;
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.read_PLUS_string = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.tools.reader.read_PLUS_string.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = function(a) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a.frames)))].join("");
  }, d = cljs.core.count.call(null, c.call(null, a)), e = cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, a) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a)) ? cljs.tools.reader.reader_types.log_source_STAR_.call(null, a, function(c, d) {
    return function() {
      return cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, b)) ? cljs.tools.reader.read.call(null, cljs.core.first.call(null, b), a) : cljs.core.apply.call(null, cljs.tools.reader.read, a, b);
    };
  }(c, d)) : cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, b)) ? cljs.tools.reader.read.call(null, cljs.core.first.call(null, b), a) : cljs.core.apply.call(null, cljs.tools.reader.read, a, b);
  c = cljs.core.subs.call(null, c.call(null, a), d).trim();
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, c], null);
};
cljs.tools.reader.read_PLUS_string.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.read_PLUS_string.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.tools.reader.edn = {};
cljs.tools.reader.edn.macro_terminating_QMARK_ = function(a) {
  var b = "#" !== a;
  return b && (b = "'" !== a) ? (b = ":" !== a) ? cljs.tools.reader.edn.macros.call(null, a) : b : b;
};
cljs.tools.reader.edn.not_constituent_QMARK_ = function(a) {
  return "@" === a || "`" === a || "~" === a;
};
cljs.tools.reader.edn.read_token = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.tools.reader.edn.read_token.call(null, a, b, c, !0);
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (cljs.core.not.call(null, c)) {
    return cljs.tools.reader.impl.errors.throw_eof_at_start.call(null, a, b);
  }
  if (cljs.core.truth_(cljs.core.truth_(d) ? cljs.tools.reader.edn.not_constituent_QMARK_.call(null, c) : d)) {
    return cljs.tools.reader.impl.errors.throw_bad_char.call(null, a, b, c);
  }
  d = new goog.string.StringBuffer;
  for (cljs.tools.reader.reader_types.unread.call(null, a, c);;) {
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, c) || cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, c) || null == c) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("");
    }
    if (cljs.tools.reader.edn.not_constituent_QMARK_.call(null, c)) {
      return cljs.tools.reader.impl.errors.throw_bad_char.call(null, a, b, c);
    }
    d.append(cljs.tools.reader.reader_types.read_char.call(null, a));
    c = cljs.tools.reader.reader_types.peek_char.call(null, a);
  }
};
cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_dispatch = function(a, b, c) {
  var d = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.core.truth_(d)) {
    b = cljs.tools.reader.edn.dispatch_macros.call(null, d);
    if (cljs.core.truth_(b)) {
      return b.call(null, a, d, c);
    }
    c = cljs.tools.reader.edn.read_tagged.call(null, function() {
      cljs.tools.reader.reader_types.unread.call(null, a, d);
      return a;
    }(), d, c);
    return cljs.core.truth_(c) ? c : cljs.tools.reader.impl.errors.throw_no_dispatch.call(null, a, d);
  }
  return cljs.tools.reader.impl.errors.throw_eof_at_dispatch.call(null, a);
};
cljs.tools.reader.edn.read_unmatched_delimiter = function(a, b, c) {
  return cljs.tools.reader.impl.errors.throw_unmatch_delimiter.call(null, a, b);
};
cljs.tools.reader.edn.read_unicode_char = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  c = b + c;
  cljs.core.count.call(null, a) !== c && cljs.tools.reader.impl.errors.throw_invalid_unicode_literal.call(null, null, a);
  for (var e = 0;;) {
    if (b === c) {
      return String.fromCharCode(e);
    }
    var f = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, a, b), d);
    if (-1 === f) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit_in_token.call(null, null, cljs.core.nth.call(null, a, b), a);
    }
    e = f + e * d;
    b += 1;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  for (var f = 1, g = cljs.tools.reader.char_code.call(null, b, c);;) {
    if (-1 === g) {
      return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, a, b);
    }
    if (f !== d) {
      var h = cljs.tools.reader.reader_types.peek_char.call(null, a);
      if (cljs.core.truth_(function() {
        var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, h);
        if (a) {
          return a;
        }
        a = cljs.tools.reader.edn.macros.call(null, h);
        return cljs.core.truth_(a) ? a : null == h;
      }())) {
        return cljs.core.truth_(e) ? cljs.tools.reader.impl.errors.throw_invalid_unicode_len.call(null, a, f, d) : String.fromCharCode(g);
      }
      var k = cljs.tools.reader.char_code.call(null, h, c);
      cljs.tools.reader.reader_types.read_char.call(null, a);
      if (-1 === k) {
        return cljs.tools.reader.impl.errors.throw_invalid_unicode_digit.call(null, a, h);
      }
      g = k + g * c;
      f += 1;
    } else {
      return String.fromCharCode(g);
    }
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.edn.upper_limit = 55295;
cljs.tools.reader.edn.lower_limit = 57344;
cljs.tools.reader.edn.read_char_STAR_ = function(a, b, c) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (null != b) {
    b = cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, b) || cljs.tools.reader.edn.not_constituent_QMARK_.call(null, b) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : cljs.tools.reader.edn.read_token.call(null, a, new cljs.core.Keyword(null, "character", "character", 380652989), b, !1);
    c = cljs.core.count.call(null, b);
    if (1 === c) {
      return cljs.core.nth.call(null, b, 0);
    }
    if ("newline" === b) {
      return "\n";
    }
    if ("space" === b) {
      return " ";
    }
    if ("tab" === b) {
      return "\t";
    }
    if ("backspace" === b) {
      return "\b";
    }
    if ("formfeed" === b) {
      return "\f";
    }
    if ("return" === b) {
      return "\r";
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "u"))) {
      return b = cljs.tools.reader.edn.read_unicode_char.call(null, b, 1, 4, 16), c = b.charCodeAt(), c > cljs.tools.reader.edn.upper_limit && c < cljs.tools.reader.edn.lower_limit ? cljs.tools.reader.impl.errors.throw_invalid_character_literal.call(null, a, c.toString(16)) : b;
    }
    if (cljs.core.truth_(goog.string.startsWith(b, "o"))) {
      --c;
      if (3 < c) {
        return cljs.tools.reader.impl.errors.throw_invalid_octal_len.call(null, a, b);
      }
      b = cljs.tools.reader.edn.read_unicode_char.call(null, b, 1, c, 8);
      return 255 < (b | 0) ? cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, a) : b;
    }
    return cljs.tools.reader.impl.errors.throw_unsupported_character.call(null, a, b);
  }
  return cljs.tools.reader.impl.errors.throw_eof_in_character.call(null, a);
};
cljs.tools.reader.edn.starting_line_col_info = function(a) {
  return cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, a), (cljs.tools.reader.reader_types.get_column_number.call(null, a) | 0) - 1 | 0], null) : null;
};
cljs.tools.reader.edn.read_delimited = function(a, b, c, d) {
  var e = cljs.tools.reader.edn.starting_line_col_info.call(null, c), f = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  b = cljs.tools.reader.impl.utils.char$.call(null, b);
  for (var g = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);;) {
    var h = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, c);
    cljs.core.truth_(h) || cljs.tools.reader.impl.errors.throw_eof_delimited.call(null, c, a, f, e, cljs.core.count.call(null, g));
    if (cljs.core._EQ_.call(null, b, cljs.tools.reader.impl.utils.char$.call(null, h))) {
      return cljs.core.persistent_BANG_.call(null, g);
    }
    var k = cljs.tools.reader.edn.macros.call(null, h);
    cljs.core.truth_(k) ? (k = k.call(null, c, h, d), g = k !== c ? cljs.core.conj_BANG_.call(null, g, k) : g) : (k = cljs.tools.reader.edn.read.call(null, function() {
      cljs.tools.reader.reader_types.unread.call(null, c, h);
      return c;
    }(), !0, null, d), g = k !== c ? cljs.core.conj_BANG_.call(null, g, k) : g);
  }
};
cljs.tools.reader.edn.read_list = function(a, b, c) {
  a = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "list", "list", 765357683), ")", a, c);
  return cljs.core.empty_QMARK_.call(null, a) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, a);
};
cljs.tools.reader.edn.read_vector = function(a, b, c) {
  return cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), "]", a, c);
};
cljs.tools.reader.edn.read_map = function(a, b, c) {
  var d = cljs.tools.reader.edn.starting_line_col_info.call(null, a);
  b = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  c = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), "}", a, c);
  var e = cljs.core.count.call(null, c), f = cljs.core.take_nth.call(null, 2, c), g = cljs.core.set.call(null, f);
  cljs.core.odd_QMARK_.call(null, e) && cljs.tools.reader.impl.errors.throw_odd_map.call(null, a, b, d, c);
  cljs.core._EQ_.call(null, cljs.core.count.call(null, g), cljs.core.count.call(null, f)) || cljs.tools.reader.impl.errors.throw_dup_keys.call(null, a, new cljs.core.Keyword(null, "map", "map", 1371690461), f);
  return e <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? cljs.core.PersistentArrayMap.fromArray(cljs.core.to_array.call(null, c), !0, !0) : cljs.core.PersistentHashMap.fromArray(cljs.core.to_array.call(null, c), !0);
};
cljs.tools.reader.edn.read_number = function(a, b, c) {
  for (var d = function() {
    var a = new goog.string.StringBuffer;
    a.append(b);
    return a;
  }(), e = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    if (cljs.core.truth_(function() {
      var a = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, e);
      if (a) {
        return a;
      }
      a = cljs.tools.reader.edn.macros.call(null, e);
      return cljs.core.truth_(a) ? a : null == e;
    }())) {
      c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("");
      cljs.tools.reader.reader_types.unread.call(null, a, e);
      var f = cljs.tools.reader.impl.commons.match_number.call(null, c);
      return cljs.core.truth_(f) ? f : cljs.tools.reader.impl.errors.throw_invalid_number.call(null, a, c);
    }
    c = function() {
      var a = d;
      a.append(e);
      return a;
    }();
    f = cljs.tools.reader.reader_types.read_char.call(null, a);
    d = c;
    e = f;
  }
};
cljs.tools.reader.edn.escape_char = function(a, b) {
  a = cljs.tools.reader.reader_types.read_char.call(null, b);
  switch(a) {
    case "t":
      return "\t";
    case "r":
      return "\r";
    case "n":
      return "\n";
    case "\\":
      return "\\";
    case '"':
      return '"';
    case "b":
      return "\b";
    case "f":
      return "\f";
    case "u":
      return a = cljs.tools.reader.reader_types.read_char.call(null, b), -1 === parseInt(a | 0, 16) ? cljs.tools.reader.impl.errors.throw_invalid_unicode_escape.call(null, b, a) : cljs.tools.reader.edn.read_unicode_char.call(null, b, a, 16, 4, !0);
    default:
      return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, a) ? (a = cljs.tools.reader.edn.read_unicode_char.call(null, b, a, 8, 3, !1), 255 < (a | 0) ? cljs.tools.reader.impl.errors.throw_bad_octal_number.call(null, b) : a) : cljs.tools.reader.impl.errors.throw_bad_escape_char.call(null, b, a);
  }
};
cljs.tools.reader.edn.read_string_STAR_ = function(a, b, c) {
  for (var d = new goog.string.StringBuffer, e = cljs.tools.reader.reader_types.read_char.call(null, a);;) {
    b = e;
    if (cljs.core._EQ_.call(null, null, b)) {
      return cljs.tools.reader.impl.errors.throw_eof_reading.call(null, a, new cljs.core.Keyword(null, "string", "string", -1989541586), '"', d);
    }
    if (cljs.core._EQ_.call(null, "\\", b)) {
      b = function() {
        var b = d;
        b.append(cljs.tools.reader.edn.escape_char.call(null, d, a));
        return b;
      }(), c = cljs.tools.reader.reader_types.read_char.call(null, a), d = b, e = c;
    } else {
      if (cljs.core._EQ_.call(null, '"', b)) {
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("");
      }
      b = function() {
        var a = d;
        a.append(e);
        return a;
      }();
      c = cljs.tools.reader.reader_types.read_char.call(null, a);
      d = b;
      e = c;
    }
  }
};
cljs.tools.reader.edn.read_symbol = function(a, b) {
  b = cljs.tools.reader.edn.read_token.call(null, a, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), b);
  if (cljs.core.truth_(b)) {
    switch(b) {
      case "nil":
        return null;
      case "true":
        return !0;
      case "false":
        return !1;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
      default:
        var c = cljs.tools.reader.impl.commons.parse_symbol.call(null, b);
        c = cljs.core.truth_(c) ? cljs.core.symbol.call(null, c.call(null, 0), c.call(null, 1)) : null;
        return cljs.core.truth_(c) ? c : cljs.tools.reader.impl.errors.throw_invalid.call(null, a, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), b);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_keyword = function(a, b, c) {
  b = cljs.tools.reader.reader_types.read_char.call(null, a);
  if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, b)) {
    return cljs.tools.reader.impl.errors.throw_single_colon.call(null, a);
  }
  b = cljs.tools.reader.edn.read_token.call(null, a, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), b);
  var d = cljs.tools.reader.impl.commons.parse_symbol.call(null, b);
  return cljs.core.truth_(cljs.core.truth_(d) ? -1 === b.indexOf("::") : d) ? (c = d.call(null, 0), d = d.call(null, 1), ":" === cljs.core.nth.call(null, b, 0) ? cljs.tools.reader.impl.errors.throw_invalid.call(null, a, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), b) : cljs.core.keyword.call(null, c, d)) : cljs.tools.reader.impl.errors.throw_invalid.call(null, a, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), b);
};
cljs.tools.reader.edn.wrapping_reader = function(a) {
  return function(b, c, d) {
    return new cljs.core.List(null, a, new cljs.core.List(null, cljs.tools.reader.edn.read.call(null, b, !0, null, d), null, 1, null), 2, null);
  };
};
cljs.tools.reader.edn.read_meta = function(a, b, c) {
  b = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.edn.read.call(null, a, !0, null, c));
  cljs.core.map_QMARK_.call(null, b) || cljs.tools.reader.impl.errors.throw_bad_metadata.call(null, a, b);
  c = cljs.tools.reader.edn.read.call(null, a, !0, null, c);
  return null != c && (c.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$IMeta$) ? cljs.core.with_meta.call(null, c, cljs.core.merge.call(null, cljs.core.meta.call(null, c), b)) : cljs.tools.reader.impl.errors.throw_bad_metadata_target.call(null, a, c);
};
cljs.tools.reader.edn.read_set = function(a, b, c) {
  b = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "set", "set", 304602554), "}", a, c);
  c = cljs.core.set.call(null, b);
  cljs.core._EQ_.call(null, cljs.core.count.call(null, b), cljs.core.count.call(null, c)) || cljs.tools.reader.impl.errors.throw_dup_keys.call(null, a, new cljs.core.Keyword(null, "set", "set", 304602554), b);
  return c;
};
cljs.tools.reader.edn.read_discard = function(a, b, c) {
  cljs.tools.reader.edn.read.call(null, a, !0, null, !0);
  return a;
};
cljs.tools.reader.edn.read_namespaced_map = function(a, b, c) {
  b = cljs.tools.reader.edn.read_token.call(null, a, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), cljs.tools.reader.reader_types.read_char.call(null, a));
  var d = null == b ? null : cljs.tools.reader.impl.commons.parse_symbol.call(null, b);
  d = null == d ? null : cljs.tools.reader.impl.utils.second_SINGLEQUOTE_.call(null, d);
  return cljs.core.truth_(d) ? "{" === cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, a) ? (c = cljs.tools.reader.edn.read_delimited.call(null, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), "}", a, c), cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, c)) && cljs.tools.reader.impl.errors.throw_odd_map.call(null, a, null, null, c), b = cljs.tools.reader.impl.utils.namespace_keys.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""), 
  cljs.core.take_nth.call(null, 2, c)), c = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, c)), cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.set.call(null, b)), cljs.core.count.call(null, b)) || cljs.tools.reader.impl.errors.throw_dup_keys.call(null, a, new cljs.core.Keyword(null, "namespaced-map", "namespaced-map", 1235665380), b), cljs.core.zipmap.call(null, b, c)) : cljs.tools.reader.impl.errors.throw_ns_map_no_map.call(null, a, b) : cljs.tools.reader.impl.errors.throw_bad_ns.call(null, 
  a, b);
};
cljs.tools.reader.edn.read_symbolic_value = function(a, b, c) {
  b = cljs.tools.reader.edn.read.call(null, a, !0, null, c);
  return cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "NaN", "NaN", 666918153, null), b) ? Number.NaN : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "-Inf", "-Inf", -2123243689, null), b) ? Number.NEGATIVE_INFINITY : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Inf", "Inf", 647172781, null), b) ? Number.POSITIVE_INFINITY : cljs.tools.reader.impl.errors.reader_error.call(null, a, ["Invalid token: ##", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.tools.reader.edn.macros = function(a) {
  switch(a) {
    case '"':
      return cljs.tools.reader.edn.read_string_STAR_;
    case ":":
      return cljs.tools.reader.edn.read_keyword;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
    case "^":
      return cljs.tools.reader.edn.read_meta;
    case "(":
      return cljs.tools.reader.edn.read_list;
    case ")":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
    case "[":
      return cljs.tools.reader.edn.read_vector;
    case "]":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
    case "{":
      return cljs.tools.reader.edn.read_map;
    case "}":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
    case "\\":
      return cljs.tools.reader.edn.read_char_STAR_;
    case "#":
      return cljs.tools.reader.edn.read_dispatch;
    default:
      return null;
  }
};
cljs.tools.reader.edn.dispatch_macros = function(a) {
  switch(a) {
    case "^":
      return cljs.tools.reader.edn.read_meta;
    case "{":
      return cljs.tools.reader.edn.read_set;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
    case "_":
      return cljs.tools.reader.edn.read_discard;
    case ":":
      return cljs.tools.reader.edn.read_namespaced_map;
    case "#":
      return cljs.tools.reader.edn.read_symbolic_value;
    default:
      return null;
  }
};
cljs.tools.reader.edn.read_tagged = function(a, b, c) {
  b = cljs.tools.reader.edn.read.call(null, a, !0, null, c);
  var d = cljs.tools.reader.edn.read.call(null, a, !0, null, c);
  b instanceof cljs.core.Symbol || cljs.tools.reader.impl.errors.throw_bad_reader_tag.call(null, a, "Reader tag must be a symbol");
  var e = cljs.core.get.call(null, (new cljs.core.Keyword(null, "readers", "readers", -2118263030)).cljs$core$IFn$_invoke$arity$1(c), b);
  e = cljs.core.truth_(e) ? e : cljs.tools.reader.default_data_readers.call(null, b);
  if (cljs.core.truth_(e)) {
    return e.call(null, d);
  }
  c = (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(c);
  return cljs.core.truth_(c) ? c.call(null, b, d) : cljs.tools.reader.impl.errors.throw_unknown_reader_tag.call(null, a, b);
};
cljs.tools.reader.edn.read = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.edn.read.call(null, cljs.core.PersistentArrayMap.EMPTY, a);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  var c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "eof", "eof", -489063237)), d = !cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, b, d, c, a);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  try {
    for (;;) {
      var e = cljs.tools.reader.reader_types.read_char.call(null, a);
      if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, e)) {
        if (null == e) {
          return cljs.core.truth_(b) ? cljs.tools.reader.impl.errors.throw_eof_error.call(null, a, null) : c;
        }
        if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, a, e)) {
          return cljs.tools.reader.edn.read_number.call(null, a, e, d);
        }
        var f = cljs.tools.reader.edn.macros.call(null, e);
        if (cljs.core.truth_(f)) {
          var g = f.call(null, a, e, d);
          if (g !== a) {
            return g;
          }
        } else {
          return cljs.tools.reader.edn.read_symbol.call(null, a, e);
        }
      }
    }
  } catch (h) {
    if (h instanceof Error) {
      b = h;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, b)) {
        c = cljs.core.ex_data.call(null, b);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(c))) {
          throw b;
        }
        throw cljs.core.ex_info.call(null, b.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), c, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), b);
      }
      throw cljs.core.ex_info.call(null, b.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
      a), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, a), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, a)], null) : null), b);
    }
    throw h;
  }
};
cljs.tools.reader.edn.read.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_string = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), a);
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.truth_(cljs.core.truth_(b) ? cljs.core.not_EQ_.call(null, b, "") : b) ? cljs.tools.reader.edn.read.call(null, a, cljs.tools.reader.reader_types.string_push_back_reader.call(null, b)) : null;
};
cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity = 2;
cljs.reader = {};
cljs.reader.zero_fill_right_and_truncate = function(a, b) {
  if (cljs.core._EQ_.call(null, b, cljs.core.count.call(null, a))) {
    return a;
  }
  if (b < cljs.core.count.call(null, a)) {
    return cljs.core.subs.call(null, a, 0, b);
  }
  for (a = new goog.string.StringBuffer(a);;) {
    if (a.getLength() < b) {
      a = a.append("0");
    } else {
      return a.toString();
    }
  }
};
cljs.reader.divisible_QMARK_ = function(a, b) {
  return 0 === cljs.core.mod.call(null, a, b);
};
cljs.reader.indivisible_QMARK_ = function(a, b) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, a, b));
};
cljs.reader.leap_year_QMARK_ = function(a) {
  var b = cljs.reader.divisible_QMARK_.call(null, a, 4);
  return cljs.core.truth_(b) ? (b = cljs.reader.indivisible_QMARK_.call(null, a, 100), cljs.core.truth_(b) ? b : cljs.reader.divisible_QMARK_.call(null, a, 400)) : b;
};
cljs.reader.days_in_month = function() {
  var a = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null), b = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(a, b) {
    return function(c, d) {
      return cljs.core.get.call(null, cljs.core.truth_(d) ? b : a, c);
    };
  }(a, b);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function(a) {
  a = parseInt(a, 10);
  return cljs.core.not.call(null, isNaN(a)) ? a : null;
};
cljs.reader.check = function(a, b, c, d) {
  if (!(a <= b && b <= c)) {
    throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), " Failed:  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "\x3c\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "\x3c\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""));
  }
  return b;
};
cljs.reader.parse_and_validate_timestamp = function(a) {
  var b = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, a);
  cljs.core.nth.call(null, b, 0, null);
  var c = cljs.core.nth.call(null, b, 1, null), d = cljs.core.nth.call(null, b, 2, null), e = cljs.core.nth.call(null, b, 3, null), f = cljs.core.nth.call(null, b, 4, null), g = cljs.core.nth.call(null, b, 5, null), h = cljs.core.nth.call(null, b, 6, null), k = cljs.core.nth.call(null, b, 7, null), l = cljs.core.nth.call(null, b, 8, null), m = cljs.core.nth.call(null, b, 9, null), n = cljs.core.nth.call(null, b, 10, null);
  if (cljs.core.not.call(null, b)) {
    throw Error(["Unrecognized date/time syntax: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
  a = cljs.reader.parse_int.call(null, c);
  b = function() {
    var a = cljs.reader.parse_int.call(null, d);
    return cljs.core.truth_(a) ? a : 1;
  }();
  c = function() {
    var a = cljs.reader.parse_int.call(null, e);
    return cljs.core.truth_(a) ? a : 1;
  }();
  var p = function() {
    var a = cljs.reader.parse_int.call(null, f);
    return cljs.core.truth_(a) ? a : 0;
  }(), q = function() {
    var a = cljs.reader.parse_int.call(null, g);
    return cljs.core.truth_(a) ? a : 0;
  }(), r = function() {
    var a = cljs.reader.parse_int.call(null, h);
    return cljs.core.truth_(a) ? a : 0;
  }(), t = function() {
    var a = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, k, 3));
    return cljs.core.truth_(a) ? a : 0;
  }();
  l = cljs.core._EQ_.call(null, l, "-") ? -1 : 1;
  var u = function() {
    var a = cljs.reader.parse_int.call(null, m);
    return cljs.core.truth_(a) ? a : 0;
  }(), v = function() {
    var a = cljs.reader.parse_int.call(null, n);
    return cljs.core.truth_(a) ? a : 0;
  }();
  l *= 60 * u + v;
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.reader.check.call(null, 1, b, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, c, cljs.reader.days_in_month.call(null, b, cljs.reader.leap_year_QMARK_.call(null, a)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, p, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check.call(null, 0, q, 59, "timestamp minute field must be in range 0..59"), 
  cljs.reader.check.call(null, 0, r, cljs.core._EQ_.call(null, q, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, t, 999, "timestamp millisecond field must be in range 0..999"), l], null);
};
cljs.reader.parse_timestamp = function(a) {
  var b = cljs.reader.parse_and_validate_timestamp.call(null, a);
  if (cljs.core.truth_(b)) {
    a = cljs.core.nth.call(null, b, 0, null);
    var c = cljs.core.nth.call(null, b, 1, null), d = cljs.core.nth.call(null, b, 2, null), e = cljs.core.nth.call(null, b, 3, null), f = cljs.core.nth.call(null, b, 4, null), g = cljs.core.nth.call(null, b, 5, null), h = cljs.core.nth.call(null, b, 6, null);
    b = cljs.core.nth.call(null, b, 7, null);
    return new Date(Date.UTC(a, c - 1, d, e, f, g, h) - 6E4 * b);
  }
  throw Error(["Unrecognized date/time syntax: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.reader.read_date = function(a) {
  if ("string" === typeof a) {
    return cljs.reader.parse_timestamp.call(null, a);
  }
  throw Error("Instance literal expects a string for its timestamp.");
};
cljs.reader.read_queue = function(a) {
  if (cljs.core.vector_QMARK_.call(null, a)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, a);
  }
  throw Error("Queue literal expects a vector for its elements.");
};
cljs.reader.read_js = function(a) {
  if (cljs.core.vector_QMARK_.call(null, a)) {
    var b = [];
    a = cljs.core.seq.call(null, a);
    for (var c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = cljs.core._nth.call(null, c, e);
        b.push(f);
        e += 1;
      } else {
        if (a = cljs.core.seq.call(null, a)) {
          c = a, cljs.core.chunked_seq_QMARK_.call(null, c) ? (a = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = a, d = cljs.core.count.call(null, a), a = e) : (a = cljs.core.first.call(null, c), b.push(a), a = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return b;
  }
  if (cljs.core.map_QMARK_.call(null, a)) {
    b = {};
    a = cljs.core.seq.call(null, a);
    c = null;
    for (e = d = 0;;) {
      if (e < d) {
        var g = cljs.core._nth.call(null, c, e);
        f = cljs.core.nth.call(null, g, 0, null);
        g = cljs.core.nth.call(null, g, 1, null);
        goog.object.set(b, cljs.core.name.call(null, f), g);
        e += 1;
      } else {
        if (a = cljs.core.seq.call(null, a)) {
          cljs.core.chunked_seq_QMARK_.call(null, a) ? (d = cljs.core.chunk_first.call(null, a), a = cljs.core.chunk_rest.call(null, a), c = d, d = cljs.core.count.call(null, d)) : (d = cljs.core.first.call(null, a), c = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), goog.object.set(b, cljs.core.name.call(null, c), d), a = cljs.core.next.call(null, a), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return b;
  }
  throw Error("JS literal expects a vector or map containing only string or unqualified keyword keys");
};
cljs.reader.read_uuid = function(a) {
  if ("string" === typeof a) {
    return cljs.core.uuid.call(null, a);
  }
  throw Error("UUID literal expects a string as its representation.");
};
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null, "inst", "inst", -2008473268, null), cljs.reader.read_date, new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.reader.read_uuid, new cljs.core.Symbol(null, "queue", "queue", -1198599890, null), cljs.reader.read_queue, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.reader.read_js], null), cljs.core.PersistentArrayMap.EMPTY));
cljs.reader.read = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.edn.read.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_), new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), a);
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, cljs.core.update.call(null, cljs.core.merge.call(null, c, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null)), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(a, b, c, d) {
    return function(a) {
      return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), a);
    };
  }(a, c, c, d)), b);
};
cljs.reader.read.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.tools.reader.edn.read.call(null, a, b, c, cljs.core.update.call(null, cljs.core.merge.call(null, d, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null)), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(a) {
    return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), a);
  }));
};
cljs.reader.read.cljs$lang$maxFixedArity = 4;
cljs.reader.read_string = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_), new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), a);
};
cljs.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.tools.reader.edn.read_string.call(null, cljs.core.update.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_)], null), a), new cljs.core.Keyword(null, "readers", "readers", -2118263030), function(a) {
    return cljs.core.merge.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), a);
  }), b);
};
cljs.reader.read_string.cljs$lang$maxFixedArity = 2;
cljs.reader.register_tag_parser_BANG_ = function(a, b) {
  var c = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), a);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, a, b);
  return c;
};
cljs.reader.deregister_tag_parser_BANG_ = function(a) {
  var b = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), a);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, a);
  return b;
};
cljs.reader.register_default_tag_parser_BANG_ = function(a) {
  var b = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(b) {
    return function(b) {
      return a;
    };
  }(b));
  return b;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function() {
  var a = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(a) {
    return function(a) {
      return null;
    };
  }(a));
  return a;
};
var atomist = {encrypt:{}};
atomist.encrypt.generate_key = function() {
  var a = cljs.core.take.call(null, 16, cljs.core.repeatedly.call(null, function() {
    return cljs.core.rand_int.call(null, 20);
  }));
  return cljs_node_io.core.spit.call(null, "key.txt", cljs.core.print_str.call(null, a));
};
atomist.encrypt.read_key = function(a) {
  switch(arguments.length) {
    case 1:
      return atomist.encrypt.read_key.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 0:
      return atomist.encrypt.read_key.cljs$core$IFn$_invoke$arity$0();
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
atomist.encrypt.read_key.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new goog.crypt.Aes(cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.reader.read_string.call(null, a))));
};
atomist.encrypt.read_key.cljs$core$IFn$_invoke$arity$0 = function() {
  return atomist.encrypt.read_key.call(null, cljs_node_io.core.slurp.call(null, "key.txt"));
};
atomist.encrypt.read_key.cljs$lang$maxFixedArity = 1;
atomist.encrypt.block_size = function(a) {
  return a.BLOCK_SIZE;
};
atomist.encrypt.s__GT_blocks = function(a, b) {
  return cljs.core.partition.call(null, 16, 16, cljs.core.take.call(null, 16, cljs.core.repeat.call(null, 32)), cljs.core.map.call(null, function(a) {
    return a.charCodeAt(0);
  }, cljs.core.seq.call(null, b)));
};
atomist.encrypt.encrypt = function(a, b) {
  return cljs.core.flatten.call(null, cljs.core.map.call(null, function(b) {
    return cljs.core.js__GT_clj.call(null, a.encrypt(cljs.core.clj__GT_js.call(null, b)));
  }, atomist.encrypt.s__GT_blocks.call(null, atomist.encrypt.block_size.call(null, a), b)));
};
atomist.encrypt.decrypt = function(a, b) {
  return goog.string.trim(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(a) {
    return cljs.core.char$.call(null, a);
  }, cljs.core.flatten.call(null, cljs.core.map.call(null, function(b) {
    return cljs.core.js__GT_clj.call(null, a.decrypt(cljs.core.clj__GT_js.call(null, b)));
  }, cljs.core.partition.call(null, 16, b))))));
};
atomist.encrypt.encrypt_vault = function(a) {
  return cljs_node_io.core.spit.call(null, "vault.txt", cljs.core.pr_str.call(null, atomist.encrypt.encrypt.call(null, atomist.encrypt.read_key.call(null), cljs.core.pr_str.call(null, a))));
};
atomist.encrypt.decrypt_vault = function() {
  return cljs.reader.read_string.call(null, atomist.encrypt.decrypt.call(null, atomist.encrypt.read_key.call(null), cljs.reader.read_string.call(null, cljs_node_io.core.slurp.call(null, "vault.txt"))));
};
atomist.encrypt.__GT_env = function(a) {
  return clojure.string.upper_case.call(null, clojure.string.replace_all.call(null, cljs.core.name.call(null, a), /-/, "_"));
};
atomist.encrypt.__GT_env_form = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [atomist.encrypt.__GT_env.call(null, b), a], null);
  }, a));
};
atomist.encrypt.encrypted__GT_clj = function(a, b) {
  return cljs.reader.read_string.call(null, atomist.encrypt.decrypt.call(null, atomist.encrypt.read_key.call(null, a), cljs.reader.read_string.call(null, b)));
};
atomist.encrypt.vault_contents = function(a, b) {
  if (!cljs_node_io.fs.fexists_QMARK_.call(null, b)) {
    throw Error("Assert failed: (fs/fexists? vault)");
  }
  return atomist.encrypt.__GT_env_form.call(null, atomist.encrypt.encrypted__GT_clj.call(null, a, cljs_node_io.core.slurp.call(null, b)));
};
atomist.encrypt.read_vault = function(a, b) {
  if (!cljs_node_io.fs.fexists_QMARK_.call(null, b) || !cljs_node_io.fs.fexists_QMARK_.call(null, a)) {
    throw Error("Assert failed: (and (fs/fexists? f2) (fs/fexists? f1))");
  }
  return atomist.encrypt.vault_contents.call(null, cljs_node_io.core.slurp.call(null, a), b);
};
atomist.encrypt.or_empty_map = function(a, b, c) {
  try {
    return a.call(null, b, c);
  } catch (d) {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
atomist.encrypt.or_empty_string = function(a, b) {
  try {
    return a.call(null, b);
  } catch (c) {
    return "";
  }
};
atomist.encrypt.edit_vault = function(a, b, c) {
  if (!cljs_node_io.fs.fexists_QMARK_.call(null, a)) {
    throw Error("Assert failed: (fs/fexists? f1)");
  }
  a = cljs_node_io.core.slurp.call(null, a);
  return cljs.core.pr_str.call(null, atomist.encrypt.encrypt.call(null, atomist.encrypt.read_key.call(null, a), cljs.core.pr_str.call(null, c.call(null, atomist.encrypt.or_empty_map.call(null, atomist.encrypt.encrypted__GT_clj, a, atomist.encrypt.or_empty_string.call(null, cljs_node_io.core.slurp, b))))));
};
atomist.encrypt.merge_vault = function(a, b, c) {
  if (!cljs.core.map_QMARK_.call(null, c)) {
    throw Error("Assert failed: (map? m)");
  }
  return atomist.encrypt.edit_vault.call(null, a, b, function(a) {
    return cljs.core.merge.call(null, a, c);
  });
};
clojure.set = {};
clojure.set.bubble_max_key = function(a, b) {
  a = cljs.core.apply.call(null, cljs.core.max_key, a, b);
  return cljs.core.cons.call(null, a, cljs.core.remove.call(null, function(a) {
    return function(b) {
      return a === b;
    };
  }(a), b));
};
clojure.set.union = function(a) {
  switch(arguments.length) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.count.call(null, a) < cljs.core.count.call(null, b) ? cljs.core.reduce.call(null, cljs.core.conj, b, a) : cljs.core.reduce.call(null, cljs.core.conj, a, b);
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, c, b, a));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, a), cljs.core.rest.call(null, a));
};
clojure.set.union.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function(a) {
  switch(arguments.length) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (cljs.core.count.call(null, b) < cljs.core.count.call(null, a)) {
      var c = a;
      a = b;
      b = c;
    } else {
      return cljs.core.reduce.call(null, function(a, b) {
        return function(a, c) {
          return cljs.core.contains_QMARK_.call(null, b, c) ? a : cljs.core.disj.call(null, a, c);
        };
      }(a, b), a, a);
    }
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = clojure.set.bubble_max_key.call(null, function(a) {
    return -cljs.core.count.call(null, a);
  }, cljs.core.conj.call(null, c, b, a));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, a), cljs.core.rest.call(null, a));
};
clojure.set.intersection.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function(a) {
  switch(arguments.length) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.count.call(null, a) < cljs.core.count.call(null, b) ? cljs.core.reduce.call(null, function(a, d) {
    return cljs.core.contains_QMARK_.call(null, b, d) ? cljs.core.disj.call(null, a, d) : a;
  }, a, a) : cljs.core.reduce.call(null, cljs.core.disj, a, b);
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.call(null, clojure.set.difference, a, cljs.core.conj.call(null, c, b));
};
clojure.set.difference.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    return cljs.core.truth_(a.call(null, d)) ? b : cljs.core.disj.call(null, b, d);
  }, b, b);
};
clojure.set.project = function(a, b) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(a) {
    return cljs.core.select_keys.call(null, a, b);
  }, a));
};
clojure.set.rename_keys = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    var c = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    return cljs.core.contains_QMARK_.call(null, a, c) ? cljs.core.assoc.call(null, b, d, cljs.core.get.call(null, a, c)) : b;
  }, cljs.core.apply.call(null, cljs.core.dissoc, a, cljs.core.keys.call(null, b)), b);
};
clojure.set.rename = function(a, b) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(a) {
    return clojure.set.rename_keys.call(null, a, b);
  }, a));
};
clojure.set.index = function(a, b) {
  return cljs.core.reduce.call(null, function(a, d) {
    var c = cljs.core.select_keys.call(null, d, b);
    return cljs.core.assoc.call(null, a, c, cljs.core.conj.call(null, cljs.core.get.call(null, a, c, cljs.core.PersistentHashSet.EMPTY), d));
  }, cljs.core.PersistentArrayMap.EMPTY, a);
};
clojure.set.map_invert = function(a) {
  return cljs.core.reduce.call(null, function(a, c) {
    var b = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    return cljs.core.assoc.call(null, a, c, b);
  }, cljs.core.PersistentArrayMap.EMPTY, a);
};
clojure.set.join = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.seq.call(null, a) && cljs.core.seq.call(null, b)) {
    var c = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, a))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, b))));
    a = cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
    b = cljs.core.nth.call(null, a, 0, null);
    var d = cljs.core.nth.call(null, a, 1, null), e = clojure.set.index.call(null, b, c);
    return cljs.core.reduce.call(null, function(a, b, c, d, e) {
      return function(f, g) {
        var h = e.call(null, cljs.core.select_keys.call(null, g, a));
        return cljs.core.truth_(h) ? cljs.core.reduce.call(null, function(a, b, c, d, e, f) {
          return function(a, b) {
            return cljs.core.conj.call(null, a, cljs.core.merge.call(null, b, g));
          };
        }(h, a, b, c, d, e), f, h) : f;
      };
    }(c, a, b, d, e), cljs.core.PersistentHashSet.EMPTY, d);
  }
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, clojure.set.map_invert.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, c], null);
  b = cljs.core.nth.call(null, a, 0, null);
  c = cljs.core.nth.call(null, a, 1, null);
  var d = cljs.core.nth.call(null, a, 2, null), e = clojure.set.index.call(null, b, cljs.core.vals.call(null, d));
  return cljs.core.reduce.call(null, function(a, b, c, d, e) {
    return function(f, g) {
      var h = e.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, g, cljs.core.keys.call(null, d)), d));
      return cljs.core.truth_(h) ? cljs.core.reduce.call(null, function(a, b, c, d, e, f) {
        return function(a, b) {
          return cljs.core.conj.call(null, a, cljs.core.merge.call(null, b, g));
        };
      }(h, a, b, c, d, e), f, h) : f;
    };
  }(a, b, c, d, e), cljs.core.PersistentHashSet.EMPTY, c);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function(a, b) {
  return cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) && cljs.core.every_QMARK_.call(null, function(a) {
    return cljs.core.contains_QMARK_.call(null, b, a);
  }, a);
};
clojure.set.superset_QMARK_ = function(a, b) {
  return cljs.core.count.call(null, a) >= cljs.core.count.call(null, b) && cljs.core.every_QMARK_.call(null, function(b) {
    return cljs.core.contains_QMARK_.call(null, a, b);
  }, b);
};
clojure.walk = {};
clojure.walk.walk = function(a, b, c) {
  return cljs.core.list_QMARK_.call(null, c) ? b.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, a, c))) : cljs.core.map_entry_QMARK_.call(null, c) ? b.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, a, c))) : cljs.core.seq_QMARK_.call(null, c) ? b.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, a, c))) : cljs.core.record_QMARK_.call(null, c) ? b.call(null, cljs.core.reduce.call(null, function(b, c) {
    return cljs.core.conj.call(null, b, a.call(null, c));
  }, c, c)) : cljs.core.coll_QMARK_.call(null, c) ? b.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, c), cljs.core.map.call(null, a, c))) : b.call(null, c);
};
clojure.walk.postwalk = function(a, b) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, a), a, b);
};
clojure.walk.prewalk = function(a, b) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, a), cljs.core.identity, a.call(null, b));
};
clojure.walk.keywordize_keys = function(a) {
  return clojure.walk.postwalk.call(null, function(a) {
    return function(b) {
      return cljs.core.map_QMARK_.call(null, b) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, a, b)) : b;
    };
  }(function(a) {
    var b = cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return "string" === typeof b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, b), a], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
  }), a);
};
clojure.walk.stringify_keys = function(a) {
  return clojure.walk.postwalk.call(null, function(a) {
    return function(b) {
      return cljs.core.map_QMARK_.call(null, b) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, a, b)) : b;
    };
  }(function(a) {
    var b = cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return b instanceof cljs.core.Keyword ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, b), a], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
  }), a);
};
clojure.walk.prewalk_replace = function(a, b) {
  return clojure.walk.prewalk.call(null, function(b) {
    return cljs.core.contains_QMARK_.call(null, a, b) ? a.call(null, b) : b;
  }, b);
};
clojure.walk.postwalk_replace = function(a, b) {
  return clojure.walk.postwalk.call(null, function(b) {
    return cljs.core.contains_QMARK_.call(null, a, b) ? a.call(null, b) : b;
  }, b);
};
var com = {rpl:{}};
com.rpl.specter = {};
com.rpl.specter.protocols = {};
com.rpl.specter.protocols.RichNavigator = function() {
};
com.rpl.specter.protocols.select_STAR_ = function(a, b, c, d) {
  if (null != a && null != a.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4) {
    return a.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4(a, b, c, d);
  }
  var e = com.rpl.specter.protocols.select_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = com.rpl.specter.protocols.select_STAR_._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "RichNavigator.select*", a);
};
com.rpl.specter.protocols.transform_STAR_ = function(a, b, c, d) {
  if (null != a && null != a.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4) {
    return a.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4(a, b, c, d);
  }
  var e = com.rpl.specter.protocols.transform_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = com.rpl.specter.protocols.transform_STAR_._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "RichNavigator.transform*", a);
};
com.rpl.specter.protocols.Collector = function() {
};
com.rpl.specter.protocols.collect_val = function(a, b) {
  if (null != a && null != a.com$rpl$specter$protocols$Collector$collect_val$arity$2) {
    return a.com$rpl$specter$protocols$Collector$collect_val$arity$2(a, b);
  }
  var c = com.rpl.specter.protocols.collect_val[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.protocols.collect_val._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Collector.collect-val", a);
};
com.rpl.specter.protocols.ImplicitNav = function() {
};
com.rpl.specter.protocols.implicit_nav = function(a) {
  if (null != a && null != a.com$rpl$specter$protocols$ImplicitNav$implicit_nav$arity$1) {
    return a.com$rpl$specter$protocols$ImplicitNav$implicit_nav$arity$1(a);
  }
  var b = com.rpl.specter.protocols.implicit_nav[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = com.rpl.specter.protocols.implicit_nav._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "ImplicitNav.implicit-nav", a);
};
com.rpl.specter.impl = {};
com.rpl.specter.impl.NONE = new cljs.core.Keyword("com.rpl.specter.impl", "NONE", "com.rpl.specter.impl/NONE", 1085349969);
com.rpl.specter.impl.spy = function(a) {
  cljs.core.println.call(null, "SPY:");
  cljs.core.println.call(null, cljs.core.pr_str.call(null, a));
  return a;
};
com.rpl.specter.impl.smart_str_STAR_ = function(a) {
  return cljs.core.coll_QMARK_.call(null, a) ? cljs.core.pr_str.call(null, a) : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
};
com.rpl.specter.impl.smart_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return com.rpl.specter.impl.smart_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
com.rpl.specter.impl.smart_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, com.rpl.specter.impl.smart_str_STAR_, a));
};
com.rpl.specter.impl.smart_str.cljs$lang$maxFixedArity = 0;
com.rpl.specter.impl.smart_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
com.rpl.specter.impl.fast_constantly = function(a) {
  return function() {
    var b = null, c = function() {
      var b = function(b, c, d, h, k, l, m, n, p, q, r) {
        if (10 < arguments.length) {
          for (var e = 0, f = Array(arguments.length - 10); e < f.length;) {
            f[e] = arguments[e + 10], ++e;
          }
          new cljs.core.IndexedSeq(f, 0, null);
        }
        return a;
      };
      b.cljs$lang$maxFixedArity = 10;
      b.cljs$lang$applyTo = function(b) {
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        b = cljs.core.next(b);
        cljs.core.first(b);
        cljs.core.rest(b);
        return a;
      };
      b.cljs$core$IFn$_invoke$arity$variadic = function(b, c, d, h, k, l, m, n, p, q, r) {
        return a;
      };
      return b;
    }();
    b = function(b, e, f, g, h, k, l, m, n, p, q) {
      switch(arguments.length) {
        case 0:
          return a;
        case 1:
          return a;
        case 2:
          return a;
        case 3:
          return a;
        case 4:
          return a;
        case 5:
          return a;
        case 6:
          return a;
        case 7:
          return a;
        case 8:
          return a;
        case 9:
          return a;
        case 10:
          return a;
        default:
          var d = null;
          if (10 < arguments.length) {
            d = 0;
            for (var t = Array(arguments.length - 10); d < t.length;) {
              t[d] = arguments[d + 10], ++d;
            }
            d = new cljs.core.IndexedSeq(t, 0, null);
          }
          return c.cljs$core$IFn$_invoke$arity$variadic(b, e, f, g, h, k, l, m, n, p, d);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 10;
    b.cljs$lang$applyTo = c.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$1 = function(b) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$3 = function(b, c, f) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$4 = function(b, c, f, g) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$5 = function(b, c, f, g, h) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$6 = function(b, c, f, g, h, k) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$7 = function(b, c, f, g, h, k, l) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$8 = function(b, c, f, g, h, k, l, m) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$9 = function(b, c, f, g, h, k, l, m, n) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$10 = function(b, c, f, g, h, k, l, m, n, p) {
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$variadic = c.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
com.rpl.specter.impl.throw_illegal = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return com.rpl.specter.impl.throw_illegal.cljs$core$IFn$_invoke$arity$variadic(b);
};
com.rpl.specter.impl.throw_illegal.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  throw Error(cljs.core.apply.call(null, cljs.core.str, a));
};
com.rpl.specter.impl.throw_illegal.cljs$lang$maxFixedArity = 0;
com.rpl.specter.impl.throw_illegal.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
com.rpl.specter.impl.cljs_analyzer_macroexpand_1 = function() {
  return cljs.analyzer.macroexpand_1;
};
com.rpl.specter.impl.clj_macroexpand_all = function(a) {
  return com.rpl.specter.impl.throw_illegal.call(null, "not implemented");
};
com.rpl.specter.impl.intern_STAR_ = function(a, b, c) {
  return com.rpl.specter.impl.throw_illegal.call(null, "intern not supported in ClojureScript");
};
com.rpl.specter.impl.benchmark = function(a, b) {
  var c = cljs.core.system_time.call(null);
  a: {
    for (var d = 0;;) {
      if (d < a) {
        b.call(null), d += 1;
      } else {
        a = null;
        break a;
      }
    }
  }
  cljs.core.prn.call(null, ["Elapsed time: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.system_time.call(null) - c).toFixed(6)), " msecs"].join(""));
  return a;
};
com.rpl.specter.impl.exec_select_STAR_ = function(a, b, c, d) {
  return com.rpl.specter.protocols.select_STAR_.call(null, a, b, c, d);
};
com.rpl.specter.impl.exec_transform_STAR_ = function(a, b, c, d) {
  return com.rpl.specter.protocols.transform_STAR_.call(null, a, b, c, d);
};
com.rpl.specter.impl.PathComposer = function() {
};
com.rpl.specter.impl.do_comp_paths = function(a) {
  if (null != a && null != a.com$rpl$specter$impl$PathComposer$do_comp_paths$arity$1) {
    return a.com$rpl$specter$impl$PathComposer$do_comp_paths$arity$1(a);
  }
  var b = com.rpl.specter.impl.do_comp_paths[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = com.rpl.specter.impl.do_comp_paths._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "PathComposer.do-comp-paths", a);
};
com.rpl.specter.impl.rich_nav_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.com$rpl$specter$protocols$RichNavigator$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, com.rpl.specter.protocols.RichNavigator, a) : cljs.core.native_satisfies_QMARK_.call(null, com.rpl.specter.protocols.RichNavigator, a);
};
com.rpl.specter.impl.comp_paths_STAR_ = function(a) {
  return cljs.core.truth_(com.rpl.specter.impl.rich_nav_QMARK_.call(null, a)) ? a : com.rpl.specter.impl.do_comp_paths.call(null, a);
};
com.rpl.specter.impl.coerce_object = function(a) {
  return cljs.core.truth_(com.rpl.specter.impl.rich_nav_QMARK_.call(null, a)) ? a : (null != a ? cljs.core.PROTOCOL_SENTINEL === a.com$rpl$specter$protocols$ImplicitNav$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, com.rpl.specter.protocols.ImplicitNav, a)) : cljs.core.native_satisfies_QMARK_.call(null, com.rpl.specter.protocols.ImplicitNav, a)) ? com.rpl.specter.protocols.implicit_nav.call(null, a) : com.rpl.specter.impl.throw_illegal.call(null, "Not a navigator: ", 
  a, " ", cljs.core.pr_str.call(null, cljs.core.type.call(null, a)));
};
com.rpl.specter.impl.CoercePath = function() {
};
com.rpl.specter.impl.coerce_path = function(a) {
  if (null != a && null != a.com$rpl$specter$impl$CoercePath$coerce_path$arity$1) {
    return a.com$rpl$specter$impl$CoercePath$coerce_path$arity$1(a);
  }
  var b = com.rpl.specter.impl.coerce_path[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = com.rpl.specter.impl.coerce_path._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "CoercePath.coerce-path", a);
};
goog.object.set(com.rpl.specter.impl.CoercePath, "null", !0);
goog.object.set(com.rpl.specter.impl.coerce_path, "null", function(a) {
  return com.rpl.specter.impl.coerce_object.call(null, a);
});
cljs.core.PersistentVector.prototype.com$rpl$specter$impl$CoercePath$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.com$rpl$specter$impl$CoercePath$coerce_path$arity$1 = function(a) {
  return com.rpl.specter.impl.do_comp_paths.call(null, this);
};
cljs.core.IndexedSeq.prototype.com$rpl$specter$impl$CoercePath$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.com$rpl$specter$impl$CoercePath$coerce_path$arity$1 = function(a) {
  return com.rpl.specter.impl.coerce_path.call(null, cljs.core.vec.call(null, this));
};
cljs.core.EmptyList.prototype.com$rpl$specter$impl$CoercePath$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.com$rpl$specter$impl$CoercePath$coerce_path$arity$1 = function(a) {
  return com.rpl.specter.impl.coerce_path.call(null, cljs.core.vec.call(null, this));
};
cljs.core.List.prototype.com$rpl$specter$impl$CoercePath$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.com$rpl$specter$impl$CoercePath$coerce_path$arity$1 = function(a) {
  return com.rpl.specter.impl.coerce_path.call(null, cljs.core.vec.call(null, this));
};
cljs.core.LazySeq.prototype.com$rpl$specter$impl$CoercePath$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.com$rpl$specter$impl$CoercePath$coerce_path$arity$1 = function(a) {
  return com.rpl.specter.impl.coerce_path.call(null, cljs.core.vec.call(null, this));
};
cljs.core.Subvec.prototype.com$rpl$specter$impl$CoercePath$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.com$rpl$specter$impl$CoercePath$coerce_path$arity$1 = function(a) {
  return com.rpl.specter.impl.coerce_path.call(null, cljs.core.vec.call(null, this));
};
goog.object.set(com.rpl.specter.impl.CoercePath, "_", !0);
goog.object.set(com.rpl.specter.impl.coerce_path, "_", function(a) {
  return com.rpl.specter.impl.coerce_object.call(null, a);
});
com.rpl.specter.impl.STAY_STAR_ = function() {
  "undefined" === typeof com.rpl.specter.impl.t_com$rpl$specter$impl2110 && (com.rpl.specter.impl.t_com$rpl$specter$impl2110 = function(a) {
    this.meta2111 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2110.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2110(b);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2110.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta2111;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2110.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.impl.t_com$rpl$specter$impl2110.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return d.call(null, b, c);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2110.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    return d.call(null, b, c);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2110.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2111", "meta2111", 974482198, null)], null);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2110.cljs$lang$type = !0, com.rpl.specter.impl.t_com$rpl$specter$impl2110.cljs$lang$ctorStr = "com.rpl.specter.impl/t_com$rpl$specter$impl2110", com.rpl.specter.impl.t_com$rpl$specter$impl2110.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter.impl/t_com$rpl$specter$impl2110");
  }, com.rpl.specter.impl.__GT_t_com$rpl$specter$impl2110 = function(a) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2110(a);
  });
  return new com.rpl.specter.impl.t_com$rpl$specter$impl2110(cljs.core.PersistentArrayMap.EMPTY);
}();
com.rpl.specter.impl.combine_two_navs = function(a, b) {
  "undefined" === typeof com.rpl.specter.impl.t_com$rpl$specter$impl2113 && (com.rpl.specter.impl.t_com$rpl$specter$impl2113 = function(a, b, e) {
    this.nav1 = a;
    this.nav2 = b;
    this.meta2114 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2113.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2113(this.nav1, this.nav2, b);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2113.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta2114;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2113.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.impl.t_com$rpl$specter$impl2113.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, e, f) {
    var c = this;
    return com.rpl.specter.impl.exec_select_STAR_.call(null, c.nav1, b, e, function(a) {
      return function(a, b) {
        return com.rpl.specter.impl.exec_select_STAR_.call(null, c.nav2, a, b, f);
      };
    }(this));
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2113.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, e, f) {
    var c = this;
    return com.rpl.specter.impl.exec_transform_STAR_.call(null, c.nav1, b, e, function(a) {
      return function(a, b) {
        return com.rpl.specter.impl.exec_transform_STAR_.call(null, c.nav2, a, b, f);
      };
    }(this));
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2113.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nav1", "nav1", -228471230, null), new cljs.core.Symbol(null, "nav2", "nav2", 2108276356, null), new cljs.core.Symbol(null, "meta2114", "meta2114", 1607969683, null)], null);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2113.cljs$lang$type = !0, com.rpl.specter.impl.t_com$rpl$specter$impl2113.cljs$lang$ctorStr = "com.rpl.specter.impl/t_com$rpl$specter$impl2113", com.rpl.specter.impl.t_com$rpl$specter$impl2113.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "com.rpl.specter.impl/t_com$rpl$specter$impl2113");
  }, com.rpl.specter.impl.__GT_t_com$rpl$specter$impl2113 = function(a, b, e) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2113(a, b, e);
  });
  return new com.rpl.specter.impl.t_com$rpl$specter$impl2113(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
goog.object.set(com.rpl.specter.impl.PathComposer, "null", !0);
goog.object.set(com.rpl.specter.impl.do_comp_paths, "null", function(a) {
  return com.rpl.specter.impl.coerce_path.call(null, a);
});
goog.object.set(com.rpl.specter.impl.PathComposer, "_", !0);
goog.object.set(com.rpl.specter.impl.do_comp_paths, "_", function(a) {
  return com.rpl.specter.impl.coerce_path.call(null, a);
});
cljs.core.PersistentVector.prototype.com$rpl$specter$impl$PathComposer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.com$rpl$specter$impl$PathComposer$do_comp_paths$arity$1 = function(a) {
  a = cljs.core.map.call(null, com.rpl.specter.impl.coerce_path, this);
  return cljs.core.empty_QMARK_.call(null, a) ? com.rpl.specter.impl.STAY_STAR_ : cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a)) ? cljs.core.first.call(null, a) : cljs.core.reduce.call(null, com.rpl.specter.impl.combine_two_navs, a);
};
com.rpl.specter.impl.PMutableCell = function() {
};
com.rpl.specter.impl.set_cell = function(a, b) {
  if (null != a && null != a.com$rpl$specter$impl$PMutableCell$set_cell$arity$2) {
    return a.com$rpl$specter$impl$PMutableCell$set_cell$arity$2(a, b);
  }
  var c = com.rpl.specter.impl.set_cell[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.impl.set_cell._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "PMutableCell.set_cell", a);
};
com.rpl.specter.impl.MutableCell = function(a) {
  this.q = a;
};
com.rpl.specter.impl.MutableCell.prototype.com$rpl$specter$impl$PMutableCell$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.MutableCell.prototype.com$rpl$specter$impl$PMutableCell$set_cell$arity$2 = function(a, b) {
  return this.q = b;
};
com.rpl.specter.impl.MutableCell.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "q", "q", -1965434072, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411), !0], null))], null);
};
com.rpl.specter.impl.MutableCell.cljs$lang$type = !0;
com.rpl.specter.impl.MutableCell.cljs$lang$ctorStr = "com.rpl.specter.impl/MutableCell";
com.rpl.specter.impl.MutableCell.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/MutableCell");
};
com.rpl.specter.impl.__GT_MutableCell = function(a) {
  return new com.rpl.specter.impl.MutableCell(a);
};
com.rpl.specter.impl.mutable_cell = function(a) {
  switch(arguments.length) {
    case 0:
      return com.rpl.specter.impl.mutable_cell.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return com.rpl.specter.impl.mutable_cell.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
com.rpl.specter.impl.mutable_cell.cljs$core$IFn$_invoke$arity$0 = function() {
  return com.rpl.specter.impl.mutable_cell.call(null, null);
};
com.rpl.specter.impl.mutable_cell.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new com.rpl.specter.impl.MutableCell(a);
};
com.rpl.specter.impl.mutable_cell.cljs$lang$maxFixedArity = 1;
com.rpl.specter.impl.set_cell_BANG_ = function(a, b) {
  return com.rpl.specter.impl.set_cell.call(null, a, b);
};
com.rpl.specter.impl.get_cell = function(a) {
  return a.q;
};
com.rpl.specter.impl.update_cell_BANG_ = function(a, b) {
  b = b.call(null, com.rpl.specter.impl.get_cell.call(null, a));
  com.rpl.specter.impl.set_cell_BANG_.call(null, a, b);
  return b;
};
com.rpl.specter.impl.compiled_traverse_with_vals_STAR_ = function(a, b, c, d) {
  return com.rpl.specter.impl.exec_select_STAR_.call(null, a, c, d, function(a, c) {
    return a === cljs.core.PersistentVector.EMPTY ? b.call(null, c) : b.call(null, cljs.core.conj.call(null, a, c));
  });
};
com.rpl.specter.impl.compiled_traverse_STAR_ = function(a, b, c) {
  return com.rpl.specter.impl.compiled_traverse_with_vals_STAR_.call(null, a, b, cljs.core.PersistentVector.EMPTY, c);
};
com.rpl.specter.impl.do_compiled_traverse_STAR_ = function(a, b) {
  "undefined" === typeof com.rpl.specter.impl.t_com$rpl$specter$impl2121 && (com.rpl.specter.impl.t_com$rpl$specter$impl2121 = function(a, b, e) {
    this.apath = a;
    this.structure = b;
    this.meta2122 = e;
    this.cljs$lang$protocol_mask$partition0$ = 917504;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2121.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2121(this.apath, this.structure, b);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2121.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta2122;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2121.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
    return cljs.core._reduce.call(null, this, b, b.call(null));
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2121.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, e) {
    a = com.rpl.specter.impl.mutable_cell.call(null, e);
    com.rpl.specter.impl.compiled_traverse_STAR_.call(null, this.apath, function(a, c) {
      return function(c) {
        var d = com.rpl.specter.impl.get_cell.call(null, a);
        c = b.call(null, d, c);
        com.rpl.specter.impl.set_cell_BANG_.call(null, a, c);
        return c;
      };
    }(a, this), this.structure);
    return com.rpl.specter.impl.get_cell.call(null, a);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2121.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "apath", "apath", 567854908, null), new cljs.core.Symbol(null, "structure", "structure", -1090603686, null), new cljs.core.Symbol(null, "meta2122", "meta2122", -1621978698, null)], null);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2121.cljs$lang$type = !0, com.rpl.specter.impl.t_com$rpl$specter$impl2121.cljs$lang$ctorStr = "com.rpl.specter.impl/t_com$rpl$specter$impl2121", com.rpl.specter.impl.t_com$rpl$specter$impl2121.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "com.rpl.specter.impl/t_com$rpl$specter$impl2121");
  }, com.rpl.specter.impl.__GT_t_com$rpl$specter$impl2121 = function(a, b, e) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2121(a, b, e);
  });
  return new com.rpl.specter.impl.t_com$rpl$specter$impl2121(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
com.rpl.specter.impl.do_compiled_traverse = function(a, b) {
  var c = com.rpl.specter.impl.do_compiled_traverse_STAR_.call(null, a, b);
  "undefined" === typeof com.rpl.specter.impl.t_com$rpl$specter$impl2124 && (com.rpl.specter.impl.t_com$rpl$specter$impl2124 = function(a, b, c, g) {
    this.apath = a;
    this.structure = b;
    this.traverser = c;
    this.meta2125 = g;
    this.cljs$lang$protocol_mask$partition0$ = 917504;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2124.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new com.rpl.specter.impl.t_com$rpl$specter$impl2124(this.apath, this.structure, this.traverser, b);
    };
  }(c), com.rpl.specter.impl.t_com$rpl$specter$impl2124.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta2125;
    };
  }(c), com.rpl.specter.impl.t_com$rpl$specter$impl2124.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a) {
    return function(a, b) {
      return cljs.core._reduce.call(null, this, b, b.call(null));
    };
  }(c), com.rpl.specter.impl.t_com$rpl$specter$impl2124.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a) {
    return function(a, b, c) {
      a = cljs.core._reduce.call(null, this.traverser, b, c);
      return cljs.core.unreduced.call(null, a);
    };
  }(c), com.rpl.specter.impl.t_com$rpl$specter$impl2124.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "apath", "apath", 567854908, null), new cljs.core.Symbol(null, "structure", "structure", -1090603686, null), new cljs.core.Symbol(null, "traverser", "traverser", 1631431381, null), new cljs.core.Symbol(null, "meta2125", "meta2125", 341884549, null)], null);
    };
  }(c), com.rpl.specter.impl.t_com$rpl$specter$impl2124.cljs$lang$type = !0, com.rpl.specter.impl.t_com$rpl$specter$impl2124.cljs$lang$ctorStr = "com.rpl.specter.impl/t_com$rpl$specter$impl2124", com.rpl.specter.impl.t_com$rpl$specter$impl2124.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "com.rpl.specter.impl/t_com$rpl$specter$impl2124");
    };
  }(c), com.rpl.specter.impl.__GT_t_com$rpl$specter$impl2124 = function(a) {
    return function(a, b, c, d) {
      return new com.rpl.specter.impl.t_com$rpl$specter$impl2124(a, b, c, d);
    };
  }(c));
  return new com.rpl.specter.impl.t_com$rpl$specter$impl2124(a, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
com.rpl.specter.impl.compiled_traverse_all_STAR_ = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.call(null);
      }, e = function(a) {
        return b.call(null, a);
      }, f = function(c, d) {
        return cljs.core.reduce.call(null, function(a, c) {
          return b.call(null, a, c);
        }, c, com.rpl.specter.impl.do_compiled_traverse_STAR_.call(null, a, d));
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
com.rpl.specter.impl.compiled_select_STAR_ = function(a, b) {
  var c = com.rpl.specter.impl.mutable_cell.call(null, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY)), d = function(a) {
    return function(b) {
      var c = com.rpl.specter.impl.get_cell.call(null, a);
      return com.rpl.specter.impl.set_cell_BANG_.call(null, a, cljs.core.conj_BANG_.call(null, c, b));
    };
  }(c);
  com.rpl.specter.impl.compiled_traverse_STAR_.call(null, a, d, b);
  return cljs.core.persistent_BANG_.call(null, com.rpl.specter.impl.get_cell.call(null, c));
};
com.rpl.specter.impl.compiled_select_one_STAR_ = function(a, b) {
  var c = com.rpl.specter.impl.mutable_cell.call(null, com.rpl.specter.impl.NONE), d = function(a) {
    return function(b) {
      return com.rpl.specter.impl.get_cell.call(null, a) === com.rpl.specter.impl.NONE ? com.rpl.specter.impl.set_cell_BANG_.call(null, a, b) : com.rpl.specter.impl.throw_illegal.call(null, "More than one element found in structure: ", b);
    };
  }(c);
  com.rpl.specter.impl.compiled_traverse_STAR_.call(null, a, d, b);
  a = com.rpl.specter.impl.get_cell.call(null, c);
  return a === com.rpl.specter.impl.NONE ? null : a;
};
com.rpl.specter.impl.compiled_select_one_BANG__STAR_ = function(a, b) {
  var c = com.rpl.specter.impl.mutable_cell.call(null, com.rpl.specter.impl.NONE), d = function(a) {
    return function(b) {
      return com.rpl.specter.impl.get_cell.call(null, a) === com.rpl.specter.impl.NONE ? com.rpl.specter.impl.set_cell_BANG_.call(null, a, b) : com.rpl.specter.impl.throw_illegal.call(null, "More than one element found in structure: ", b);
    };
  }(c);
  com.rpl.specter.impl.compiled_traverse_STAR_.call(null, a, d, b);
  a = com.rpl.specter.impl.get_cell.call(null, c);
  com.rpl.specter.impl.NONE === a && com.rpl.specter.impl.throw_illegal.call(null, "Found no elements for select-one! on ", b);
  return a;
};
com.rpl.specter.impl.compiled_select_any_STAR_ = function(a) {
  switch(arguments.length) {
    case 2:
      return com.rpl.specter.impl.compiled_select_any_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return com.rpl.specter.impl.compiled_select_any_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
com.rpl.specter.impl.compiled_select_any_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return com.rpl.specter.impl.compiled_select_any_STAR_.call(null, a, cljs.core.PersistentVector.EMPTY, b);
};
com.rpl.specter.impl.compiled_select_any_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.unreduced.call(null, com.rpl.specter.impl.compiled_traverse_with_vals_STAR_.call(null, a, cljs.core.reduced, b, c));
};
com.rpl.specter.impl.compiled_select_any_STAR_.cljs$lang$maxFixedArity = 3;
com.rpl.specter.impl.compiled_select_first_STAR_ = function(a, b) {
  a = com.rpl.specter.impl.compiled_select_any_STAR_.call(null, a, b);
  return a === com.rpl.specter.impl.NONE ? null : a;
};
com.rpl.specter.impl.compiled_selected_any_QMARK__STAR_ = function(a, b) {
  return com.rpl.specter.impl.NONE !== com.rpl.specter.impl.compiled_select_any_STAR_.call(null, a, b);
};
com.rpl.specter.impl.terminal_STAR_ = function(a, b, c) {
  return b === cljs.core.PersistentVector.EMPTY ? a.call(null, c) : cljs.core.apply.call(null, a, cljs.core.conj.call(null, b, c));
};
com.rpl.specter.impl.compiled_transform_STAR_ = function(a, b, c) {
  return com.rpl.specter.impl.exec_transform_STAR_.call(null, a, cljs.core.PersistentVector.EMPTY, c, function(a, c) {
    return com.rpl.specter.impl.terminal_STAR_.call(null, b, a, c);
  });
};
com.rpl.specter.impl.compiled_vtransform_STAR_ = function(a, b, c) {
  return com.rpl.specter.impl.exec_transform_STAR_.call(null, a, cljs.core.PersistentVector.EMPTY, c, b);
};
com.rpl.specter.impl.fn_invocation_QMARK_ = function(a) {
  return a instanceof cljs.core.LazySeq || cljs.core.list_QMARK_.call(null, a);
};
com.rpl.specter.impl.LocalSym = function(a, b, c, d, e) {
  this.val = a;
  this.sym = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "val":
      return this.val;
    case "sym":
      return this.sym;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LocalSym{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612), this.val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), 
  this.sym], null)], null), this.__extmap));
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "sym", "sym", -1444860305)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LocalSym(this.val, this.sym, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1023826277 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.val, b.val) && cljs.core._EQ_.call(null, this.sym, b.sym) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "sym", "sym", -1444860305), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LocalSym(this.val, this.sym, this.__meta, cljs.core.not_empty.call(null, 
  cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "val", "val", 128701612), b)) ? new com.rpl.specter.impl.LocalSym(c, this.sym, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "sym", "sym", -1444860305), b)) ? new com.rpl.specter.impl.LocalSym(this.val, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LocalSym(this.val, this.sym, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "val", "val", 128701612), this.val, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "sym", "sym", -1444860305), this.sym, null)], null), this.__extmap));
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LocalSym(this.val, this.sym, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LocalSym.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LocalSym.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null)], null);
};
com.rpl.specter.impl.LocalSym.cljs$lang$type = !0;
com.rpl.specter.impl.LocalSym.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LocalSym", null, 1, null);
};
com.rpl.specter.impl.LocalSym.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LocalSym");
};
com.rpl.specter.impl.__GT_LocalSym = function(a, b) {
  return new com.rpl.specter.impl.LocalSym(a, b, null, null, null);
};
com.rpl.specter.impl.map__GT_LocalSym = function(a) {
  return new com.rpl.specter.impl.LocalSym((new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "sym", "sym", -1444860305))), null);
};
com.rpl.specter.impl.VarUse = function(a, b, c, d, e, f) {
  this.val = a;
  this.avar = b;
  this.sym = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "val":
      return this.val;
    case "avar":
      return this.avar;
    case "sym":
      return this.sym;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.VarUse{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612), this.val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "avar", "avar", 1316861611), 
  this.avar], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), this.sym], null)], null), this.__extmap));
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "avar", "avar", 1316861611), new cljs.core.Keyword(null, "sym", "sym", -1444860305)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.VarUse(this.val, this.avar, this.sym, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1211237282 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.val, b.val) && cljs.core._EQ_.call(null, this.avar, b.avar) && cljs.core._EQ_.call(null, this.sym, b.sym) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "avar", "avar", 1316861611), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "sym", "sym", -1444860305), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.VarUse(this.val, 
  this.avar, this.sym, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "val", "val", 128701612), b)) ? new com.rpl.specter.impl.VarUse(c, this.avar, this.sym, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "avar", "avar", 1316861611), b)) ? new com.rpl.specter.impl.VarUse(this.val, c, this.sym, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "sym", "sym", -1444860305), b)) ? new com.rpl.specter.impl.VarUse(this.val, 
  this.avar, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.VarUse(this.val, this.avar, this.sym, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "val", "val", 128701612), this.val, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "avar", "avar", 1316861611), this.avar, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "sym", "sym", -1444860305), this.sym, null)], null), this.__extmap));
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.VarUse(this.val, this.avar, this.sym, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.VarUse.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.VarUse.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "avar", "avar", -1337574158, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null)], null);
};
com.rpl.specter.impl.VarUse.cljs$lang$type = !0;
com.rpl.specter.impl.VarUse.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/VarUse", null, 1, null);
};
com.rpl.specter.impl.VarUse.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/VarUse");
};
com.rpl.specter.impl.__GT_VarUse = function(a, b, c) {
  return new com.rpl.specter.impl.VarUse(a, b, c, null, null, null);
};
com.rpl.specter.impl.map__GT_VarUse = function(a) {
  return new com.rpl.specter.impl.VarUse((new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "avar", "avar", 1316861611)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "avar", "avar", 1316861611), new cljs.core.Keyword(null, 
  "sym", "sym", -1444860305))), null);
};
com.rpl.specter.impl.SpecialFormUse = function(a, b, c, d, e) {
  this.val = a;
  this.code = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "val":
      return this.val;
    case "code":
      return this.code;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.SpecialFormUse{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612), this.val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "code", "code", 
  1586293142), this.code], null)], null), this.__extmap));
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "code", "code", 1586293142)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.SpecialFormUse(this.val, this.code, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1595666739 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.val, b.val) && cljs.core._EQ_.call(null, this.code, b.code) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "code", "code", 1586293142), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.SpecialFormUse(this.val, this.code, this.__meta, cljs.core.not_empty.call(null, 
  cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "val", "val", 128701612), b)) ? new com.rpl.specter.impl.SpecialFormUse(c, this.code, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), b)) ? new com.rpl.specter.impl.SpecialFormUse(this.val, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.SpecialFormUse(this.val, this.code, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "val", "val", 128701612), this.val, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "code", "code", 1586293142), this.code, null)], null), this.__extmap));
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.SpecialFormUse(this.val, this.code, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.SpecialFormUse.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.SpecialFormUse.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "code", "code", -1068142627, null)], null);
};
com.rpl.specter.impl.SpecialFormUse.cljs$lang$type = !0;
com.rpl.specter.impl.SpecialFormUse.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/SpecialFormUse", null, 1, null);
};
com.rpl.specter.impl.SpecialFormUse.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/SpecialFormUse");
};
com.rpl.specter.impl.__GT_SpecialFormUse = function(a, b) {
  return new com.rpl.specter.impl.SpecialFormUse(a, b, null, null, null);
};
com.rpl.specter.impl.map__GT_SpecialFormUse = function(a) {
  return new com.rpl.specter.impl.SpecialFormUse((new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "code", "code", 1586293142))), null);
};
com.rpl.specter.impl.FnInvocation = function(a, b, c, d, e, f) {
  this.op = a;
  this.params = b;
  this.code = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "op":
      return this.op;
    case "params":
      return this.params;
    case "code":
      return this.code;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.FnInvocation{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "op", "op", -1882987955), this.op], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 
  710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "code", "code", 1586293142), this.code], null)], null), this.__extmap));
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "code", "code", 1586293142)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.FnInvocation(this.op, this.params, this.code, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -350872877 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.op, b.op) && cljs.core._EQ_.call(null, this.params, b.params) && cljs.core._EQ_.call(null, this.code, b.code) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "op", "op", -1882987955), null, new cljs.core.Keyword(null, "code", "code", 1586293142), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.FnInvocation(this.op, 
  this.params, this.code, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "op", "op", -1882987955), b)) ? new com.rpl.specter.impl.FnInvocation(c, this.params, this.code, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), b)) ? new com.rpl.specter.impl.FnInvocation(this.op, c, this.code, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), b)) ? new com.rpl.specter.impl.FnInvocation(this.op, 
  this.params, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.FnInvocation(this.op, this.params, this.code, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "op", "op", -1882987955), this.op, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), this.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "code", "code", 1586293142), this.code, null)], null), this.__extmap));
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.FnInvocation(this.op, this.params, this.code, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.FnInvocation.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.FnInvocation.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "op", "op", -242456428, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "code", "code", -1068142627, null)], null);
};
com.rpl.specter.impl.FnInvocation.cljs$lang$type = !0;
com.rpl.specter.impl.FnInvocation.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/FnInvocation", null, 1, null);
};
com.rpl.specter.impl.FnInvocation.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/FnInvocation");
};
com.rpl.specter.impl.__GT_FnInvocation = function(a, b, c) {
  return new com.rpl.specter.impl.FnInvocation(a, b, c, null, null, null);
};
com.rpl.specter.impl.map__GT_FnInvocation = function(a) {
  return new com.rpl.specter.impl.FnInvocation((new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "params", "params", 710516235), 
  new cljs.core.Keyword(null, "code", "code", 1586293142))), null);
};
com.rpl.specter.impl.DynamicVal = function(a, b, c, d) {
  this.code = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "code":
      return this.code;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.DynamicVal{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "code", "code", 1586293142), this.code], null)], null), this.__extmap));
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "code", "code", 1586293142)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.DynamicVal(this.code, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 531988365 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.code, b.code) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "code", "code", 1586293142), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.DynamicVal(this.code, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), b)) ? new com.rpl.specter.impl.DynamicVal(c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.DynamicVal(this.code, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "code", "code", 1586293142), this.code, null)], null), this.__extmap));
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.DynamicVal(this.code, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.DynamicVal.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.DynamicVal.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "code", "code", -1068142627, null)], null);
};
com.rpl.specter.impl.DynamicVal.cljs$lang$type = !0;
com.rpl.specter.impl.DynamicVal.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/DynamicVal", null, 1, null);
};
com.rpl.specter.impl.DynamicVal.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/DynamicVal");
};
com.rpl.specter.impl.__GT_DynamicVal = function(a) {
  return new com.rpl.specter.impl.DynamicVal(a, null, null, null);
};
com.rpl.specter.impl.map__GT_DynamicVal = function(a) {
  return new com.rpl.specter.impl.DynamicVal((new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "code", "code", 1586293142))), null);
};
com.rpl.specter.impl.DynamicPath = function(a, b, c, d) {
  this.path = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "path":
      return this.path;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.DynamicPath{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "path", "path", -188191168), this.path], null)], null), this.__extmap));
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "path", "path", -188191168)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.DynamicPath(this.path, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 297748926 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.path, b.path) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "path", "path", -188191168), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.DynamicPath(this.path, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "path", "path", -188191168), b)) ? new com.rpl.specter.impl.DynamicPath(c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.DynamicPath(this.path, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "path", "path", -188191168), this.path, null)], null), this.__extmap));
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.DynamicPath(this.path, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.DynamicPath.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.DynamicPath.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null)], null);
};
com.rpl.specter.impl.DynamicPath.cljs$lang$type = !0;
com.rpl.specter.impl.DynamicPath.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/DynamicPath", null, 1, null);
};
com.rpl.specter.impl.DynamicPath.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/DynamicPath");
};
com.rpl.specter.impl.__GT_DynamicPath = function(a) {
  return new com.rpl.specter.impl.DynamicPath(a, null, null, null);
};
com.rpl.specter.impl.map__GT_DynamicPath = function(a) {
  return new com.rpl.specter.impl.DynamicPath((new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "path", "path", -188191168))), null);
};
com.rpl.specter.impl.DynamicFunction = function(a, b, c, d, e, f) {
  this.op = a;
  this.params = b;
  this.code = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "op":
      return this.op;
    case "params":
      return this.params;
    case "code":
      return this.code;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.DynamicFunction{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "op", "op", -1882987955), this.op], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 
  710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "code", "code", 1586293142), this.code], null)], null), this.__extmap));
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "code", "code", 1586293142)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.DynamicFunction(this.op, this.params, this.code, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1045900877 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.op, b.op) && cljs.core._EQ_.call(null, this.params, b.params) && cljs.core._EQ_.call(null, this.code, b.code) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "op", "op", -1882987955), null, new cljs.core.Keyword(null, "code", "code", 1586293142), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.DynamicFunction(this.op, 
  this.params, this.code, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "op", "op", -1882987955), b)) ? new com.rpl.specter.impl.DynamicFunction(c, this.params, this.code, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), b)) ? new com.rpl.specter.impl.DynamicFunction(this.op, c, this.code, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), b)) ? new com.rpl.specter.impl.DynamicFunction(this.op, 
  this.params, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.DynamicFunction(this.op, this.params, this.code, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "op", "op", -1882987955), this.op, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), this.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "code", "code", 1586293142), this.code, null)], null), this.__extmap));
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.DynamicFunction(this.op, this.params, this.code, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.DynamicFunction.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.DynamicFunction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "op", "op", -242456428, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "code", "code", -1068142627, null)], null);
};
com.rpl.specter.impl.DynamicFunction.cljs$lang$type = !0;
com.rpl.specter.impl.DynamicFunction.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/DynamicFunction", null, 1, null);
};
com.rpl.specter.impl.DynamicFunction.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/DynamicFunction");
};
com.rpl.specter.impl.__GT_DynamicFunction = function(a, b, c) {
  return new com.rpl.specter.impl.DynamicFunction(a, b, c, null, null, null);
};
com.rpl.specter.impl.map__GT_DynamicFunction = function(a) {
  return new com.rpl.specter.impl.DynamicFunction((new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "params", "params", 710516235), 
  new cljs.core.Keyword(null, "code", "code", 1586293142))), null);
};
com.rpl.specter.impl.dynamic_param_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([com.rpl.specter.impl.DynamicPath, com.rpl.specter.impl.DynamicFunction, com.rpl.specter.impl.DynamicVal]), cljs.core.type.call(null, a));
};
com.rpl.specter.impl.static_path_QMARK_ = function(a) {
  return cljs.core.sequential_QMARK_.call(null, a) ? cljs.core.every_QMARK_.call(null, com.rpl.specter.impl.static_path_QMARK_, a) : cljs.core.not.call(null, com.rpl.specter.impl.dynamic_param_QMARK_.call(null, a));
};
com.rpl.specter.impl.late_path = function(a) {
  return cljs.core.truth_(com.rpl.specter.impl.static_path_QMARK_.call(null, a)) ? com.rpl.specter.impl.comp_paths_STAR_.call(null, a) : com.rpl.specter.impl.__GT_DynamicPath.call(null, a);
};
com.rpl.specter.impl.CachedPathInfo = function(a, b, c, d, e) {
  this.dynamic_QMARK_ = a;
  this.precompiled = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "dynamic?":
      return this.dynamic_QMARK_;
    case "precompiled":
      return this.precompiled;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.CachedPathInfo{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dynamic?", "dynamic?", 680592423), this.dynamic_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "precompiled", "precompiled", -1683153609), this.precompiled], null)], null), this.__extmap));
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dynamic?", "dynamic?", 680592423), new cljs.core.Keyword(null, "precompiled", "precompiled", -1683153609)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.CachedPathInfo(this.dynamic_QMARK_, this.precompiled, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 626511117 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.dynamic_QMARK_, b.dynamic_QMARK_) && cljs.core._EQ_.call(null, this.precompiled, b.precompiled) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dynamic?", "dynamic?", 680592423), null, new cljs.core.Keyword(null, "precompiled", "precompiled", -1683153609), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.CachedPathInfo(this.dynamic_QMARK_, 
  this.precompiled, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "dynamic?", "dynamic?", 680592423), b)) ? new com.rpl.specter.impl.CachedPathInfo(c, this.precompiled, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "precompiled", "precompiled", -1683153609), b)) ? new com.rpl.specter.impl.CachedPathInfo(this.dynamic_QMARK_, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.CachedPathInfo(this.dynamic_QMARK_, this.precompiled, this.__meta, 
  cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "dynamic?", "dynamic?", 680592423), this.dynamic_QMARK_, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "precompiled", "precompiled", -1683153609), this.precompiled, null)], null), this.__extmap));
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.CachedPathInfo(this.dynamic_QMARK_, this.precompiled, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.CachedPathInfo.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.CachedPathInfo.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dynamic?", "dynamic?", -1973843346, null), new cljs.core.Symbol(null, "precompiled", "precompiled", -42622082, null)], null);
};
com.rpl.specter.impl.CachedPathInfo.cljs$lang$type = !0;
com.rpl.specter.impl.CachedPathInfo.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/CachedPathInfo", null, 1, null);
};
com.rpl.specter.impl.CachedPathInfo.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/CachedPathInfo");
};
com.rpl.specter.impl.__GT_CachedPathInfo = function(a, b) {
  return new com.rpl.specter.impl.CachedPathInfo(a, b, null, null, null);
};
com.rpl.specter.impl.map__GT_CachedPathInfo = function(a) {
  return new com.rpl.specter.impl.CachedPathInfo((new cljs.core.Keyword(null, "dynamic?", "dynamic?", 680592423)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "precompiled", "precompiled", -1683153609)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "dynamic?", "dynamic?", 680592423), new cljs.core.Keyword(null, "precompiled", "precompiled", -1683153609))), null);
};
com.rpl.specter.impl.cached_path_info_precompiled = function(a) {
  return a.precompiled;
};
com.rpl.specter.impl.cached_path_info_dynamic_QMARK_ = function(a) {
  return a.dynamic_QMARK_;
};
com.rpl.specter.impl.filter_select = function(a, b, c, d) {
  return cljs.core.truth_(a.call(null, c)) ? d.call(null, b, c) : com.rpl.specter.impl.NONE;
};
com.rpl.specter.impl.filter_transform = function(a, b, c, d) {
  return cljs.core.truth_(a.call(null, c)) ? d.call(null, b, c) : c;
};
com.rpl.specter.impl.pred_STAR_ = function(a) {
  "undefined" === typeof com.rpl.specter.impl.t_com$rpl$specter$impl2211 && (com.rpl.specter.impl.t_com$rpl$specter$impl2211 = function(a, c) {
    this.afn = a;
    this.meta2212 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2211.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2211(this.afn, c);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2211.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta2212;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2211.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.impl.t_com$rpl$specter$impl2211.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.truth_(this.afn.call(null, d)) ? e.call(null, c, d) : com.rpl.specter.impl.NONE;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2211.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.truth_(this.afn.call(null, d)) ? e.call(null, c, d) : d;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2211.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta2212", "meta2212", -1724272486, null)], null);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2211.cljs$lang$type = !0, com.rpl.specter.impl.t_com$rpl$specter$impl2211.cljs$lang$ctorStr = "com.rpl.specter.impl/t_com$rpl$specter$impl2211", com.rpl.specter.impl.t_com$rpl$specter$impl2211.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter.impl/t_com$rpl$specter$impl2211");
  }, com.rpl.specter.impl.__GT_t_com$rpl$specter$impl2211 = function(a, c) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2211(a, c);
  });
  return new com.rpl.specter.impl.t_com$rpl$specter$impl2211(a, cljs.core.PersistentArrayMap.EMPTY);
};
com.rpl.specter.impl.collected_QMARK__STAR_ = function(a) {
  "undefined" === typeof com.rpl.specter.impl.t_com$rpl$specter$impl2214 && (com.rpl.specter.impl.t_com$rpl$specter$impl2214 = function(a, c) {
    this.afn = a;
    this.meta2215 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2214.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2214(this.afn, c);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2214.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta2215;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2214.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.impl.t_com$rpl$specter$impl2214.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.truth_(this.afn.call(null, c)) ? e.call(null, c, d) : com.rpl.specter.impl.NONE;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2214.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.truth_(this.afn.call(null, c)) ? e.call(null, c, d) : d;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2214.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta2215", "meta2215", -149550345, null)], null);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2214.cljs$lang$type = !0, com.rpl.specter.impl.t_com$rpl$specter$impl2214.cljs$lang$ctorStr = "com.rpl.specter.impl/t_com$rpl$specter$impl2214", com.rpl.specter.impl.t_com$rpl$specter$impl2214.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter.impl/t_com$rpl$specter$impl2214");
  }, com.rpl.specter.impl.__GT_t_com$rpl$specter$impl2214 = function(a, c) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2214(a, c);
  });
  return new com.rpl.specter.impl.t_com$rpl$specter$impl2214(a, cljs.core.PersistentArrayMap.EMPTY);
};
com.rpl.specter.impl.cell_nav = function(a) {
  "undefined" === typeof com.rpl.specter.impl.t_com$rpl$specter$impl2217 && (com.rpl.specter.impl.t_com$rpl$specter$impl2217 = function(a, c) {
    this.cell = a;
    this.meta2218 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2217.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2217(this.cell, c);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2217.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta2218;
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2217.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.impl.t_com$rpl$specter$impl2217.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return com.rpl.specter.impl.exec_select_STAR_.call(null, com.rpl.specter.impl.get_cell.call(null, this.cell), c, d, e);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2217.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return com.rpl.specter.impl.exec_transform_STAR_.call(null, com.rpl.specter.impl.get_cell.call(null, this.cell), c, d, e);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2217.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cell", "cell", -1890190685, null), new cljs.core.Symbol(null, "meta2218", "meta2218", -505636367, null)], null);
  }, com.rpl.specter.impl.t_com$rpl$specter$impl2217.cljs$lang$type = !0, com.rpl.specter.impl.t_com$rpl$specter$impl2217.cljs$lang$ctorStr = "com.rpl.specter.impl/t_com$rpl$specter$impl2217", com.rpl.specter.impl.t_com$rpl$specter$impl2217.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter.impl/t_com$rpl$specter$impl2217");
  }, com.rpl.specter.impl.__GT_t_com$rpl$specter$impl2217 = function(a, c) {
    return new com.rpl.specter.impl.t_com$rpl$specter$impl2217(a, c);
  });
  return new com.rpl.specter.impl.t_com$rpl$specter$impl2217(a, cljs.core.PersistentArrayMap.EMPTY);
};
com.rpl.specter.impl.local_declarepath = function() {
  var a = com.rpl.specter.impl.mutable_cell.call(null, null);
  return cljs.core.vary_meta.call(null, com.rpl.specter.impl.cell_nav.call(null, a), cljs.core.assoc, new cljs.core.Keyword("com.rpl.specter.impl", "cell", "com.rpl.specter.impl/cell", 223913671), a);
};
com.rpl.specter.impl.providepath_STAR_ = function(a, b) {
  a = (new cljs.core.Keyword("com.rpl.specter.impl", "cell", "com.rpl.specter.impl/cell", 223913671)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
  return com.rpl.specter.impl.set_cell_BANG_.call(null, a, b);
};
com.rpl.specter.impl.gensyms = function(a) {
  return cljs.core.vec.call(null, cljs.core.repeatedly.call(null, a, cljs.core.gensym));
};
com.rpl.specter.impl.comp_navs = function(a) {
  switch(arguments.length) {
    case 0:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    case 8:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
    case 9:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
    case 10:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
    case 11:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
    case 12:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
    case 13:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
    case 14:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
    case 15:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
    case 16:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
    case 17:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
    case 18:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
    case 19:
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(19), 0, null);
      return com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], b);
  }
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$0 = function() {
  return com.rpl.specter.impl.STAY_STAR_;
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return com.rpl.specter.impl.combine_two_navs.call(null, a, b);
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n, p));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
  return com.rpl.specter.impl.comp_navs.call(null, a, com.rpl.specter.impl.comp_navs.call(null, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w));
};
com.rpl.specter.impl.comp_navs.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
  return com.rpl.specter.impl.comp_navs.call(null, com.rpl.specter.impl.comp_navs.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w), cljs.core.reduce.call(null, com.rpl.specter.impl.comp_navs, x));
};
com.rpl.specter.impl.comp_navs.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  var e = cljs.core.next.call(null, d);
  d = cljs.core.first.call(null, e);
  var f = cljs.core.next.call(null, e);
  e = cljs.core.first.call(null, f);
  var g = cljs.core.next.call(null, f);
  f = cljs.core.first.call(null, g);
  var h = cljs.core.next.call(null, g);
  g = cljs.core.first.call(null, h);
  var k = cljs.core.next.call(null, h);
  h = cljs.core.first.call(null, k);
  var l = cljs.core.next.call(null, k);
  k = cljs.core.first.call(null, l);
  var m = cljs.core.next.call(null, l);
  l = cljs.core.first.call(null, m);
  var n = cljs.core.next.call(null, m);
  m = cljs.core.first.call(null, n);
  var p = cljs.core.next.call(null, n);
  n = cljs.core.first.call(null, p);
  var q = cljs.core.next.call(null, p);
  p = cljs.core.first.call(null, q);
  var r = cljs.core.next.call(null, q);
  q = cljs.core.first.call(null, r);
  var t = cljs.core.next.call(null, r);
  r = cljs.core.first.call(null, t);
  var u = cljs.core.next.call(null, t);
  t = cljs.core.first.call(null, u);
  var v = cljs.core.next.call(null, u);
  u = cljs.core.first.call(null, v);
  var w = cljs.core.next.call(null, v);
  v = cljs.core.first.call(null, w);
  var x = cljs.core.next.call(null, w);
  w = cljs.core.first.call(null, x);
  x = cljs.core.next.call(null, x);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x);
};
com.rpl.specter.impl.comp_navs.cljs$lang$maxFixedArity = 19;
com.rpl.specter.impl.srange_transform_STAR_ = function(a, b, c, d) {
  if ("string" === typeof a) {
    var e = d.call(null, cljs.core.subs.call(null, a, b, c));
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, 0, b)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, a, c, cljs.core.count.call(null, a)))].join("");
  }
  e = cljs.core.vec.call(null, a);
  d = d.call(null, cljs.core.subvec.call(null, e, b, c));
  b = cljs.core.concat.call(null, cljs.core.subvec.call(null, e, 0, b), d, cljs.core.subvec.call(null, e, c, cljs.core.count.call(null, a)));
  return cljs.core.vector_QMARK_.call(null, a) ? cljs.core.vec.call(null, b) : b;
};
com.rpl.specter.impl.matching_indices = function(a, b) {
  return cljs.core.keep_indexed.call(null, function(a, d) {
    return cljs.core.truth_(b.call(null, d)) ? a : null;
  }, a);
};
com.rpl.specter.impl.matching_ranges = function(a, b) {
  return cljs.core.first.call(null, cljs.core.reduce.call(null, function(a, b) {
    var c = cljs.core.nth.call(null, a, 0, null), d = cljs.core.nth.call(null, a, 1, null);
    a = cljs.core.nth.call(null, a, 2, null);
    return null == d ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b, b], null) : cljs.core._EQ_.call(null, b, a + 1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d, b], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, a + 1], null)), b, b], null);
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY, null, null], null), cljs.core.concat.call(null, com.rpl.specter.impl.matching_indices.call(null, a, b), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1], null))));
};
com.rpl.specter.impl.continuous_subseqs_transform_STAR_ = function(a, b, c) {
  return cljs.core.reduce.call(null, function(a, b) {
    var d = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return com.rpl.specter.impl.srange_transform_STAR_.call(null, a, d, b, c);
  }, b, cljs.core.reverse.call(null, com.rpl.specter.impl.matching_ranges.call(null, b, a)));
};
com.rpl.specter.impl.codewalk_until = function(a, b, c) {
  if (cljs.core.truth_(a.call(null, c))) {
    return b.call(null, c);
  }
  var d = clojure.walk.walk.call(null, cljs.core.partial.call(null, com.rpl.specter.impl.codewalk_until, a, b), cljs.core.identity, c);
  return cljs.core.truth_(function() {
    var a = com.rpl.specter.impl.fn_invocation_QMARK_.call(null, c);
    return cljs.core.truth_(a) ? com.rpl.specter.impl.fn_invocation_QMARK_.call(null, d) : a;
  }()) ? cljs.core.with_meta.call(null, d, cljs.core.meta.call(null, c)) : d;
};
com.rpl.specter.impl.walk_select = function(a, b, c) {
  var d = com.rpl.specter.impl.mutable_cell.call(null, com.rpl.specter.impl.NONE);
  (function(c) {
    return function h(d) {
      return cljs.core.truth_(a.call(null, d)) ? (d = b.call(null, d), d !== com.rpl.specter.impl.NONE && com.rpl.specter.impl.set_cell_BANG_.call(null, c, d), d) : clojure.walk.walk.call(null, h, cljs.core.identity, d);
    };
  })(d).call(null, c);
  return com.rpl.specter.impl.get_cell.call(null, d);
};
com.rpl.specter.impl.walk_until = function(a, b, c) {
  return cljs.core.truth_(a.call(null, c)) ? b.call(null, c) : clojure.walk.walk.call(null, cljs.core.partial.call(null, com.rpl.specter.impl.walk_until, a, b), cljs.core.identity, c);
};
com.rpl.specter.impl.coerce_nav = function(a) {
  return (null != a ? cljs.core.PROTOCOL_SENTINEL === a.com$rpl$specter$protocols$RichNavigator$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, com.rpl.specter.protocols.RichNavigator, a)) : cljs.core.native_satisfies_QMARK_.call(null, com.rpl.specter.protocols.RichNavigator, a)) ? a : cljs.core.sequential_QMARK_.call(null, a) ? com.rpl.specter.impl.comp_paths_STAR_.call(null, a) : com.rpl.specter.protocols.implicit_nav.call(null, a);
};
com.rpl.specter.impl.dynamic_var_QMARK_ = function(a) {
  return (new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
};
com.rpl.specter.impl.direct_nav_obj = function(a) {
  return cljs.core.vary_meta.call(null, a, cljs.core.merge, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "direct-nav", "direct-nav", -2100776046), !0, new cljs.core.Keyword(null, "original-obj", "original-obj", -1134279620), a], null));
};
com.rpl.specter.impl.maybe_direct_nav = function(a, b) {
  return cljs.core.truth_(b) ? com.rpl.specter.impl.direct_nav_obj.call(null, a) : a;
};
com.rpl.specter.impl.original_obj = function(a) {
  for (;;) {
    var b = (new cljs.core.Keyword(null, "original-obj", "original-obj", -1134279620)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
    if (cljs.core.truth_(b)) {
      a = b;
    } else {
      return a;
    }
  }
};
com.rpl.specter.impl.direct_nav_QMARK_ = function(a) {
  return (new cljs.core.Keyword(null, "direct-nav", "direct-nav", -2100776046)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
};
com.rpl.specter.impl.all_static_QMARK_ = function(a) {
  return com.rpl.specter.impl.NONE === com.rpl.specter.impl.walk_select.call(null, com.rpl.specter.impl.dynamic_param_QMARK_, cljs.core.identity, a);
};
com.rpl.specter.impl.late_resolved_fn = function(a) {
  return function() {
    var b = function(b) {
      return cljs.core.truth_(com.rpl.specter.impl.all_static_QMARK_.call(null, b)) ? cljs.core.apply.call(null, a, b) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, a, b, null);
    }, c = function(a) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var d = Array(arguments.length - 0); c < d.length;) {
          d[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(d, 0, null);
      }
      return b.call(this, c);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return b(a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
com.rpl.specter.impl.preserve_map = function(a, b) {
  return cljs.core.list_QMARK_.call(null, b) || cljs.core.seq_QMARK_.call(null, b) ? cljs.core.map.call(null, a, b) : cljs.core.into.call(null, cljs.core.empty.call(null, b), cljs.core.map.call(null, a, b));
};
com.rpl.specter.impl.magic_precompilation_STAR_ = function(a) {
  if (cljs.core.sequential_QMARK_.call(null, a)) {
    return com.rpl.specter.impl.preserve_map.call(null, com.rpl.specter.impl.magic_precompilation_STAR_, a);
  }
  if (a instanceof com.rpl.specter.impl.VarUse) {
    return cljs.core.truth_(com.rpl.specter.impl.dynamic_var_QMARK_.call(null, (new cljs.core.Keyword(null, "avar", "avar", 1316861611)).cljs$core$IFn$_invoke$arity$1(a))) ? com.rpl.specter.impl.__GT_DynamicVal.call(null, com.rpl.specter.impl.maybe_direct_nav.call(null, (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(a), function() {
      var b = com.rpl.specter.impl.direct_nav_QMARK_.call(null, (new cljs.core.Keyword(null, "avar", "avar", 1316861611)).cljs$core$IFn$_invoke$arity$1(a));
      return cljs.core.truth_(b) ? b : com.rpl.specter.impl.direct_nav_QMARK_.call(null, (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(a));
    }())) : com.rpl.specter.impl.maybe_direct_nav.call(null, (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(a), function() {
      var b = com.rpl.specter.impl.direct_nav_QMARK_.call(null, (new cljs.core.Keyword(null, "avar", "avar", 1316861611)).cljs$core$IFn$_invoke$arity$1(a));
      if (cljs.core.truth_(b)) {
        return b;
      }
      b = com.rpl.specter.impl.direct_nav_QMARK_.call(null, (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(a));
      return cljs.core.truth_(b) ? b : com.rpl.specter.impl.direct_nav_QMARK_.call(null, (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(a));
    }());
  }
  if (a instanceof com.rpl.specter.impl.LocalSym) {
    return com.rpl.specter.impl.__GT_DynamicVal.call(null, (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(a));
  }
  if (a instanceof com.rpl.specter.impl.SpecialFormUse) {
    return com.rpl.specter.impl.__GT_DynamicVal.call(null, (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a));
  }
  if (a instanceof com.rpl.specter.impl.FnInvocation) {
    var b = com.rpl.specter.impl.magic_precompilation_STAR_.call(null, (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(a)), c = cljs.core.doall.call(null, cljs.core.map.call(null, com.rpl.specter.impl.magic_precompilation_STAR_, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)));
    return cljs.core.truth_(function() {
      var a = (new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, b));
      return cljs.core.truth_(a) ? a : com.rpl.specter.impl.all_static_QMARK_.call(null, cljs.core.conj.call(null, c, b));
    }()) ? com.rpl.specter.impl.magic_precompilation_STAR_.call(null, cljs.core.apply.call(null, b, c)) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, b, c, (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a));
  }
  return a;
};
com.rpl.specter.impl.static_combine = function(a) {
  switch(arguments.length) {
    case 1:
      return com.rpl.specter.impl.static_combine.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return com.rpl.specter.impl.static_combine.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
com.rpl.specter.impl.static_combine.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return com.rpl.specter.impl.static_combine.call(null, a, !0);
};
com.rpl.specter.impl.static_combine.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.sequential_QMARK_.call(null, a) ? cljs.core.truth_(b) ? (a = com.rpl.specter.impl.continuous_subseqs_transform_STAR_.call(null, com.rpl.specter.impl.rich_nav_QMARK_, cljs.core.doall.call(null, cljs.core.map.call(null, com.rpl.specter.impl.static_combine, cljs.core.flatten.call(null, a))), function(a) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.comp_paths_STAR_.call(null, a)], null);
  }), cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a)) ? cljs.core.first.call(null, a) : a) : com.rpl.specter.impl.preserve_map.call(null, function(a) {
    return com.rpl.specter.impl.static_combine.call(null, a, !1);
  }, a) : a instanceof com.rpl.specter.impl.DynamicFunction ? com.rpl.specter.impl.__GT_DynamicFunction.call(null, com.rpl.specter.impl.static_combine.call(null, (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(a), !1), cljs.core.doall.call(null, cljs.core.map.call(null, function(a) {
    return com.rpl.specter.impl.static_combine.call(null, a, !1);
  }, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a))), (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a)) : a instanceof com.rpl.specter.impl.DynamicPath ? com.rpl.specter.impl.__GT_DynamicPath.call(null, com.rpl.specter.impl.static_combine.call(null, (new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(a))) : a instanceof com.rpl.specter.impl.DynamicVal ? a : cljs.core.truth_(b) ? 
  com.rpl.specter.impl.coerce_nav.call(null, a) : a;
};
com.rpl.specter.impl.static_combine.cljs$lang$maxFixedArity = 2;
com.rpl.specter.impl.LateResolve = function() {
};
com.rpl.specter.impl.late_resolve = function(a, b) {
  if (null != a && null != a.com$rpl$specter$impl$LateResolve$late_resolve$arity$2) {
    return a.com$rpl$specter$impl$LateResolve$late_resolve$arity$2(a, b);
  }
  var c = com.rpl.specter.impl.late_resolve[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.impl.late_resolve._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "LateResolve.late-resolve", a);
};
com.rpl.specter.impl.LocalParam = function(a, b, c, d) {
  this.idx = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "idx":
      return this.idx;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LocalParam.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LocalParam.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return cljs.core.nth.call(null, b, this.idx);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LocalParam{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "idx", "idx", 1053688473), this.idx], null)], null), this.__extmap));
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "idx", "idx", 1053688473)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LocalParam(this.idx, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -301692215 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.idx, b.idx) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "idx", "idx", 1053688473), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LocalParam(this.idx, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "idx", "idx", 1053688473), b)) ? new com.rpl.specter.impl.LocalParam(c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LocalParam(this.idx, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "idx", "idx", 1053688473), this.idx, null)], null), this.__extmap));
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LocalParam(this.idx, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LocalParam.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LocalParam.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "idx", "idx", -1600747296, null)], null);
};
com.rpl.specter.impl.LocalParam.cljs$lang$type = !0;
com.rpl.specter.impl.LocalParam.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LocalParam", null, 1, null);
};
com.rpl.specter.impl.LocalParam.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LocalParam");
};
com.rpl.specter.impl.__GT_LocalParam = function(a) {
  return new com.rpl.specter.impl.LocalParam(a, null, null, null);
};
com.rpl.specter.impl.map__GT_LocalParam = function(a) {
  return new com.rpl.specter.impl.LocalParam((new cljs.core.Keyword(null, "idx", "idx", 1053688473)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "idx", "idx", 1053688473))), null);
};
com.rpl.specter.impl.StaticParam = function(a, b, c, d) {
  this.val = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "val":
      return this.val;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.StaticParam.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.StaticParam.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return this.val;
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.StaticParam{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612), this.val], null)], null), this.__extmap));
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val", "val", 128701612)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.StaticParam(this.val, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 787001817 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.val, b.val) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.StaticParam(this.val, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "val", "val", 128701612), b)) ? new com.rpl.specter.impl.StaticParam(c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.StaticParam(this.val, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "val", "val", 128701612), this.val, null)], null), this.__extmap));
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.StaticParam(this.val, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.StaticParam.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.StaticParam.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
com.rpl.specter.impl.StaticParam.cljs$lang$type = !0;
com.rpl.specter.impl.StaticParam.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/StaticParam", null, 1, null);
};
com.rpl.specter.impl.StaticParam.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/StaticParam");
};
com.rpl.specter.impl.__GT_StaticParam = function(a) {
  return new com.rpl.specter.impl.StaticParam(a, null, null, null);
};
com.rpl.specter.impl.map__GT_StaticParam = function(a) {
  return new com.rpl.specter.impl.StaticParam((new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "val", "val", 128701612))), null);
};
com.rpl.specter.impl.LateFn0 = function(a, b, c, d) {
  this.fn = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn0.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn0.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn0{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn0(this.fn, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1214220781 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn0(this.fn, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn0(c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn0(this.fn, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn0(this.fn, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn0.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn0.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null)], null);
};
com.rpl.specter.impl.LateFn0.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn0.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn0", null, 1, null);
};
com.rpl.specter.impl.LateFn0.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn0");
};
com.rpl.specter.impl.__GT_LateFn0 = function(a) {
  return new com.rpl.specter.impl.LateFn0(a, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn0 = function(a) {
  return new com.rpl.specter.impl.LateFn0((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204))), null);
};
com.rpl.specter.impl.LateFn1 = function(a, b, c, d, e) {
  this.fn = a;
  this.arg0 = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn1.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn1.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b));
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn1{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn1(this.fn, this.arg0, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1315140313 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn1(this.fn, this.arg0, this.__meta, cljs.core.not_empty.call(null, 
  cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn1(c, this.arg0, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn1(this.fn, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn1(this.fn, this.arg0, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn1(this.fn, this.arg0, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn1.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn1.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)], null);
};
com.rpl.specter.impl.LateFn1.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn1.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn1", null, 1, null);
};
com.rpl.specter.impl.LateFn1.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn1");
};
com.rpl.specter.impl.__GT_LateFn1 = function(a, b) {
  return new com.rpl.specter.impl.LateFn1(a, b, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn1 = function(a) {
  return new com.rpl.specter.impl.LateFn1((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355))), null);
};
com.rpl.specter.impl.LateFn2 = function(a, b, c, d, e, f) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn2.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn2.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b));
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn2{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn2(this.fn, this.arg0, this.arg1, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1833421521 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn2(this.fn, 
  this.arg0, this.arg1, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn2(c, this.arg0, this.arg1, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn2(this.fn, c, this.arg1, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn2(this.fn, 
  this.arg0, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn2(this.fn, this.arg0, this.arg1, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn2(this.fn, this.arg0, this.arg1, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn2.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn2.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null)], null);
};
com.rpl.specter.impl.LateFn2.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn2.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn2", null, 1, null);
};
com.rpl.specter.impl.LateFn2.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn2");
};
com.rpl.specter.impl.__GT_LateFn2 = function(a, b, c) {
  return new com.rpl.specter.impl.LateFn2(a, b, c, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn2 = function(a) {
  return new com.rpl.specter.impl.LateFn2((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, 
  "arg1", "arg1", 951899358))), null);
};
com.rpl.specter.impl.LateFn3 = function(a, b, c, d, e, f, g) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn3.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn3.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b));
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn3{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn3(this.fn, this.arg0, this.arg1, this.arg2, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1966076701 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new com.rpl.specter.impl.LateFn3(this.fn, this.arg0, this.arg1, this.arg2, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn3(c, this.arg0, this.arg1, this.arg2, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn3(this.fn, c, this.arg1, this.arg2, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn3(this.fn, 
  this.arg0, c, this.arg2, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn3(this.fn, this.arg0, this.arg1, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn3(this.fn, this.arg0, this.arg1, this.arg2, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), 
  this.arg2, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn3(this.fn, this.arg0, this.arg1, this.arg2, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn3.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn3.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null)], null);
};
com.rpl.specter.impl.LateFn3.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn3.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn3", null, 1, null);
};
com.rpl.specter.impl.LateFn3.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn3");
};
com.rpl.specter.impl.__GT_LateFn3 = function(a, b, c, d) {
  return new com.rpl.specter.impl.LateFn3(a, b, c, d, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn3 = function(a) {
  return new com.rpl.specter.impl.LateFn3((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, 
  "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917))), null);
};
com.rpl.specter.impl.LateFn4 = function(a, b, c, d, e, f, g, h) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn4.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn4.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b));
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn4{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null)], null), 
  this.__extmap));
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : 
  cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn4(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1293239800 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn4(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn4(c, this.arg0, this.arg1, this.arg2, this.arg3, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn4(this.fn, c, this.arg1, this.arg2, this.arg3, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), 
  b)) ? new com.rpl.specter.impl.LateFn4(this.fn, this.arg0, c, this.arg2, this.arg3, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn4(this.fn, this.arg0, this.arg1, c, this.arg3, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn4(this.fn, this.arg0, this.arg1, this.arg2, c, 
  this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn4(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), 
  this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn4(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn4.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn4.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null)], null);
};
com.rpl.specter.impl.LateFn4.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn4.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn4", null, 1, null);
};
com.rpl.specter.impl.LateFn4.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn4");
};
com.rpl.specter.impl.__GT_LateFn4 = function(a, b, c, d, e) {
  return new com.rpl.specter.impl.LateFn4(a, b, c, d, e, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn4 = function(a) {
  return new com.rpl.specter.impl.LateFn4((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), null, 
  cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496))), null);
};
com.rpl.specter.impl.LateFn5 = function(a, b, c, d, e, f, g, h, k) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.__meta = g;
  this.__extmap = h;
  this.__hash = k;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn5.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn5.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b));
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn5{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004)], null), cljs.core.truth_(this.__extmap) ? 
  cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn5(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 6 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -686294298 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], 
  null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn5(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn5(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn5(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn5(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn5(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn5(this.fn, 
  this.arg0, this.arg1, this.arg2, c, this.arg4, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn5(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn5(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), 
  this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn5(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn5.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn5.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null)], null);
};
com.rpl.specter.impl.LateFn5.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn5.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn5", null, 1, null);
};
com.rpl.specter.impl.LateFn5.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn5");
};
com.rpl.specter.impl.__GT_LateFn5 = function(a, b, c, d, e, f) {
  return new com.rpl.specter.impl.LateFn5(a, b, c, d, e, f, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn5 = function(a) {
  return new com.rpl.specter.impl.LateFn5((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004))), null);
};
com.rpl.specter.impl.LateFn6 = function(a, b, c, d, e, f, g, h, k, l) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.__meta = h;
  this.__extmap = k;
  this.__hash = l;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn6.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn6.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b));
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn6{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 7, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 7 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1454341741 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, 
  new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn6(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn6(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn6(this.fn, 
  this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, 
  this.arg4, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), 
  this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn6(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn6.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn6.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null)], null);
};
com.rpl.specter.impl.LateFn6.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn6.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn6", null, 1, null);
};
com.rpl.specter.impl.LateFn6.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn6");
};
com.rpl.specter.impl.__GT_LateFn6 = function(a, b, c, d, e, f, g) {
  return new com.rpl.specter.impl.LateFn6(a, b, c, d, e, f, g, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn6 = function(a) {
  return new com.rpl.specter.impl.LateFn6((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), 
  new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215))), null);
};
com.rpl.specter.impl.LateFn7 = function(a, b, c, d, e, f, g, h, k, l, m) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.__meta = k;
  this.__extmap = l;
  this.__hash = m;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn7.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn7.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b));
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn7{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 8, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 8 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 2042831251 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, 
  new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, 
  b)), null);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn7(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn7(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), 
  b)) ? new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, 
  this.arg6, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), 
  this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn7(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn7.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn7.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null)], null);
};
com.rpl.specter.impl.LateFn7.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn7.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn7", null, 1, null);
};
com.rpl.specter.impl.LateFn7.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn7");
};
com.rpl.specter.impl.__GT_LateFn7 = function(a, b, c, d, e, f, g, h) {
  return new com.rpl.specter.impl.LateFn7(a, b, c, d, e, f, g, h, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn7 = function(a) {
  return new com.rpl.specter.impl.LateFn7((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, 
  "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438))), null);
};
com.rpl.specter.impl.LateFn8 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.__meta = l;
  this.__extmap = m;
  this.__hash = n;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn8.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn8.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b));
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn8{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 9, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 9 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 170516454 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, 
  new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, 
  cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn8(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), 
  this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7, 
  null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn8(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn8.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn8.getBasis = function() {
  return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null)], null);
};
com.rpl.specter.impl.LateFn8.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn8.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn8", null, 1, null);
};
com.rpl.specter.impl.LateFn8.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn8");
};
com.rpl.specter.impl.__GT_LateFn8 = function(a, b, c, d, e, f, g, h, k) {
  return new com.rpl.specter.impl.LateFn8(a, b, c, d, e, f, g, h, k, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn8 = function(a) {
  return new com.rpl.specter.impl.LateFn8((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 
  1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509))), null);
};
com.rpl.specter.impl.LateFn9 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.__meta = m;
  this.__extmap = n;
  this.__hash = p;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn9.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn9.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b));
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn9{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 10 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 840896307 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, 
  new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, 
  this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn9(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.__meta, 
  this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, 
  this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, 
  this.arg6, this.arg7, this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, 
  this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn9(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn9.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn9.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null)], null);
};
com.rpl.specter.impl.LateFn9.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn9.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn9", null, 1, null);
};
com.rpl.specter.impl.LateFn9.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn9");
};
com.rpl.specter.impl.__GT_LateFn9 = function(a, b, c, d, e, f, g, h, k, l) {
  return new com.rpl.specter.impl.LateFn9(a, b, c, d, e, f, g, h, k, l, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn9 = function(a) {
  return new com.rpl.specter.impl.LateFn9((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, 
  new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 
  932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218))), null);
};
com.rpl.specter.impl.LateFn10 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.__meta = n;
  this.__extmap = p;
  this.__hash = q;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn10.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn10.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b));
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn10{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 11, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 11 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1353979086 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, 
  new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn10(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn10(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, 
  this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, 
  this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), 
  b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn10(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn10(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn10.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn10.getBasis = function() {
  return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null)], null);
};
com.rpl.specter.impl.LateFn10.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn10.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn10", null, 1, null);
};
com.rpl.specter.impl.LateFn10.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn10");
};
com.rpl.specter.impl.__GT_LateFn10 = function(a, b, c, d, e, f, g, h, k, l, m) {
  return new com.rpl.specter.impl.LateFn10(a, b, c, d, e, f, g, h, k, l, m, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn10 = function(a) {
  return new com.rpl.specter.impl.LateFn10((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", 
  "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905))), null);
};
com.rpl.specter.impl.LateFn11 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.__meta = p;
  this.__extmap = q;
  this.__hash = r;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn11.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn11.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b));
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn11{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 12, new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 12 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 180129418 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 12, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, 
  new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn11(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, 
  this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, 
  this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", 
  -831640004), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, 
  c, this.arg8, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, 
  this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn11(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn11.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn11.getBasis = function() {
  return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null)], null);
};
com.rpl.specter.impl.LateFn11.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn11.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn11", null, 1, null);
};
com.rpl.specter.impl.LateFn11.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn11");
};
com.rpl.specter.impl.__GT_LateFn11 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  return new com.rpl.specter.impl.LateFn11(a, b, c, d, e, f, g, h, k, l, m, n, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn11 = function(a) {
  return new com.rpl.specter.impl.LateFn11((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), 
  new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517))), null);
};
com.rpl.specter.impl.LateFn12 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.__meta = q;
  this.__extmap = r;
  this.__hash = t;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn12.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn12.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b));
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn12{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 13, new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 13 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1789372539 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, 
  new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn12(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, 
  this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, 
  this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, 
  this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", 
  -95117905), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.__meta, 
  this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, 
  this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn12(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn12.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn12.getBasis = function() {
  return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null)], null);
};
com.rpl.specter.impl.LateFn12.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn12.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn12", null, 1, null);
};
com.rpl.specter.impl.LateFn12.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn12");
};
com.rpl.specter.impl.__GT_LateFn12 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  return new com.rpl.specter.impl.LateFn12(a, b, c, d, e, f, g, h, k, l, m, n, p, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn12 = function(a) {
  return new com.rpl.specter.impl.LateFn12((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, 
  "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070))), null);
};
com.rpl.specter.impl.LateFn13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.arg12 = q;
  this.__meta = r;
  this.__extmap = t;
  this.__hash = u;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    case "arg12":
      return this.arg12;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn13.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn13.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b), com.rpl.specter.impl.late_resolve.call(null, this.arg12, b));
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn13{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 14, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : 
  cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 14 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1059049277 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.arg12, b.arg12) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, 
  new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), 
  null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn13(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, c, this.arg1, this.arg2, this.arg3, this.arg4, 
  this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", 
  "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, 
  this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, 
  this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, 
  c, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, c, this.arg12, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg12", "arg12", 290681436), b)) ? new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12, 
  null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn13(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn13.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn13.getBasis = function() {
  return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null), new cljs.core.Symbol(null, "arg12", "arg12", 1931212963, null)], null);
};
com.rpl.specter.impl.LateFn13.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn13.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn13", null, 1, null);
};
com.rpl.specter.impl.LateFn13.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn13");
};
com.rpl.specter.impl.__GT_LateFn13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  return new com.rpl.specter.impl.LateFn13(a, b, c, d, e, f, g, h, k, l, m, n, p, q, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn13 = function(a) {
  return new com.rpl.specter.impl.LateFn13((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg12", "arg12", 290681436)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 
  951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", 
  "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436))), null);
};
com.rpl.specter.impl.LateFn14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.arg12 = q;
  this.arg13 = r;
  this.__meta = t;
  this.__extmap = u;
  this.__hash = v;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    case "arg12":
      return this.arg12;
    case "arg13":
      return this.arg13;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn14.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn14.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b), com.rpl.specter.impl.late_resolve.call(null, this.arg12, b), com.rpl.specter.impl.late_resolve.call(null, this.arg13, b));
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn14{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg13", "arg13", 
  1606275392), this.arg13], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 15, new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392)], null), cljs.core.truth_(this.__extmap) ? 
  cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 15 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 448885285 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.arg12, b.arg12) && cljs.core._EQ_.call(null, this.arg13, b.arg13) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, [new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, 
  new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), 
  null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, 
  this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn14(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, c, this.arg1, this.arg2, this.arg3, 
  this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, 
  this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", 
  -1648794215), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, 
  this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, c, this.arg12, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, c, this.arg13, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), b)) ? new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.__meta, 
  cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), this.arg13, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn14(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn14.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn14.getBasis = function() {
  return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null), new cljs.core.Symbol(null, "arg12", "arg12", 1931212963, null), new cljs.core.Symbol(null, "arg13", "arg13", 
  -1048160377, null)], null);
};
com.rpl.specter.impl.LateFn14.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn14.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn14", null, 1, null);
};
com.rpl.specter.impl.LateFn14.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn14");
};
com.rpl.specter.impl.__GT_LateFn14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  return new com.rpl.specter.impl.LateFn14(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn14 = function(a) {
  return new com.rpl.specter.impl.LateFn14((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg12", "arg12", 290681436)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg13", "arg13", 1606275392)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, 
  "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, 
  "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392))), null);
};
com.rpl.specter.impl.LateFn15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.arg12 = q;
  this.arg13 = r;
  this.arg14 = t;
  this.__meta = u;
  this.__extmap = v;
  this.__hash = w;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    case "arg12":
      return this.arg12;
    case "arg13":
      return this.arg13;
    case "arg14":
      return this.arg14;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn15.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn15.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b), com.rpl.specter.impl.late_resolve.call(null, this.arg12, b), com.rpl.specter.impl.late_resolve.call(null, this.arg13, b), com.rpl.specter.impl.late_resolve.call(null, this.arg14, b));
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn15{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg13", "arg13", 
  1606275392), this.arg13], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 16, new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, 
  "arg14", "arg14", -1870980778)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 16 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 553496616 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.arg12, b.arg12) && cljs.core._EQ_.call(null, this.arg13, b.arg13) && cljs.core._EQ_.call(null, this.arg14, b.arg14) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 16, [new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, 
  new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), 
  null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, 
  this.arg14, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn15(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, c, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, 
  c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, 
  this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, c, this.arg12, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, 
  this.arg8, this.arg9, this.arg10, this.arg11, c, this.arg13, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, c, this.arg14, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg14", "arg14", -1870980778), b)) ? new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.__meta, 
  cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), this.arg13, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn15(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn15.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn15.getBasis = function() {
  return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null), new cljs.core.Symbol(null, "arg12", "arg12", 1931212963, null), new cljs.core.Symbol(null, "arg13", "arg13", 
  -1048160377, null), new cljs.core.Symbol(null, "arg14", "arg14", -230449251, null)], null);
};
com.rpl.specter.impl.LateFn15.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn15.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn15", null, 1, null);
};
com.rpl.specter.impl.LateFn15.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn15");
};
com.rpl.specter.impl.__GT_LateFn15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  return new com.rpl.specter.impl.LateFn15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn15 = function(a) {
  return new com.rpl.specter.impl.LateFn15((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg12", "arg12", 290681436)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg13", "arg13", 1606275392)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg14", "arg14", -1870980778)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, 
  cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, 
  "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, "arg14", "arg14", -1870980778))), null);
};
com.rpl.specter.impl.LateFn16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.arg12 = q;
  this.arg13 = r;
  this.arg14 = t;
  this.arg15 = u;
  this.__meta = v;
  this.__extmap = w;
  this.__hash = x;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    case "arg12":
      return this.arg12;
    case "arg13":
      return this.arg13;
    case "arg14":
      return this.arg14;
    case "arg15":
      return this.arg15;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn16.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn16.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b), com.rpl.specter.impl.late_resolve.call(null, this.arg12, b), com.rpl.specter.impl.late_resolve.call(null, this.arg13, b), com.rpl.specter.impl.late_resolve.call(null, this.arg14, b), com.rpl.specter.impl.late_resolve.call(null, this.arg15, b));
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn16{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg13", "arg13", 
  1606275392), this.arg13], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 17, new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, 
  "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 17 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -280845773 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.arg12, b.arg12) && cljs.core._EQ_.call(null, this.arg13, b.arg13) && cljs.core._EQ_.call(null, this.arg14, b.arg14) && cljs.core._EQ_.call(null, this.arg15, b.arg15) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 17, [new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, 
  new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), 
  null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, 
  this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn16(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, c, this.arg1, 
  this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, 
  this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, 
  this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, 
  this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, 
  this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.arg12, this.arg13, this.arg14, 
  this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, c, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, c, this.arg13, this.arg14, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, c, this.arg14, 
  this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, c, this.arg15, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), b)) ? new com.rpl.specter.impl.LateFn16(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), this.arg13, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn16(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn16.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn16.getBasis = function() {
  return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null), new cljs.core.Symbol(null, "arg12", "arg12", 1931212963, null), new cljs.core.Symbol(null, "arg13", "arg13", 
  -1048160377, null), new cljs.core.Symbol(null, "arg14", "arg14", -230449251, null), new cljs.core.Symbol(null, "arg15", "arg15", -1202509092, null)], null);
};
com.rpl.specter.impl.LateFn16.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn16.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn16", null, 1, null);
};
com.rpl.specter.impl.LateFn16.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn16");
};
com.rpl.specter.impl.__GT_LateFn16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
  return new com.rpl.specter.impl.LateFn16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn16 = function(a) {
  return new com.rpl.specter.impl.LateFn16((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg12", "arg12", 290681436)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg13", "arg13", 1606275392)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg14", "arg14", -1870980778)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg15", "arg15", 1451926677)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, 
  "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, 
  "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677))), null);
};
com.rpl.specter.impl.LateFn17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.arg12 = q;
  this.arg13 = r;
  this.arg14 = t;
  this.arg15 = u;
  this.arg16 = v;
  this.__meta = w;
  this.__extmap = x;
  this.__hash = y;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    case "arg12":
      return this.arg12;
    case "arg13":
      return this.arg13;
    case "arg14":
      return this.arg14;
    case "arg15":
      return this.arg15;
    case "arg16":
      return this.arg16;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn17.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn17.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b), com.rpl.specter.impl.late_resolve.call(null, this.arg12, b), com.rpl.specter.impl.late_resolve.call(null, this.arg13, b), com.rpl.specter.impl.late_resolve.call(null, this.arg14, b), com.rpl.specter.impl.late_resolve.call(null, this.arg15, b), 
  com.rpl.specter.impl.late_resolve.call(null, this.arg16, b));
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn17{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg13", "arg13", 
  1606275392), this.arg13], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg16", "arg16", -445557546), 
  this.arg16], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 18, new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, 
  "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), new cljs.core.Keyword(null, "arg16", "arg16", -445557546)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 18 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1493409369 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.arg12, b.arg12) && cljs.core._EQ_.call(null, this.arg13, b.arg13) && cljs.core._EQ_.call(null, this.arg14, b.arg14) && cljs.core._EQ_.call(null, this.arg15, b.arg15) && cljs.core._EQ_.call(null, this.arg16, b.arg16) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 18, [new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, 
  new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), null, new cljs.core.Keyword(null, "arg16", "arg16", -445557546), null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), 
  null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn17(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, 
  c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, 
  this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", 
  -1486822496), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, 
  this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, 
  this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, 
  this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), 
  b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, 
  this.arg9, this.arg10, c, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, c, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, c, this.arg14, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, 
  this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, c, this.arg15, this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, c, 
  this.arg16, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg16", "arg16", -445557546), b)) ? new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, 
  this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), this.arg13, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg16", "arg16", -445557546), this.arg16, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn17(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn17.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn17.getBasis = function() {
  return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null), new cljs.core.Symbol(null, "arg12", "arg12", 1931212963, null), new cljs.core.Symbol(null, "arg13", "arg13", 
  -1048160377, null), new cljs.core.Symbol(null, "arg14", "arg14", -230449251, null), new cljs.core.Symbol(null, "arg15", "arg15", -1202509092, null), new cljs.core.Symbol(null, "arg16", "arg16", 1194973981, null)], null);
};
com.rpl.specter.impl.LateFn17.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn17.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn17", null, 1, null);
};
com.rpl.specter.impl.LateFn17.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn17");
};
com.rpl.specter.impl.__GT_LateFn17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
  return new com.rpl.specter.impl.LateFn17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn17 = function(a) {
  return new com.rpl.specter.impl.LateFn17((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg12", "arg12", 290681436)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg13", "arg13", 1606275392)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg14", "arg14", -1870980778)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg15", "arg15", 1451926677)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg16", "arg16", -445557546)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), 
  new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 
  290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), new cljs.core.Keyword(null, "arg16", "arg16", -445557546))), null);
};
com.rpl.specter.impl.LateFn18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.arg12 = q;
  this.arg13 = r;
  this.arg14 = t;
  this.arg15 = u;
  this.arg16 = v;
  this.arg17 = w;
  this.__meta = x;
  this.__extmap = y;
  this.__hash = z;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    case "arg12":
      return this.arg12;
    case "arg13":
      return this.arg13;
    case "arg14":
      return this.arg14;
    case "arg15":
      return this.arg15;
    case "arg16":
      return this.arg16;
    case "arg17":
      return this.arg17;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn18.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn18.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b), com.rpl.specter.impl.late_resolve.call(null, this.arg12, b), com.rpl.specter.impl.late_resolve.call(null, this.arg13, b), com.rpl.specter.impl.late_resolve.call(null, this.arg14, b), com.rpl.specter.impl.late_resolve.call(null, this.arg15, b), 
  com.rpl.specter.impl.late_resolve.call(null, this.arg16, b), com.rpl.specter.impl.late_resolve.call(null, this.arg17, b));
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn18{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg13", "arg13", 
  1606275392), this.arg13], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg16", "arg16", -445557546), 
  this.arg16], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), this.arg17], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 19, new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, 
  "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), new cljs.core.Keyword(null, "arg16", "arg16", -445557546), new cljs.core.Keyword(null, "arg17", "arg17", -1072183482)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 19 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 295131237 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.arg12, b.arg12) && cljs.core._EQ_.call(null, this.arg13, b.arg13) && cljs.core._EQ_.call(null, this.arg14, b.arg14) && cljs.core._EQ_.call(null, this.arg15, b.arg15) && cljs.core._EQ_.call(null, this.arg16, b.arg16) && cljs.core._EQ_.call(null, this.arg17, b.arg17) && cljs.core._EQ_.call(null, this.__extmap, 
  b.__extmap);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), 
  null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), null, new cljs.core.Keyword(null, "arg16", "arg16", -445557546), null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), null, new cljs.core.Keyword(null, "arg5", "arg5", 
  -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), 
  b) : new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn18(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, 
  c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, 
  this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, 
  this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, 
  this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, 
  c, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, c, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, 
  c, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, c, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, c, this.arg15, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, 
  this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, c, this.arg16, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg16", "arg16", -445557546), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, 
  this.arg14, this.arg15, c, this.arg17, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), b)) ? new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, c, this.__meta, this.__extmap, null) : new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, 
  this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), this.arg13, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg16", "arg16", -445557546), this.arg16, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), this.arg17, 
  null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn18(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn18.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn18.getBasis = function() {
  return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null), new cljs.core.Symbol(null, "arg12", "arg12", 1931212963, null), new cljs.core.Symbol(null, "arg13", "arg13", 
  -1048160377, null), new cljs.core.Symbol(null, "arg14", "arg14", -230449251, null), new cljs.core.Symbol(null, "arg15", "arg15", -1202509092, null), new cljs.core.Symbol(null, "arg16", "arg16", 1194973981, null), new cljs.core.Symbol(null, "arg17", "arg17", 568348045, null)], null);
};
com.rpl.specter.impl.LateFn18.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn18.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn18", null, 1, null);
};
com.rpl.specter.impl.LateFn18.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn18");
};
com.rpl.specter.impl.__GT_LateFn18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
  return new com.rpl.specter.impl.LateFn18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn18 = function(a) {
  return new com.rpl.specter.impl.LateFn18((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg12", "arg12", 290681436)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg13", "arg13", 1606275392)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg14", "arg14", -1870980778)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg15", "arg15", 1451926677)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg16", "arg16", -445557546)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg17", "arg17", -1072183482)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, 
  "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, 
  "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), new cljs.core.Keyword(null, "arg16", "arg16", -445557546), new cljs.core.Keyword(null, "arg17", "arg17", -1072183482))), null);
};
com.rpl.specter.impl.LateFn19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, F) {
  this.fn = a;
  this.arg0 = b;
  this.arg1 = c;
  this.arg2 = d;
  this.arg3 = e;
  this.arg4 = f;
  this.arg5 = g;
  this.arg6 = h;
  this.arg7 = k;
  this.arg8 = l;
  this.arg9 = m;
  this.arg10 = n;
  this.arg11 = p;
  this.arg12 = q;
  this.arg13 = r;
  this.arg14 = t;
  this.arg15 = u;
  this.arg16 = v;
  this.arg17 = w;
  this.arg18 = x;
  this.__meta = y;
  this.__extmap = z;
  this.__hash = F;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "fn":
      return this.fn;
    case "arg0":
      return this.arg0;
    case "arg1":
      return this.arg1;
    case "arg2":
      return this.arg2;
    case "arg3":
      return this.arg3;
    case "arg4":
      return this.arg4;
    case "arg5":
      return this.arg5;
    case "arg6":
      return this.arg6;
    case "arg7":
      return this.arg7;
    case "arg8":
      return this.arg8;
    case "arg9":
      return this.arg9;
    case "arg10":
      return this.arg10;
    case "arg11":
      return this.arg11;
    case "arg12":
      return this.arg12;
    case "arg13":
      return this.arg13;
    case "arg14":
      return this.arg14;
    case "arg15":
      return this.arg15;
    case "arg16":
      return this.arg16;
    case "arg17":
      return this.arg17;
    case "arg18":
      return this.arg18;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.impl.LateFn19.prototype.com$rpl$specter$impl$LateResolve$ = cljs.core.PROTOCOL_SENTINEL;
com.rpl.specter.impl.LateFn19.prototype.com$rpl$specter$impl$LateResolve$late_resolve$arity$2 = function(a, b) {
  return com.rpl.specter.impl.late_resolve.call(null, this.fn, b).call(null, com.rpl.specter.impl.late_resolve.call(null, this.arg0, b), com.rpl.specter.impl.late_resolve.call(null, this.arg1, b), com.rpl.specter.impl.late_resolve.call(null, this.arg2, b), com.rpl.specter.impl.late_resolve.call(null, this.arg3, b), com.rpl.specter.impl.late_resolve.call(null, this.arg4, b), com.rpl.specter.impl.late_resolve.call(null, this.arg5, b), com.rpl.specter.impl.late_resolve.call(null, this.arg6, b), com.rpl.specter.impl.late_resolve.call(null, 
  this.arg7, b), com.rpl.specter.impl.late_resolve.call(null, this.arg8, b), com.rpl.specter.impl.late_resolve.call(null, this.arg9, b), com.rpl.specter.impl.late_resolve.call(null, this.arg10, b), com.rpl.specter.impl.late_resolve.call(null, this.arg11, b), com.rpl.specter.impl.late_resolve.call(null, this.arg12, b), com.rpl.specter.impl.late_resolve.call(null, this.arg13, b), com.rpl.specter.impl.late_resolve.call(null, this.arg14, b), com.rpl.specter.impl.late_resolve.call(null, this.arg15, b), 
  com.rpl.specter.impl.late_resolve.call(null, this.arg16, b), com.rpl.specter.impl.late_resolve.call(null, this.arg17, b), com.rpl.specter.impl.late_resolve.call(null, this.arg18, b));
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.impl.LateFn19{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), 
  this.arg0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), this.arg2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "arg7", "arg7", 932157509), this.arg7], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "arg10", "arg10", -1230917517), this.arg10], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg13", "arg13", 
  1606275392), this.arg13], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg16", "arg16", -445557546), 
  this.arg16], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), this.arg17], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "arg18", "arg18", 1450507352), this.arg18], null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 20, new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", 
  "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, 
  "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), new cljs.core.Keyword(null, "arg16", "arg16", -445557546), new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), new cljs.core.Keyword(null, "arg18", "arg18", 1450507352)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 20 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 151103363 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.fn, b.fn) && cljs.core._EQ_.call(null, this.arg0, b.arg0) && cljs.core._EQ_.call(null, this.arg1, b.arg1) && cljs.core._EQ_.call(null, this.arg2, b.arg2) && cljs.core._EQ_.call(null, this.arg3, b.arg3) && cljs.core._EQ_.call(null, this.arg4, b.arg4) && cljs.core._EQ_.call(null, this.arg5, b.arg5) && cljs.core._EQ_.call(null, this.arg6, b.arg6) && cljs.core._EQ_.call(null, this.arg7, b.arg7) && cljs.core._EQ_.call(null, 
  this.arg8, b.arg8) && cljs.core._EQ_.call(null, this.arg9, b.arg9) && cljs.core._EQ_.call(null, this.arg10, b.arg10) && cljs.core._EQ_.call(null, this.arg11, b.arg11) && cljs.core._EQ_.call(null, this.arg12, b.arg12) && cljs.core._EQ_.call(null, this.arg13, b.arg13) && cljs.core._EQ_.call(null, this.arg14, b.arg14) && cljs.core._EQ_.call(null, this.arg15, b.arg15) && cljs.core._EQ_.call(null, this.arg16, b.arg16) && cljs.core._EQ_.call(null, this.arg17, b.arg17) && cljs.core._EQ_.call(null, this.arg18, 
  b.arg18) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 20, [new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), null, new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), 
  null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), null, new cljs.core.Keyword(null, "arg16", "arg16", -445557546), null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), null, new cljs.core.Keyword(null, "arg18", "arg18", 
  1450507352), null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, 
  cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), b)) ? new com.rpl.specter.impl.LateFn19(c, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, 
  c, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg1", "arg1", 951899358), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, c, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, 
  this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, c, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, c, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg4", "arg4", -831640004), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, c, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, c, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, 
  this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, c, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg7", "arg7", 932157509), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, c, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg8", "arg8", 123916218), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, c, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg9", "arg9", -95117905), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, c, this.arg10, this.arg11, 
  this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, c, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg11", "arg11", -379524070), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, c, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg12", "arg12", 290681436), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, c, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, 
  this.arg11, this.arg12, c, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, c, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, c, this.arg16, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg16", "arg16", -445557546), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, 
  this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, c, this.arg17, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, 
  this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, c, this.arg18, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "arg18", "arg18", 1450507352), b)) ? new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, c, this.__meta, this.__extmap, null) : 
  new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "fn", "fn", -1175266204), this.fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg0", "arg0", 1629842355), this.arg0, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg1", "arg1", 951899358), this.arg1, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg2", "arg2", 
  1729550917), this.arg2, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), this.arg3, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg4", "arg4", -831640004), this.arg4, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), this.arg5, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), this.arg6, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg7", "arg7", 932157509), 
  this.arg7, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg8", "arg8", 123916218), this.arg8, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg9", "arg9", -95117905), this.arg9, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), this.arg10, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg11", "arg11", -379524070), this.arg11, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg12", "arg12", 290681436), this.arg12, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), this.arg13, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), this.arg14, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), this.arg15, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg16", "arg16", -445557546), this.arg16, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), this.arg17, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "arg18", "arg18", 1450507352), this.arg18, null)], null), this.__extmap));
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.impl.LateFn19(this.fn, this.arg0, this.arg1, this.arg2, this.arg3, this.arg4, this.arg5, this.arg6, this.arg7, this.arg8, this.arg9, this.arg10, this.arg11, this.arg12, this.arg13, this.arg14, this.arg15, this.arg16, this.arg17, this.arg18, b, this.__extmap, this.__hash);
};
com.rpl.specter.impl.LateFn19.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.impl.LateFn19.getBasis = function() {
  return new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null), new cljs.core.Symbol(null, "arg2", "arg2", -924884852, null), new cljs.core.Symbol(null, "arg3", "arg3", 153709031, null), new cljs.core.Symbol(null, "arg4", "arg4", 808891523, null), new cljs.core.Symbol(null, "arg5", "arg5", 
  -8262688, null), new cljs.core.Symbol(null, "arg6", "arg6", -412124911, null), new cljs.core.Symbol(null, "arg7", "arg7", -1722278260, null), new cljs.core.Symbol(null, "arg8", "arg8", 1764447745, null), new cljs.core.Symbol(null, "arg9", "arg9", 1545413622, null), new cljs.core.Symbol(null, "arg10", "arg10", 409614010, null), new cljs.core.Symbol(null, "arg11", "arg11", 1261007457, null), new cljs.core.Symbol(null, "arg12", "arg12", 1931212963, null), new cljs.core.Symbol(null, "arg13", "arg13", 
  -1048160377, null), new cljs.core.Symbol(null, "arg14", "arg14", -230449251, null), new cljs.core.Symbol(null, "arg15", "arg15", -1202509092, null), new cljs.core.Symbol(null, "arg16", "arg16", 1194973981, null), new cljs.core.Symbol(null, "arg17", "arg17", 568348045, null), new cljs.core.Symbol(null, "arg18", "arg18", -1203928417, null)], null);
};
com.rpl.specter.impl.LateFn19.cljs$lang$type = !0;
com.rpl.specter.impl.LateFn19.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.impl/LateFn19", null, 1, null);
};
com.rpl.specter.impl.LateFn19.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.impl/LateFn19");
};
com.rpl.specter.impl.__GT_LateFn19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
  return new com.rpl.specter.impl.LateFn19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, null, null, null);
};
com.rpl.specter.impl.map__GT_LateFn19 = function(a) {
  return new com.rpl.specter.impl.LateFn19((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg0", "arg0", 1629842355)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg4", "arg4", -831640004)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg5", "arg5", -1648794215)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg6", "arg6", -2052656438)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg7", "arg7", 932157509)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg8", "arg8", 123916218)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg9", "arg9", -95117905)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "arg10", "arg10", -1230917517)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg11", "arg11", -379524070)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg12", "arg12", 290681436)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg13", "arg13", 1606275392)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg14", "arg14", -1870980778)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, 
  "arg15", "arg15", 1451926677)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg16", "arg16", -445557546)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg17", "arg17", -1072183482)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "arg18", "arg18", 1450507352)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "arg0", 
  "arg0", 1629842355), new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.Keyword(null, "arg4", "arg4", -831640004), new cljs.core.Keyword(null, "arg5", "arg5", -1648794215), new cljs.core.Keyword(null, "arg6", "arg6", -2052656438), new cljs.core.Keyword(null, "arg7", "arg7", 932157509), new cljs.core.Keyword(null, "arg8", "arg8", 123916218), new cljs.core.Keyword(null, 
  "arg9", "arg9", -95117905), new cljs.core.Keyword(null, "arg10", "arg10", -1230917517), new cljs.core.Keyword(null, "arg11", "arg11", -379524070), new cljs.core.Keyword(null, "arg12", "arg12", 290681436), new cljs.core.Keyword(null, "arg13", "arg13", 1606275392), new cljs.core.Keyword(null, "arg14", "arg14", -1870980778), new cljs.core.Keyword(null, "arg15", "arg15", 1451926677), new cljs.core.Keyword(null, "arg16", "arg16", -445557546), new cljs.core.Keyword(null, "arg17", "arg17", -1072183482), 
  new cljs.core.Keyword(null, "arg18", "arg18", 1450507352))), null);
};
com.rpl.specter.impl.late_fn = function(a, b) {
  switch(cljs.core.count.call(null, b)) {
    case 0:
      return com.rpl.specter.impl.__GT_LateFn0.call(null, a);
    case 1:
      return com.rpl.specter.impl.__GT_LateFn1.call(null, a, cljs.core.nth.call(null, b, 0));
    case 2:
      return com.rpl.specter.impl.__GT_LateFn2.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1));
    case 3:
      return com.rpl.specter.impl.__GT_LateFn3.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2));
    case 4:
      return com.rpl.specter.impl.__GT_LateFn4.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3));
    case 5:
      return com.rpl.specter.impl.__GT_LateFn5.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4));
    case 6:
      return com.rpl.specter.impl.__GT_LateFn6.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5));
    case 7:
      return com.rpl.specter.impl.__GT_LateFn7.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6));
    case 8:
      return com.rpl.specter.impl.__GT_LateFn8.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7));
    case 9:
      return com.rpl.specter.impl.__GT_LateFn9.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8));
    case 10:
      return com.rpl.specter.impl.__GT_LateFn10.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9));
    case 11:
      return com.rpl.specter.impl.__GT_LateFn11.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10));
    case 12:
      return com.rpl.specter.impl.__GT_LateFn12.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 11));
    case 13:
      return com.rpl.specter.impl.__GT_LateFn13.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 11), cljs.core.nth.call(null, b, 12));
    case 14:
      return com.rpl.specter.impl.__GT_LateFn14.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 11), cljs.core.nth.call(null, b, 12), cljs.core.nth.call(null, 
      b, 13));
    case 15:
      return com.rpl.specter.impl.__GT_LateFn15.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 11), cljs.core.nth.call(null, b, 12), cljs.core.nth.call(null, 
      b, 13), cljs.core.nth.call(null, b, 14));
    case 16:
      return com.rpl.specter.impl.__GT_LateFn16.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 11), cljs.core.nth.call(null, b, 12), cljs.core.nth.call(null, 
      b, 13), cljs.core.nth.call(null, b, 14), cljs.core.nth.call(null, b, 15));
    case 17:
      return com.rpl.specter.impl.__GT_LateFn17.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 11), cljs.core.nth.call(null, b, 12), cljs.core.nth.call(null, 
      b, 13), cljs.core.nth.call(null, b, 14), cljs.core.nth.call(null, b, 15), cljs.core.nth.call(null, b, 16));
    case 18:
      return com.rpl.specter.impl.__GT_LateFn18.call(null, a, cljs.core.nth.call(null, b, 0), cljs.core.nth.call(null, b, 1), cljs.core.nth.call(null, b, 2), cljs.core.nth.call(null, b, 3), cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 5), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 7), cljs.core.nth.call(null, b, 8), cljs.core.nth.call(null, b, 9), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 11), cljs.core.nth.call(null, b, 12), cljs.core.nth.call(null, 
      b, 13), cljs.core.nth.call(null, b, 14), cljs.core.nth.call(null, b, 15), cljs.core.nth.call(null, b, 16), cljs.core.nth.call(null, b, 17));
    default:
      return com.rpl.specter.impl.throw_illegal.call(null, "Cannot have late function with more than 18 args");
  }
};
com.rpl.specter.impl.static_fn_code = function(a, b) {
  return com.rpl.specter.impl.late_fn.call(null, com.rpl.specter.impl.__GT_StaticParam.call(null, a), b);
};
com.rpl.specter.impl.dynamic_fn_code = function(a, b) {
  return com.rpl.specter.impl.late_fn.call(null, a, b);
};
com.rpl.specter.impl.dynamic_val_code = function(a, b) {
  var c = cljs.core.keep_indexed.call(null, function(b, c) {
    return cljs.core._EQ_.call(null, c, a) ? b : null;
  }, b);
  c = cljs.core.nth.call(null, c, 0, null);
  null == c && com.rpl.specter.impl.throw_illegal.call(null, "Could not find ", a, " in possible params ", b);
  return com.rpl.specter.impl.maybe_direct_nav.call(null, com.rpl.specter.impl.__GT_LocalParam.call(null, c), com.rpl.specter.impl.direct_nav_QMARK_.call(null, a));
};
com.rpl.specter.impl.static_val_code = function(a) {
  return com.rpl.specter.impl.maybe_direct_nav.call(null, com.rpl.specter.impl.__GT_StaticParam.call(null, a), com.rpl.specter.impl.direct_nav_QMARK_.call(null, a));
};
com.rpl.specter.impl.dynamic__GT_code = function(a) {
  return com.rpl.specter.impl.walk_until.call(null, com.rpl.specter.impl.dynamic_param_QMARK_, new cljs.core.Keyword(null, "code", "code", 1586293142), a);
};
com.rpl.specter.impl.resolve_arg_code = function(a, b) {
  if (a instanceof com.rpl.specter.impl.DynamicFunction) {
    var c = com.rpl.specter.impl.resolve_arg_code.call(null, (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(a), b), d = cljs.core.map.call(null, function(a) {
      return function(a) {
        return com.rpl.specter.impl.resolve_arg_code.call(null, a, b);
      };
    }(c), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a));
    return com.rpl.specter.impl.maybe_direct_nav.call(null, com.rpl.specter.impl.dynamic_fn_code.call(null, com.rpl.specter.impl.original_obj.call(null, c), d), com.rpl.specter.impl.direct_nav_QMARK_.call(null, (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(a)));
  }
  return a instanceof com.rpl.specter.impl.DynamicVal ? com.rpl.specter.impl.dynamic_val_code.call(null, (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a), b) : a instanceof com.rpl.specter.impl.DynamicPath ? com.rpl.specter.impl.resolve_nav_code.call(null, a, b) : com.rpl.specter.impl.NONE === com.rpl.specter.impl.walk_select.call(null, com.rpl.specter.impl.dynamic_param_QMARK_, cljs.core.identity, a) ? com.rpl.specter.impl.static_val_code.call(null, a) : 
  com.rpl.specter.impl.resolve_arg_code.call(null, com.rpl.specter.impl.__GT_DynamicVal.call(null, com.rpl.specter.impl.dynamic__GT_code.call(null, a)), b);
};
com.rpl.specter.impl.resolve_nav_code = function(a, b) {
  if (a instanceof com.rpl.specter.impl.DynamicPath) {
    return a = (new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.sequential_QMARK_.call(null, a) ? (a = cljs.core.vec.call(null, cljs.core.map.call(null, function(a) {
      return function(a) {
        return com.rpl.specter.impl.resolve_nav_code.call(null, a, b);
      };
    }(a), a)), cljs.core.empty_QMARK_.call(null, a) ? com.rpl.specter.impl.static_val_code.call(null, com.rpl.specter.impl.STAY_STAR_) : cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a)) ? cljs.core.first.call(null, a) : com.rpl.specter.impl.static_fn_code.call(null, com.rpl.specter.impl.comp_navs, a)) : com.rpl.specter.impl.resolve_nav_code.call(null, a, b);
  }
  if (a instanceof com.rpl.specter.impl.DynamicVal) {
    var c = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(a);
    a = com.rpl.specter.impl.dynamic_val_code.call(null, c, b);
    return cljs.core.truth_(com.rpl.specter.impl.direct_nav_QMARK_.call(null, c)) ? a : cljs.core.truth_(function() {
      var a = cljs.core.set_QMARK_.call(null, c);
      if (a) {
        return a;
      }
      a = com.rpl.specter.impl.fn_invocation_QMARK_.call(null, c);
      return cljs.core.truth_(a) ? cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), cljs.core.first.call(null, c)) : a;
    }()) ? com.rpl.specter.impl.static_fn_code.call(null, com.rpl.specter.impl.pred_STAR_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null)) : com.rpl.specter.impl.static_fn_code.call(null, com.rpl.specter.impl.coerce_nav, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null));
  }
  return a instanceof com.rpl.specter.impl.DynamicFunction ? (a = com.rpl.specter.impl.resolve_arg_code.call(null, a, b), cljs.core.truth_(com.rpl.specter.impl.direct_nav_QMARK_.call(null, a)) ? a : com.rpl.specter.impl.static_fn_code.call(null, com.rpl.specter.impl.coerce_nav, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null))) : com.rpl.specter.impl.static_val_code.call(null, com.rpl.specter.impl.coerce_nav.call(null, a));
};
com.rpl.specter.impl.used_locals = function(a, b) {
  var c = com.rpl.specter.impl.mutable_cell.call(null, cljs.core.PersistentVector.EMPTY);
  clojure.walk.postwalk.call(null, function(b) {
    return function(c) {
      return cljs.core.contains_QMARK_.call(null, a, c) ? com.rpl.specter.impl.update_cell_BANG_.call(null, b, function(a) {
        return function(a) {
          return cljs.core.conj.call(null, a, c);
        };
      }(b)) : c;
    };
  }(c), b);
  return com.rpl.specter.impl.get_cell.call(null, c);
};
com.rpl.specter.impl._STAR_DEBUG_INLINE_CACHING_STAR_ = !1;
com.rpl.specter.impl.mk_fn_name_strs = function(a) {
  return clojure.walk.postwalk.call(null, function(a) {
    return cljs.core.fn_QMARK_.call(null, a) ? cljs.core.re_find.call(null, / .*/, cljs.core.pr_str.call(null, a)) : a;
  }, a);
};
com.rpl.specter.impl.mk_dynamic_path_maker = function(a, b, c, d) {
  com.rpl.specter.impl._STAR_DEBUG_INLINE_CACHING_STAR_ && (cljs.core.println.call(null, "Possible params:"), cljs.core.println.call(null, d), cljs.core.println.call(null, "\nProduced dynamic object:"), cljs.core.println.call(null, com.rpl.specter.impl.mk_fn_name_strs.call(null, a)), cljs.core.println.call(null));
  return function(b) {
    return com.rpl.specter.impl.late_resolve.call(null, a, b);
  };
};
com.rpl.specter.impl.magic_precompilation = function(a, b, c, d) {
  var e = com.rpl.specter.impl.static_combine.call(null, com.rpl.specter.impl.magic_precompilation_STAR_.call(null, a));
  com.rpl.specter.impl._STAR_DEBUG_INLINE_CACHING_STAR_ && (cljs.core.println.call(null, "Inline caching debug information"), cljs.core.println.call(null, "--------------------------------"), cljs.core.println.call(null, "Input path:", a, "\n"), cljs.core.println.call(null, "Processed path:", e, "\n"));
  if (cljs.core.truth_(com.rpl.specter.impl.rich_nav_QMARK_.call(null, e))) {
    return com.rpl.specter.impl._STAR_DEBUG_INLINE_CACHING_STAR_ && cljs.core.println.call(null, "Static result:", e), com.rpl.specter.impl.__GT_CachedPathInfo.call(null, !1, e);
  }
  a = com.rpl.specter.impl.mk_dynamic_path_maker.call(null, com.rpl.specter.impl.resolve_nav_code.call(null, com.rpl.specter.impl.__GT_DynamicPath.call(null, e), d), b, c, d);
  return com.rpl.specter.impl.__GT_CachedPathInfo.call(null, !0, a);
};
com.rpl.specter.impl.compiled_setval_STAR_ = function(a, b, c) {
  return com.rpl.specter.impl.compiled_transform_STAR_.call(null, a, com.rpl.specter.impl.fast_constantly.call(null, b), c);
};
com.rpl.specter.impl.compiled_replace_in_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0, null) : null;
  return com.rpl.specter.impl.compiled_replace_in_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
com.rpl.specter.impl.compiled_replace_in_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d, f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "merge-fn", "merge-fn", 588067341), cljs.core.concat), g = com.rpl.specter.impl.mutable_cell.call(null, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.compiled_transform_STAR_.call(null, a, function(a, c, d, e) {
    return function() {
      var c = function(c) {
        var d = cljs.core.apply.call(null, b, c);
        return cljs.core.truth_(d) ? (c = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), com.rpl.specter.impl.set_cell_BANG_.call(null, a, e.call(null, com.rpl.specter.impl.get_cell.call(null, a), d)), c) : cljs.core.last.call(null, c);
      }, d = function(a) {
        var b = null;
        if (0 < arguments.length) {
          b = 0;
          for (var d = Array(arguments.length - 0); b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(d, 0, null);
        }
        return c.call(this, b);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return c(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
  }(g, d, e, f), c), com.rpl.specter.impl.get_cell.call(null, g)], null);
};
com.rpl.specter.impl.compiled_replace_in_STAR_.cljs$lang$maxFixedArity = 3;
com.rpl.specter.impl.compiled_replace_in_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
com.rpl.specter.impl.multi_transform_error_fn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return com.rpl.specter.impl.multi_transform_error_fn.cljs$core$IFn$_invoke$arity$variadic(b);
};
com.rpl.specter.impl.multi_transform_error_fn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return com.rpl.specter.impl.throw_illegal.call(null, "All navigation in multi-transform must end in 'terminal' ", "navigators. Instead navigated to: ", a);
};
com.rpl.specter.impl.multi_transform_error_fn.cljs$lang$maxFixedArity = 0;
com.rpl.specter.impl.multi_transform_error_fn.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
com.rpl.specter.impl.compiled_multi_transform_STAR_ = function(a, b) {
  return com.rpl.specter.impl.compiled_transform_STAR_.call(null, a, com.rpl.specter.impl.multi_transform_error_fn, b);
};
com.rpl.specter.navs = {};
com.rpl.specter.navs.not_selected_QMARK__STAR_ = function(a, b, c) {
  return com.rpl.specter.impl.NONE === com.rpl.specter.impl.compiled_select_any_STAR_.call(null, a, b, c);
};
com.rpl.specter.navs.selected_QMARK__STAR_ = function(a, b, c) {
  return cljs.core.not.call(null, com.rpl.specter.navs.not_selected_QMARK__STAR_.call(null, a, b, c));
};
com.rpl.specter.navs.all_select = function(a, b) {
  return cljs.core.reduce.call(null, function(a, d) {
    d = b.call(null, d);
    return d === com.rpl.specter.impl.NONE ? a : cljs.core.reduced_QMARK_.call(null, d) ? cljs.core.reduced.call(null, d) : d;
  }, com.rpl.specter.impl.NONE, a);
};
com.rpl.specter.navs.queue_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, a), cljs.core.type.call(null, cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, cljs.core.PersistentVector.EMPTY)));
};
com.rpl.specter.navs.AllTransformProtocol = function() {
};
com.rpl.specter.navs.all_transform = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2) {
    return a.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.all_transform[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.all_transform._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "AllTransformProtocol.all-transform", a);
};
com.rpl.specter.navs.void_transformed_kv_pair_QMARK_ = function(a) {
  return a === com.rpl.specter.impl.NONE || 2 > cljs.core.count.call(null, a);
};
com.rpl.specter.navs.non_transient_map_all_transform = function(a, b, c) {
  return cljs.core.reduce_kv.call(null, function(a, c, f) {
    c = b.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, f], null));
    return cljs.core.truth_(com.rpl.specter.navs.void_transformed_kv_pair_QMARK_.call(null, c)) ? a : cljs.core.assoc.call(null, a, cljs.core.nth.call(null, c, 0), cljs.core.nth.call(null, c, 1));
  }, c, a);
};
com.rpl.specter.navs.not_NONE_QMARK_ = function(a) {
  return a !== com.rpl.specter.impl.NONE;
};
com.rpl.specter.navs.all_transform_list = function(a, b) {
  return cljs.core.doall.call(null, cljs.core.sequence.call(null, cljs.core.comp.call(null, cljs.core.map.call(null, b), cljs.core.filter.call(null, com.rpl.specter.navs.not_NONE_QMARK_)), a));
};
com.rpl.specter.navs.all_transform_record = function(a, b) {
  return cljs.core.reduce.call(null, function(a, d) {
    return cljs.core.conj.call(null, a, b.call(null, d));
  }, a, a);
};
goog.object.set(com.rpl.specter.navs.AllTransformProtocol, "null", !0);
goog.object.set(com.rpl.specter.navs.all_transform, "null", function(a, b) {
  return null;
});
cljs.core.MapEntry.prototype.com$rpl$specter$navs$AllTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2 = function(a, b) {
  a = b.call(null, cljs.core.key.call(null, this));
  b = b.call(null, cljs.core.val.call(null, this));
  return cljs.core.__GT_MapEntry.call(null, a, b, null);
};
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$AllTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2 = function(a, b) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.comp.call(null, cljs.core.map.call(null, b), cljs.core.filter.call(null, com.rpl.specter.navs.not_NONE_QMARK_)), this);
};
cljs.core.PersistentHashSet.prototype.com$rpl$specter$navs$AllTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2 = function(a, b) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.comp.call(null, cljs.core.map.call(null, b), cljs.core.filter.call(null, com.rpl.specter.navs.not_NONE_QMARK_)), this);
};
cljs.core.PersistentArrayMap.prototype.com$rpl$specter$navs$AllTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2 = function(a, b) {
  return com.rpl.specter.navs.non_transient_map_all_transform.call(null, this, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentTreeMap.prototype.com$rpl$specter$navs$AllTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2 = function(a, b) {
  return com.rpl.specter.navs.non_transient_map_all_transform.call(null, this, b, cljs.core.empty.call(null, this));
};
cljs.core.PersistentHashMap.prototype.com$rpl$specter$navs$AllTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.com$rpl$specter$navs$AllTransformProtocol$all_transform$arity$2 = function(a, b) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(a) {
    return function(a, c, f) {
      c = b.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, f], null));
      return cljs.core.truth_(com.rpl.specter.navs.void_transformed_kv_pair_QMARK_.call(null, c)) ? a : cljs.core.assoc_BANG_.call(null, a, cljs.core.nth.call(null, c, 0), cljs.core.nth.call(null, c, 1));
    };
  }(this), cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY), this));
};
goog.object.set(com.rpl.specter.navs.AllTransformProtocol, "_", !0);
goog.object.set(com.rpl.specter.navs.all_transform, "_", function(a, b) {
  if (cljs.core.record_QMARK_.call(null, a)) {
    return com.rpl.specter.navs.all_transform_record.call(null, a, b);
  }
  var c = cljs.core.empty.call(null, a);
  return cljs.core.list_QMARK_.call(null, c) && cljs.core.not.call(null, com.rpl.specter.navs.queue_QMARK_.call(null, c)) ? com.rpl.specter.navs.all_transform_list.call(null, a, b) : cljs.core.map_QMARK_.call(null, a) ? cljs.core.reduce_kv.call(null, function(a) {
    return function(a, c, d) {
      c = b.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null));
      return cljs.core.truth_(com.rpl.specter.navs.void_transformed_kv_pair_QMARK_.call(null, c)) ? a : cljs.core.assoc.call(null, a, cljs.core.nth.call(null, c, 0), cljs.core.nth.call(null, c, 1));
    };
  }(c), c, a) : cljs.core.into.call(null, c, cljs.core.comp.call(null, cljs.core.map.call(null, b), cljs.core.filter.call(null, com.rpl.specter.navs.not_NONE_QMARK_)), a);
});
com.rpl.specter.navs.MapTransformProtocol = function() {
};
com.rpl.specter.navs.map_vals_transform = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$MapTransformProtocol$map_vals_transform$arity$2) {
    return a.com$rpl$specter$navs$MapTransformProtocol$map_vals_transform$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.map_vals_transform[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.map_vals_transform._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "MapTransformProtocol.map-vals-transform", a);
};
com.rpl.specter.navs.map_keys_transform = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$MapTransformProtocol$map_keys_transform$arity$2) {
    return a.com$rpl$specter$navs$MapTransformProtocol$map_keys_transform$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.map_keys_transform[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.map_keys_transform._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "MapTransformProtocol.map-keys-transform", a);
};
com.rpl.specter.navs.map_vals_non_transient_transform = function(a, b, c) {
  return cljs.core.reduce_kv.call(null, function(a, b, f) {
    f = c.call(null, f);
    return f === com.rpl.specter.impl.NONE ? a : cljs.core.assoc.call(null, a, b, f);
  }, b, a);
};
com.rpl.specter.navs.map_keys_non_transient_transform = function(a, b, c) {
  return cljs.core.reduce_kv.call(null, function(a, b, f) {
    b = c.call(null, b);
    return b === com.rpl.specter.impl.NONE ? a : cljs.core.assoc.call(null, a, b, f);
  }, b, a);
};
goog.object.set(com.rpl.specter.navs.MapTransformProtocol, "null", !0);
goog.object.set(com.rpl.specter.navs.map_vals_transform, "null", function(a, b) {
  return null;
});
goog.object.set(com.rpl.specter.navs.map_keys_transform, "null", function(a, b) {
  return null;
});
cljs.core.PersistentArrayMap.prototype.com$rpl$specter$navs$MapTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.com$rpl$specter$navs$MapTransformProtocol$map_vals_transform$arity$2 = function(a, b) {
  return com.rpl.specter.navs.map_vals_non_transient_transform.call(null, this, cljs.core.PersistentArrayMap.EMPTY, b);
};
cljs.core.PersistentArrayMap.prototype.com$rpl$specter$navs$MapTransformProtocol$map_keys_transform$arity$2 = function(a, b) {
  return com.rpl.specter.navs.map_keys_non_transient_transform.call(null, this, cljs.core.PersistentArrayMap.EMPTY, b);
};
cljs.core.PersistentTreeMap.prototype.com$rpl$specter$navs$MapTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.com$rpl$specter$navs$MapTransformProtocol$map_vals_transform$arity$2 = function(a, b) {
  return com.rpl.specter.navs.map_vals_non_transient_transform.call(null, this, cljs.core.empty.call(null, this), b);
};
cljs.core.PersistentTreeMap.prototype.com$rpl$specter$navs$MapTransformProtocol$map_keys_transform$arity$2 = function(a, b) {
  return com.rpl.specter.navs.map_keys_non_transient_transform.call(null, this, cljs.core.empty.call(null, this), b);
};
cljs.core.PersistentHashMap.prototype.com$rpl$specter$navs$MapTransformProtocol$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.com$rpl$specter$navs$MapTransformProtocol$map_vals_transform$arity$2 = function(a, b) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(a) {
    return function(a, c, f) {
      f = b.call(null, f);
      return f === com.rpl.specter.impl.NONE ? a : cljs.core.assoc_BANG_.call(null, a, c, f);
    };
  }(this), cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY), this));
};
cljs.core.PersistentHashMap.prototype.com$rpl$specter$navs$MapTransformProtocol$map_keys_transform$arity$2 = function(a, b) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(a) {
    return function(a, c, f) {
      c = b.call(null, c);
      return c === com.rpl.specter.impl.NONE ? a : cljs.core.assoc_BANG_.call(null, a, c, f);
    };
  }(this), cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY), this));
};
goog.object.set(com.rpl.specter.navs.MapTransformProtocol, "_", !0);
goog.object.set(com.rpl.specter.navs.map_vals_transform, "_", function(a, b) {
  return cljs.core.reduce_kv.call(null, function(a, d, e) {
    e = b.call(null, e);
    return e === com.rpl.specter.impl.NONE ? a : cljs.core.assoc.call(null, a, d, e);
  }, cljs.core.empty.call(null, a), a);
});
goog.object.set(com.rpl.specter.navs.map_keys_transform, "_", function(a, b) {
  return cljs.core.reduce_kv.call(null, function(a, d, e) {
    d = b.call(null, d);
    return d === com.rpl.specter.impl.NONE ? a : cljs.core.assoc.call(null, a, d, e);
  }, cljs.core.empty.call(null, a), a);
});
com.rpl.specter.navs.srange_select = function(a, b, c, d) {
  return d.call(null, "string" === typeof a ? cljs.core.subs.call(null, a, b, c) : cljs.core.subvec.call(null, cljs.core.vec.call(null, a), b, c));
};
com.rpl.specter.navs.srange_transform = com.rpl.specter.impl.srange_transform_STAR_;
com.rpl.specter.navs.extract_basic_filter_fn = function(a) {
  return cljs.core.fn_QMARK_.call(null, a) ? a : cljs.core.coll_QMARK_.call(null, a) && cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, a) ? cljs.core.reduce.call(null, function(a, c) {
    return function(b) {
      var d = a.call(null, b);
      return cljs.core.truth_(d) ? c.call(null, b) : d;
    };
  }, a) : null;
};
com.rpl.specter.navs.if_select = function(a, b, c, d, e, f) {
  return com.rpl.specter.protocols.select_STAR_.call(null, cljs.core.truth_(d.call(null, b)) ? e : f, a, b, c);
};
com.rpl.specter.navs.if_transform = function(a, b, c, d, e, f) {
  return com.rpl.specter.protocols.transform_STAR_.call(null, cljs.core.truth_(d.call(null, b)) ? e : f, a, b, c);
};
com.rpl.specter.navs.AddExtremes = function() {
};
com.rpl.specter.navs.append_all = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$AddExtremes$append_all$arity$2) {
    return a.com$rpl$specter$navs$AddExtremes$append_all$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.append_all[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.append_all._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "AddExtremes.append-all", a);
};
com.rpl.specter.navs.prepend_all = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$AddExtremes$prepend_all$arity$2) {
    return a.com$rpl$specter$navs$AddExtremes$prepend_all$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.prepend_all[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.prepend_all._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "AddExtremes.prepend-all", a);
};
com.rpl.specter.navs.append_one = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$AddExtremes$append_one$arity$2) {
    return a.com$rpl$specter$navs$AddExtremes$append_one$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.append_one[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.append_one._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "AddExtremes.append-one", a);
};
com.rpl.specter.navs.prepend_one = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$AddExtremes$prepend_one$arity$2) {
    return a.com$rpl$specter$navs$AddExtremes$prepend_one$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.prepend_one[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.prepend_one._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "AddExtremes.prepend-one", a);
};
goog.object.set(com.rpl.specter.navs.AddExtremes, "null", !0);
goog.object.set(com.rpl.specter.navs.append_all, "null", function(a, b) {
  return b;
});
goog.object.set(com.rpl.specter.navs.prepend_all, "null", function(a, b) {
  return b;
});
goog.object.set(com.rpl.specter.navs.append_one, "null", function(a, b) {
  return new cljs.core.List(null, b, null, 1, null);
});
goog.object.set(com.rpl.specter.navs.prepend_one, "null", function(a, b) {
  return new cljs.core.List(null, b, null, 1, null);
});
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$AddExtremes$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$AddExtremes$append_all$arity$2 = function(a, b) {
  return cljs.core.reduce.call(null, cljs.core.conj, this, b);
};
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$AddExtremes$prepend_all$arity$2 = function(a, b) {
  a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  b = cljs.core.reduce.call(null, cljs.core.conj_BANG_, a, b);
  b = cljs.core.reduce.call(null, cljs.core.conj_BANG_, b, this);
  return cljs.core.persistent_BANG_.call(null, b);
};
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$AddExtremes$append_one$arity$2 = function(a, b) {
  return cljs.core.conj.call(null, this, b);
};
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$AddExtremes$prepend_one$arity$2 = function(a, b) {
  return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null), this);
};
goog.object.set(com.rpl.specter.navs.AddExtremes, "_", !0);
goog.object.set(com.rpl.specter.navs.append_all, "_", function(a, b) {
  return cljs.core.concat.call(null, a, b);
});
goog.object.set(com.rpl.specter.navs.prepend_all, "_", function(a, b) {
  return cljs.core.concat.call(null, b, a);
});
goog.object.set(com.rpl.specter.navs.append_one, "_", function(a, b) {
  return cljs.core.concat.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null));
});
goog.object.set(com.rpl.specter.navs.prepend_one, "_", function(a, b) {
  return cljs.core.cons.call(null, b, a);
});
com.rpl.specter.navs.UpdateExtremes = function() {
};
com.rpl.specter.navs.update_first = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$UpdateExtremes$update_first$arity$2) {
    return a.com$rpl$specter$navs$UpdateExtremes$update_first$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.update_first[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.update_first._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "UpdateExtremes.update-first", a);
};
com.rpl.specter.navs.update_last = function(a, b) {
  if (null != a && null != a.com$rpl$specter$navs$UpdateExtremes$update_last$arity$2) {
    return a.com$rpl$specter$navs$UpdateExtremes$update_last$arity$2(a, b);
  }
  var c = com.rpl.specter.navs.update_last[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = com.rpl.specter.navs.update_last._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "UpdateExtremes.update-last", a);
};
com.rpl.specter.navs.GetExtremes = function() {
};
com.rpl.specter.navs.get_first = function(a) {
  if (null != a && null != a.com$rpl$specter$navs$GetExtremes$get_first$arity$1) {
    return a.com$rpl$specter$navs$GetExtremes$get_first$arity$1(a);
  }
  var b = com.rpl.specter.navs.get_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = com.rpl.specter.navs.get_first._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "GetExtremes.get-first", a);
};
com.rpl.specter.navs.get_last = function(a) {
  if (null != a && null != a.com$rpl$specter$navs$GetExtremes$get_last$arity$1) {
    return a.com$rpl$specter$navs$GetExtremes$get_last$arity$1(a);
  }
  var b = com.rpl.specter.navs.get_last[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = com.rpl.specter.navs.get_last._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "GetExtremes.get-last", a);
};
com.rpl.specter.navs.FastEmpty = function() {
};
com.rpl.specter.navs.fast_empty_QMARK_ = function(a) {
  if (null != a && null != a.com$rpl$specter$navs$FastEmpty$fast_empty_QMARK_$arity$1) {
    return a.com$rpl$specter$navs$FastEmpty$fast_empty_QMARK_$arity$1(a);
  }
  var b = com.rpl.specter.navs.fast_empty_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = com.rpl.specter.navs.fast_empty_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "FastEmpty.fast-empty?", a);
};
com.rpl.specter.navs.PosNavigator_select_STAR_ = function(a, b, c, d) {
  return cljs.core.not.call(null, com.rpl.specter.navs.fast_empty_QMARK_.call(null, c)) ? d.call(null, a.call(null, c)) : com.rpl.specter.impl.NONE;
};
com.rpl.specter.navs.PosNavigator_transform_STAR_ = function(a, b, c, d) {
  return cljs.core.truth_(com.rpl.specter.navs.fast_empty_QMARK_.call(null, c)) ? c : b.call(null, c, d);
};
com.rpl.specter.navs.PosNavigator = com.rpl.specter.impl.direct_nav_obj.call(null, function(a, b) {
  "undefined" === typeof com.rpl.specter.navs.t_com$rpl$specter$navs5516 && (com.rpl.specter.navs.t_com$rpl$specter$navs5516 = function(a, b, e) {
    this.getter = a;
    this.updater = b;
    this.meta5517 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5516.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5516(this.getter, this.updater, b);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5516.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5517;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5516.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.navs.t_com$rpl$specter$navs5516.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, e, f) {
    a = function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this);
    return cljs.core.not.call(null, com.rpl.specter.navs.fast_empty_QMARK_.call(null, e)) ? a.call(null, this.getter.call(null, e)) : com.rpl.specter.impl.NONE;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5516.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, e, f) {
    a = function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this);
    return cljs.core.truth_(com.rpl.specter.navs.fast_empty_QMARK_.call(null, e)) ? e : this.updater.call(null, e, a);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5516.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "getter", "getter", 1725376382, null), new cljs.core.Symbol(null, "updater", "updater", 2107748764, null), new cljs.core.Symbol(null, "meta5517", "meta5517", 133005309, null)], null);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5516.cljs$lang$type = !0, com.rpl.specter.navs.t_com$rpl$specter$navs5516.cljs$lang$ctorStr = "com.rpl.specter.navs/t_com$rpl$specter$navs5516", com.rpl.specter.navs.t_com$rpl$specter$navs5516.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "com.rpl.specter.navs/t_com$rpl$specter$navs5516");
  }, com.rpl.specter.navs.__GT_t_com$rpl$specter$navs5516 = function(a, b, e) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5516(a, b, e);
  });
  return new com.rpl.specter.navs.t_com$rpl$specter$navs5516(a, b, null);
});
com.rpl.specter.navs.update_first_list = function(a, b) {
  b = b.call(null, cljs.core.first.call(null, a));
  a = cljs.core.rest.call(null, a);
  return com.rpl.specter.impl.NONE === b ? a : cljs.core.cons.call(null, b, a);
};
com.rpl.specter.navs.update_last_list = function(a, b) {
  b = b.call(null, cljs.core.last.call(null, a));
  a = cljs.core.butlast.call(null, a);
  return com.rpl.specter.impl.NONE === b ? null == a ? cljs.core.List.EMPTY : a : cljs.core.concat.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null));
};
com.rpl.specter.navs.vec_count = function(a) {
  return cljs.core.count.call(null, a);
};
com.rpl.specter.navs.transient_vec_count = function(a) {
  return cljs.core.count.call(null, a);
};
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$UpdateExtremes$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$UpdateExtremes$update_first$arity$2 = function(a, b) {
  a = cljs.core.nth.call(null, this, 0);
  b = b.call(null, a);
  return com.rpl.specter.impl.NONE === b ? cljs.core.subvec.call(null, this, 1) : cljs.core.assoc.call(null, this, 0, b);
};
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$UpdateExtremes$update_last$arity$2 = function(a, b) {
  a = com.rpl.specter.navs.vec_count.call(null, this) | 0;
  switch(a) {
    case 1:
      return a = cljs.core.nth.call(null, this, 0, null), b = b.call(null, a), com.rpl.specter.impl.NONE === b ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null);
    case 2:
      a = cljs.core.nth.call(null, this, 0, null);
      var c = cljs.core.nth.call(null, this, 1, null);
      b = b.call(null, c);
      return com.rpl.specter.impl.NONE === b ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
    default:
      return --a, b = b.call(null, cljs.core.nth.call(null, this, a)), com.rpl.specter.impl.NONE === b ? cljs.core.pop.call(null, this) : cljs.core.assoc.call(null, this, a, b);
  }
};
goog.object.set(com.rpl.specter.navs.UpdateExtremes, "string", !0);
goog.object.set(com.rpl.specter.navs.update_first, "string", function(a, b) {
  var c = cljs.core.subs.call(null, a, 1, cljs.core.count.call(null, a));
  a = b.call(null, cljs.core.nth.call(null, a, 0));
  return com.rpl.specter.impl.NONE === a ? c : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
});
goog.object.set(com.rpl.specter.navs.update_last, "string", function(a, b) {
  var c = cljs.core.count.call(null, a) - 1;
  b = b.call(null, cljs.core.nth.call(null, a, c));
  a = cljs.core.subs.call(null, a, 0, c);
  return com.rpl.specter.impl.NONE === b ? a : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
});
cljs.core.MapEntry.prototype.com$rpl$specter$navs$UpdateExtremes$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.com$rpl$specter$navs$UpdateExtremes$update_first$arity$2 = function(a, b) {
  return cljs.core.__GT_MapEntry.call(null, b.call(null, cljs.core.key.call(null, this)), cljs.core.val.call(null, this), null);
};
cljs.core.MapEntry.prototype.com$rpl$specter$navs$UpdateExtremes$update_last$arity$2 = function(a, b) {
  return cljs.core.__GT_MapEntry.call(null, cljs.core.key.call(null, this), b.call(null, cljs.core.val.call(null, this)), null);
};
goog.object.set(com.rpl.specter.navs.UpdateExtremes, "_", !0);
goog.object.set(com.rpl.specter.navs.update_first, "_", function(a, b) {
  return com.rpl.specter.navs.update_first_list.call(null, a, b);
});
goog.object.set(com.rpl.specter.navs.update_last, "_", function(a, b) {
  return com.rpl.specter.navs.update_last_list.call(null, a, b);
});
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$GetExtremes$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$GetExtremes$get_first$arity$1 = function(a) {
  return cljs.core.nth.call(null, this, 0);
};
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$GetExtremes$get_last$arity$1 = function(a) {
  return cljs.core.peek.call(null, this);
};
goog.object.set(com.rpl.specter.navs.GetExtremes, "_", !0);
goog.object.set(com.rpl.specter.navs.get_first, "_", function(a) {
  return cljs.core.first.call(null, a);
});
goog.object.set(com.rpl.specter.navs.get_last, "_", function(a) {
  return cljs.core.last.call(null, a);
});
cljs.core.MapEntry.prototype.com$rpl$specter$navs$GetExtremes$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.com$rpl$specter$navs$GetExtremes$get_first$arity$1 = function(a) {
  return cljs.core.key.call(null, this);
};
cljs.core.MapEntry.prototype.com$rpl$specter$navs$GetExtremes$get_last$arity$1 = function(a) {
  return cljs.core.val.call(null, this);
};
goog.object.set(com.rpl.specter.navs.GetExtremes, "string", !0);
goog.object.set(com.rpl.specter.navs.get_first, "string", function(a) {
  return cljs.core.nth.call(null, a, 0);
});
goog.object.set(com.rpl.specter.navs.get_last, "string", function(a) {
  return cljs.core.nth.call(null, a, cljs.core.count.call(null, a) - 1);
});
goog.object.set(com.rpl.specter.navs.FastEmpty, "null", !0);
goog.object.set(com.rpl.specter.navs.fast_empty_QMARK_, "null", function(a) {
  return !0;
});
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$FastEmpty$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.com$rpl$specter$navs$FastEmpty$fast_empty_QMARK_$arity$1 = function(a) {
  return cljs.core._EQ_.call(null, 0, com.rpl.specter.navs.vec_count.call(null, this));
};
cljs.core.TransientVector.prototype.com$rpl$specter$navs$FastEmpty$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransientVector.prototype.com$rpl$specter$navs$FastEmpty$fast_empty_QMARK_$arity$1 = function(a) {
  return cljs.core._EQ_.call(null, 0, com.rpl.specter.navs.transient_vec_count.call(null, this));
};
goog.object.set(com.rpl.specter.navs.FastEmpty, "_", !0);
goog.object.set(com.rpl.specter.navs.fast_empty_QMARK_, "_", function(a) {
  return cljs.core.empty_QMARK_.call(null, a);
});
com.rpl.specter.navs.do_keypath_transform = function(a, b, c, d) {
  a = d.call(null, a, cljs.core.get.call(null, b, c));
  return a === com.rpl.specter.impl.NONE ? cljs.core.sequential_QMARK_.call(null, b) ? com.rpl.specter.impl.srange_transform_STAR_.call(null, b, c, c + 1, function(a) {
    return function(a) {
      return cljs.core.PersistentVector.EMPTY;
    };
  }(a)) : cljs.core.dissoc.call(null, b, c) : cljs.core.assoc.call(null, b, c, a);
};
com.rpl.specter.navs.keypath_STAR_ = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.navs.t_com$rpl$specter$navs5527 && (com.rpl.specter.navs.t_com$rpl$specter$navs5527 = function(a, c) {
    this.key = a;
    this.meta5528 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5527.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5527(this.key, c);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5527.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5528;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5527.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.navs.t_com$rpl$specter$navs5527.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return e.call(null, c, cljs.core.get.call(null, d, this.key));
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5527.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return com.rpl.specter.navs.do_keypath_transform.call(null, c, d, this.key, e);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5527.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "meta5528", "meta5528", -417650999, null)], null);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5527.cljs$lang$type = !0, com.rpl.specter.navs.t_com$rpl$specter$navs5527.cljs$lang$ctorStr = "com.rpl.specter.navs/t_com$rpl$specter$navs5527", com.rpl.specter.navs.t_com$rpl$specter$navs5527.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter.navs/t_com$rpl$specter$navs5527");
  }, com.rpl.specter.navs.__GT_t_com$rpl$specter$navs5527 = function(a, c) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5527(a, c);
  });
  return new com.rpl.specter.navs.t_com$rpl$specter$navs5527(a, null);
});
com.rpl.specter.navs.must_STAR_ = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.navs.t_com$rpl$specter$navs5530 && (com.rpl.specter.navs.t_com$rpl$specter$navs5530 = function(a, c) {
    this.k = a;
    this.meta5531 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5530.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5530(this.k, c);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5530.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5531;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5530.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.navs.t_com$rpl$specter$navs5530.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.contains_QMARK_.call(null, d, this.k) ? e.call(null, c, cljs.core.get.call(null, d, this.k)) : com.rpl.specter.impl.NONE;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5530.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.contains_QMARK_.call(null, d, this.k) ? com.rpl.specter.navs.do_keypath_transform.call(null, c, d, this.k, e) : d;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5530.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "meta5531", "meta5531", 1999765271, null)], null);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5530.cljs$lang$type = !0, com.rpl.specter.navs.t_com$rpl$specter$navs5530.cljs$lang$ctorStr = "com.rpl.specter.navs/t_com$rpl$specter$navs5530", com.rpl.specter.navs.t_com$rpl$specter$navs5530.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter.navs/t_com$rpl$specter$navs5530");
  }, com.rpl.specter.navs.__GT_t_com$rpl$specter$navs5530 = function(a, c) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5530(a, c);
  });
  return new com.rpl.specter.navs.t_com$rpl$specter$navs5530(a, null);
});
com.rpl.specter.navs.nthpath_STAR_ = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.navs.t_com$rpl$specter$navs5533 && (com.rpl.specter.navs.t_com$rpl$specter$navs5533 = function(a, c) {
    this.i = a;
    this.meta5534 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5533.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5533(this.i, c);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5533.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5534;
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5533.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.navs.t_com$rpl$specter$navs5533.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return e.call(null, c, cljs.core.nth.call(null, d, this.i));
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5533.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.vector_QMARK_.call(null, d) ? (a = e.call(null, c, cljs.core.nth.call(null, d, this.i)), a === com.rpl.specter.impl.NONE ? com.rpl.specter.impl.srange_transform_STAR_.call(null, d, this.i, this.i + 1, function(a, b) {
      return function(a) {
        return cljs.core.PersistentVector.EMPTY;
      };
    }(a, this)) : cljs.core.assoc.call(null, d, this.i, a)) : com.rpl.specter.impl.srange_transform_STAR_.call(null, d, this.i, this.i + 1, function(a) {
      return function(a) {
        a = cljs.core.nth.call(null, a, 0, null);
        a = e.call(null, c, a);
        return a === com.rpl.specter.impl.NONE ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
      };
    }(this));
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5533.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta5534", "meta5534", -988523891, null)], null);
  }, com.rpl.specter.navs.t_com$rpl$specter$navs5533.cljs$lang$type = !0, com.rpl.specter.navs.t_com$rpl$specter$navs5533.cljs$lang$ctorStr = "com.rpl.specter.navs/t_com$rpl$specter$navs5533", com.rpl.specter.navs.t_com$rpl$specter$navs5533.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter.navs/t_com$rpl$specter$navs5533");
  }, com.rpl.specter.navs.__GT_t_com$rpl$specter$navs5533 = function(a, c) {
    return new com.rpl.specter.navs.t_com$rpl$specter$navs5533(a, c);
  });
  return new com.rpl.specter.navs.t_com$rpl$specter$navs5533(a, null);
});
com.rpl.specter.navs.SrangeEndFunction = function(a, b, c, d) {
  this.end_fn = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "end-fn":
      return this.end_fn;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#com.rpl.specter.navs.SrangeEndFunction{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684), this.end_fn], null)], null), this.__extmap));
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new com.rpl.specter.navs.SrangeEndFunction(this.end_fn, this.__meta, this.__extmap, this.__hash);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -674086206 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.end_fn, b.end_fn) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new com.rpl.specter.navs.SrangeEndFunction(this.end_fn, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, 
  b)), null);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684), b)) ? new com.rpl.specter.navs.SrangeEndFunction(c, this.__meta, this.__extmap, null) : new com.rpl.specter.navs.SrangeEndFunction(this.end_fn, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684), this.end_fn, null)], null), this.__extmap));
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new com.rpl.specter.navs.SrangeEndFunction(this.end_fn, b, this.__extmap, this.__hash);
};
com.rpl.specter.navs.SrangeEndFunction.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
com.rpl.specter.navs.SrangeEndFunction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "end-fn", "end-fn", 1694587211, null)], null);
};
com.rpl.specter.navs.SrangeEndFunction.cljs$lang$type = !0;
com.rpl.specter.navs.SrangeEndFunction.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "com.rpl.specter.navs/SrangeEndFunction", null, 1, null);
};
com.rpl.specter.navs.SrangeEndFunction.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "com.rpl.specter.navs/SrangeEndFunction");
};
com.rpl.specter.navs.__GT_SrangeEndFunction = function(a) {
  return new com.rpl.specter.navs.SrangeEndFunction(a, null, null, null);
};
com.rpl.specter.navs.map__GT_SrangeEndFunction = function(a) {
  return new com.rpl.specter.navs.SrangeEndFunction((new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684))), null);
};
com.rpl.specter.navs.invoke_end_fn = function(a, b, c) {
  return a instanceof com.rpl.specter.navs.SrangeEndFunction ? (new cljs.core.Keyword(null, "end-fn", "end-fn", 54055684)).cljs$core$IFn$_invoke$arity$1(a).call(null, b, c) : a.call(null, b);
};
com.rpl.specter.static_path_QMARK_ = function(a) {
  return cljs.core.sequential_QMARK_.call(null, a) ? cljs.core.every_QMARK_.call(null, com.rpl.specter.static_path_QMARK_, a) : cljs.core.not.call(null, com.rpl.specter.impl.dynamic_param_QMARK_.call(null, a));
};
com.rpl.specter.wrap_dynamic_nav = function(a) {
  return function() {
    var b = function(b) {
      var c = cljs.core.apply.call(null, a, b);
      return cljs.core.truth_(function() {
        var a = cljs.core.sequential_QMARK_.call(null, c);
        return a ? com.rpl.specter.static_path_QMARK_.call(null, c) : a;
      }()) ? com.rpl.specter.impl.comp_paths_STAR_.call(null, c) : cljs.core.sequential_QMARK_.call(null, c) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, c)) ? cljs.core.first.call(null, c) : c;
    }, c = function(a) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var d = Array(arguments.length - 0); c < d.length;) {
          d[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(d, 0, null);
      }
      return b.call(this, c);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return b(a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
com.rpl.specter.comp_paths = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return com.rpl.specter.comp_paths.cljs$core$IFn$_invoke$arity$variadic(b);
};
com.rpl.specter.comp_paths.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return com.rpl.specter.impl.comp_paths_STAR_.call(null, cljs.core.vec.call(null, a));
};
com.rpl.specter.comp_paths.cljs$lang$maxFixedArity = 0;
com.rpl.specter.comp_paths.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
com.rpl.specter.compiled_select = com.rpl.specter.impl.compiled_select_STAR_;
com.rpl.specter.select_STAR_ = function(a, b) {
  return com.rpl.specter.compiled_select.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_select_one = com.rpl.specter.impl.compiled_select_one_STAR_;
com.rpl.specter.select_one_STAR_ = function(a, b) {
  return com.rpl.specter.compiled_select_one.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_select_one_BANG_ = com.rpl.specter.impl.compiled_select_one_BANG__STAR_;
com.rpl.specter.select_one_BANG__STAR_ = function(a, b) {
  return com.rpl.specter.compiled_select_one_BANG_.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_select_first = com.rpl.specter.impl.compiled_select_first_STAR_;
com.rpl.specter.select_first_STAR_ = function(a, b) {
  return com.rpl.specter.compiled_select_first.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_select_any = com.rpl.specter.impl.compiled_select_any_STAR_;
com.rpl.specter.NONE = com.rpl.specter.impl.NONE;
com.rpl.specter.select_any_STAR_ = function(a, b) {
  return com.rpl.specter.compiled_select_any.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_selected_any_QMARK_ = com.rpl.specter.impl.compiled_selected_any_QMARK__STAR_;
com.rpl.specter.selected_any_QMARK__STAR_ = function(a, b) {
  return com.rpl.specter.compiled_selected_any_QMARK_.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_traverse = com.rpl.specter.impl.do_compiled_traverse;
com.rpl.specter.traverse_STAR_ = function(a, b) {
  return com.rpl.specter.compiled_traverse.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_traverse_all = com.rpl.specter.impl.compiled_traverse_all_STAR_;
com.rpl.specter.traverse_all_STAR_ = function(a) {
  return com.rpl.specter.compiled_traverse_all.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a));
};
com.rpl.specter.compiled_transform = com.rpl.specter.impl.compiled_transform_STAR_;
com.rpl.specter.compiled_vtransform = com.rpl.specter.impl.compiled_vtransform_STAR_;
com.rpl.specter.transform_STAR_ = function(a, b, c) {
  return com.rpl.specter.compiled_transform.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b, c);
};
com.rpl.specter.compiled_multi_transform = com.rpl.specter.impl.compiled_multi_transform_STAR_;
com.rpl.specter.multi_transform_STAR_ = function(a, b) {
  return com.rpl.specter.compiled_multi_transform.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b);
};
com.rpl.specter.compiled_setval = com.rpl.specter.impl.compiled_setval_STAR_;
com.rpl.specter.setval_STAR_ = function(a, b, c) {
  return com.rpl.specter.compiled_setval.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b, c);
};
com.rpl.specter.compiled_replace_in = com.rpl.specter.impl.compiled_replace_in_STAR_;
com.rpl.specter.replace_in_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0, null) : null;
  return com.rpl.specter.replace_in_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
com.rpl.specter.replace_in_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  d = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "merge-fn", "merge-fn", 588067341), cljs.core.concat);
  return com.rpl.specter.compiled_replace_in.call(null, com.rpl.specter.impl.comp_paths_STAR_.call(null, a), b, c, new cljs.core.Keyword(null, "merge-fn", "merge-fn", 588067341), d);
};
com.rpl.specter.replace_in_STAR_.cljs$lang$maxFixedArity = 3;
com.rpl.specter.replace_in_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
com.rpl.specter.late_path = com.rpl.specter.impl.late_path;
com.rpl.specter.dynamic_param_QMARK_ = com.rpl.specter.impl.dynamic_param_QMARK_;
com.rpl.specter.late_resolved_fn = com.rpl.specter.impl.late_resolved_fn;
com.rpl.specter.eachnav = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function(a) {
  a = com.rpl.specter.late_resolved_fn.call(null, a);
  return cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.map.call(null, a, b);
      }, d = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = b;
      return d;
    }();
  }(a)), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
}), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.local_declarepath = com.rpl.specter.impl.local_declarepath;
com.rpl.specter.STOP_select_STAR_ = function(a, b) {
  return com.rpl.specter.NONE;
};
com.rpl.specter.STOP_transform_STAR_ = function(a, b) {
  return a;
};
com.rpl.specter.STOP = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5587 && (com.rpl.specter.t_com$rpl$specter5587 = function(a) {
    this.meta5588 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5587.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5587(b);
  }, com.rpl.specter.t_com$rpl$specter5587.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5588;
  }, com.rpl.specter.t_com$rpl$specter5587.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5587.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    (function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    })(this);
    return com.rpl.specter.NONE;
  }, com.rpl.specter.t_com$rpl$specter5587.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    (function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    })(this);
    return c;
  }, com.rpl.specter.t_com$rpl$specter5587.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5588", "meta5588", 1319646786, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5587.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5587.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5587", com.rpl.specter.t_com$rpl$specter5587.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5587");
  }, com.rpl.specter.__GT_t_com$rpl$specter5587 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5587(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5587(null);
}();
com.rpl.specter.STAY = com.rpl.specter.impl.STAY_STAR_;
com.rpl.specter.terminal = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5590 && (com.rpl.specter.t_com$rpl$specter5590 = function(a, c) {
    this.afn = a;
    this.meta5591 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5590.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5590(this.afn, c);
  }, com.rpl.specter.t_com$rpl$specter5590.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5591;
  }, com.rpl.specter.t_com$rpl$specter5590.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5590.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return com.rpl.specter.NONE;
  }, com.rpl.specter.t_com$rpl$specter5590.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return com.rpl.specter.impl.terminal_STAR_.call(null, this.afn, c, d);
  }, com.rpl.specter.t_com$rpl$specter5590.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta5591", "meta5591", 1459737813, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5590.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5590.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5590", com.rpl.specter.t_com$rpl$specter5590.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5590");
  }, com.rpl.specter.__GT_t_com$rpl$specter5590 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5590(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5590(a, null);
});
com.rpl.specter.vterminal = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5593 && (com.rpl.specter.t_com$rpl$specter5593 = function(a, c) {
    this.afn = a;
    this.meta5594 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5593.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5593(this.afn, c);
  }, com.rpl.specter.t_com$rpl$specter5593.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5594;
  }, com.rpl.specter.t_com$rpl$specter5593.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5593.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return com.rpl.specter.NONE;
  }, com.rpl.specter.t_com$rpl$specter5593.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return this.afn.call(null, c, d);
  }, com.rpl.specter.t_com$rpl$specter5593.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta5594", "meta5594", 605595446, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5593.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5593.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5593", com.rpl.specter.t_com$rpl$specter5593.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5593");
  }, com.rpl.specter.__GT_t_com$rpl$specter5593 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5593(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5593(a, null);
});
com.rpl.specter.terminal_val = function(a) {
  return com.rpl.specter.terminal.call(null, com.rpl.specter.impl.fast_constantly.call(null, a));
};
com.rpl.specter.ALL_select_STAR_ = function(a, b) {
  return com.rpl.specter.navs.all_select.call(null, a, b);
};
com.rpl.specter.ALL_transform_STAR_ = function(a, b) {
  return com.rpl.specter.navs.all_transform.call(null, a, b);
};
com.rpl.specter.ALL = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5596 && (com.rpl.specter.t_com$rpl$specter5596 = function(a) {
    this.meta5597 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5596.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5596(b);
  }, com.rpl.specter.t_com$rpl$specter5596.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5597;
  }, com.rpl.specter.t_com$rpl$specter5596.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5596.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return com.rpl.specter.navs.all_select.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5596.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return com.rpl.specter.navs.all_transform.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5596.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5597", "meta5597", -1915298271, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5596.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5596.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5596", com.rpl.specter.t_com$rpl$specter5596.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5596");
  }, com.rpl.specter.__GT_t_com$rpl$specter5596 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5596(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5596(null);
}();
com.rpl.specter.ALL_WITH_META_select_STAR_ = function(a, b) {
  return com.rpl.specter.navs.all_select.call(null, a, b);
};
com.rpl.specter.ALL_WITH_META_transform_STAR_ = function(a, b) {
  var c = cljs.core.meta.call(null, a);
  a = com.rpl.specter.navs.all_transform.call(null, a, b);
  return null != a ? cljs.core.with_meta.call(null, a, c) : null;
};
com.rpl.specter.ALL_WITH_META = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5599 && (com.rpl.specter.t_com$rpl$specter5599 = function(a) {
    this.meta5600 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5599.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5599(b);
  }, com.rpl.specter.t_com$rpl$specter5599.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5600;
  }, com.rpl.specter.t_com$rpl$specter5599.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5599.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return com.rpl.specter.navs.all_select.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5599.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    var e = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    a = cljs.core.meta.call(null, c);
    c = com.rpl.specter.navs.all_transform.call(null, c, e);
    return null != c ? cljs.core.with_meta.call(null, c, a) : null;
  }, com.rpl.specter.t_com$rpl$specter5599.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5600", "meta5600", -1439299402, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5599.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5599.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5599", com.rpl.specter.t_com$rpl$specter5599.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5599");
  }, com.rpl.specter.__GT_t_com$rpl$specter5599 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5599(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5599(null);
}();
com.rpl.specter.MAP_VALS_select_STAR_ = function(a, b) {
  return cljs.core.reduce.call(null, function(a, d) {
    d = b.call(null, d);
    return d === com.rpl.specter.NONE ? a : cljs.core.reduced_QMARK_.call(null, d) ? cljs.core.reduced.call(null, d) : d;
  }, com.rpl.specter.NONE, cljs.core.vals.call(null, a));
};
com.rpl.specter.MAP_VALS_transform_STAR_ = function(a, b) {
  return com.rpl.specter.navs.map_vals_transform.call(null, a, b);
};
com.rpl.specter.MAP_VALS = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5602 && (com.rpl.specter.t_com$rpl$specter5602 = function(a) {
    this.meta5603 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5602.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5602(b);
  }, com.rpl.specter.t_com$rpl$specter5602.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5603;
  }, com.rpl.specter.t_com$rpl$specter5602.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5602.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return cljs.core.reduce.call(null, function(a, b) {
      return function(b, c) {
        c = a.call(null, c);
        return c === com.rpl.specter.NONE ? b : cljs.core.reduced_QMARK_.call(null, c) ? cljs.core.reduced.call(null, c) : c;
      };
    }(a, this), com.rpl.specter.NONE, cljs.core.vals.call(null, c));
  }, com.rpl.specter.t_com$rpl$specter5602.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return com.rpl.specter.navs.map_vals_transform.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5602.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5603", "meta5603", 752140301, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5602.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5602.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5602", com.rpl.specter.t_com$rpl$specter5602.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5602");
  }, com.rpl.specter.__GT_t_com$rpl$specter5602 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5602(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5602(null);
}();
com.rpl.specter.MAP_KEYS_select_STAR_ = function(a, b) {
  return cljs.core.reduce.call(null, function(a, d) {
    d = b.call(null, d);
    return d === com.rpl.specter.NONE ? a : cljs.core.reduced_QMARK_.call(null, d) ? cljs.core.reduced.call(null, d) : d;
  }, com.rpl.specter.NONE, cljs.core.keys.call(null, a));
};
com.rpl.specter.MAP_KEYS_transform_STAR_ = function(a, b) {
  return com.rpl.specter.navs.map_keys_transform.call(null, a, b);
};
com.rpl.specter.MAP_KEYS = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5605 && (com.rpl.specter.t_com$rpl$specter5605 = function(a) {
    this.meta5606 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5605.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5605(b);
  }, com.rpl.specter.t_com$rpl$specter5605.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5606;
  }, com.rpl.specter.t_com$rpl$specter5605.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5605.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return cljs.core.reduce.call(null, function(a, b) {
      return function(b, c) {
        c = a.call(null, c);
        return c === com.rpl.specter.NONE ? b : cljs.core.reduced_QMARK_.call(null, c) ? cljs.core.reduced.call(null, c) : c;
      };
    }(a, this), com.rpl.specter.NONE, cljs.core.keys.call(null, c));
  }, com.rpl.specter.t_com$rpl$specter5605.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return com.rpl.specter.navs.map_keys_transform.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5605.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5606", "meta5606", 207858296, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5605.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5605.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5605", com.rpl.specter.t_com$rpl$specter5605.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5605");
  }, com.rpl.specter.__GT_t_com$rpl$specter5605 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5605(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5605(null);
}();
com.rpl.specter.VAL = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5608 && (com.rpl.specter.t_com$rpl$specter5608 = function(a) {
    this.meta5609 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5608.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5608(b);
  }, com.rpl.specter.t_com$rpl$specter5608.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5609;
  }, com.rpl.specter.t_com$rpl$specter5608.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5608.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return d.call(null, cljs.core.conj.call(null, b, c), c);
  }, com.rpl.specter.t_com$rpl$specter5608.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    return d.call(null, cljs.core.conj.call(null, b, c), c);
  }, com.rpl.specter.t_com$rpl$specter5608.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5609", "meta5609", 1635875056, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5608.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5608.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5608", com.rpl.specter.t_com$rpl$specter5608.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5608");
  }, com.rpl.specter.__GT_t_com$rpl$specter5608 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5608(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5608(null);
}();
com.rpl.specter.LAST = com.rpl.specter.navs.PosNavigator.call(null, com.rpl.specter.navs.get_last, com.rpl.specter.navs.update_last);
com.rpl.specter.FIRST = com.rpl.specter.navs.PosNavigator.call(null, com.rpl.specter.navs.get_first, com.rpl.specter.navs.update_first);
com.rpl.specter.srange_dynamic_select_STAR_ = function(a, b, c, d) {
  a = a.call(null, c);
  return com.rpl.specter.navs.srange_select.call(null, c, a, com.rpl.specter.navs.invoke_end_fn.call(null, b, c, a), d);
};
com.rpl.specter.srange_dynamic_transform_STAR_ = function(a, b, c, d) {
  a = a.call(null, c);
  return com.rpl.specter.navs.srange_transform.call(null, c, a, com.rpl.specter.navs.invoke_end_fn.call(null, b, c, a), d);
};
com.rpl.specter.srange_dynamic = com.rpl.specter.impl.direct_nav_obj.call(null, function(a, b) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5611 && (com.rpl.specter.t_com$rpl$specter5611 = function(a, b, e) {
    this.start_index_fn = a;
    this.end_index_fn = b;
    this.meta5612 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5611.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5611(this.start_index_fn, this.end_index_fn, b);
  }, com.rpl.specter.t_com$rpl$specter5611.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5612;
  }, com.rpl.specter.t_com$rpl$specter5611.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5611.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, e, f) {
    a = function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this);
    var c = this.start_index_fn.call(null, e);
    return com.rpl.specter.navs.srange_select.call(null, e, c, com.rpl.specter.navs.invoke_end_fn.call(null, this.end_index_fn, e, c), a);
  }, com.rpl.specter.t_com$rpl$specter5611.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, e, f) {
    a = function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this);
    var c = this.start_index_fn.call(null, e);
    return com.rpl.specter.navs.srange_transform.call(null, e, c, com.rpl.specter.navs.invoke_end_fn.call(null, this.end_index_fn, e, c), a);
  }, com.rpl.specter.t_com$rpl$specter5611.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start-index-fn", "start-index-fn", -344842645, null), new cljs.core.Symbol(null, "end-index-fn", "end-index-fn", 1237092062, null), new cljs.core.Symbol(null, "meta5612", "meta5612", 1075020081, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5611.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5611.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5611", com.rpl.specter.t_com$rpl$specter5611.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5611");
  }, com.rpl.specter.__GT_t_com$rpl$specter5611 = function(a, b, e) {
    return new com.rpl.specter.t_com$rpl$specter5611(a, b, e);
  });
  return new com.rpl.specter.t_com$rpl$specter5611(a, b, null);
});
com.rpl.specter.srange_select_STAR_ = function(a, b, c, d) {
  return com.rpl.specter.navs.srange_select.call(null, c, a, b, d);
};
com.rpl.specter.srange_transform_STAR_ = function(a, b, c, d) {
  return com.rpl.specter.navs.srange_transform.call(null, c, a, b, d);
};
com.rpl.specter.srange = com.rpl.specter.impl.direct_nav_obj.call(null, function(a, b) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5614 && (com.rpl.specter.t_com$rpl$specter5614 = function(a, b, e) {
    this.start = a;
    this.end = b;
    this.meta5615 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5614.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5614(this.start, this.end, b);
  }, com.rpl.specter.t_com$rpl$specter5614.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5615;
  }, com.rpl.specter.t_com$rpl$specter5614.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5614.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, e, f) {
    a = function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this);
    return com.rpl.specter.navs.srange_select.call(null, e, this.start, this.end, a);
  }, com.rpl.specter.t_com$rpl$specter5614.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, e, f) {
    a = function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this);
    return com.rpl.specter.navs.srange_transform.call(null, e, this.start, this.end, a);
  }, com.rpl.specter.t_com$rpl$specter5614.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "meta5615", "meta5615", 841729202, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5614.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5614.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5614", com.rpl.specter.t_com$rpl$specter5614.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5614");
  }, com.rpl.specter.__GT_t_com$rpl$specter5614 = function(a, b, e) {
    return new com.rpl.specter.t_com$rpl$specter5614(a, b, e);
  });
  return new com.rpl.specter.t_com$rpl$specter5614(a, b, null);
});
com.rpl.specter.continuous_subseqs_select_STAR_ = function(a, b, c) {
  return cljs.core.reduce.call(null, function(a, e) {
    var d = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    d = com.rpl.specter.navs.srange_select.call(null, b, d, e, c);
    return d === com.rpl.specter.NONE ? a : cljs.core.reduced_QMARK_.call(null, d) ? cljs.core.reduced.call(null, d) : d;
  }, com.rpl.specter.NONE, com.rpl.specter.impl.matching_ranges.call(null, b, a));
};
com.rpl.specter.continuous_subseqs_transform_STAR_ = function(a, b, c) {
  return com.rpl.specter.impl.continuous_subseqs_transform_STAR_.call(null, a, b, c);
};
com.rpl.specter.continuous_subseqs = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5621 && (com.rpl.specter.t_com$rpl$specter5621 = function(a, c) {
    this.pred = a;
    this.meta5622 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5621.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5621(this.pred, c);
  }, com.rpl.specter.t_com$rpl$specter5621.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5622;
  }, com.rpl.specter.t_com$rpl$specter5621.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5621.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    a = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    return cljs.core.reduce.call(null, function(a, b) {
      return function(b, c) {
        var e = cljs.core.nth.call(null, c, 0, null);
        c = cljs.core.nth.call(null, c, 1, null);
        e = com.rpl.specter.navs.srange_select.call(null, d, e, c, a);
        return e === com.rpl.specter.NONE ? b : cljs.core.reduced_QMARK_.call(null, e) ? cljs.core.reduced.call(null, e) : e;
      };
    }(a, this), com.rpl.specter.NONE, com.rpl.specter.impl.matching_ranges.call(null, d, this.pred));
  }, com.rpl.specter.t_com$rpl$specter5621.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    a = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    return com.rpl.specter.impl.continuous_subseqs_transform_STAR_.call(null, this.pred, d, a);
  }, com.rpl.specter.t_com$rpl$specter5621.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "meta5622", "meta5622", 1149104779, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5621.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5621.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5621", com.rpl.specter.t_com$rpl$specter5621.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5621");
  }, com.rpl.specter.__GT_t_com$rpl$specter5621 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5621(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5621(a, null);
});
com.rpl.specter.BEGINNING_select_STAR_ = function(a, b) {
  return b.call(null, "string" === typeof a ? "" : cljs.core.PersistentVector.EMPTY);
};
com.rpl.specter.BEGINNING_transform_STAR_ = function(a, b) {
  if ("string" === typeof a) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b.call(null, "")), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  }
  b = b.call(null, cljs.core.PersistentVector.EMPTY);
  return com.rpl.specter.navs.prepend_all.call(null, a, b);
};
com.rpl.specter.BEGINNING = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5628 && (com.rpl.specter.t_com$rpl$specter5628 = function(a) {
    this.meta5629 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5628.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5628(b);
  }, com.rpl.specter.t_com$rpl$specter5628.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5629;
  }, com.rpl.specter.t_com$rpl$specter5628.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5628.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, "string" === typeof c ? "" : cljs.core.PersistentVector.EMPTY);
  }, com.rpl.specter.t_com$rpl$specter5628.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    if ("string" === typeof c) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.call(null, "")), cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
    }
    a = a.call(null, cljs.core.PersistentVector.EMPTY);
    return com.rpl.specter.navs.prepend_all.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5628.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5629", "meta5629", -733087169, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5628.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5628.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5628", com.rpl.specter.t_com$rpl$specter5628.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5628");
  }, com.rpl.specter.__GT_t_com$rpl$specter5628 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5628(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5628(null);
}();
com.rpl.specter.END_select_STAR_ = function(a, b) {
  return b.call(null, "string" === typeof a ? "" : cljs.core.PersistentVector.EMPTY);
};
com.rpl.specter.END_transform_STAR_ = function(a, b) {
  if ("string" === typeof a) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b.call(null, ""))].join("");
  }
  b = b.call(null, cljs.core.PersistentVector.EMPTY);
  return com.rpl.specter.navs.append_all.call(null, a, b);
};
com.rpl.specter.END = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5631 && (com.rpl.specter.t_com$rpl$specter5631 = function(a) {
    this.meta5632 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5631.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5631(b);
  }, com.rpl.specter.t_com$rpl$specter5631.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5632;
  }, com.rpl.specter.t_com$rpl$specter5631.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5631.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, "string" === typeof c ? "" : cljs.core.PersistentVector.EMPTY);
  }, com.rpl.specter.t_com$rpl$specter5631.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    if ("string" === typeof c) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.call(null, ""))].join("");
    }
    a = a.call(null, cljs.core.PersistentVector.EMPTY);
    return com.rpl.specter.navs.append_all.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5631.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5632", "meta5632", 27719554, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5631.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5631.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5631", com.rpl.specter.t_com$rpl$specter5631.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5631");
  }, com.rpl.specter.__GT_t_com$rpl$specter5631 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5631(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5631(null);
}();
com.rpl.specter.NONE_ELEM_select_STAR_ = function(a, b) {
  return b.call(null, com.rpl.specter.NONE);
};
com.rpl.specter.NONE_ELEM_transform_STAR_ = function(a, b) {
  b = b.call(null, com.rpl.specter.NONE);
  return com.rpl.specter.NONE === b ? a : null == a ? cljs.core.PersistentHashSet.createAsIfByAssoc([b]) : cljs.core.conj.call(null, a, b);
};
com.rpl.specter.NONE_ELEM = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5634 && (com.rpl.specter.t_com$rpl$specter5634 = function(a) {
    this.meta5635 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5634.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5634(b);
  }, com.rpl.specter.t_com$rpl$specter5634.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5635;
  }, com.rpl.specter.t_com$rpl$specter5634.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5634.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, com.rpl.specter.NONE);
  }, com.rpl.specter.t_com$rpl$specter5634.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, com.rpl.specter.NONE);
    return com.rpl.specter.NONE === a ? c : null == c ? cljs.core.PersistentHashSet.createAsIfByAssoc([a]) : cljs.core.conj.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5634.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5635", "meta5635", -1615184349, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5634.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5634.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5634", com.rpl.specter.t_com$rpl$specter5634.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5634");
  }, com.rpl.specter.__GT_t_com$rpl$specter5634 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5634(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5634(null);
}();
com.rpl.specter.BEFORE_ELEM_select_STAR_ = function(a, b) {
  return b.call(null, com.rpl.specter.NONE);
};
com.rpl.specter.BEFORE_ELEM_transform_STAR_ = function(a, b) {
  b = b.call(null, com.rpl.specter.NONE);
  return com.rpl.specter.NONE === b ? a : com.rpl.specter.navs.prepend_one.call(null, a, b);
};
com.rpl.specter.BEFORE_ELEM = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5637 && (com.rpl.specter.t_com$rpl$specter5637 = function(a) {
    this.meta5638 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5637.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5637(b);
  }, com.rpl.specter.t_com$rpl$specter5637.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5638;
  }, com.rpl.specter.t_com$rpl$specter5637.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5637.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, com.rpl.specter.NONE);
  }, com.rpl.specter.t_com$rpl$specter5637.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, com.rpl.specter.NONE);
    return com.rpl.specter.NONE === a ? c : com.rpl.specter.navs.prepend_one.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5637.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5638", "meta5638", 114064311, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5637.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5637.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5637", com.rpl.specter.t_com$rpl$specter5637.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5637");
  }, com.rpl.specter.__GT_t_com$rpl$specter5637 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5637(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5637(null);
}();
com.rpl.specter.AFTER_ELEM_select_STAR_ = function(a, b) {
  return b.call(null, com.rpl.specter.NONE);
};
com.rpl.specter.AFTER_ELEM_transform_STAR_ = function(a, b) {
  b = b.call(null, com.rpl.specter.NONE);
  return com.rpl.specter.NONE === b ? a : com.rpl.specter.navs.append_one.call(null, a, b);
};
com.rpl.specter.AFTER_ELEM = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5640 && (com.rpl.specter.t_com$rpl$specter5640 = function(a) {
    this.meta5641 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5640.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5640(b);
  }, com.rpl.specter.t_com$rpl$specter5640.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5641;
  }, com.rpl.specter.t_com$rpl$specter5640.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5640.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, com.rpl.specter.NONE);
  }, com.rpl.specter.t_com$rpl$specter5640.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, com.rpl.specter.NONE);
    return com.rpl.specter.NONE === a ? c : com.rpl.specter.navs.append_one.call(null, c, a);
  }, com.rpl.specter.t_com$rpl$specter5640.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5641", "meta5641", -1969563221, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5640.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5640.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5640", com.rpl.specter.t_com$rpl$specter5640.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5640");
  }, com.rpl.specter.__GT_t_com$rpl$specter5640 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5640(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5640(null);
}();
com.rpl.specter.subset_select_STAR_ = function(a, b, c) {
  return c.call(null, clojure.set.intersection.call(null, b, a));
};
com.rpl.specter.subset_transform_STAR_ = function(a, b, c) {
  a = clojure.set.intersection.call(null, b, a);
  c = c.call(null, a);
  return clojure.set.union.call(null, clojure.set.difference.call(null, b, a), c);
};
com.rpl.specter.subset = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5643 && (com.rpl.specter.t_com$rpl$specter5643 = function(a, c) {
    this.aset = a;
    this.meta5644 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5643.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5643(this.aset, c);
  }, com.rpl.specter.t_com$rpl$specter5643.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5644;
  }, com.rpl.specter.t_com$rpl$specter5643.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5643.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this).call(null, clojure.set.intersection.call(null, d, this.aset));
  }, com.rpl.specter.t_com$rpl$specter5643.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    var b = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    a = clojure.set.intersection.call(null, d, this.aset);
    b = b.call(null, a);
    return clojure.set.union.call(null, clojure.set.difference.call(null, d, a), b);
  }, com.rpl.specter.t_com$rpl$specter5643.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "aset", "aset", 900773178, null), new cljs.core.Symbol(null, "meta5644", "meta5644", 1802369049, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5643.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5643.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5643", com.rpl.specter.t_com$rpl$specter5643.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5643");
  }, com.rpl.specter.__GT_t_com$rpl$specter5643 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5643(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5643(a, null);
});
com.rpl.specter.submap_select_STAR_ = function(a, b, c) {
  return c.call(null, cljs.core.select_keys.call(null, b, a));
};
com.rpl.specter.submap_transform_STAR_ = function(a, b, c) {
  var d = cljs.core.select_keys.call(null, b, a);
  c = c.call(null, d);
  return cljs.core.merge.call(null, cljs.core.reduce.call(null, cljs.core.dissoc, b, a), c);
};
com.rpl.specter.submap = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5646 && (com.rpl.specter.t_com$rpl$specter5646 = function(a, c) {
    this.m_keys = a;
    this.meta5647 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5646.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5646(this.m_keys, c);
  }, com.rpl.specter.t_com$rpl$specter5646.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5647;
  }, com.rpl.specter.t_com$rpl$specter5646.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5646.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this).call(null, cljs.core.select_keys.call(null, d, this.m_keys));
  }, com.rpl.specter.t_com$rpl$specter5646.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    a = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    var b = cljs.core.select_keys.call(null, d, this.m_keys);
    a = a.call(null, b);
    return cljs.core.merge.call(null, cljs.core.reduce.call(null, cljs.core.dissoc, d, this.m_keys), a);
  }, com.rpl.specter.t_com$rpl$specter5646.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m-keys", "m-keys", -197459035, null), new cljs.core.Symbol(null, "meta5647", "meta5647", 1483191060, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5646.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5646.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5646", com.rpl.specter.t_com$rpl$specter5646.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5646");
  }, com.rpl.specter.__GT_t_com$rpl$specter5646 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5646(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5646(a, null);
});
com.rpl.specter.subselect = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    var b = com.rpl.specter.impl.direct_nav_obj.call(null, function(b) {
      "undefined" === typeof com.rpl.specter.t_com$rpl$specter5649 && (com.rpl.specter.t_com$rpl$specter5649 = function(a, b, c) {
        this.path = a;
        this.late = b;
        this.meta5650 = c;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, com.rpl.specter.t_com$rpl$specter5649.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
        return new com.rpl.specter.t_com$rpl$specter5649(this.path, this.late, b);
      }, com.rpl.specter.t_com$rpl$specter5649.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
        return this.meta5650;
      }, com.rpl.specter.t_com$rpl$specter5649.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5649.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
        return function(a) {
          return function(a) {
            return d.call(null, b, a);
          };
        }(this).call(null, com.rpl.specter.compiled_select.call(null, this.late, c));
      }, com.rpl.specter.t_com$rpl$specter5649.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
        a = function(a) {
          return function(a) {
            return d.call(null, b, a);
          };
        }(this);
        var e = com.rpl.specter.compiled_select.call(null, this.late, c), f = a.call(null, e), g = com.rpl.specter.impl.mutable_cell.call(null, cljs.core.seq.call(null, f));
        return com.rpl.specter.compiled_transform.call(null, this.late, function(a, b, c, d, e) {
          return function(a) {
            a = com.rpl.specter.impl.get_cell.call(null, c);
            return cljs.core.truth_(a) ? (com.rpl.specter.impl.update_cell_BANG_.call(null, c, cljs.core.next), cljs.core.first.call(null, a)) : com.rpl.specter.NONE;
          };
        }(e, f, g, a, this), c);
      }, com.rpl.specter.t_com$rpl$specter5649.getBasis = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "meta5650", "meta5650", -1322634146, null)], null);
      }, com.rpl.specter.t_com$rpl$specter5649.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5649.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5649", com.rpl.specter.t_com$rpl$specter5649.cljs$lang$ctorPrWriter = function(a, b, c) {
        return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5649");
      }, com.rpl.specter.__GT_t_com$rpl$specter5649 = function(a, b, c) {
        return new com.rpl.specter.t_com$rpl$specter5649(a, b, c);
      });
      return new com.rpl.specter.t_com$rpl$specter5649(a, b, null);
    }), c = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a)], null);
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), c) ? cljs.core.apply.call(null, b, c) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, b, c, null);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.map_key = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5655 && (com.rpl.specter.t_com$rpl$specter5655 = function(a, c) {
    this.key = a;
    this.meta5656 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5655.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5655(this.key, c);
  }, com.rpl.specter.t_com$rpl$specter5655.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5656;
  }, com.rpl.specter.t_com$rpl$specter5655.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5655.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.contains_QMARK_.call(null, d, this.key) ? e.call(null, c, this.key) : com.rpl.specter.NONE;
  }, com.rpl.specter.t_com$rpl$specter5655.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.contains_QMARK_.call(null, d, this.key) ? (a = e.call(null, c, this.key), c = cljs.core.dissoc.call(null, d, this.key), com.rpl.specter.NONE === a ? c : cljs.core.assoc.call(null, c, a, cljs.core.get.call(null, d, this.key))) : d;
  }, com.rpl.specter.t_com$rpl$specter5655.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "meta5656", "meta5656", -537174071, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5655.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5655.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5655", com.rpl.specter.t_com$rpl$specter5655.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5655");
  }, com.rpl.specter.__GT_t_com$rpl$specter5655 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5655(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5655(a, null);
});
com.rpl.specter.set_elem = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5658 && (com.rpl.specter.t_com$rpl$specter5658 = function(a, c) {
    this.elem = a;
    this.meta5659 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5658.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5658(this.elem, c);
  }, com.rpl.specter.t_com$rpl$specter5658.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5659;
  }, com.rpl.specter.t_com$rpl$specter5658.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5658.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.contains_QMARK_.call(null, d, this.elem) ? e.call(null, c, this.elem) : com.rpl.specter.NONE;
  }, com.rpl.specter.t_com$rpl$specter5658.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return cljs.core.contains_QMARK_.call(null, d, this.elem) ? (a = e.call(null, c, this.elem), d = cljs.core.disj.call(null, d, this.elem), com.rpl.specter.NONE === a ? d : cljs.core.conj.call(null, d, a)) : d;
  }, com.rpl.specter.t_com$rpl$specter5658.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "elem", "elem", -2035804713, null), new cljs.core.Symbol(null, "meta5659", "meta5659", 1107876415, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5658.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5658.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5658", com.rpl.specter.t_com$rpl$specter5658.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5658");
  }, com.rpl.specter.__GT_t_com$rpl$specter5658 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5658(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5658(a, null);
});
com.rpl.specter.keypath = com.rpl.specter.eachnav.call(null, com.rpl.specter.navs.keypath_STAR_);
com.rpl.specter.must = com.rpl.specter.eachnav.call(null, com.rpl.specter.navs.must_STAR_);
com.rpl.specter.nthpath = com.rpl.specter.eachnav.call(null, com.rpl.specter.navs.nthpath_STAR_);
com.rpl.specter.before_index = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5661 && (com.rpl.specter.t_com$rpl$specter5661 = function(a, c) {
    this.index = a;
    this.meta5662 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5661.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5661(this.index, c);
  }, com.rpl.specter.t_com$rpl$specter5661.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5662;
  }, com.rpl.specter.t_com$rpl$specter5661.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5661.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return com.rpl.specter.NONE;
  }, com.rpl.specter.t_com$rpl$specter5661.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    var b = this;
    a = e.call(null, c, com.rpl.specter.NONE);
    return com.rpl.specter.NONE === a ? d : com.rpl.specter.impl.compiled_setval_STAR_.call(null, function() {
      var a = com.rpl.specter.pathcache5664, c = null == a ? function() {
        var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.srange, new cljs.core.Var(function() {
          return com.rpl.specter.srange;
        }, new cljs.core.Symbol("com.rpl.specter", "srange", "com.rpl.specter/srange", -978851939, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
        "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "srange", "srange", -1324254972, null), "out/com/rpl/specter.cljc", 9, 1, 751, 754, cljs.core.List.EMPTY, "Navigates to the subsequence bound by the indexes start (inclusive)\n          and end (exclusive)", 
        cljs.core.truth_(com.rpl.specter.srange) ? com.rpl.specter.srange.cljs$lang$test : null])), new cljs.core.Symbol(null, "srange", "srange", -1324254972, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, b.index, new cljs.core.Symbol(null, "index", "index", 108845612, null)), com.rpl.specter.impl.__GT_LocalSym.call(null, b.index, new cljs.core.Symbol(null, "index", "index", 108845612, null))], null), cljs.core.list(new cljs.core.Symbol(null, 
        "srange", "srange", -1324254972, null), new cljs.core.Symbol(null, "index", "index", 108845612, null), new cljs.core.Symbol(null, "index", "index", 108845612, null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "index", "index", 108845612, null), new cljs.core.Symbol(null, "index", "index", 108845612, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Symbol(null, "srange", "srange", -1324254972, null), new cljs.core.Symbol(null, "index", "index", 108845612, null), new cljs.core.Symbol(null, "index", "index", 108845612, null)], null));
        return com.rpl.specter.pathcache5664 = a;
      }() : a;
      a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
      c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
      return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.srange, b.index, b.index], null)) : a;
    }(), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null), d);
  }, com.rpl.specter.t_com$rpl$specter5661.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "index", "index", 108845612, null), new cljs.core.Symbol(null, "meta5662", "meta5662", -266253659, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5661.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5661.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5661", com.rpl.specter.t_com$rpl$specter5661.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5661");
  }, com.rpl.specter.__GT_t_com$rpl$specter5661 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5661(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5661(a, null);
});
com.rpl.specter.index_nav = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5667 && (com.rpl.specter.t_com$rpl$specter5667 = function(a, c) {
    this.i = a;
    this.meta5668 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5667.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5667(this.i, c);
  }, com.rpl.specter.t_com$rpl$specter5667.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5668;
  }, com.rpl.specter.t_com$rpl$specter5667.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5667.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return 0 <= this.i && this.i < cljs.core.count.call(null, d) ? e.call(null, c, this.i) : com.rpl.specter.NONE;
  }, com.rpl.specter.t_com$rpl$specter5667.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    var b = this;
    if (0 <= b.i && b.i < cljs.core.count.call(null, d)) {
      var g = e.call(null, c, b.i);
      if (cljs.core._EQ_.call(null, g, b.i)) {
        return d;
      }
      a = cljs.core.nth.call(null, d, b.i);
      return cljs.core.vector_QMARK_.call(null, d) ? (c = g < b.i ? function() {
        for (var a = b.i - 1, c = d;;) {
          if (a < g) {
            return c;
          }
          var e = a - 1;
          c = cljs.core.assoc.call(null, c, a + 1, cljs.core.nth.call(null, c, a));
          a = e;
        }
      }() : function() {
        for (var a = b.i + 1, c = d;;) {
          if (a > g) {
            return c;
          }
          var e = a + 1;
          c = cljs.core.assoc.call(null, c, a - 1, cljs.core.nth.call(null, c, a));
          a = e;
        }
      }(), cljs.core.assoc.call(null, c, g, a)) : com.rpl.specter.impl.compiled_setval_STAR_.call(null, function() {
        var a = com.rpl.specter.pathcache5670, b = null == a ? function() {
          var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.before_index, new cljs.core.Var(function() {
            return com.rpl.specter.before_index;
          }, new cljs.core.Symbol("com.rpl.specter", "before-index", "com.rpl.specter/before-index", 1952616274, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "before-index", "before-index", -407870261, null), "out/com/rpl/specter.cljc", 15, 1, 964, 967, cljs.core.List.EMPTY, "Navigates to the empty space between the index and the prior index. For select\n          navigates to NONE, and transforms to non-NONE insert at that position.", 
          cljs.core.truth_(com.rpl.specter.before_index) ? com.rpl.specter.before_index.cljs$lang$test : null])), new cljs.core.Symbol(null, "before-index", "before-index", -407870261, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, g, new cljs.core.Symbol(null, "newi", "newi", 857919881, null))], null), cljs.core.list(new cljs.core.Symbol(null, "before-index", "before-index", -407870261, null), new cljs.core.Symbol(null, 
          "newi", "newi", 857919881, null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "newi", "newi", 857919881, null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "before-index", "before-index", -407870261, null), new cljs.core.Symbol(null, "newi", "newi", 857919881, null)], null));
          return com.rpl.specter.pathcache5670 = a;
        }() : a;
        a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, b);
        b = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, b);
        return cljs.core.truth_(b) ? a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.before_index, g], null)) : a;
      }(), a, com.rpl.specter.impl.compiled_setval_STAR_.call(null, function() {
        var a = com.rpl.specter.pathcache5673, c = null == a ? function() {
          var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.nthpath, new cljs.core.Var(function() {
            return com.rpl.specter.nthpath;
          }, new cljs.core.Symbol("com.rpl.specter", "nthpath", "com.rpl.specter/nthpath", 2085224162, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
          new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), "out/com/rpl/specter.cljc", 10, 1, 959, 961, cljs.core.List.EMPTY, "Navigate to the specified indices one after another. If navigate to\n            NONE, that element is removed from the sequence.", 
          cljs.core.truth_(com.rpl.specter.nthpath) ? com.rpl.specter.nthpath.cljs$lang$test : null])), new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, b.i, new cljs.core.Symbol(null, "i", "i", 253690212, null))], null), cljs.core.list(new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), new cljs.core.Symbol(null, "i", "i", 253690212, 
          null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null));
          return com.rpl.specter.pathcache5673 = a;
        }() : a;
        a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
        c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
        return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.nthpath, b.i], null)) : a;
      }(), com.rpl.specter.NONE, d));
    }
    return d;
  }, com.rpl.specter.t_com$rpl$specter5667.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta5668", "meta5668", 494821469, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5667.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5667.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5667", com.rpl.specter.t_com$rpl$specter5667.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5667");
  }, com.rpl.specter.__GT_t_com$rpl$specter5667 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5667(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5667(a, null);
});
com.rpl.specter.indexed_vals_select_STAR_ = function(a, b, c) {
  a = com.rpl.specter.impl.mutable_cell.call(null, a - 1);
  return cljs.core.reduce.call(null, function(a) {
    return function(b, d) {
      com.rpl.specter.impl.update_cell_BANG_.call(null, a, cljs.core.inc);
      d = c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.get_cell.call(null, a), d], null));
      return d === com.rpl.specter.NONE ? b : cljs.core.reduced_QMARK_.call(null, d) ? cljs.core.reduced.call(null, d) : d;
    };
  }(a), com.rpl.specter.NONE, b);
};
com.rpl.specter.indexed_vals_transform_STAR_ = function(a, b, c) {
  var d = com.rpl.specter.impl.mutable_cell.call(null, cljs.core.range.call(null, cljs.core.count.call(null, b)));
  return cljs.core.reduce.call(null, function(b) {
    return function(d, e) {
      var f = cljs.core.first.call(null, com.rpl.specter.impl.get_cell.call(null, b));
      e = c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a + f, e], null));
      var g = cljs.core.nth.call(null, e, 0, null), l = cljs.core.nth.call(null, e, 1, null), m = g - a;
      com.rpl.specter.impl.update_cell_BANG_.call(null, b, function(a, b, c, d, e, f) {
        return function(g) {
          var h = cljs.core.next.call(null, g);
          return e > a ? com.rpl.specter.impl.compiled_transform_STAR_.call(null, function() {
            var g = com.rpl.specter.pathcache5685, k = null == g ? function() {
              var k = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
                return com.rpl.specter.ALL;
              }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
              "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
              cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null)), com.rpl.specter.impl.__GT_SpecialFormUse.call(null, function(a, b, c, d, e, f, g, h) {
                return function(a) {
                  return a >= c + 1;
                };
              }(g, h, a, b, c, d, e, f), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null), cljs.core.list(new cljs.core.Symbol(null, "inc", "inc", 324505433, 
              null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null))))), com.rpl.specter.impl.__GT_SpecialFormUse.call(null, function(a, b, c, d, e, f, g, h) {
                return function(a) {
                  return a <= g;
                };
              }(g, h, a, b, c, d, e, f), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null), new cljs.core.Symbol(null, "newi", "newi", 857919881, null))))], 
              null)], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "curri", "curri", 347667219, null), new cljs.core.Symbol(null, "newi", "newi", 857919881, null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), cljs.core.list(new cljs.core.Symbol(null, 
              "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null), cljs.core.list(new cljs.core.Symbol(null, "inc", "inc", 324505433, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null)))), 
              cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null), new cljs.core.Symbol(null, "newi", "newi", 857919881, null)))], null), new cljs.core.Symbol(null, 
              "ALL", "ALL", 866837407, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null), cljs.core.list(new cljs.core.Symbol(null, "inc", "inc", 324505433, 
              null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null)))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null), new cljs.core.Symbol(null, 
              "newi", "newi", 857919881, null)))], null));
              return com.rpl.specter.pathcache5685 = k;
            }() : g, l = com.rpl.specter.impl.cached_path_info_precompiled.call(null, k), m = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, k);
            return cljs.core.truth_(m) ? l.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.ALL, function(a, b, c, d, e, f, g, h, k, l, m) {
              return function(a) {
                return a >= f + 1;
              };
            }(g, k, l, m, h, a, b, c, d, e, f), function(a, b, c, d, e, f, g, h, k, l, m) {
              return function(a) {
                return a <= l;
              };
            }(g, k, l, m, h, a, b, c, d, e, f)], null), com.rpl.specter.ALL, function(a, b, c, d, e, f, g, h, k, l, m) {
              return function(a) {
                return a >= f + 1;
              };
            }(g, k, l, m, h, a, b, c, d, e, f), function(a, b, c, d, e, f, g, h, k, l, m) {
              return function(a) {
                return a <= l;
              };
            }(g, k, l, m, h, a, b, c, d, e, f)], null)) : l;
          }(), cljs.core.dec, h) : h;
        };
      }(f, e, g, l, m, b));
      return com.rpl.specter.impl.compiled_setval_STAR_.call(null, function() {
        var a = com.rpl.specter.pathcache5688, b = null == a ? function() {
          var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.index_nav, new cljs.core.Var(function() {
            return com.rpl.specter.index_nav;
          }, new cljs.core.Symbol("com.rpl.specter", "index-nav", "com.rpl.specter/index-nav", 2054501071, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
          new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null), "out/com/rpl/specter.cljc", 12, 1, 979, 982, cljs.core.List.EMPTY, "Navigates to the index of the sequence if within 0 and size. Transforms move element\n          at that index to the new index, shifting other elements in the sequence.", 
          cljs.core.truth_(com.rpl.specter.index_nav) ? com.rpl.specter.index_nav.cljs$lang$test : null])), new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, f, new cljs.core.Symbol(null, "curri", "curri", 347667219, null))], null), cljs.core.list(new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null), new cljs.core.Symbol(null, "curri", 
          "curri", 347667219, null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null));
          return com.rpl.specter.pathcache5688 = a;
        }() : a;
        a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, b);
        b = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, b);
        return cljs.core.truth_(b) ? a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.index_nav, f], null)) : a;
      }(), m, com.rpl.specter.impl.compiled_setval_STAR_.call(null, function() {
        var a = com.rpl.specter.pathcache5691, b = null == a ? function() {
          var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.nthpath, new cljs.core.Var(function() {
            return com.rpl.specter.nthpath;
          }, new cljs.core.Symbol("com.rpl.specter", "nthpath", "com.rpl.specter/nthpath", 2085224162, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
          new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), "out/com/rpl/specter.cljc", 10, 1, 959, 961, cljs.core.List.EMPTY, "Navigate to the specified indices one after another. If navigate to\n            NONE, that element is removed from the sequence.", 
          cljs.core.truth_(com.rpl.specter.nthpath) ? com.rpl.specter.nthpath.cljs$lang$test : null])), new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, f, new cljs.core.Symbol(null, "curri", "curri", 347667219, null))], null), cljs.core.list(new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), new cljs.core.Symbol(null, "curri", "curri", 
          347667219, null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null));
          return com.rpl.specter.pathcache5691 = a;
        }() : a;
        a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, b);
        b = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, b);
        return cljs.core.truth_(b) ? a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.nthpath, f], null)) : a;
      }(), l, d));
    };
  }(d), b, b);
};
com.rpl.specter.indexed_vals = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5694 && (com.rpl.specter.t_com$rpl$specter5694 = function(a, c) {
    this.start = a;
    this.meta5695 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5694.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5694(this.start, c);
  }, com.rpl.specter.t_com$rpl$specter5694.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5695;
  }, com.rpl.specter.t_com$rpl$specter5694.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5694.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    a = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    var b = com.rpl.specter.impl.mutable_cell.call(null, this.start - 1);
    return cljs.core.reduce.call(null, function(a, b, c) {
      return function(c, d) {
        com.rpl.specter.impl.update_cell_BANG_.call(null, a, cljs.core.inc);
        d = b.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.get_cell.call(null, a), d], null));
        return d === com.rpl.specter.NONE ? c : cljs.core.reduced_QMARK_.call(null, d) ? cljs.core.reduced.call(null, d) : d;
      };
    }(b, a, this), com.rpl.specter.NONE, d);
  }, com.rpl.specter.t_com$rpl$specter5694.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    var b = this;
    a = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    var g = com.rpl.specter.impl.mutable_cell.call(null, cljs.core.range.call(null, cljs.core.count.call(null, d)));
    return cljs.core.reduce.call(null, function(a, c, d) {
      return function(e, f) {
        var g = cljs.core.first.call(null, com.rpl.specter.impl.get_cell.call(null, a));
        f = c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.start + g, f], null));
        var h = cljs.core.nth.call(null, f, 0, null), k = cljs.core.nth.call(null, f, 1, null), l = h - b.start;
        com.rpl.specter.impl.update_cell_BANG_.call(null, a, function(a, b, c, d, e, f, g, h) {
          return function(k) {
            var l = cljs.core.next.call(null, k);
            return e > a ? com.rpl.specter.impl.compiled_transform_STAR_.call(null, function() {
              var k = com.rpl.specter.pathcache5700, m = null == k ? function() {
                var m = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
                  return com.rpl.specter.ALL;
                }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
                new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
                cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null)), com.rpl.specter.impl.__GT_SpecialFormUse.call(null, function(a, b, c, d, e, f, g, h, k, l) {
                  return function(a) {
                    return a >= c + 1;
                  };
                }(k, l, a, b, c, d, e, f, g, h), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null), cljs.core.list(new cljs.core.Symbol(null, "inc", "inc", 
                324505433, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null))))), com.rpl.specter.impl.__GT_SpecialFormUse.call(null, function(a, b, c, d, e, f, g, h, k, l) {
                  return function(a) {
                    return a <= g;
                  };
                }(k, l, a, b, c, d, e, f, g, h), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null), new cljs.core.Symbol(null, "newi", "newi", 857919881, null))))], 
                null)], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "curri", "curri", 347667219, null), new cljs.core.Symbol(null, "newi", "newi", 857919881, null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), cljs.core.list(new cljs.core.Symbol(null, 
                "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null), cljs.core.list(new cljs.core.Symbol(null, "inc", "inc", 324505433, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, 
                null)))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null), new cljs.core.Symbol(null, "newi", "newi", 857919881, null)))], null), new cljs.core.Symbol(null, 
                "ALL", "ALL", 866837407, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), new cljs.core.Symbol(null, "p1__5680#", "p1__5680#", -1525978547, null), cljs.core.list(new cljs.core.Symbol(null, "inc", "inc", 
                324505433, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null)))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), new cljs.core.Symbol(null, "p1__5681#", "p1__5681#", -2044781455, null), new cljs.core.Symbol(null, 
                "newi", "newi", 857919881, null)))], null));
                return com.rpl.specter.pathcache5700 = m;
              }() : k, n = com.rpl.specter.impl.cached_path_info_precompiled.call(null, m), p = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, m);
              return cljs.core.truth_(p) ? n.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.ALL, function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
                return function(a) {
                  return a >= f + 1;
                };
              }(k, m, n, p, l, a, b, c, d, e, f, g, h), function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
                return function(a) {
                  return a <= l;
                };
              }(k, m, n, p, l, a, b, c, d, e, f, g, h)], null), com.rpl.specter.ALL, function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
                return function(a) {
                  return a >= f + 1;
                };
              }(k, m, n, p, l, a, b, c, d, e, f, g, h), function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
                return function(a) {
                  return a <= l;
                };
              }(k, m, n, p, l, a, b, c, d, e, f, g, h)], null)) : n;
            }(), cljs.core.dec, l) : l;
          };
        }(g, f, h, k, l, a, c, d));
        return com.rpl.specter.impl.compiled_setval_STAR_.call(null, function() {
          var a = com.rpl.specter.pathcache5703, b = null == a ? function() {
            var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.index_nav, new cljs.core.Var(function() {
              return com.rpl.specter.index_nav;
            }, new cljs.core.Symbol("com.rpl.specter", "index-nav", "com.rpl.specter/index-nav", 2054501071, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
            new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null), "out/com/rpl/specter.cljc", 12, 1, 979, 982, cljs.core.List.EMPTY, "Navigates to the index of the sequence if within 0 and size. Transforms move element\n          at that index to the new index, shifting other elements in the sequence.", 
            cljs.core.truth_(com.rpl.specter.index_nav) ? com.rpl.specter.index_nav.cljs$lang$test : null])), new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, g, new cljs.core.Symbol(null, "curri", "curri", 347667219, null))], null), cljs.core.list(new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null), new cljs.core.Symbol(null, 
            "curri", "curri", 347667219, null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "index-nav", "index-nav", -157001568, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null));
            return com.rpl.specter.pathcache5703 = a;
          }() : a;
          a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, b);
          b = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, b);
          return cljs.core.truth_(b) ? a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.index_nav, g], null)) : a;
        }(), l, com.rpl.specter.impl.compiled_setval_STAR_.call(null, function() {
          var a = com.rpl.specter.pathcache5706, b = null == a ? function() {
            var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.nthpath, new cljs.core.Var(function() {
              return com.rpl.specter.nthpath;
            }, new cljs.core.Symbol("com.rpl.specter", "nthpath", "com.rpl.specter/nthpath", 2085224162, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
            new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), "out/com/rpl/specter.cljc", 10, 1, 959, 961, cljs.core.List.EMPTY, "Navigate to the specified indices one after another. If navigate to\n            NONE, that element is removed from the sequence.", 
            cljs.core.truth_(com.rpl.specter.nthpath) ? com.rpl.specter.nthpath.cljs$lang$test : null])), new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, g, new cljs.core.Symbol(null, "curri", "curri", 347667219, null))], null), cljs.core.list(new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), new cljs.core.Symbol(null, "curri", "curri", 
            347667219, null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nthpath", "nthpath", -400599909, null), new cljs.core.Symbol(null, "curri", "curri", 347667219, null)], null));
            return com.rpl.specter.pathcache5706 = a;
          }() : a;
          a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, b);
          b = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, b);
          return cljs.core.truth_(b) ? a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.nthpath, g], null)) : a;
        }(), k, e));
      };
    }(g, a, this), d, d);
  }, com.rpl.specter.t_com$rpl$specter5694.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "meta5695", "meta5695", 1556746292, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5694.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5694.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5694", com.rpl.specter.t_com$rpl$specter5694.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5694");
  }, com.rpl.specter.__GT_t_com$rpl$specter5694 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5694(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5694(a, null);
});
com.rpl.specter.INDEXED_VALS = com.rpl.specter.indexed_vals.call(null, 0);
com.rpl.specter.view = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5709 && (com.rpl.specter.t_com$rpl$specter5709 = function(a, c) {
    this.afn = a;
    this.meta5710 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5709.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5709(this.afn, c);
  }, com.rpl.specter.t_com$rpl$specter5709.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5710;
  }, com.rpl.specter.t_com$rpl$specter5709.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5709.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return e.call(null, c, this.afn.call(null, d));
  }, com.rpl.specter.t_com$rpl$specter5709.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return e.call(null, c, this.afn.call(null, d));
  }, com.rpl.specter.t_com$rpl$specter5709.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta5710", "meta5710", -140805136, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5709.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5709.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5709", com.rpl.specter.t_com$rpl$specter5709.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5709");
  }, com.rpl.specter.__GT_t_com$rpl$specter5709 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5709(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5709(a, null);
});
com.rpl.specter.parser_select_STAR_ = function(a, b, c, d) {
  return d.call(null, a.call(null, c));
};
com.rpl.specter.parser_transform_STAR_ = function(a, b, c, d) {
  return b.call(null, d.call(null, a.call(null, c)));
};
com.rpl.specter.parser = com.rpl.specter.impl.direct_nav_obj.call(null, function(a, b) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5712 && (com.rpl.specter.t_com$rpl$specter5712 = function(a, b, e) {
    this.parse_fn = a;
    this.unparse_fn = b;
    this.meta5713 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5712.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5712(this.parse_fn, this.unparse_fn, b);
  }, com.rpl.specter.t_com$rpl$specter5712.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5713;
  }, com.rpl.specter.t_com$rpl$specter5712.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5712.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, e, f) {
    return function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this).call(null, this.parse_fn.call(null, e));
  }, com.rpl.specter.t_com$rpl$specter5712.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, e, f) {
    a = function(a) {
      return function(a) {
        return f.call(null, b, a);
      };
    }(this);
    return this.unparse_fn.call(null, a.call(null, this.parse_fn.call(null, e)));
  }, com.rpl.specter.t_com$rpl$specter5712.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parse-fn", "parse-fn", -836029424, null), new cljs.core.Symbol(null, "unparse-fn", "unparse-fn", 407187734, null), new cljs.core.Symbol(null, "meta5713", "meta5713", 1623002178, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5712.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5712.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5712", com.rpl.specter.t_com$rpl$specter5712.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5712");
  }, com.rpl.specter.__GT_t_com$rpl$specter5712 = function(a, b, e) {
    return new com.rpl.specter.t_com$rpl$specter5712(a, b, e);
  });
  return new com.rpl.specter.t_com$rpl$specter5712(a, b, null);
});
com.rpl.specter.ATOM_select_STAR_ = function(a, b) {
  return b.call(null, cljs.core.deref.call(null, a));
};
com.rpl.specter.ATOM_transform_STAR_ = function(a, b) {
  cljs.core.swap_BANG_.call(null, a, b);
  return a;
};
com.rpl.specter.ATOM = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5715 && (com.rpl.specter.t_com$rpl$specter5715 = function(a) {
    this.meta5716 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5715.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5715(b);
  }, com.rpl.specter.t_com$rpl$specter5715.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5716;
  }, com.rpl.specter.t_com$rpl$specter5715.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5715.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, cljs.core.deref.call(null, c));
  }, com.rpl.specter.t_com$rpl$specter5715.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    cljs.core.swap_BANG_.call(null, c, a);
    return c;
  }, com.rpl.specter.t_com$rpl$specter5715.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5716", "meta5716", 1656439123, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5715.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5715.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5715", com.rpl.specter.t_com$rpl$specter5715.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5715");
  }, com.rpl.specter.__GT_t_com$rpl$specter5715 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5715(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5715(null);
}();
com.rpl.specter.regex_nav_select_STAR_ = function(a, b, c) {
  return cljs.core.reduce.call(null, function(a, b) {
    b = c.call(null, b);
    return b === com.rpl.specter.NONE ? a : cljs.core.reduced_QMARK_.call(null, b) ? cljs.core.reduced.call(null, b) : b;
  }, com.rpl.specter.NONE, cljs.core.re_seq.call(null, a, b));
};
com.rpl.specter.regex_nav_transform_STAR_ = function(a, b, c) {
  return clojure.string.replace.call(null, b, a, c);
};
com.rpl.specter.regex_nav = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5718 && (com.rpl.specter.t_com$rpl$specter5718 = function(a, c) {
    this.re = a;
    this.meta5719 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5718.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5718(this.re, c);
  }, com.rpl.specter.t_com$rpl$specter5718.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5719;
  }, com.rpl.specter.t_com$rpl$specter5718.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5718.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    a = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    return cljs.core.reduce.call(null, function(a, b) {
      return function(b, c) {
        c = a.call(null, c);
        return c === com.rpl.specter.NONE ? b : cljs.core.reduced_QMARK_.call(null, c) ? cljs.core.reduced.call(null, c) : c;
      };
    }(a, this), com.rpl.specter.NONE, cljs.core.re_seq.call(null, this.re, d));
  }, com.rpl.specter.t_com$rpl$specter5718.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    a = function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this);
    return clojure.string.replace.call(null, d, this.re, a);
  }, com.rpl.specter.t_com$rpl$specter5718.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "meta5719", "meta5719", 2122542051, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5718.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5718.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5718", com.rpl.specter.t_com$rpl$specter5718.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5718");
  }, com.rpl.specter.__GT_t_com$rpl$specter5718 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5718(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5718(a, null);
});
com.rpl.specter.selected_QMARK_ = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    var b = com.rpl.specter.navs.extract_basic_filter_fn.call(null, a);
    if (cljs.core.truth_(b)) {
      return b;
    }
    b = com.rpl.specter.impl.direct_nav_obj.call(null, function(b) {
      return function(c) {
        "undefined" === typeof com.rpl.specter.t_com$rpl$specter5723 && (com.rpl.specter.t_com$rpl$specter5723 = function(a, b, c, d) {
          this.path = a;
          this.temp__5455__auto__ = b;
          this.late = c;
          this.meta5724 = d;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        }, com.rpl.specter.t_com$rpl$specter5723.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
          return function(a, b) {
            return new com.rpl.specter.t_com$rpl$specter5723(this.path, this.temp__5455__auto__, this.late, b);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5723.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
          return function(a) {
            return this.meta5724;
          };
        }(b), com.rpl.specter.t_com$rpl$specter5723.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5723.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a) {
          return function(b, c, d, e) {
            var f = this;
            return com.rpl.specter.impl.filter_select.call(null, function(a, b) {
              return function(a) {
                return com.rpl.specter.navs.selected_QMARK__STAR_.call(null, f.late, c, a);
              };
            }(this, a), c, d, e);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5723.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a) {
          return function(b, c, d, e) {
            var f = this;
            return com.rpl.specter.impl.filter_transform.call(null, function(a, b) {
              return function(a) {
                return com.rpl.specter.navs.selected_QMARK__STAR_.call(null, f.late, c, a);
              };
            }(this, a), c, d, e);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5723.getBasis = function(a) {
          return function() {
            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "temp__5455__auto__", "temp__5455__auto__", 980956642, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "meta5724", "meta5724", 59853370, null)], null);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5723.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5723.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5723", com.rpl.specter.t_com$rpl$specter5723.cljs$lang$ctorPrWriter = function(a) {
          return function(a, b, c) {
            return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5723");
          };
        }(b), com.rpl.specter.__GT_t_com$rpl$specter5723 = function(a) {
          return function(a, b, c, d) {
            return new com.rpl.specter.t_com$rpl$specter5723(a, b, c, d);
          };
        }(b));
        return new com.rpl.specter.t_com$rpl$specter5723(a, b, c, null);
      };
    }(b));
    var c = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a)], null);
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), c) ? cljs.core.apply.call(null, b, c) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, b, c, null);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.not_selected_QMARK_ = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    var b = com.rpl.specter.navs.extract_basic_filter_fn.call(null, a);
    if (cljs.core.truth_(b)) {
      return function(a, b) {
        return function(b) {
          return cljs.core.not.call(null, a.call(null, b));
        };
      }(b, b);
    }
    b = com.rpl.specter.impl.direct_nav_obj.call(null, function(b) {
      return function(c) {
        "undefined" === typeof com.rpl.specter.t_com$rpl$specter5731 && (com.rpl.specter.t_com$rpl$specter5731 = function(a, b, c, d) {
          this.path = a;
          this.temp__5455__auto__ = b;
          this.late = c;
          this.meta5732 = d;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        }, com.rpl.specter.t_com$rpl$specter5731.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
          return function(a, b) {
            return new com.rpl.specter.t_com$rpl$specter5731(this.path, this.temp__5455__auto__, this.late, b);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5731.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
          return function(a) {
            return this.meta5732;
          };
        }(b), com.rpl.specter.t_com$rpl$specter5731.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5731.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a) {
          return function(b, c, d, e) {
            var f = this;
            return com.rpl.specter.impl.filter_select.call(null, function(a, b) {
              return function(a) {
                return com.rpl.specter.navs.not_selected_QMARK__STAR_.call(null, f.late, c, a);
              };
            }(this, a), c, d, e);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5731.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a) {
          return function(b, c, d, e) {
            var f = this;
            return com.rpl.specter.impl.filter_transform.call(null, function(a, b) {
              return function(a) {
                return com.rpl.specter.navs.not_selected_QMARK__STAR_.call(null, f.late, c, a);
              };
            }(this, a), c, d, e);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5731.getBasis = function(a) {
          return function() {
            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "temp__5455__auto__", "temp__5455__auto__", 980956642, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "meta5732", "meta5732", 294616759, null)], null);
          };
        }(b), com.rpl.specter.t_com$rpl$specter5731.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5731.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5731", com.rpl.specter.t_com$rpl$specter5731.cljs$lang$ctorPrWriter = function(a) {
          return function(a, b, c) {
            return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5731");
          };
        }(b), com.rpl.specter.__GT_t_com$rpl$specter5731 = function(a) {
          return function(a, b, c, d) {
            return new com.rpl.specter.t_com$rpl$specter5731(a, b, c, d);
          };
        }(b));
        return new com.rpl.specter.t_com$rpl$specter5731(a, b, c, null);
      };
    }(b));
    var c = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a)], null);
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), c) ? cljs.core.apply.call(null, b, c) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, b, c, null);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.filterer = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    return com.rpl.specter.subselect.call(null, com.rpl.specter.ALL, com.rpl.specter.selected_QMARK_.call(null, a));
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.transformed = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function(a, b) {
  var c = com.rpl.specter.impl.direct_nav_obj.call(null, function(c, d) {
    "undefined" === typeof com.rpl.specter.t_com$rpl$specter5740 && (com.rpl.specter.t_com$rpl$specter5740 = function(a, b, c, d, e) {
      this.path = a;
      this.update_fn = b;
      this.late = c;
      this.late_fn = d;
      this.meta5741 = e;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, com.rpl.specter.t_com$rpl$specter5740.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
      return new com.rpl.specter.t_com$rpl$specter5740(this.path, this.update_fn, this.late, this.late_fn, b);
    }, com.rpl.specter.t_com$rpl$specter5740.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
      return this.meta5741;
    }, com.rpl.specter.t_com$rpl$specter5740.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5740.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
      return function(a) {
        return function(a) {
          return d.call(null, b, a);
        };
      }(this).call(null, com.rpl.specter.compiled_transform.call(null, this.late, this.late_fn, c));
    }, com.rpl.specter.t_com$rpl$specter5740.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
      return function(a) {
        return function(a) {
          return d.call(null, b, a);
        };
      }(this).call(null, com.rpl.specter.compiled_transform.call(null, this.late, this.late_fn, c));
    }, com.rpl.specter.t_com$rpl$specter5740.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "update-fn", "update-fn", -1943348456, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "late-fn", "late-fn", 268309430, null), new cljs.core.Symbol(null, "meta5741", "meta5741", -654437649, null)], null);
    }, com.rpl.specter.t_com$rpl$specter5740.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5740.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5740", com.rpl.specter.t_com$rpl$specter5740.cljs$lang$ctorPrWriter = function(a, b, c) {
      return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5740");
    }, com.rpl.specter.__GT_t_com$rpl$specter5740 = function(a, b, c, d, e) {
      return new com.rpl.specter.t_com$rpl$specter5740(a, b, c, d, e);
    });
    return new com.rpl.specter.t_com$rpl$specter5740(a, b, c, d, null);
  }), d = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a), b], null);
  return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), d) ? cljs.core.apply.call(null, c, d) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, c, d, null);
}), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.traversed = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function(a, b) {
  var c = com.rpl.specter.impl.direct_nav_obj.call(null, function(c, d) {
    "undefined" === typeof com.rpl.specter.t_com$rpl$specter5743 && (com.rpl.specter.t_com$rpl$specter5743 = function(a, b, c, d, e) {
      this.path = a;
      this.reduce_fn = b;
      this.late = c;
      this.late_fn = d;
      this.meta5744 = e;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, com.rpl.specter.t_com$rpl$specter5743.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
      return new com.rpl.specter.t_com$rpl$specter5743(this.path, this.reduce_fn, this.late, this.late_fn, b);
    }, com.rpl.specter.t_com$rpl$specter5743.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
      return this.meta5744;
    }, com.rpl.specter.t_com$rpl$specter5743.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5743.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
      return function(a) {
        return function(a) {
          return d.call(null, b, a);
        };
      }(this).call(null, cljs.core.reduce.call(null, this.late_fn, com.rpl.specter.compiled_traverse.call(null, this.late, c)));
    }, com.rpl.specter.t_com$rpl$specter5743.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
      return function(a) {
        return function(a) {
          return d.call(null, b, a);
        };
      }(this).call(null, cljs.core.reduce.call(null, this.late_fn, com.rpl.specter.compiled_traverse.call(null, this.late, c)));
    }, com.rpl.specter.t_com$rpl$specter5743.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "reduce-fn", "reduce-fn", -1484020844, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "late-fn", "late-fn", 268309430, null), new cljs.core.Symbol(null, "meta5744", "meta5744", 949020637, null)], null);
    }, com.rpl.specter.t_com$rpl$specter5743.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5743.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5743", com.rpl.specter.t_com$rpl$specter5743.cljs$lang$ctorPrWriter = function(a, b, c) {
      return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5743");
    }, com.rpl.specter.__GT_t_com$rpl$specter5743 = function(a, b, c, d, e) {
      return new com.rpl.specter.t_com$rpl$specter5743(a, b, c, d, e);
    });
    return new com.rpl.specter.t_com$rpl$specter5743(a, b, c, d, null);
  }), d = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a), b], null);
  return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), d) ? cljs.core.apply.call(null, c, d) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, c, d, null);
}), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.pred = com.rpl.specter.impl.pred_STAR_;
com.rpl.specter.pred_EQ_ = function(a) {
  return com.rpl.specter.pred.call(null, function(b) {
    return cljs.core._EQ_.call(null, b, a);
  });
};
com.rpl.specter.pred_LT_ = function(a) {
  return com.rpl.specter.pred.call(null, function(b) {
    return b < a;
  });
};
com.rpl.specter.pred_GT_ = function(a) {
  return com.rpl.specter.pred.call(null, function(b) {
    return b > a;
  });
};
com.rpl.specter.pred_LT__EQ_ = function(a) {
  return com.rpl.specter.pred.call(null, function(b) {
    return b <= a;
  });
};
com.rpl.specter.pred_GT__EQ_ = function(a) {
  return com.rpl.specter.pred.call(null, function(b) {
    return b >= a;
  });
};
goog.object.set(com.rpl.specter.protocols.ImplicitNav, "null", !0);
goog.object.set(com.rpl.specter.protocols.implicit_nav, "null", function(a) {
  return com.rpl.specter.STAY;
});
cljs.core.Keyword.prototype.com$rpl$specter$protocols$ImplicitNav$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.com$rpl$specter$protocols$ImplicitNav$implicit_nav$arity$1 = function(a) {
  return com.rpl.specter.navs.keypath_STAR_.call(null, this);
};
cljs.core.Symbol.prototype.com$rpl$specter$protocols$ImplicitNav$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.com$rpl$specter$protocols$ImplicitNav$implicit_nav$arity$1 = function(a) {
  return com.rpl.specter.navs.keypath_STAR_.call(null, this);
};
goog.object.set(com.rpl.specter.protocols.ImplicitNav, "string", !0);
goog.object.set(com.rpl.specter.protocols.implicit_nav, "string", function(a) {
  return com.rpl.specter.navs.keypath_STAR_.call(null, a);
});
goog.object.set(com.rpl.specter.protocols.ImplicitNav, "number", !0);
goog.object.set(com.rpl.specter.protocols.implicit_nav, "number", function(a) {
  return com.rpl.specter.navs.keypath_STAR_.call(null, a);
});
cljs.core.char$.prototype.com$rpl$specter$protocols$ImplicitNav$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.char$.prototype.com$rpl$specter$protocols$ImplicitNav$implicit_nav$arity$1 = function(a) {
  return com.rpl.specter.navs.keypath_STAR_.call(null, this);
};
goog.object.set(com.rpl.specter.protocols.ImplicitNav, "boolean", !0);
goog.object.set(com.rpl.specter.protocols.implicit_nav, "boolean", function(a) {
  return com.rpl.specter.navs.keypath_STAR_.call(null, a);
});
goog.object.set(com.rpl.specter.protocols.ImplicitNav, "function", !0);
goog.object.set(com.rpl.specter.protocols.implicit_nav, "function", function(a) {
  return com.rpl.specter.pred.call(null, a);
});
cljs.core.PersistentHashSet.prototype.com$rpl$specter$protocols$ImplicitNav$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.com$rpl$specter$protocols$ImplicitNav$implicit_nav$arity$1 = function(a) {
  return com.rpl.specter.pred.call(null, this);
};
RegExp.prototype.com$rpl$specter$protocols$ImplicitNav$ = cljs.core.PROTOCOL_SENTINEL;
RegExp.prototype.com$rpl$specter$protocols$ImplicitNav$implicit_nav$arity$1 = function(a) {
  return com.rpl.specter.regex_nav.call(null, this);
};
com.rpl.specter.nil__GT_val_select_STAR_ = function(a, b, c) {
  return c.call(null, null == b ? a : b);
};
com.rpl.specter.nil__GT_val_transform_STAR_ = function(a, b, c) {
  return c.call(null, null == b ? a : b);
};
com.rpl.specter.nil__GT_val = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5751 && (com.rpl.specter.t_com$rpl$specter5751 = function(a, c) {
    this.v = a;
    this.meta5752 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5751.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5751(this.v, c);
  }, com.rpl.specter.t_com$rpl$specter5751.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5752;
  }, com.rpl.specter.t_com$rpl$specter5751.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5751.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this).call(null, null == d ? this.v : d);
  }, com.rpl.specter.t_com$rpl$specter5751.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return function(a) {
      return function(a) {
        return e.call(null, c, a);
      };
    }(this).call(null, null == d ? this.v : d);
  }, com.rpl.specter.t_com$rpl$specter5751.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "meta5752", "meta5752", -1917118444, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5751.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5751.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5751", com.rpl.specter.t_com$rpl$specter5751.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5751");
  }, com.rpl.specter.__GT_t_com$rpl$specter5751 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5751(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5751(a, null);
});
com.rpl.specter.NIL__GT_SET = com.rpl.specter.nil__GT_val.call(null, cljs.core.PersistentHashSet.EMPTY);
com.rpl.specter.NIL__GT_LIST = com.rpl.specter.nil__GT_val.call(null, cljs.core.List.EMPTY);
com.rpl.specter.NIL__GT_VECTOR = com.rpl.specter.nil__GT_val.call(null, cljs.core.PersistentVector.EMPTY);
com.rpl.specter.META_select_STAR_ = function(a, b) {
  return b.call(null, cljs.core.meta.call(null, a));
};
com.rpl.specter.META_transform_STAR_ = function(a, b) {
  return cljs.core.with_meta.call(null, a, b.call(null, cljs.core.meta.call(null, a)));
};
com.rpl.specter.META = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5754 && (com.rpl.specter.t_com$rpl$specter5754 = function(a) {
    this.meta5755 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5754.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5754(b);
  }, com.rpl.specter.t_com$rpl$specter5754.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5755;
  }, com.rpl.specter.t_com$rpl$specter5754.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5754.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, cljs.core.meta.call(null, c));
  }, com.rpl.specter.t_com$rpl$specter5754.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    return cljs.core.with_meta.call(null, c, a.call(null, cljs.core.meta.call(null, c)));
  }, com.rpl.specter.t_com$rpl$specter5754.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5755", "meta5755", 1536672350, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5754.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5754.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5754", com.rpl.specter.t_com$rpl$specter5754.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5754");
  }, com.rpl.specter.__GT_t_com$rpl$specter5754 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5754(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5754(null);
}();
com.rpl.specter.NAME_select_STAR_ = function(a, b) {
  return b.call(null, cljs.core.name.call(null, a));
};
com.rpl.specter.NAME_transform_STAR_ = function(a, b) {
  b = b.call(null, cljs.core.name.call(null, a));
  var c = cljs.core.namespace.call(null, a);
  if (a instanceof cljs.core.Keyword) {
    return cljs.core.keyword.call(null, c, b);
  }
  if (a instanceof cljs.core.Symbol) {
    return cljs.core.symbol.call(null, c, b);
  }
  throw new java.lang.IllegalArgumentException(com.rpl.specter.impl.smart_str.call(null, "NAME can only be used on symbols or keywords - ", a));
};
com.rpl.specter.NAME = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5757 && (com.rpl.specter.t_com$rpl$specter5757 = function(a) {
    this.meta5758 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5757.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5757(b);
  }, com.rpl.specter.t_com$rpl$specter5757.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5758;
  }, com.rpl.specter.t_com$rpl$specter5757.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5757.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, cljs.core.name.call(null, c));
  }, com.rpl.specter.t_com$rpl$specter5757.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    a = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, cljs.core.name.call(null, c));
    var e = cljs.core.namespace.call(null, c);
    if (c instanceof cljs.core.Keyword) {
      return cljs.core.keyword.call(null, e, a);
    }
    if (c instanceof cljs.core.Symbol) {
      return cljs.core.symbol.call(null, e, a);
    }
    throw new java.lang.IllegalArgumentException(com.rpl.specter.impl.smart_str.call(null, "NAME can only be used on symbols or keywords - ", c));
  }, com.rpl.specter.t_com$rpl$specter5757.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5758", "meta5758", 187806153, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5757.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5757.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5757", com.rpl.specter.t_com$rpl$specter5757.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5757");
  }, com.rpl.specter.__GT_t_com$rpl$specter5757 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5757(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5757(null);
}();
com.rpl.specter.NAMESPACE_select_STAR_ = function(a, b) {
  return b.call(null, cljs.core.namespace.call(null, a));
};
com.rpl.specter.NAMESPACE_transform_STAR_ = function(a, b) {
  var c = cljs.core.name.call(null, a);
  b = b.call(null, cljs.core.namespace.call(null, a));
  if (a instanceof cljs.core.Keyword) {
    return cljs.core.keyword.call(null, b, c);
  }
  if (a instanceof cljs.core.Symbol) {
    return cljs.core.symbol.call(null, b, c);
  }
  throw new java.lang.IllegalArgumentException(com.rpl.specter.impl.smart_str.call(null, "NAMESPACE can only be used on symbols or keywords - ", a));
};
com.rpl.specter.NAMESPACE = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5760 && (com.rpl.specter.t_com$rpl$specter5760 = function(a) {
    this.meta5761 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5760.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5760(b);
  }, com.rpl.specter.t_com$rpl$specter5760.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5761;
  }, com.rpl.specter.t_com$rpl$specter5760.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5760.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this).call(null, cljs.core.namespace.call(null, c));
  }, com.rpl.specter.t_com$rpl$specter5760.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    var e = function(a) {
      return function(a) {
        return d.call(null, b, a);
      };
    }(this);
    a = cljs.core.name.call(null, c);
    e = e.call(null, cljs.core.namespace.call(null, c));
    if (c instanceof cljs.core.Keyword) {
      return cljs.core.keyword.call(null, e, a);
    }
    if (c instanceof cljs.core.Symbol) {
      return cljs.core.symbol.call(null, e, a);
    }
    throw new java.lang.IllegalArgumentException(com.rpl.specter.impl.smart_str.call(null, "NAMESPACE can only be used on symbols or keywords - ", c));
  }, com.rpl.specter.t_com$rpl$specter5760.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5761", "meta5761", -381822969, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5760.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5760.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5760", com.rpl.specter.t_com$rpl$specter5760.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5760");
  }, com.rpl.specter.__GT_t_com$rpl$specter5760 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5760(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5760(null);
}();
com.rpl.specter.collect = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    var b = com.rpl.specter.impl.direct_nav_obj.call(null, function(b) {
      "undefined" === typeof com.rpl.specter.t_com$rpl$specter5763 && (com.rpl.specter.t_com$rpl$specter5763 = function(a, b, c) {
        this.path = a;
        this.late = b;
        this.meta5764 = c;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, com.rpl.specter.t_com$rpl$specter5763.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
        return new com.rpl.specter.t_com$rpl$specter5763(this.path, this.late, b);
      }, com.rpl.specter.t_com$rpl$specter5763.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
        return this.meta5764;
      }, com.rpl.specter.t_com$rpl$specter5763.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5763.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
        return d.call(null, cljs.core.conj.call(null, b, com.rpl.specter.compiled_select.call(null, this.late, c)), c);
      }, com.rpl.specter.t_com$rpl$specter5763.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
        return d.call(null, cljs.core.conj.call(null, b, com.rpl.specter.compiled_select.call(null, this.late, c)), c);
      }, com.rpl.specter.t_com$rpl$specter5763.getBasis = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "meta5764", "meta5764", 585427598, null)], null);
      }, com.rpl.specter.t_com$rpl$specter5763.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5763.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5763", com.rpl.specter.t_com$rpl$specter5763.cljs$lang$ctorPrWriter = function(a, b, c) {
        return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5763");
      }, com.rpl.specter.__GT_t_com$rpl$specter5763 = function(a, b, c) {
        return new com.rpl.specter.t_com$rpl$specter5763(a, b, c);
      });
      return new com.rpl.specter.t_com$rpl$specter5763(a, b, null);
    }), c = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a)], null);
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), c) ? cljs.core.apply.call(null, b, c) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, b, c, null);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.collect_one = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    var b = com.rpl.specter.impl.direct_nav_obj.call(null, function(b) {
      "undefined" === typeof com.rpl.specter.t_com$rpl$specter5769 && (com.rpl.specter.t_com$rpl$specter5769 = function(a, b, c) {
        this.path = a;
        this.late = b;
        this.meta5770 = c;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, com.rpl.specter.t_com$rpl$specter5769.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
        return new com.rpl.specter.t_com$rpl$specter5769(this.path, this.late, b);
      }, com.rpl.specter.t_com$rpl$specter5769.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
        return this.meta5770;
      }, com.rpl.specter.t_com$rpl$specter5769.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5769.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
        return d.call(null, cljs.core.conj.call(null, b, com.rpl.specter.compiled_select_one.call(null, this.late, c)), c);
      }, com.rpl.specter.t_com$rpl$specter5769.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
        return d.call(null, cljs.core.conj.call(null, b, com.rpl.specter.compiled_select_one.call(null, this.late, c)), c);
      }, com.rpl.specter.t_com$rpl$specter5769.getBasis = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "meta5770", "meta5770", 47536785, null)], null);
      }, com.rpl.specter.t_com$rpl$specter5769.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5769.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5769", com.rpl.specter.t_com$rpl$specter5769.cljs$lang$ctorPrWriter = function(a, b, c) {
        return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5769");
      }, com.rpl.specter.__GT_t_com$rpl$specter5769 = function(a, b, c) {
        return new com.rpl.specter.t_com$rpl$specter5769(a, b, c);
      });
      return new com.rpl.specter.t_com$rpl$specter5769(a, b, null);
    }), c = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a)], null);
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), c) ? cljs.core.apply.call(null, b, c) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, b, c, null);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.putval = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5775 && (com.rpl.specter.t_com$rpl$specter5775 = function(a, c) {
    this.val = a;
    this.meta5776 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5775.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5775(this.val, c);
  }, com.rpl.specter.t_com$rpl$specter5775.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5776;
  }, com.rpl.specter.t_com$rpl$specter5775.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5775.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, c, d, e) {
    return e.call(null, cljs.core.conj.call(null, c, this.val), d);
  }, com.rpl.specter.t_com$rpl$specter5775.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, c, d, e) {
    return e.call(null, cljs.core.conj.call(null, c, this.val), d);
  }, com.rpl.specter.t_com$rpl$specter5775.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta5776", "meta5776", -654921693, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5775.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5775.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5775", com.rpl.specter.t_com$rpl$specter5775.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "com.rpl.specter/t_com$rpl$specter5775");
  }, com.rpl.specter.__GT_t_com$rpl$specter5775 = function(a, c) {
    return new com.rpl.specter.t_com$rpl$specter5775(a, c);
  });
  return new com.rpl.specter.t_com$rpl$specter5775(a, null);
});
com.rpl.specter.with_fresh_collected = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    var b = com.rpl.specter.impl.direct_nav_obj.call(null, function(b) {
      "undefined" === typeof com.rpl.specter.t_com$rpl$specter5778 && (com.rpl.specter.t_com$rpl$specter5778 = function(a, b, c) {
        this.path = a;
        this.late = b;
        this.meta5779 = c;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, com.rpl.specter.t_com$rpl$specter5778.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
        return new com.rpl.specter.t_com$rpl$specter5778(this.path, this.late, b);
      }, com.rpl.specter.t_com$rpl$specter5778.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
        return this.meta5779;
      }, com.rpl.specter.t_com$rpl$specter5778.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5778.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
        return com.rpl.specter.protocols.select_STAR_.call(null, this.late, cljs.core.PersistentVector.EMPTY, c, function(a) {
          return function(a, c) {
            return d.call(null, b, c);
          };
        }(this));
      }, com.rpl.specter.t_com$rpl$specter5778.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
        return com.rpl.specter.protocols.transform_STAR_.call(null, this.late, cljs.core.PersistentVector.EMPTY, c, function(a) {
          return function(a, c) {
            return d.call(null, b, c);
          };
        }(this));
      }, com.rpl.specter.t_com$rpl$specter5778.getBasis = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "late", "late", -666327347, null), new cljs.core.Symbol(null, "meta5779", "meta5779", -2013236897, null)], null);
      }, com.rpl.specter.t_com$rpl$specter5778.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5778.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5778", com.rpl.specter.t_com$rpl$specter5778.cljs$lang$ctorPrWriter = function(a, b, c) {
        return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5778");
      }, com.rpl.specter.__GT_t_com$rpl$specter5778 = function(a, b, c) {
        return new com.rpl.specter.t_com$rpl$specter5778(a, b, c);
      });
      return new com.rpl.specter.t_com$rpl$specter5778(a, b, null);
    }), c = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a)], null);
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), c) ? cljs.core.apply.call(null, b, c) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, b, c, null);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.DISPENSE = function() {
  "undefined" === typeof com.rpl.specter.t_com$rpl$specter5786 && (com.rpl.specter.t_com$rpl$specter5786 = function(a) {
    this.meta5787 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, com.rpl.specter.t_com$rpl$specter5786.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new com.rpl.specter.t_com$rpl$specter5786(b);
  }, com.rpl.specter.t_com$rpl$specter5786.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta5787;
  }, com.rpl.specter.t_com$rpl$specter5786.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5786.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
    return d.call(null, cljs.core.PersistentVector.EMPTY, c);
  }, com.rpl.specter.t_com$rpl$specter5786.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
    return d.call(null, cljs.core.PersistentVector.EMPTY, c);
  }, com.rpl.specter.t_com$rpl$specter5786.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta5787", "meta5787", 453208733, null)], null);
  }, com.rpl.specter.t_com$rpl$specter5786.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5786.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5786", com.rpl.specter.t_com$rpl$specter5786.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5786");
  }, com.rpl.specter.__GT_t_com$rpl$specter5786 = function(a) {
    return new com.rpl.specter.t_com$rpl$specter5786(a);
  });
  return new com.rpl.specter.t_com$rpl$specter5786(null);
}();
com.rpl.specter.if_path = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = null, b = function(a, b) {
    return com.rpl.specter.if_path.call(null, a, b, com.rpl.specter.STOP);
  }, c = function(a, b, c) {
    var d = com.rpl.specter.navs.extract_basic_filter_fn.call(null, a);
    if (cljs.core.truth_(d)) {
      d = com.rpl.specter.impl.direct_nav_obj.call(null, function(d, e) {
        return function(f, g) {
          "undefined" === typeof com.rpl.specter.t_com$rpl$specter5791 && (com.rpl.specter.t_com$rpl$specter5791 = function(a, b, c, d, e, f, g, h) {
            this.cond_p = a;
            this.then_path = b;
            this.else_path = c;
            this.temp__5455__auto__ = d;
            this.afn = e;
            this.late_then = f;
            this.late_else = g;
            this.meta5792 = h;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          }, com.rpl.specter.t_com$rpl$specter5791.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
            return function(a, b) {
              return new com.rpl.specter.t_com$rpl$specter5791(this.cond_p, this.then_path, this.else_path, this.temp__5455__auto__, this.afn, this.late_then, this.late_else, b);
            };
          }(d, e), com.rpl.specter.t_com$rpl$specter5791.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b) {
            return function(a) {
              return this.meta5792;
            };
          }(d, e), com.rpl.specter.t_com$rpl$specter5791.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5791.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b) {
            return function(a, b, c, d) {
              return com.rpl.specter.navs.if_select.call(null, b, c, d, this.afn, this.late_then, this.late_else);
            };
          }(d, e), com.rpl.specter.t_com$rpl$specter5791.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b) {
            return function(a, b, c, d) {
              return com.rpl.specter.navs.if_transform.call(null, b, c, d, this.afn, this.late_then, this.late_else);
            };
          }(d, e), com.rpl.specter.t_com$rpl$specter5791.getBasis = function(a, b) {
            return function() {
              return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cond-p", "cond-p", 695068009, null), new cljs.core.Symbol(null, "then-path", "then-path", 1949536092, null), new cljs.core.Symbol(null, "else-path", "else-path", -2100209576, null), new cljs.core.Symbol(null, "temp__5455__auto__", "temp__5455__auto__", 980956642, null), new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "late-then", 
              "late-then", 1623904294, null), new cljs.core.Symbol(null, "late-else", "late-else", 1462724600, null), new cljs.core.Symbol(null, "meta5792", "meta5792", 788017157, null)], null);
            };
          }(d, e), com.rpl.specter.t_com$rpl$specter5791.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5791.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5791", com.rpl.specter.t_com$rpl$specter5791.cljs$lang$ctorPrWriter = function(a, b) {
            return function(a, b, c) {
              return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5791");
            };
          }(d, e), com.rpl.specter.__GT_t_com$rpl$specter5791 = function(a, b) {
            return function(a, b, c, d, e, f, g, h) {
              return new com.rpl.specter.t_com$rpl$specter5791(a, b, c, d, e, f, g, h);
            };
          }(d, e));
          return new com.rpl.specter.t_com$rpl$specter5791(a, b, c, e, d, f, g, null);
        };
      }(d, d));
      var e = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, b), com.rpl.specter.late_path.call(null, c)], null);
    } else {
      d = com.rpl.specter.impl.direct_nav_obj.call(null, function(d) {
        return function(e, f, g) {
          "undefined" === typeof com.rpl.specter.t_com$rpl$specter5794 && (com.rpl.specter.t_com$rpl$specter5794 = function(a, b, c, d, e, f, g, h) {
            this.cond_p = a;
            this.then_path = b;
            this.else_path = c;
            this.temp__5455__auto__ = d;
            this.late_cond = e;
            this.late_then = f;
            this.late_else = g;
            this.meta5795 = h;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          }, com.rpl.specter.t_com$rpl$specter5794.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
            return function(a, b) {
              return new com.rpl.specter.t_com$rpl$specter5794(this.cond_p, this.then_path, this.else_path, this.temp__5455__auto__, this.late_cond, this.late_then, this.late_else, b);
            };
          }(d), com.rpl.specter.t_com$rpl$specter5794.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
            return function(a) {
              return this.meta5795;
            };
          }(d), com.rpl.specter.t_com$rpl$specter5794.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5794.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a) {
            return function(b, c, d, e) {
              var f = this;
              return com.rpl.specter.navs.if_select.call(null, c, d, e, function(a, b) {
                return function(a) {
                  return com.rpl.specter.navs.selected_QMARK__STAR_.call(null, f.late_cond, c, a);
                };
              }(this, a), f.late_then, f.late_else);
            };
          }(d), com.rpl.specter.t_com$rpl$specter5794.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a) {
            return function(b, c, d, e) {
              var f = this;
              return com.rpl.specter.navs.if_transform.call(null, c, d, e, function(a, b) {
                return function(a) {
                  return com.rpl.specter.navs.selected_QMARK__STAR_.call(null, f.late_cond, c, a);
                };
              }(this, a), f.late_then, f.late_else);
            };
          }(d), com.rpl.specter.t_com$rpl$specter5794.getBasis = function(a) {
            return function() {
              return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cond-p", "cond-p", 695068009, null), new cljs.core.Symbol(null, "then-path", "then-path", 1949536092, null), new cljs.core.Symbol(null, "else-path", "else-path", -2100209576, null), new cljs.core.Symbol(null, "temp__5455__auto__", "temp__5455__auto__", 980956642, null), new cljs.core.Symbol(null, "late-cond", "late-cond", 1031862828, null), new cljs.core.Symbol(null, 
              "late-then", "late-then", 1623904294, null), new cljs.core.Symbol(null, "late-else", "late-else", 1462724600, null), new cljs.core.Symbol(null, "meta5795", "meta5795", 822577745, null)], null);
            };
          }(d), com.rpl.specter.t_com$rpl$specter5794.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5794.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5794", com.rpl.specter.t_com$rpl$specter5794.cljs$lang$ctorPrWriter = function(a) {
            return function(a, b, c) {
              return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5794");
            };
          }(d), com.rpl.specter.__GT_t_com$rpl$specter5794 = function(a) {
            return function(a, b, c, d, e, f, g, h) {
              return new com.rpl.specter.t_com$rpl$specter5794(a, b, c, d, e, f, g, h);
            };
          }(d));
          return new com.rpl.specter.t_com$rpl$specter5794(a, b, c, d, e, f, g, null);
        };
      }(d)), e = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a), com.rpl.specter.late_path.call(null, b), com.rpl.specter.late_path.call(null, c)], null);
    }
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), e) ? cljs.core.apply.call(null, d, e) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, d, e, null);
  };
  a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.cond_path = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    a = cljs.core.reverse.call(null, cljs.core.partition.call(null, 2, a));
    return cljs.core.reduce.call(null, function(a) {
      return function(a, b) {
        var c = cljs.core.nth.call(null, b, 0, null);
        b = cljs.core.nth.call(null, b, 1, null);
        return com.rpl.specter.if_path.call(null, c, b, a);
      };
    }(a), com.rpl.specter.STOP, a);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.multi_path = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = null, b = function() {
    return com.rpl.specter.STAY;
  }, c = function(a, b) {
    var c = com.rpl.specter.impl.direct_nav_obj.call(null, function(c, d) {
      "undefined" === typeof com.rpl.specter.t_com$rpl$specter5805 && (com.rpl.specter.t_com$rpl$specter5805 = function(a, b, c, d, e) {
        this.path1 = a;
        this.path2 = b;
        this.late1 = c;
        this.late2 = d;
        this.meta5806 = e;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, com.rpl.specter.t_com$rpl$specter5805.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
        return new com.rpl.specter.t_com$rpl$specter5805(this.path1, this.path2, this.late1, this.late2, b);
      }, com.rpl.specter.t_com$rpl$specter5805.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
        return this.meta5806;
      }, com.rpl.specter.t_com$rpl$specter5805.prototype.com$rpl$specter$protocols$RichNavigator$ = cljs.core.PROTOCOL_SENTINEL, com.rpl.specter.t_com$rpl$specter5805.prototype.com$rpl$specter$protocols$RichNavigator$select_STAR_$arity$4 = function(a, b, c, d) {
        a = com.rpl.specter.protocols.select_STAR_.call(null, this.late1, b, c, d);
        if (cljs.core.reduced_QMARK_.call(null, a)) {
          return a;
        }
        b = com.rpl.specter.protocols.select_STAR_.call(null, this.late2, b, c, d);
        return com.rpl.specter.NONE === a ? b : a;
      }, com.rpl.specter.t_com$rpl$specter5805.prototype.com$rpl$specter$protocols$RichNavigator$transform_STAR_$arity$4 = function(a, b, c, d) {
        a = com.rpl.specter.protocols.transform_STAR_.call(null, this.late1, b, c, d);
        return com.rpl.specter.protocols.transform_STAR_.call(null, this.late2, b, a, d);
      }, com.rpl.specter.t_com$rpl$specter5805.getBasis = function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "path1", "path1", -2002517142, null), new cljs.core.Symbol(null, "path2", "path2", -1937913521, null), new cljs.core.Symbol(null, "late1", "late1", -1413016621, null), new cljs.core.Symbol(null, "late2", "late2", -681717994, null), new cljs.core.Symbol(null, "meta5806", "meta5806", -1212388587, null)], null);
      }, com.rpl.specter.t_com$rpl$specter5805.cljs$lang$type = !0, com.rpl.specter.t_com$rpl$specter5805.cljs$lang$ctorStr = "com.rpl.specter/t_com$rpl$specter5805", com.rpl.specter.t_com$rpl$specter5805.cljs$lang$ctorPrWriter = function(a, b, c) {
        return cljs.core._write.call(null, b, "com.rpl.specter/t_com$rpl$specter5805");
      }, com.rpl.specter.__GT_t_com$rpl$specter5805 = function(a, b, c, d, e) {
        return new com.rpl.specter.t_com$rpl$specter5805(a, b, c, d, e);
      });
      return new com.rpl.specter.t_com$rpl$specter5805(a, b, c, d, null);
    }), d = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.late_path.call(null, a), com.rpl.specter.late_path.call(null, b)], null);
    return cljs.core.every_QMARK_.call(null, cljs.core.complement.call(null, com.rpl.specter.impl.dynamic_param_QMARK_), d) ? cljs.core.apply.call(null, c, d) : com.rpl.specter.impl.__GT_DynamicFunction.call(null, c, d, null);
  }, d = function() {
    var a = function(a, b, c) {
      return cljs.core.reduce.call(null, com.rpl.specter.multi_path, com.rpl.specter.multi_path.call(null, a, b), c);
    }, b = function(b, c, d) {
      var e = null;
      if (2 < arguments.length) {
        e = 0;
        for (var f = Array(arguments.length - 2); e < f.length;) {
          f[e] = arguments[e + 2], ++e;
        }
        e = new cljs.core.IndexedSeq(f, 0, null);
      }
      return a.call(this, b, c, e);
    };
    b.cljs$lang$maxFixedArity = 2;
    b.cljs$lang$applyTo = function(b) {
      var c = cljs.core.first(b);
      b = cljs.core.next(b);
      var d = cljs.core.first(b);
      b = cljs.core.rest(b);
      return a(c, d, b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }();
  a = function(a, f, g) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return a;
      case 2:
        return c.call(this, a, f);
      default:
        var e = null;
        if (2 < arguments.length) {
          e = 0;
          for (var k = Array(arguments.length - 2); e < k.length;) {
            k[e] = arguments[e + 2], ++e;
          }
          e = new cljs.core.IndexedSeq(k, 0, null);
        }
        return d.cljs$core$IFn$_invoke$arity$variadic(a, f, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$lang$maxFixedArity = 2;
  a.cljs$lang$applyTo = d.cljs$lang$applyTo;
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = function(a) {
    return a;
  };
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$variadic = d.cljs$core$IFn$_invoke$arity$variadic;
  return a;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.stay_then_continue = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    return com.rpl.specter.multi_path.call(null, com.rpl.specter.STAY, a);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.continue_then_stay = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function() {
  var a = function(a) {
    return com.rpl.specter.multi_path.call(null, a, com.rpl.specter.STAY);
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
com.rpl.specter.walker = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  var b = com.rpl.specter.impl.local_declarepath.call(null);
  com.rpl.specter.impl.providepath_STAR_.call(null, b, function() {
    var c = com.rpl.specter.pathcache5824, d = null == c ? function() {
      var c = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.cond_path, new cljs.core.Var(function() {
        return com.rpl.specter.cond_path;
      }, new cljs.core.Symbol("com.rpl.specter", "cond-path", "com.rpl.specter/cond-path", 97137882, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
      new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null), "out/com/rpl/specter.cljc", 25, 1, 1390, 1390, cljs.core.List.EMPTY, "Takes in alternating cond-path path cond-path path...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following path for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.", 
      cljs.core.truth_(com.rpl.specter.cond_path) ? com.rpl.specter.cond_path.cljs$lang$test : null])), new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null)), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.pred, new cljs.core.Var(function() {
        return com.rpl.specter.pred;
      }, new cljs.core.Symbol("com.rpl.specter", "pred", "com.rpl.specter/pred", 1192968523, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "direct-nav", "direct-nav", -2100776046), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), "out/com/rpl/specter.cljc", 7, 1, !0, 1171, 1175, 
      cljs.core.List.EMPTY, "Keeps the element only if it matches the supplied predicate. Functions in paths\n          implicitly convert to this navigator.", cljs.core.truth_(com.rpl.specter.pred) ? com.rpl.specter.pred.cljs$lang$test : null])), new cljs.core.Symbol(null, "pred", "pred", -727012372, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, a, new cljs.core.Symbol(null, "afn", "afn", 216963467, null))], 
      null), cljs.core.list(new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "afn", "afn", 216963467, null))), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.STAY, new cljs.core.Var(function() {
        return com.rpl.specter.STAY;
      }, new cljs.core.Symbol("com.rpl.specter", "STAY", "com.rpl.specter/STAY", -176499375, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "STAY", "STAY", 1628009270, null), "out/com/rpl/specter.cljc", 7, 1, 640, 642, cljs.core.List.EMPTY, "Stays navigated at the current point. Essentially a no-op navigator.", 
      cljs.core.truth_(com.rpl.specter.STAY) ? com.rpl.specter.STAY.cljs$lang$test : null])), new cljs.core.Symbol(null, "STAY", "STAY", 1628009270, null)), com.rpl.specter.impl.__GT_VarUse.call(null, cljs.core.coll_QMARK_, new cljs.core.Var(function() {
        return cljs.core.coll_QMARK_;
      }, new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), "cljs/core.cljs", 21, 1, 2099, 2099, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
      null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x satisfies ICollection", cljs.core.coll_QMARK_ ? cljs.core.coll_QMARK_.cljs$lang$test : null])), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, 
      new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null)), com.rpl.specter.impl.__GT_LocalSym.call(null, b, new cljs.core.Symbol(null, "p", "p", 1791580836, null))], null)], null), cljs.core.list(new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null), cljs.core.list(new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "afn", "afn", 216963467, null)), new cljs.core.Symbol(null, 
      "STAY", "STAY", 1628009270, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null)], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "STAY", "STAY", 1628009270, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null));
      return com.rpl.specter.pathcache5824 = c;
    }() : c;
    c = com.rpl.specter.impl.cached_path_info_precompiled.call(null, d);
    d = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, d);
    return cljs.core.truth_(d) ? c.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.cond_path, com.rpl.specter.pred, a, com.rpl.specter.STAY, cljs.core.coll_QMARK_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.ALL, b], null), com.rpl.specter.ALL, b], null)) : c;
  }());
  return b;
});
com.rpl.specter.codewalker = com.rpl.specter.impl.direct_nav_obj.call(null, function(a) {
  var b = com.rpl.specter.impl.local_declarepath.call(null);
  com.rpl.specter.impl.providepath_STAR_.call(null, b, function() {
    var c = com.rpl.specter.pathcache5827, d = null == c ? function() {
      var c = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.cond_path, new cljs.core.Var(function() {
        return com.rpl.specter.cond_path;
      }, new cljs.core.Symbol("com.rpl.specter", "cond-path", "com.rpl.specter/cond-path", 97137882, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
      new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null), "out/com/rpl/specter.cljc", 25, 1, 1390, 1390, cljs.core.List.EMPTY, "Takes in alternating cond-path path cond-path path...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following path for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.", 
      cljs.core.truth_(com.rpl.specter.cond_path) ? com.rpl.specter.cond_path.cljs$lang$test : null])), new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null)), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.pred, new cljs.core.Var(function() {
        return com.rpl.specter.pred;
      }, new cljs.core.Symbol("com.rpl.specter", "pred", "com.rpl.specter/pred", 1192968523, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "direct-nav", "direct-nav", -2100776046), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), "out/com/rpl/specter.cljc", 7, 1, !0, 1171, 1175, 
      cljs.core.List.EMPTY, "Keeps the element only if it matches the supplied predicate. Functions in paths\n          implicitly convert to this navigator.", cljs.core.truth_(com.rpl.specter.pred) ? com.rpl.specter.pred.cljs$lang$test : null])), new cljs.core.Symbol(null, "pred", "pred", -727012372, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_LocalSym.call(null, a, new cljs.core.Symbol(null, "afn", "afn", 216963467, null))], 
      null), cljs.core.list(new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "afn", "afn", 216963467, null))), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.STAY, new cljs.core.Var(function() {
        return com.rpl.specter.STAY;
      }, new cljs.core.Symbol("com.rpl.specter", "STAY", "com.rpl.specter/STAY", -176499375, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "STAY", "STAY", 1628009270, null), "out/com/rpl/specter.cljc", 7, 1, 640, 642, cljs.core.List.EMPTY, "Stays navigated at the current point. Essentially a no-op navigator.", 
      cljs.core.truth_(com.rpl.specter.STAY) ? com.rpl.specter.STAY.cljs$lang$test : null])), new cljs.core.Symbol(null, "STAY", "STAY", 1628009270, null)), com.rpl.specter.impl.__GT_VarUse.call(null, cljs.core.coll_QMARK_, new cljs.core.Var(function() {
        return cljs.core.coll_QMARK_;
      }, new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), "cljs/core.cljs", 21, 1, 2099, 2099, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
      null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x satisfies ICollection", cljs.core.coll_QMARK_ ? cljs.core.coll_QMARK_.cljs$lang$test : null])), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL_WITH_META, 
      new cljs.core.Var(function() {
        return com.rpl.specter.ALL_WITH_META;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL-WITH-META", "com.rpl.specter/ALL-WITH-META", -1161868995, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
      new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL-WITH-META", "ALL-WITH-META", 250401700, null), "out/com/rpl/specter.cljc", 16, 1, 685, 687, cljs.core.List.EMPTY, "Same as ALL, except maintains metadata on the structure.", 
      cljs.core.truth_(com.rpl.specter.ALL_WITH_META) ? com.rpl.specter.ALL_WITH_META.cljs$lang$test : null])), new cljs.core.Symbol(null, "ALL-WITH-META", "ALL-WITH-META", 250401700, null)), com.rpl.specter.impl.__GT_LocalSym.call(null, b, new cljs.core.Symbol(null, "p", "p", 1791580836, null))], null)], null), cljs.core.list(new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null), cljs.core.list(new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, 
      "afn", "afn", 216963467, null)), new cljs.core.Symbol(null, "STAY", "STAY", 1628009270, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ALL-WITH-META", "ALL-WITH-META", 250401700, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null)))], null), "com.rpl.specter", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cond-path", "cond-path", -1167797965, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "STAY", "STAY", 1628009270, null), new cljs.core.Symbol(null, "coll?", 
      "coll?", -1874821441, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ALL-WITH-META", "ALL-WITH-META", 250401700, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null), new cljs.core.Symbol(null, "ALL-WITH-META", "ALL-WITH-META", 250401700, null), new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null));
      return com.rpl.specter.pathcache5827 = c;
    }() : c;
    c = com.rpl.specter.impl.cached_path_info_precompiled.call(null, d);
    d = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, d);
    return cljs.core.truth_(d) ? c.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.cond_path, com.rpl.specter.pred, a, com.rpl.specter.STAY, cljs.core.coll_QMARK_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.rpl.specter.ALL_WITH_META, b], null), com.rpl.specter.ALL_WITH_META, b], null)) : c;
  }());
  return b;
});
var empty__GT_NONE_5830 = com.rpl.specter.if_path.call(null, cljs.core.empty_QMARK_, com.rpl.specter.terminal_val.call(null, com.rpl.specter.NONE)), compact_STAR__5831 = function(a) {
  return function(b) {
    return com.rpl.specter.multi_path.call(null, b, a);
  };
}(empty__GT_NONE_5830);
com.rpl.specter.compact = cljs.core.vary_meta.call(null, com.rpl.specter.wrap_dynamic_nav.call(null, function(a, b) {
  return function() {
    var a = function(a) {
      return cljs.core.map.call(null, b, a);
    }, d = function(b) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var d = Array(arguments.length - 0); c < d.length;) {
          d[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(d, 0, null);
      }
      return a.call(this, c);
    };
    d.cljs$lang$maxFixedArity = 0;
    d.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    d.cljs$core$IFn$_invoke$arity$variadic = a;
    return d;
  }();
}(empty__GT_NONE_5830, compact_STAR__5831)), cljs.core.assoc, new cljs.core.Keyword(null, "dynamicnav", "dynamicnav", 1267703844), !0);
atomist.cljs_log = {};
atomist.cljs_log.log = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return atomist.cljs_log.log.cljs$core$IFn$_invoke$arity$variadic(b);
};
atomist.cljs_log.log.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return console.info(cljs.core.apply.call(null, cljs.core.str, a));
};
atomist.cljs_log.log.cljs$lang$maxFixedArity = 0;
atomist.cljs_log.log.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
atomist.cljs_log.warn = atomist.cljs_log.log;
atomist.cljs_log.info = atomist.cljs_log.log;
atomist.cljs_log.error = atomist.cljs_log.log;
atomist.cljs_log.infof = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.cljs_log.infof.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.cljs_log.infof.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return atomist.cljs_log.info.call(null, cljs.core.apply.call(null, goog.string.format, a, b));
};
atomist.cljs_log.infof.cljs$lang$maxFixedArity = 1;
atomist.cljs_log.infof.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
atomist.cljs_log.warnf = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.cljs_log.warnf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.cljs_log.warnf.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return atomist.cljs_log.warn.call(null, cljs.core.apply.call(null, goog.string.format, a, b));
};
atomist.cljs_log.warnf.cljs$lang$maxFixedArity = 1;
atomist.cljs_log.warnf.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.test = {};
cljs.test.empty_env = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), cljs.core.List.EMPTY, 
  new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), a], null);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), a) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint) : b;
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function() {
  var a = cljs.test._STAR_current_env_STAR_;
  return cljs.core.truth_(a) ? a : cljs.test.empty_env.call(null);
};
cljs.test.update_current_env_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), a, b, c);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.test.set_env_BANG_ = function(a) {
  return cljs.test._STAR_current_env_STAR_ = a;
};
cljs.test.clear_env_BANG_ = function() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function() {
  var a = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return a;
};
cljs.test.testing_vars_str = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "file", "file", -1269645878)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "line", "line", 212345235)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reverse.call(null, cljs.core.map.call(null, function(a, b, c, d, e) {
    return function(a) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
    };
  }(a, b, c, d, e), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), " (", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(e) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join("") : null), ")"].join("");
};
cljs.test.testing_contexts_str = function() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function(a) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))) ? cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), a], null), cljs.core.fnil.call(null, cljs.core.inc, 0)) : null;
};
"undefined" === typeof cljs.test.report && (cljs.test.report = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(a, b, c, d, e) {
    return function(a) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a)], null);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(a) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function(a) {
  var b = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  b = cljs.core.truth_(b) ? b : cljs.core.pr_str;
  cljs.core.println.call(null, "expected:", b.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.println.call(null, "  actual:", b.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(a) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, a));
  cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))) && cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  var b = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(a);
  cljs.core.truth_(b) && cljs.core.println.call(null, b);
  return cljs.test.print_comparison.call(null, a);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(a) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, a));
  cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))) && cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  var b = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(a);
  cljs.core.truth_(b) && cljs.core.println.call(null, b);
  return cljs.test.print_comparison.call(null, a);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(a) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(a), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(a) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(a) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(a), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(a), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(a), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(a) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(a) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(a) {
  return null;
});
cljs.test.js_line_and_column = function(a) {
  a = a.split(":");
  var b = cljs.core.count.call(null, a);
  return 1 < b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, a, b - 2), 10), parseInt(cljs.core.nth.call(null, a, b - 1), 10)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [NaN, NaN], null);
};
cljs.test.js_filename = function(a) {
  var b = clojure.string.ends_with_QMARK_.call(null, "out", "/") ? "out" : [cljs.core.str.cljs$core$IFn$_invoke$arity$1("out"), "/"].join("");
  return cljs.core.first.call(null, cljs.core.last.call(null, a.split(b)).split(":"));
};
cljs.test.mapped_line_and_column = function(a, b, c) {
  var d = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c], null), e = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(e)) {
    var f = cljs.core.get_in.call(null, e, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b - 1], null));
    return cljs.core.truth_(f) ? cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
      var a = cljs.core.get.call(null, f, c - 1);
      return cljs.core.truth_(a) ? a : cljs.core.second.call(null, cljs.core.first.call(null, f));
    }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null))) : d;
  }
  return d;
};
cljs.test.file_and_line = function(a, b) {
  var c = "string" === typeof a.stack;
  c ? (c = a.stack, c = null == c ? null : clojure.string.split_lines.call(null, c), b = null == c ? null : cljs.core.get.call(null, c, b), b = null == b ? null : clojure.string.trim.call(null, b)) : b = c;
  return cljs.core.truth_(b) ? (a = cljs.test.js_filename.call(null, b), c = cljs.test.js_line_and_column.call(null, b), b = cljs.core.nth.call(null, c, 0, null), c = cljs.core.nth.call(null, c, 1, null), c = cljs.test.mapped_line_and_column.call(null, a, b, c), a = cljs.core.nth.call(null, c, 0, null), b = cljs.core.nth.call(null, c, 1, null), c = cljs.core.nth.call(null, c, 2, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), a, new cljs.core.Keyword(null, 
  "line", "line", 212345235), b, new cljs.core.Keyword(null, "column", "column", 2078222095), c], null)) : new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), a.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), a.lineNumber], null);
};
cljs.test.do_report = function(a) {
  var b = function() {
    var b = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a);
    switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, Error(), 4), a);
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(a), 0), a);
      default:
        return a;
    }
  }();
  return cljs.test.report.call(null, b);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$test$IAsyncTest$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, a);
};
cljs.test.run_block = function(a) {
  for (;;) {
    var b = cljs.core.seq.call(null, a);
    if (b) {
      var c = b, d = cljs.core.first.call(null, c), e = d.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, e))) {
        return e.call(null, function() {
          var f = new cljs.core.Delay(function(a, b, c, d, e) {
            return function() {
              return cljs.test.run_block.call(null, cljs.core.rest.call(null, a));
            };
          }(a, e, d, c, b), null);
          return function(a, b, c, d, e, f) {
            return function() {
              return cljs.core.realized_QMARK_.call(null, b) ? cljs.core.println.call(null, "WARNING: Async test called done more than one time.") : cljs.core.deref.call(null, b);
            };
          }(a, f, e, d, c, b);
        }());
      }
      a = function() {
        var b = cljs.core.rest.call(null, a);
        return cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, e))) ? cljs.core.concat.call(null, e, b) : b;
      }();
    } else {
      return null;
    }
  }
};
cljs.test.block = function(a) {
  return null == a ? null : cljs.core.vary_meta.call(null, a, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), !0);
};
cljs.test.test_var_block_STAR_ = function(a, b) {
  if (!(a instanceof cljs.core.Var)) {
    throw Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, a);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), a], null));
    try {
      return b.call(null);
    } catch (d) {
      var c = d;
      switch(c instanceof cljs.core.Keyword ? c.fqn : null) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), c], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), a], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function(a) {
  var b = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
  return cljs.core.truth_(b) ? cljs.test.test_var_block_STAR_.call(null, a, b) : null;
};
cljs.test.test_var = function(a) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, a));
};
cljs.test.default_fixture = function(a) {
  return a.call(null);
};
cljs.test.compose_fixtures = function(a, b) {
  return function(c) {
    return a.call(null, function() {
      return b.call(null, c);
    });
  };
};
cljs.test.join_fixtures = function(a) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, a);
};
cljs.test.wrap_map_fixtures = function(a, b) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), a), b, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), a)));
};
cljs.test.execution_strategy = function(a, b) {
  var c = function(a) {
    return cljs.core.empty_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "none", "none", 1333468478) : cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, a) ? new cljs.core.Keyword(null, "map", "map", 1371690461) : cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, a) ? new cljs.core.Keyword(null, "fn", "fn", -1175266204) : null;
  }, d = function() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null))));
  }.call(null), e = cljs.core.nth.call(null, d, 0, null);
  if (!cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, d)) {
    throw Error("Assert failed: Fixtures may not be of mixed types\n(not-any? nil? types)");
  }
  if (!(2 > cljs.core.count.call(null, d))) {
    throw Error("Assert failed: fixtures specified in :once and :each must be of the same type\n(\x3e 2 (count types))");
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, e, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function(a) {
  return function() {
    var b = a.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, b))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    }
    return b;
  };
};
cljs.test.test_vars_block = function(a) {
  return cljs.core.map.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null), d = cljs.core.nth.call(null, a, 1, null);
    return function(a, b, c) {
      return function() {
        return cljs.test.block.call(null, function() {
          var d = cljs.test.get_current_env.call(null), e = cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), b], null)), f = cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), b], null)), g = cljs.test.execution_strategy.call(null, 
          e, f), n = g instanceof cljs.core.Keyword ? g.fqn : null;
          switch(n) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, e, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, f), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), c)));
            case "sync":
              var p = cljs.test.join_fixtures.call(null, f);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(a, b, c, d, e, f, g, h, k) {
                return function() {
                  return cljs.test.join_fixtures.call(null, e).call(null, function(a, b, c, d, e, f, g, h, k) {
                    return function() {
                      for (var l = cljs.core.seq.call(null, k), m = null, n = 0, p = 0;;) {
                        if (p < n) {
                          var q = cljs.core._nth.call(null, m, p), r = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, q));
                          cljs.core.truth_(r) && a.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
                            return function() {
                              return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, g, cljs.test.disable_async.call(null, e)));
                            };
                          }(l, m, n, p, r, r, q, a, b, c, d, e, f, g, h, k));
                          p += 1;
                        } else {
                          var t = cljs.core.seq.call(null, l);
                          if (t) {
                            r = t;
                            if (cljs.core.chunked_seq_QMARK_.call(null, r)) {
                              l = cljs.core.chunk_first.call(null, r), p = cljs.core.chunk_rest.call(null, r), m = l, n = cljs.core.count.call(null, l), l = p;
                            } else {
                              q = cljs.core.first.call(null, r);
                              var y = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, q));
                              cljs.core.truth_(y) && a.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, y, u) {
                                return function() {
                                  return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, g, cljs.test.disable_async.call(null, e)));
                                };
                              }(l, m, n, p, y, y, q, r, t, a, b, c, d, e, f, g, h, k));
                              l = cljs.core.next.call(null, r);
                              m = null;
                              n = 0;
                            }
                            p = 0;
                          } else {
                            return null;
                          }
                        }
                      }
                    };
                  }(a, b, c, d, e, f, g, h, k));
                };
              }(p, g, n, d, e, f, a, b, c)], null);
            default:
              throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
          }
        }());
      };
    }(a, b, d);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), a));
};
cljs.test.test_vars = function(a) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, a), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), a], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function(a) {
  return 0 === (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(a, 0) && 0 === (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(a, 0);
};
var no = {en:{}};
no.en.core = {};
no.en.core.port_number = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "http", "http", 382524695), 80, new cljs.core.Keyword(null, "https", "https", -1983909665), 443, new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), 3306, new cljs.core.Keyword(null, "postgresql", "postgresql", -1568339962), 5432, new cljs.core.Keyword(null, "rabbitmq", "rabbitmq", 1046897371), 5672], null);
no.en.core.url_regex = /([^:]+):\/\/(([^:]+):([^@]+)@)?(([^:\/]+)(:([0-9]+))?((\/[^?]*)(\?([^#]*))?)?)(#(.*))?/;
no.en.core.split_by_regex = function(a, b) {
  return cljs.core.sequential_QMARK_.call(null, a) ? a : clojure.string.blank_QMARK_.call(null, a) ? null : clojure.string.split.call(null, a, b);
};
no.en.core.split_by_comma = function(a) {
  return no.en.core.split_by_regex.call(null, a, /\s*,\s*/);
};
no.en.core.utf8_string = function(a) {
  throw cljs.core.ex_info.call(null, "utf8-string not implemented yet", a);
};
no.en.core.base64_encode = function(a) {
  return cljs.core.truth_(a) ? goog.crypt.base64.encodeString(a, !1) : null;
};
no.en.core.base64_decode = function(a) {
  return cljs.core.truth_(a) ? goog.crypt.base64.decodeString(a, !1) : null;
};
no.en.core.compact_map = function(a) {
  return cljs.core.reduce.call(null, function(a, c) {
    var b = cljs.core.get.call(null, a, c);
    return null == b || (cljs.core.map_QMARK_.call(null, b) || cljs.core.sequential_QMARK_.call(null, b)) && cljs.core.empty_QMARK_.call(null, b) ? cljs.core.dissoc.call(null, a, c) : a;
  }, a, cljs.core.keys.call(null, a));
};
no.en.core.url_encode = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return no.en.core.url_encode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
no.en.core.url_encode.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  cljs.core.nth.call(null, b, 0, null);
  return cljs.core.truth_(a) ? clojure.string.replace.call(null, encodeURIComponent([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")), "*", "%2A") : null;
};
no.en.core.url_encode.cljs$lang$maxFixedArity = 1;
no.en.core.url_encode.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
no.en.core.url_decode = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return no.en.core.url_decode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
no.en.core.url_decode.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  cljs.core.nth.call(null, b, 0, null);
  return cljs.core.truth_(a) ? decodeURIComponent(a) : null;
};
no.en.core.url_decode.cljs$lang$maxFixedArity = 1;
no.en.core.url_decode.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
no.en.core.pow = function(a, b) {
  return Math.pow(a, b);
};
no.en.core.byte_scale = cljs.core.PersistentHashMap.fromArrays("TKGMYZEBP".split(""), [no.en.core.pow.call(null, 1024, 4), no.en.core.pow.call(null, 1024, 1), no.en.core.pow.call(null, 1024, 3), no.en.core.pow.call(null, 1024, 2), no.en.core.pow.call(null, 1024, 8), no.en.core.pow.call(null, 1024, 7), no.en.core.pow.call(null, 1024, 6), no.en.core.pow.call(null, 1024, 0), no.en.core.pow.call(null, 1024, 5)]);
no.en.core.apply_unit = function(a, b) {
  if ("string" === typeof b) {
    switch(clojure.string.upper_case.call(null, b), b) {
      case "M":
        return 1000000 * a;
      case "B":
        return 1000000000 * a;
      default:
        throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
    }
  } else {
    return a;
  }
};
no.en.core.parse_number = function(a, b) {
  a = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(M|B)?.*/, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  return cljs.core.truth_(a) ? (b = b.call(null, cljs.core.nth.call(null, a, 1)), a = cljs.core.nth.call(null, a, 3), cljs.core.not.call(null, isNaN(b)) ? no.en.core.apply_unit.call(null, b, a) : null) : null;
};
no.en.core.parse_bytes = function(a) {
  a = cljs.core.re_matches.call(null, /\s*([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)(B|K|M|G|T|P|E|Z|Y)?.*/, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  if (cljs.core.truth_(a)) {
    cljs.reader.read_string.call(null, cljs.core.nth.call(null, a, 1));
    var b = cljs.core.nth.call(null, a, 3);
    return cljs.core.long$.call(null, cljs.core.long$.call(null, cljs.reader.read_string.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, a, 1))].join(""))) * cljs.core.get.call(null, no.en.core.byte_scale, clojure.string.upper_case.call(null, cljs.core.truth_(b) ? b : ""), 1));
  }
  return null;
};
no.en.core.parse_integer = function(a) {
  return no.en.core.parse_number.call(null, a, function(a) {
    return parseInt(a);
  });
};
no.en.core.parse_long = function(a) {
  return no.en.core.parse_number.call(null, a, function(a) {
    return parseInt(a);
  });
};
no.en.core.parse_double = function(a) {
  return no.en.core.parse_number.call(null, a, function(a) {
    return parseFloat(a);
  });
};
no.en.core.parse_float = function(a) {
  return no.en.core.parse_number.call(null, a, function(a) {
    return parseFloat(a);
  });
};
no.en.core.format_query_params = function(a) {
  a = clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(a) {
    return clojure.string.join.call(null, "\x3d", a);
  }, cljs.core.map.call(null, function(a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [no.en.core.url_encode.call(null, cljs.core.name.call(null, cljs.core.first.call(null, a))), no.en.core.url_encode.call(null, cljs.core.second.call(null, a))], null);
  }, cljs.core.remove.call(null, function(a) {
    return clojure.string.blank_QMARK_.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, a))].join(""));
  }, cljs.core.seq.call(null, a)))));
  return clojure.string.blank_QMARK_.call(null, a) ? null : a;
};
no.en.core.format_url = function(a) {
  if (cljs.core.empty_QMARK_.call(null, a)) {
    return null;
  }
  var b = (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(a);
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(a)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(a))), "://"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "user", "user", 1532431356));
    b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "password", "password", 417022471));
    return cljs.core.truth_(d) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(d) ? d : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(b) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : null), "@"].join("") : null;
  }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "server-name", "server-name", -1012104295)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var b = (new cljs.core.Keyword(null, "server-port", "server-port", 663745648)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? cljs.core._EQ_.call(null, b, no.en.core.port_number.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(a))) ? null : [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : null;
  }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(null != (new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(a) || cljs.core.empty_QMARK_.call(null, b) ? (new cljs.core.Keyword(null, "uri", "uri", -774711847)).cljs$core$IFn$_invoke$arity$1(a) : "/"), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.empty_QMARK_.call(null, b) ? null : ["?", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.format_query_params.call(null, b))].join("")), cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.blank_QMARK_.call(null, 
  (new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(a)) ? null : ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fragment", "fragment", 826775688)).cljs$core$IFn$_invoke$arity$1(a))].join(""))].join("");
};
no.en.core.parse_percent = function(a) {
  return no.en.core.parse_double.call(null, clojure.string.replace.call(null, a, "%", ""));
};
no.en.core.pattern_quote = function(a) {
  return clojure.string.replace.call(null, cljs.core.name.call(null, a), /([\[\]\^\$\|\(\)\\\+\*\?\{\}=!.])/, "\\\\$1");
};
no.en.core.separator = function(a) {
  a = cljs.core.re_matches.call(null, /([a-z0-9_-]+)([^a-z0-9_-]+).*/i, a);
  return cljs.core.truth_(a) ? cljs.core.nth.call(null, a, 2) : null;
};
no.en.core.parse_query_params = function(a) {
  return cljs.core.truth_(a) ? cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, no.en.core.url_decode.call(null, cljs.core.first.call(null, a))), no.en.core.url_decode.call(null, cljs.core.second.call(null, a))], null);
  }, cljs.core.filter.call(null, function(a) {
    return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, a));
  }, cljs.core.map.call(null, function(a) {
    return clojure.string.split.call(null, a, /=/);
  }, clojure.string.split.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), /&/))))) : null;
};
no.en.core.parse_url = function(a) {
  var b = cljs.core.re_matches.call(null, no.en.core.url_regex, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  if (cljs.core.truth_(b)) {
    var c = cljs.core.keyword.call(null, cljs.core.nth.call(null, b, 1));
    return no.en.core.compact_map.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "password", "password", 417022471), new cljs.core.Keyword(null, "fragment", "fragment", 826775688), new cljs.core.Keyword(null, "server-port", "server-port", 663745648), new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "uri", "uri", -774711847), new cljs.core.Keyword(null, "server-name", "server-name", -1012104295), new cljs.core.Keyword(null, 
    "query-string", "query-string", -1018845061), new cljs.core.Keyword(null, "user", "user", 1532431356), new cljs.core.Keyword(null, "scheme", "scheme", 90199613)], [cljs.core.nth.call(null, b, 4), cljs.core.nth.call(null, b, 14), function() {
      var a = no.en.core.parse_integer.call(null, cljs.core.nth.call(null, b, 8));
      return cljs.core.truth_(a) ? a : no.en.core.port_number.call(null, c);
    }(), no.en.core.parse_query_params.call(null, cljs.core.nth.call(null, b, 12)), cljs.core.nth.call(null, b, 10), cljs.core.nth.call(null, b, 6), cljs.core.nth.call(null, b, 12), cljs.core.nth.call(null, b, 3), c]));
  }
  return null;
};
no.en.core.with_retries_STAR_ = function(a, b) {
  for (;;) {
    try {
      var c = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.call(null)], null);
    } catch (d) {
      if (d instanceof Error) {
        c = d;
        if (0 === a) {
          throw c;
        }
        c = null;
      } else {
        throw d;
      }
    }
    if (cljs.core.truth_(c)) {
      return c.call(null, 0);
    }
    --a;
  }
};
com.cognitect = {};
com.cognitect.transit = {};
com.cognitect.transit.util = {};
com.cognitect.transit.util.objectKeys = "undefined" != typeof Object.keys ? function(a) {
  return Object.keys(a);
} : function(a) {
  return goog.object.getKeys(a);
};
com.cognitect.transit.util.isArray = "undefined" != typeof Array.isArray ? function(a) {
  return Array.isArray(a);
} : function(a) {
  return "array" === goog.typeOf(a);
};
com.cognitect.transit.util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
com.cognitect.transit.util.randInt = function(a) {
  return Math.round(Math.random() * a);
};
com.cognitect.transit.util.randHex = function() {
  return com.cognitect.transit.util.randInt(15).toString(16);
};
com.cognitect.transit.util.randomUUID = function() {
  var a = (8 | 3 & com.cognitect.transit.util.randInt(14)).toString(16);
  return com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + "-" + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + "-4" + com.cognitect.transit.util.randHex() + 
  com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + "-" + a + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + "-" + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + 
  com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex() + com.cognitect.transit.util.randHex();
};
com.cognitect.transit.util.btoa = function(a) {
  if ("undefined" != typeof btoa) {
    return btoa(a);
  }
  a = String(a);
  for (var b, c, d = 0, e = com.cognitect.transit.util.chars, f = ""; a.charAt(d | 0) || (e = "\x3d", d % 1); f += e.charAt(63 & b >> 8 - d % 1 * 8)) {
    c = a.charCodeAt(d += .75);
    if (255 < c) {
      throw Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
    }
    b = b << 8 | c;
  }
  return f;
};
com.cognitect.transit.util.atob = function(a) {
  if ("undefined" != typeof atob) {
    return atob(a);
  }
  a = String(a).replace(/=+$/, "");
  if (1 == a.length % 4) {
    throw Error("'atob' failed: The string to be decoded is not correctly encoded.");
  }
  for (var b = 0, c, d, e = 0, f = ""; d = a.charAt(e++); ~d && (c = b % 4 ? 64 * c + d : d, b++ % 4) ? f += String.fromCharCode(255 & c >> (-2 * b & 6)) : 0) {
    d = com.cognitect.transit.util.chars.indexOf(d);
  }
  return f;
};
com.cognitect.transit.util.Uint8ToBase64 = function(a) {
  for (var b = 0, c = a.length, d = "", e; b < c;) {
    e = a.subarray(b, Math.min(b + 32768, c)), d += String.fromCharCode.apply(null, e), b += 32768;
  }
  return com.cognitect.transit.util.btoa(d);
};
com.cognitect.transit.util.Base64ToUint8 = function(a) {
  a = com.cognitect.transit.util.atob(a);
  for (var b = a.length, c = new Uint8Array(b), d = 0; d < b; d++) {
    var e = a.charCodeAt(d);
    c[d] = e;
  }
  return c;
};
com.cognitect.transit.eq = {};
com.cognitect.transit.eq.hashCodeProperty = "transit$hashCode$";
com.cognitect.transit.eq.hashCodeCounter = 1;
com.cognitect.transit.eq.equals = function(a, b) {
  if (null == a) {
    return null == b;
  }
  if (a === b) {
    return !0;
  }
  if ("object" === typeof a) {
    if (com.cognitect.transit.util.isArray(a)) {
      if (com.cognitect.transit.util.isArray(b) && a.length === b.length) {
        for (var c = 0; c < a.length; c++) {
          if (!com.cognitect.transit.eq.equals(a[c], b[c])) {
            return !1;
          }
        }
        return !0;
      }
      return !1;
    }
    if (a.com$cognitect$transit$equals) {
      return a.com$cognitect$transit$equals(b);
    }
    if (null != b && "object" === typeof b) {
      if (b.com$cognitect$transit$equals) {
        return b.com$cognitect$transit$equals(a);
      }
      c = 0;
      var d = com.cognitect.transit.util.objectKeys(b).length, e;
      for (e in a) {
        if (a.hasOwnProperty(e) && (c++, !b.hasOwnProperty(e) || !com.cognitect.transit.eq.equals(a[e], b[e]))) {
          return !1;
        }
      }
      return c === d;
    }
  }
  return !1;
};
com.cognitect.transit.eq.hashCombine = function(a, b) {
  return a ^ b + 2654435769 + (a << 6) + (a >> 2);
};
com.cognitect.transit.eq.stringCodeCache = {};
com.cognitect.transit.eq.stringCodeCacheSize = 0;
com.cognitect.transit.eq.STR_CACHE_MAX = 256;
com.cognitect.transit.eq.hashString = function(a) {
  var b = com.cognitect.transit.eq.stringCodeCache[a];
  if (null != b) {
    return b;
  }
  for (var c = b = 0; c < a.length; ++c) {
    b = 31 * b + a.charCodeAt(c), b %= 4294967296;
  }
  com.cognitect.transit.eq.stringCodeCacheSize++;
  com.cognitect.transit.eq.stringCodeCacheSize >= com.cognitect.transit.eq.STR_CACHE_MAX && (com.cognitect.transit.eq.stringCodeCache = {}, com.cognitect.transit.eq.stringCodeCacheSize = 1);
  return com.cognitect.transit.eq.stringCodeCache[a] = b;
};
com.cognitect.transit.eq.hashMapLike = function(a) {
  var b = 0;
  if (null != a.forEach) {
    a.forEach(function(a, c, d) {
      b = (b + (com.cognitect.transit.eq.hashCode(c) ^ com.cognitect.transit.eq.hashCode(a))) % 4503599627370496;
    });
  } else {
    for (var c = com.cognitect.transit.util.objectKeys(a), d = 0; d < c.length; d++) {
      var e = c[d], f = a[e];
      b = (b + (com.cognitect.transit.eq.hashCode(e) ^ com.cognitect.transit.eq.hashCode(f))) % 4503599627370496;
    }
  }
  return b;
};
com.cognitect.transit.eq.hashArrayLike = function(a) {
  var b = 0;
  if (com.cognitect.transit.util.isArray(a)) {
    for (var c = 0; c < a.length; c++) {
      b = com.cognitect.transit.eq.hashCombine(b, com.cognitect.transit.eq.hashCode(a[c]));
    }
  } else {
    a.forEach && a.forEach(function(a, c) {
      b = com.cognitect.transit.eq.hashCombine(b, com.cognitect.transit.eq.hashCode(a));
    });
  }
  return b;
};
com.cognitect.transit.eq.hashCode = function(a) {
  if (null == a) {
    return 0;
  }
  switch(typeof a) {
    case "number":
      return a;
    case "boolean":
      return !0 === a ? 1 : 0;
    case "string":
      return com.cognitect.transit.eq.hashString(a);
    case "function":
      var b = a[com.cognitect.transit.eq.hashCodeProperty];
      b || (b = com.cognitect.transit.eq.hashCodeCounter, "undefined" != typeof Object.defineProperty ? Object.defineProperty(a, com.cognitect.transit.eq.hashCodeProperty, {value:b, enumerable:!1}) : a[com.cognitect.transit.eq.hashCodeProperty] = b, com.cognitect.transit.eq.hashCodeCounter++);
      return b;
    default:
      return a instanceof Date ? a.valueOf() : com.cognitect.transit.util.isArray(a) ? com.cognitect.transit.eq.hashArrayLike(a) : a.com$cognitect$transit$hashCode ? a.com$cognitect$transit$hashCode() : com.cognitect.transit.eq.hashMapLike(a);
  }
};
com.cognitect.transit.eq.extendToEQ = function(a, b) {
  a.com$cognitect$transit$hashCode = b.hashCode;
  a.com$cognitect$transit$equals = b.equals;
  return a;
};
com.cognitect.transit.types = {};
com.cognitect.transit.types.ITERATOR = "undefined" != typeof Symbol ? Symbol.iterator : "@@iterator";
com.cognitect.transit.types.TaggedValue = function(a, b) {
  this.tag = a;
  this.rep = b;
  this.hashCode = -1;
};
com.cognitect.transit.types.TaggedValue.prototype.toString = function() {
  return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
};
com.cognitect.transit.types.TaggedValue.prototype.equiv = function(a) {
  return com.cognitect.transit.eq.equals(this, a);
};
com.cognitect.transit.types.TaggedValue.prototype.equiv = com.cognitect.transit.types.TaggedValue.prototype.equiv;
com.cognitect.transit.types.TaggedValue.prototype.com$cognitect$transit$equals = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue ? this.tag === a.tag && com.cognitect.transit.eq.equals(this.rep, a.rep) : !1;
};
com.cognitect.transit.types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
  -1 === this.hashCode && (this.hashCode = com.cognitect.transit.eq.hashCombine(com.cognitect.transit.eq.hashCode(this.tag), com.cognitect.transit.eq.hashCode(this.rep)));
  return this.hashCode;
};
com.cognitect.transit.types.taggedValue = function(a, b) {
  return new com.cognitect.transit.types.TaggedValue(a, b);
};
com.cognitect.transit.types.isTaggedValue = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue;
};
com.cognitect.transit.types.nullValue = function() {
  return null;
};
com.cognitect.transit.types.boolValue = function(a) {
  return "t" === a;
};
com.cognitect.transit.types.MAX_INT = goog.math.Long.fromString("9007199254740991");
com.cognitect.transit.types.MIN_INT = goog.math.Long.fromString("-9007199254740991");
com.cognitect.transit.types.intValue = function(a) {
  if ("number" === typeof a || a instanceof goog.math.Long) {
    return a;
  }
  a = goog.math.Long.fromString(a, 10);
  return a.greaterThan(com.cognitect.transit.types.MAX_INT) || a.lessThan(com.cognitect.transit.types.MIN_INT) ? a : a.toNumber();
};
goog.math.Long.prototype.equiv = function(a) {
  return com.cognitect.transit.eq.equals(this, a);
};
goog.math.Long.prototype.equiv = goog.math.Long.prototype.equiv;
goog.math.Long.prototype.com$cognitect$transit$equals = function(a) {
  return a instanceof goog.math.Long && this.equals(a);
};
goog.math.Long.prototype.com$cognitect$transit$hashCode = function() {
  return this.toInt();
};
com.cognitect.transit.types.isInteger = function(a) {
  return a instanceof goog.math.Long ? !0 : "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) === parseInt(a, 10);
};
com.cognitect.transit.types.floatValue = function(a) {
  return parseFloat(a);
};
com.cognitect.transit.types.bigInteger = function(a) {
  return com.cognitect.transit.types.taggedValue("n", a);
};
com.cognitect.transit.types.isBigInteger = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue && "n" === a.tag;
};
com.cognitect.transit.types.bigDecimalValue = function(a) {
  return com.cognitect.transit.types.taggedValue("f", a);
};
com.cognitect.transit.types.isBigDecimal = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue && "f" === a.tag;
};
com.cognitect.transit.types.charValue = function(a) {
  return a;
};
com.cognitect.transit.types.Keyword = function(a) {
  this._name = a;
  this.hashCode = -1;
};
com.cognitect.transit.types.Keyword.prototype.toString = function() {
  return ":" + this._name;
};
com.cognitect.transit.types.Keyword.prototype.namespace = function() {
  var a = this._name.indexOf("/");
  return -1 != a ? this._name.substring(0, a) : null;
};
com.cognitect.transit.types.Keyword.prototype.name = function() {
  var a = this._name.indexOf("/");
  return -1 != a ? this._name.substring(a + 1, this._name.length) : this._name;
};
com.cognitect.transit.types.Keyword.prototype.equiv = function(a) {
  return com.cognitect.transit.eq.equals(this, a);
};
com.cognitect.transit.types.Keyword.prototype.equiv = com.cognitect.transit.types.Keyword.prototype.equiv;
com.cognitect.transit.types.Keyword.prototype.com$cognitect$transit$equals = function(a) {
  return a instanceof com.cognitect.transit.types.Keyword && this._name == a._name;
};
com.cognitect.transit.types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
  -1 === this.hashCode && (this.hashCode = com.cognitect.transit.eq.hashCode(this._name));
  return this.hashCode;
};
com.cognitect.transit.types.keyword = function(a) {
  return new com.cognitect.transit.types.Keyword(a);
};
com.cognitect.transit.types.isKeyword = function(a) {
  return a instanceof com.cognitect.transit.types.Keyword;
};
com.cognitect.transit.types.Symbol = function(a) {
  this._name = a;
  this.hashCode = -1;
};
com.cognitect.transit.types.Symbol.prototype.namespace = function() {
  var a = this._name.indexOf("/");
  return -1 != a ? this._name.substring(0, a) : null;
};
com.cognitect.transit.types.Symbol.prototype.name = function() {
  var a = this._name.indexOf("/");
  return -1 != a ? this._name.substring(a + 1, this._name.length) : this._name;
};
com.cognitect.transit.types.Symbol.prototype.toString = function() {
  return this._name;
};
com.cognitect.transit.types.Symbol.prototype.equiv = function(a) {
  return com.cognitect.transit.eq.equals(this, a);
};
com.cognitect.transit.types.Symbol.prototype.equiv = com.cognitect.transit.types.Symbol.prototype.equiv;
com.cognitect.transit.types.Symbol.prototype.com$cognitect$transit$equals = function(a) {
  return a instanceof com.cognitect.transit.types.Symbol && this._name == a._name;
};
com.cognitect.transit.types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
  -1 === this.hashCode && (this.hashCode = com.cognitect.transit.eq.hashCode(this._name));
  return this.hashCode;
};
com.cognitect.transit.types.symbol = function(a) {
  return new com.cognitect.transit.types.Symbol(a);
};
com.cognitect.transit.types.isSymbol = function(a) {
  return a instanceof com.cognitect.transit.types.Symbol;
};
com.cognitect.transit.types.hexFor = function(a, b, c) {
  var d = "";
  c = c || b + 1;
  for (var e = 8 * (7 - b), f = goog.math.Long.fromInt(255).shiftLeft(e); b < c; b++, e -= 8, f = f.shiftRightUnsigned(8)) {
    var g = a.and(f).shiftRightUnsigned(e).toString(16);
    1 == g.length && (g = "0" + g);
    d += g;
  }
  return d;
};
com.cognitect.transit.types.UUID = function(a, b) {
  this.high = a;
  this.low = b;
  this.hashCode = -1;
};
com.cognitect.transit.types.UUID.prototype.getLeastSignificantBits = function() {
  return this.low;
};
com.cognitect.transit.types.UUID.prototype.getMostSignificantBits = function() {
  return this.high;
};
com.cognitect.transit.types.UUID.prototype.toString = function() {
  var a = this.high, b = this.low;
  var c = com.cognitect.transit.types.hexFor(a, 0, 4) + "-";
  c += com.cognitect.transit.types.hexFor(a, 4, 6) + "-";
  c += com.cognitect.transit.types.hexFor(a, 6, 8) + "-";
  c += com.cognitect.transit.types.hexFor(b, 0, 2) + "-";
  return c += com.cognitect.transit.types.hexFor(b, 2, 8);
};
com.cognitect.transit.types.UUID.prototype.equiv = function(a) {
  return com.cognitect.transit.eq.equals(this, a);
};
com.cognitect.transit.types.UUID.prototype.equiv = com.cognitect.transit.types.UUID.prototype.equiv;
com.cognitect.transit.types.UUID.prototype.com$cognitect$transit$equals = function(a) {
  return a instanceof com.cognitect.transit.types.UUID && this.high.equals(a.high) && this.low.equals(a.low);
};
com.cognitect.transit.types.UUID.prototype.com$cognitect$transit$hashCode = function() {
  -1 === this.hashCode && (this.hashCode = com.cognitect.transit.eq.hashCode(this.toString()));
  return this.hashCode;
};
com.cognitect.transit.types.UUIDfromString = function(a) {
  a = a.replace(/-/g, "");
  var b, c;
  var d = b = 0;
  for (c = 24; 8 > d; d += 2, c -= 8) {
    b |= parseInt(a.substring(d, d + 2), 16) << c;
  }
  var e = 0;
  d = 8;
  for (c = 24; 16 > d; d += 2, c -= 8) {
    e |= parseInt(a.substring(d, d + 2), 16) << c;
  }
  var f = goog.math.Long.fromBits(e, b);
  b = 0;
  d = 16;
  for (c = 24; 24 > d; d += 2, c -= 8) {
    b |= parseInt(a.substring(d, d + 2), 16) << c;
  }
  e = 0;
  for (c = d = 24; 32 > d; d += 2, c -= 8) {
    e |= parseInt(a.substring(d, d + 2), 16) << c;
  }
  a = goog.math.Long.fromBits(e, b);
  return new com.cognitect.transit.types.UUID(f, a);
};
com.cognitect.transit.types.uuid = function(a) {
  return com.cognitect.transit.types.UUIDfromString(a);
};
com.cognitect.transit.types.isUUID = function(a) {
  return a instanceof com.cognitect.transit.types.UUID;
};
com.cognitect.transit.types.date = function(a) {
  a = "number" === typeof a ? a : parseInt(a, 10);
  return new Date(a);
};
com.cognitect.transit.types.verboseDate = function(a) {
  return new Date(a);
};
Date.prototype.com$cognitect$transit$equals = function(a) {
  return a instanceof Date ? this.valueOf() === a.valueOf() : !1;
};
Date.prototype.com$cognitect$transit$hashCode = function() {
  return this.valueOf();
};
com.cognitect.transit.types.binary = function(a, b) {
  return b && !1 === b.preferBuffers || "undefined" == typeof Buffer ? "undefined" != typeof Uint8Array ? com.cognitect.transit.util.Base64ToUint8(a) : com.cognitect.transit.types.taggedValue("b", a) : new Buffer(a, "base64");
};
com.cognitect.transit.types.isBinary = function(a) {
  return "undefined" != typeof Buffer && a instanceof Buffer ? !0 : "undefined" != typeof Uint8Array && a instanceof Uint8Array ? !0 : a instanceof com.cognitect.transit.types.TaggedValue && "b" === a.tag;
};
com.cognitect.transit.types.uri = function(a) {
  return com.cognitect.transit.types.taggedValue("r", a);
};
com.cognitect.transit.types.isURI = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue && "r" === a.tag;
};
com.cognitect.transit.types.KEYS = 0;
com.cognitect.transit.types.VALUES = 1;
com.cognitect.transit.types.ENTRIES = 2;
com.cognitect.transit.types.TransitArrayMapIterator = function(a, b) {
  this.entries = a;
  this.type = b || com.cognitect.transit.types.KEYS;
  this.idx = 0;
};
com.cognitect.transit.types.TransitArrayMapIterator.prototype.next = function() {
  if (this.idx < this.entries.length) {
    var a = {value:this.type === com.cognitect.transit.types.KEYS ? this.entries[this.idx] : this.type === com.cognitect.transit.types.VALUES ? this.entries[this.idx + 1] : [this.entries[this.idx], this.entries[this.idx + 1]], done:!1};
    this.idx += 2;
    return a;
  }
  return {value:null, done:!0};
};
com.cognitect.transit.types.TransitArrayMapIterator.prototype.next = com.cognitect.transit.types.TransitArrayMapIterator.prototype.next;
com.cognitect.transit.types.TransitArrayMapIterator.prototype[com.cognitect.transit.types.ITERATOR] = function() {
  return this;
};
com.cognitect.transit.types.TransitMapIterator = function(a, b) {
  this.map = a;
  this.type = b || com.cognitect.transit.types.KEYS;
  this.keys = this.map.getKeys();
  this.idx = 0;
  this.bucket = null;
  this.bucketIdx = 0;
};
com.cognitect.transit.types.TransitMapIterator.prototype.next = function() {
  if (this.idx < this.map.size) {
    null != this.bucket && this.bucketIdx < this.bucket.length || (this.bucket = this.map.map[this.keys[this.idx]], this.bucketIdx = 0);
    var a = {value:this.type === com.cognitect.transit.types.KEYS ? this.bucket[this.bucketIdx] : this.type === com.cognitect.transit.types.VALUES ? this.bucket[this.bucketIdx + 1] : [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]], done:!1};
    this.idx++;
    this.bucketIdx += 2;
    return a;
  }
  return {value:null, done:!0};
};
com.cognitect.transit.types.TransitMapIterator.prototype.next = com.cognitect.transit.types.TransitMapIterator.prototype.next;
com.cognitect.transit.types.TransitMapIterator.prototype[com.cognitect.transit.types.ITERATOR] = function() {
  return this;
};
com.cognitect.transit.types.mapEquals = function(a, b) {
  if (a instanceof com.cognitect.transit.types.TransitMap && com.cognitect.transit.types.isMap(b)) {
    if (a.size !== b.size) {
      return !1;
    }
    for (var c in a.map) {
      for (var d = a.map[c], e = 0; e < d.length; e += 2) {
        if (!com.cognitect.transit.eq.equals(d[e + 1], b.get(d[e]))) {
          return !1;
        }
      }
    }
    return !0;
  }
  if (a instanceof com.cognitect.transit.types.TransitArrayMap && com.cognitect.transit.types.isMap(b)) {
    if (a.size !== b.size) {
      return !1;
    }
    a = a._entries;
    for (e = 0; e < a.length; e += 2) {
      if (!com.cognitect.transit.eq.equals(a[e + 1], b.get(a[e]))) {
        return !1;
      }
    }
    return !0;
  }
  if (null != b && "object" === typeof b && (e = com.cognitect.transit.util.objectKeys(b), c = e.length, a.size === c)) {
    for (d = 0; d < c; d++) {
      var f = e[d];
      if (!a.has(f) || !com.cognitect.transit.eq.equals(b[f], a.get(f))) {
        return !1;
      }
    }
    return !0;
  }
  return !1;
};
com.cognitect.transit.types.SMALL_ARRAY_MAP_THRESHOLD = 8;
com.cognitect.transit.types.ARRAY_MAP_THRESHOLD = 32;
com.cognitect.transit.types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
com.cognitect.transit.types.print = function(a) {
  return null == a ? "null" : goog.isArray(a) ? "[" + a.toString() + "]" : goog.isString(a) ? '"' + a + '"' : a.toString();
};
com.cognitect.transit.types.printMap = function(a) {
  var b = 0, c = "TransitMap {";
  a.forEach(function(d, e) {
    c += com.cognitect.transit.types.print(e) + " \x3d\x3e " + com.cognitect.transit.types.print(d);
    b < a.size - 1 && (c += ", ");
    b++;
  });
  return c + "}";
};
com.cognitect.transit.types.printSet = function(a) {
  var b = 0, c = "TransitSet {";
  a.forEach(function(d) {
    c += com.cognitect.transit.types.print(d);
    b < a.size - 1 && (c += ", ");
    b++;
  });
  return c + "}";
};
com.cognitect.transit.types.TransitArrayMap = function(a) {
  this._entries = a;
  this.backingMap = null;
  this.hashCode = -1;
  this.size = a.length / 2;
  this.accesses = 0;
};
com.cognitect.transit.types.TransitArrayMap.prototype.toString = function() {
  return com.cognitect.transit.types.printMap(this);
};
com.cognitect.transit.types.TransitArrayMap.prototype.inspect = function() {
  return this.toString();
};
com.cognitect.transit.types.TransitArrayMap.prototype.convert = function() {
  if (this.backingMap) {
    throw Error("Invalid operation, already converted");
  }
  if (this.size < com.cognitect.transit.types.SMALL_ARRAY_MAP_THRESHOLD) {
    return !1;
  }
  this.accesses++;
  return this.accesses > com.cognitect.transit.types.ARRAY_MAP_ACCESS_THRESHOLD ? (this.backingMap = com.cognitect.transit.types.map(this._entries, !1, !0), this._entries = [], !0) : !1;
};
com.cognitect.transit.types.TransitArrayMap.prototype.clear = function() {
  this.hashCode = -1;
  this.backingMap ? this.backingMap.clear() : this._entries = [];
  this.size = 0;
};
com.cognitect.transit.types.TransitArrayMap.prototype.clear = com.cognitect.transit.types.TransitArrayMap.prototype.clear;
com.cognitect.transit.types.TransitArrayMap.prototype.keys = function() {
  return this.backingMap ? this.backingMap.keys() : new com.cognitect.transit.types.TransitArrayMapIterator(this._entries, com.cognitect.transit.types.KEYS);
};
com.cognitect.transit.types.TransitArrayMap.prototype.keys = com.cognitect.transit.types.TransitArrayMap.prototype.keys;
com.cognitect.transit.types.TransitArrayMap.prototype.keySet = function() {
  if (this.backingMap) {
    return this.backingMap.keySet();
  }
  for (var a = [], b = 0, c = 0; c < this._entries.length; b++, c += 2) {
    a[b] = this._entries[c];
  }
  return a;
};
com.cognitect.transit.types.TransitArrayMap.prototype.keySet = com.cognitect.transit.types.TransitArrayMap.prototype.keySet;
com.cognitect.transit.types.TransitArrayMap.prototype.entries = function() {
  return this.backingMap ? this.backingMap.entries() : new com.cognitect.transit.types.TransitArrayMapIterator(this._entries, com.cognitect.transit.types.ENTRIES);
};
com.cognitect.transit.types.TransitArrayMap.prototype.entries = com.cognitect.transit.types.TransitArrayMap.prototype.entries;
com.cognitect.transit.types.TransitArrayMap.prototype.values = function() {
  return this.backingMap ? this.backingMap.values() : new com.cognitect.transit.types.TransitArrayMapIterator(this._entries, com.cognitect.transit.types.VALUES);
};
com.cognitect.transit.types.TransitArrayMap.prototype.values = com.cognitect.transit.types.TransitArrayMap.prototype.values;
com.cognitect.transit.types.TransitArrayMap.prototype.forEach = function(a) {
  if (this.backingMap) {
    this.backingMap.forEach(a);
  } else {
    for (var b = 0; b < this._entries.length; b += 2) {
      a(this._entries[b + 1], this._entries[b]);
    }
  }
};
com.cognitect.transit.types.TransitArrayMap.prototype.forEach = com.cognitect.transit.types.TransitArrayMap.prototype.forEach;
com.cognitect.transit.types.TransitArrayMap.prototype.get = function(a, b) {
  if (this.backingMap) {
    return this.backingMap.get(a);
  }
  if (this.convert()) {
    return this.get(a);
  }
  for (var c = 0; c < this._entries.length; c += 2) {
    if (com.cognitect.transit.eq.equals(this._entries[c], a)) {
      return this._entries[c + 1];
    }
  }
  return b;
};
com.cognitect.transit.types.TransitArrayMap.prototype.get = com.cognitect.transit.types.TransitArrayMap.prototype.get;
com.cognitect.transit.types.TransitArrayMap.prototype.has = function(a) {
  if (this.backingMap) {
    return this.backingMap.has(a);
  }
  if (this.convert()) {
    return this.has(a);
  }
  for (var b = 0; b < this._entries.length; b += 2) {
    if (com.cognitect.transit.eq.equals(this._entries[b], a)) {
      return !0;
    }
  }
  return !1;
};
com.cognitect.transit.types.TransitArrayMap.prototype.has = com.cognitect.transit.types.TransitArrayMap.prototype.has;
com.cognitect.transit.types.TransitArrayMap.prototype.set = function(a, b) {
  this.hashCode = -1;
  if (this.backingMap) {
    this.backingMap.set(a, b), this.size = this.backingMap.size;
  } else {
    for (var c = 0; c < this._entries.length; c += 2) {
      if (com.cognitect.transit.eq.equals(this._entries[c], a)) {
        this._entries[c + 1] = b;
        return;
      }
    }
    this._entries.push(a);
    this._entries.push(b);
    this.size++;
    this.size > com.cognitect.transit.types.ARRAY_MAP_THRESHOLD && (this.backingMap = com.cognitect.transit.types.map(this._entries, !1, !0), this._entries = null);
  }
};
com.cognitect.transit.types.TransitArrayMap.prototype.set = com.cognitect.transit.types.TransitArrayMap.prototype.set;
com.cognitect.transit.types.TransitArrayMap.prototype["delete"] = function(a) {
  this.hashCode = -1;
  if (this.backingMap) {
    return a = this.backingMap["delete"](a), this.size = this.backingMap.size, a;
  }
  for (var b = 0; b < this._entries.length; b += 2) {
    if (com.cognitect.transit.eq.equals(this._entries[b], a)) {
      return a = this._entries[b + 1], this._entries.splice(b, 2), this.size--, a;
    }
  }
};
com.cognitect.transit.types.TransitArrayMap.prototype.clone = function() {
  var a = com.cognitect.transit.types.map();
  this.forEach(function(b, c) {
    a.set(c, b);
  });
  return a;
};
com.cognitect.transit.types.TransitArrayMap.prototype.clone = com.cognitect.transit.types.TransitArrayMap.prototype.clone;
com.cognitect.transit.types.TransitArrayMap.prototype[com.cognitect.transit.types.ITERATOR] = function() {
  return this.entries();
};
com.cognitect.transit.types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
  if (this.backingMap) {
    return this.backingMap.com$cognitect$transit$hashCode();
  }
  -1 === this.hashCode && (this.hashCode = com.cognitect.transit.eq.hashMapLike(this));
  return this.hashCode;
};
com.cognitect.transit.types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(a) {
  return this.backingMap ? com.cognitect.transit.types.mapEquals(this.backingMap, a) : com.cognitect.transit.types.mapEquals(this, a);
};
com.cognitect.transit.types.TransitMap = function(a, b, c) {
  this.map = b || {};
  this._keys = a || [];
  this.size = c || 0;
  this.hashCode = -1;
};
com.cognitect.transit.types.TransitMap.prototype.toString = function() {
  return com.cognitect.transit.types.printMap(this);
};
com.cognitect.transit.types.TransitMap.prototype.inspect = function() {
  return this.toString();
};
com.cognitect.transit.types.TransitMap.prototype.clear = function() {
  this.hashCode = -1;
  this.map = {};
  this._keys = [];
  this.size = 0;
};
com.cognitect.transit.types.TransitMap.prototype.clear = com.cognitect.transit.types.TransitMap.prototype.clear;
com.cognitect.transit.types.TransitMap.prototype.getKeys = function() {
  return null != this._keys ? this._keys : com.cognitect.transit.util.objectKeys(this.map);
};
com.cognitect.transit.types.TransitMap.prototype["delete"] = function(a) {
  this.hashCode = -1;
  this._keys = null;
  for (var b = com.cognitect.transit.eq.hashCode(a), c = this.map[b], d = 0; d < c.length; d += 2) {
    if (com.cognitect.transit.eq.equals(a, c[d])) {
      return a = c[d + 1], c.splice(d, 2), 0 === c.length && delete this.map[b], this.size--, a;
    }
  }
};
com.cognitect.transit.types.TransitMap.prototype.entries = function() {
  return new com.cognitect.transit.types.TransitMapIterator(this, com.cognitect.transit.types.ENTRIES);
};
com.cognitect.transit.types.TransitMap.prototype.entries = com.cognitect.transit.types.TransitMap.prototype.entries;
com.cognitect.transit.types.TransitMap.prototype.forEach = function(a) {
  for (var b = this.getKeys(), c = 0; c < b.length; c++) {
    for (var d = this.map[b[c]], e = 0; e < d.length; e += 2) {
      a(d[e + 1], d[e], this);
    }
  }
};
com.cognitect.transit.types.TransitMap.prototype.forEach = com.cognitect.transit.types.TransitMap.prototype.forEach;
com.cognitect.transit.types.TransitMap.prototype.get = function(a, b) {
  var c = com.cognitect.transit.eq.hashCode(a);
  c = this.map[c];
  if (null != c) {
    for (b = 0; b < c.length; b += 2) {
      if (com.cognitect.transit.eq.equals(a, c[b])) {
        return c[b + 1];
      }
    }
  } else {
    return b;
  }
};
com.cognitect.transit.types.TransitMap.prototype.get = com.cognitect.transit.types.TransitMap.prototype.get;
com.cognitect.transit.types.TransitMap.prototype.has = function(a) {
  var b = com.cognitect.transit.eq.hashCode(a);
  b = this.map[b];
  if (null != b) {
    for (var c = 0; c < b.length; c += 2) {
      if (com.cognitect.transit.eq.equals(a, b[c])) {
        return !0;
      }
    }
  }
  return !1;
};
com.cognitect.transit.types.TransitMap.prototype.has = com.cognitect.transit.types.TransitMap.prototype.has;
com.cognitect.transit.types.TransitMap.prototype.keys = function() {
  return new com.cognitect.transit.types.TransitMapIterator(this, com.cognitect.transit.types.KEYS);
};
com.cognitect.transit.types.TransitMap.prototype.keys = com.cognitect.transit.types.TransitMap.prototype.keys;
com.cognitect.transit.types.TransitMap.prototype.keySet = function() {
  for (var a = this.getKeys(), b = [], c = 0; c < a.length; c++) {
    for (var d = this.map[a[c]], e = 0; e < d.length; e += 2) {
      b.push(d[e]);
    }
  }
  return b;
};
com.cognitect.transit.types.TransitMap.prototype.keySet = com.cognitect.transit.types.TransitMap.prototype.keySet;
com.cognitect.transit.types.TransitMap.prototype.set = function(a, b) {
  this.hashCode = -1;
  var c = com.cognitect.transit.eq.hashCode(a), d = this.map[c];
  if (null == d) {
    this._keys && this._keys.push(c), this.map[c] = [a, b], this.size++;
  } else {
    c = !0;
    for (var e = 0; e < d.length; e += 2) {
      if (com.cognitect.transit.eq.equals(b, d[e])) {
        c = !1;
        d[e] = b;
        break;
      }
    }
    c && (d.push(a), d.push(b), this.size++);
  }
};
com.cognitect.transit.types.TransitMap.prototype.set = com.cognitect.transit.types.TransitMap.prototype.set;
com.cognitect.transit.types.TransitMap.prototype.values = function() {
  return new com.cognitect.transit.types.TransitMapIterator(this, com.cognitect.transit.types.VALUES);
};
com.cognitect.transit.types.TransitMap.prototype.values = com.cognitect.transit.types.TransitMap.prototype.values;
com.cognitect.transit.types.TransitMap.prototype.clone = function() {
  var a = com.cognitect.transit.types.map();
  this.forEach(function(b, c) {
    a.set(c, b);
  });
  return a;
};
com.cognitect.transit.types.TransitMap.prototype.clone = com.cognitect.transit.types.TransitMap.prototype.clone;
com.cognitect.transit.types.TransitMap.prototype[com.cognitect.transit.types.ITERATOR] = function() {
  return this.entries();
};
com.cognitect.transit.types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
  -1 === this.hashCode && (this.hashCode = com.cognitect.transit.eq.hashMapLike(this));
  return this.hashCode;
};
com.cognitect.transit.types.TransitMap.prototype.com$cognitect$transit$equals = function(a) {
  return com.cognitect.transit.types.mapEquals(this, a);
};
com.cognitect.transit.types.map = function(a, b, c) {
  a = a || [];
  b = !1 === b ? b : !0;
  if ((!0 !== c || !c) && a.length <= 2 * com.cognitect.transit.types.ARRAY_MAP_THRESHOLD) {
    if (b) {
      var d = a;
      a = [];
      for (b = 0; b < d.length; b += 2) {
        var e = !1;
        for (c = 0; c < a.length; c += 2) {
          if (com.cognitect.transit.eq.equals(a[c], d[b])) {
            a[c + 1] = d[b + 1];
            e = !0;
            break;
          }
        }
        e || (a.push(d[b]), a.push(d[b + 1]));
      }
    }
    return new com.cognitect.transit.types.TransitArrayMap(a);
  }
  d = {};
  e = [];
  var f = 0;
  for (b = 0; b < a.length; b += 2) {
    c = com.cognitect.transit.eq.hashCode(a[b]);
    var g = d[c];
    if (null == g) {
      e.push(c), d[c] = [a[b], a[b + 1]], f++;
    } else {
      var h = !0;
      for (c = 0; c < g.length; c += 2) {
        if (com.cognitect.transit.eq.equals(g[c], a[b])) {
          g[c + 1] = a[b + 1];
          h = !1;
          break;
        }
      }
      h && (g.push(a[b]), g.push(a[b + 1]), f++);
    }
  }
  return new com.cognitect.transit.types.TransitMap(e, d, f);
};
com.cognitect.transit.types.isArrayMap = function(a) {
  return a instanceof com.cognitect.transit.types.TransitArrayMap;
};
com.cognitect.transit.types.isMap = function(a) {
  return a instanceof com.cognitect.transit.types.TransitArrayMap || a instanceof com.cognitect.transit.types.TransitMap;
};
com.cognitect.transit.types.TransitSet = function(a) {
  this.map = a;
  this.size = a.size;
};
com.cognitect.transit.types.TransitSet.prototype.toString = function() {
  return com.cognitect.transit.types.printSet(this);
};
com.cognitect.transit.types.TransitSet.prototype.inspect = function() {
  return this.toString();
};
com.cognitect.transit.types.TransitSet.prototype.add = function(a) {
  this.map.set(a, a);
  this.size = this.map.size;
};
com.cognitect.transit.types.TransitSet.prototype.add = com.cognitect.transit.types.TransitSet.prototype.add;
com.cognitect.transit.types.TransitSet.prototype.clear = function() {
  this.map = new com.cognitect.transit.types.TransitMap;
  this.size = 0;
};
com.cognitect.transit.types.TransitSet.prototype.clear = com.cognitect.transit.types.TransitSet.prototype.clear;
com.cognitect.transit.types.TransitSet.prototype["delete"] = function(a) {
  a = this.map["delete"](a);
  this.size = this.map.size;
  return a;
};
com.cognitect.transit.types.TransitSet.prototype.entries = function() {
  return this.map.entries();
};
com.cognitect.transit.types.TransitSet.prototype.entries = com.cognitect.transit.types.TransitSet.prototype.entries;
com.cognitect.transit.types.TransitSet.prototype.forEach = function(a, b) {
  var c = this;
  this.map.forEach(function(b, e, f) {
    a(e, c);
  });
};
com.cognitect.transit.types.TransitSet.prototype.forEach = com.cognitect.transit.types.TransitSet.prototype.forEach;
com.cognitect.transit.types.TransitSet.prototype.has = function(a) {
  return this.map.has(a);
};
com.cognitect.transit.types.TransitSet.prototype.has = com.cognitect.transit.types.TransitSet.prototype.has;
com.cognitect.transit.types.TransitSet.prototype.keys = function() {
  return this.map.keys();
};
com.cognitect.transit.types.TransitSet.prototype.keys = com.cognitect.transit.types.TransitSet.prototype.keys;
com.cognitect.transit.types.TransitSet.prototype.keySet = function() {
  return this.map.keySet();
};
com.cognitect.transit.types.TransitSet.prototype.keySet = com.cognitect.transit.types.TransitSet.prototype.keySet;
com.cognitect.transit.types.TransitSet.prototype.values = function() {
  return this.map.values();
};
com.cognitect.transit.types.TransitSet.prototype.values = com.cognitect.transit.types.TransitSet.prototype.values;
com.cognitect.transit.types.TransitSet.prototype.clone = function() {
  var a = com.cognitect.transit.types.set();
  this.forEach(function(b) {
    a.add(b);
  });
  return a;
};
com.cognitect.transit.types.TransitSet.prototype.clone = com.cognitect.transit.types.TransitSet.prototype.clone;
com.cognitect.transit.types.TransitSet.prototype[com.cognitect.transit.types.ITERATOR] = function() {
  return this.values();
};
com.cognitect.transit.types.TransitSet.prototype.com$cognitect$transit$equals = function(a) {
  if (a instanceof com.cognitect.transit.types.TransitSet) {
    if (this.size === a.size) {
      return com.cognitect.transit.eq.equals(this.map, a.map);
    }
  } else {
    return !1;
  }
};
com.cognitect.transit.types.TransitSet.prototype.com$cognitect$transit$hashCode = function(a) {
  return com.cognitect.transit.eq.hashCode(this.map);
};
com.cognitect.transit.types.set = function(a) {
  a = a || [];
  for (var b = {}, c = [], d = 0, e = 0; e < a.length; e++) {
    var f = com.cognitect.transit.eq.hashCode(a[e]), g = b[f];
    if (null == g) {
      c.push(f), b[f] = [a[e], a[e]], d++;
    } else {
      f = !0;
      for (var h = 0; h < g.length; h += 2) {
        if (com.cognitect.transit.eq.equals(g[h], a[e])) {
          f = !1;
          break;
        }
      }
      f && (g.push(a[e]), g.push(a[e]), d++);
    }
  }
  return new com.cognitect.transit.types.TransitSet(new com.cognitect.transit.types.TransitMap(c, b, d));
};
com.cognitect.transit.types.isSet = function(a) {
  return a instanceof com.cognitect.transit.types.TransitSet;
};
com.cognitect.transit.types.quoted = function(a) {
  return com.cognitect.transit.types.taggedValue("'", a);
};
com.cognitect.transit.types.isQuoted = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue && "'" === a.tag;
};
com.cognitect.transit.types.list = function(a) {
  return com.cognitect.transit.types.taggedValue("list", a);
};
com.cognitect.transit.types.isList = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue && "list" === a.tag;
};
com.cognitect.transit.types.link = function(a) {
  return com.cognitect.transit.types.taggedValue("link", a);
};
com.cognitect.transit.types.isLink = function(a) {
  return a instanceof com.cognitect.transit.types.TaggedValue && "link" === a.tag;
};
com.cognitect.transit.types.specialDouble = function(a) {
  switch(a) {
    case "-INF":
      return -Infinity;
    case "INF":
      return Infinity;
    case "NaN":
      return NaN;
    default:
      throw Error("Invalid special double value " + a);
  }
};
com.cognitect.transit.delimiters = {};
com.cognitect.transit.delimiters.ESC = "~";
com.cognitect.transit.delimiters.TAG = "#";
com.cognitect.transit.delimiters.SUB = "^";
com.cognitect.transit.delimiters.RES = "`";
com.cognitect.transit.delimiters.ESC_TAG = "~#";
com.cognitect.transit.caching = {};
com.cognitect.transit.caching.MIN_SIZE_CACHEABLE = 3;
com.cognitect.transit.caching.BASE_CHAR_IDX = 48;
com.cognitect.transit.caching.CACHE_CODE_DIGITS = 44;
com.cognitect.transit.caching.MAX_CACHE_ENTRIES = com.cognitect.transit.caching.CACHE_CODE_DIGITS * com.cognitect.transit.caching.CACHE_CODE_DIGITS;
com.cognitect.transit.caching.MAX_CACHE_SIZE = 4096;
com.cognitect.transit.caching.isCacheable = function(a, b) {
  if (a.length > com.cognitect.transit.caching.MIN_SIZE_CACHEABLE) {
    if (b) {
      return !0;
    }
    b = a.charAt(0);
    a = a.charAt(1);
    return b === com.cognitect.transit.delimiters.ESC ? ":" === a || "$" === a || "#" === a : !1;
  }
  return !1;
};
com.cognitect.transit.caching.idxToCode = function(a) {
  var b = Math.floor(a / com.cognitect.transit.caching.CACHE_CODE_DIGITS);
  a = String.fromCharCode(a % com.cognitect.transit.caching.CACHE_CODE_DIGITS + com.cognitect.transit.caching.BASE_CHAR_IDX);
  return 0 === b ? com.cognitect.transit.delimiters.SUB + a : com.cognitect.transit.delimiters.SUB + String.fromCharCode(b + com.cognitect.transit.caching.BASE_CHAR_IDX) + a;
};
com.cognitect.transit.caching.WriteCache = function() {
  this.cacheSize = this.gen = this.idx = 0;
  this.cache = {};
};
com.cognitect.transit.caching.WriteCache.prototype.write = function(a, b) {
  return com.cognitect.transit.caching.isCacheable(a, b) ? (this.cacheSize === com.cognitect.transit.caching.MAX_CACHE_SIZE ? (this.clear(), this.gen = 0, this.cache = {}) : this.idx === com.cognitect.transit.caching.MAX_CACHE_ENTRIES && this.clear(), b = this.cache[a], null == b ? (this.cache[a] = [com.cognitect.transit.caching.idxToCode(this.idx), this.gen], this.idx++, a) : b[1] != this.gen ? (b[1] = this.gen, b[0] = com.cognitect.transit.caching.idxToCode(this.idx), this.idx++, a) : b[0]) : a;
};
com.cognitect.transit.caching.WriteCache.prototype.clear = function() {
  this.idx = 0;
  this.gen++;
};
com.cognitect.transit.caching.writeCache = function() {
  return new com.cognitect.transit.caching.WriteCache;
};
com.cognitect.transit.caching.isCacheCode = function(a) {
  return a.charAt(0) === com.cognitect.transit.delimiters.SUB && " " !== a.charAt(1);
};
com.cognitect.transit.caching.codeToIdx = function(a) {
  if (2 === a.length) {
    return a.charCodeAt(1) - com.cognitect.transit.caching.BASE_CHAR_IDX;
  }
  var b = (a.charCodeAt(1) - com.cognitect.transit.caching.BASE_CHAR_IDX) * com.cognitect.transit.caching.CACHE_CODE_DIGITS;
  a = a.charCodeAt(2) - com.cognitect.transit.caching.BASE_CHAR_IDX;
  return b + a;
};
com.cognitect.transit.caching.ReadCache = function() {
  this.idx = 0;
  this.cache = [];
};
com.cognitect.transit.caching.ReadCache.prototype.write = function(a, b) {
  this.idx == com.cognitect.transit.caching.MAX_CACHE_ENTRIES && (this.idx = 0);
  this.cache[this.idx] = a;
  this.idx++;
  return a;
};
com.cognitect.transit.caching.ReadCache.prototype.read = function(a, b) {
  return this.cache[com.cognitect.transit.caching.codeToIdx(a)];
};
com.cognitect.transit.caching.ReadCache.prototype.clear = function() {
  this.idx = 0;
};
com.cognitect.transit.caching.readCache = function() {
  return new com.cognitect.transit.caching.ReadCache;
};
com.cognitect.transit.impl = {};
com.cognitect.transit.impl.decoder = {};
com.cognitect.transit.impl.decoder.Tag = function(a) {
  this.str = a;
};
com.cognitect.transit.impl.decoder.tag = function(a) {
  return new com.cognitect.transit.impl.decoder.Tag(a);
};
com.cognitect.transit.impl.decoder.isTag = function(a) {
  return a && a instanceof com.cognitect.transit.impl.decoder.Tag;
};
com.cognitect.transit.impl.decoder.isGroundHandler = function(a) {
  switch(a) {
    case "_":
    case "s":
    case "?":
    case "i":
    case "d":
    case "b":
    case "'":
    case "array":
    case "map":
      return !0;
  }
  return !1;
};
com.cognitect.transit.impl.decoder.Decoder = function(a) {
  this.options = a || {};
  this.handlers = {};
  for (var b in this.defaults.handlers) {
    this.handlers[b] = this.defaults.handlers[b];
  }
  for (b in this.options.handlers) {
    if (com.cognitect.transit.impl.decoder.isGroundHandler(b)) {
      throw Error('Cannot override handler for ground type "' + b + '"');
    }
    this.handlers[b] = this.options.handlers[b];
  }
  this.preferStrings = null != this.options.preferStrings ? this.options.preferStrings : this.defaults.preferStrings;
  this.preferBuffers = null != this.options.preferBuffers ? this.options.preferBuffers : this.defaults.preferBuffers;
  this.defaultHandler = this.options.defaultHandler || this.defaults.defaultHandler;
  this.mapBuilder = this.options.mapBuilder;
  this.arrayBuilder = this.options.arrayBuilder;
};
com.cognitect.transit.impl.decoder.Decoder.prototype.defaults = {handlers:{_:function(a, b) {
  return com.cognitect.transit.types.nullValue();
}, "?":function(a, b) {
  return com.cognitect.transit.types.boolValue(a);
}, b:function(a, b) {
  return com.cognitect.transit.types.binary(a, b);
}, i:function(a, b) {
  return com.cognitect.transit.types.intValue(a);
}, n:function(a, b) {
  return com.cognitect.transit.types.bigInteger(a);
}, d:function(a, b) {
  return com.cognitect.transit.types.floatValue(a);
}, f:function(a, b) {
  return com.cognitect.transit.types.bigDecimalValue(a);
}, c:function(a, b) {
  return com.cognitect.transit.types.charValue(a);
}, ":":function(a, b) {
  return com.cognitect.transit.types.keyword(a);
}, $:function(a, b) {
  return com.cognitect.transit.types.symbol(a);
}, r:function(a, b) {
  return com.cognitect.transit.types.uri(a);
}, z:function(a, b) {
  return com.cognitect.transit.types.specialDouble(a);
}, "'":function(a, b) {
  return a;
}, m:function(a, b) {
  return com.cognitect.transit.types.date(a);
}, t:function(a, b) {
  return com.cognitect.transit.types.verboseDate(a);
}, u:function(a, b) {
  return com.cognitect.transit.types.uuid(a);
}, set:function(a, b) {
  return com.cognitect.transit.types.set(a);
}, list:function(a, b) {
  return com.cognitect.transit.types.list(a);
}, link:function(a, b) {
  return com.cognitect.transit.types.link(a);
}, cmap:function(a, b) {
  return com.cognitect.transit.types.map(a, !1);
}}, defaultHandler:function(a, b) {
  return com.cognitect.transit.types.taggedValue(a, b);
}, preferStrings:!0, preferBuffers:!0};
com.cognitect.transit.impl.decoder.Decoder.prototype.decode = function(a, b, c, d) {
  if (null == a) {
    return null;
  }
  switch(typeof a) {
    case "string":
      return this.decodeString(a, b, c, d);
    case "object":
      return com.cognitect.transit.util.isArray(a) ? "^ " === a[0] ? this.decodeArrayHash(a, b, c, d) : this.decodeArray(a, b, c, d) : this.decodeHash(a, b, c, d);
  }
  return a;
};
com.cognitect.transit.impl.decoder.Decoder.prototype.decode = com.cognitect.transit.impl.decoder.Decoder.prototype.decode;
com.cognitect.transit.impl.decoder.Decoder.prototype.decodeString = function(a, b, c, d) {
  return com.cognitect.transit.caching.isCacheable(a, c) ? (a = this.parseString(a, b, !1), b && b.write(a, c), a) : com.cognitect.transit.caching.isCacheCode(a) ? b.read(a, c) : this.parseString(a, b, c);
};
com.cognitect.transit.impl.decoder.Decoder.prototype.decodeHash = function(a, b, c, d) {
  c = com.cognitect.transit.util.objectKeys(a);
  var e = c[0];
  d = 1 == c.length ? this.decode(e, b, !1, !1) : null;
  if (com.cognitect.transit.impl.decoder.isTag(d)) {
    return a = a[e], c = this.handlers[d.str], null != c ? c(this.decode(a, b, !1, !0), this) : com.cognitect.transit.types.taggedValue(d.str, this.decode(a, b, !1, !1));
  }
  if (this.mapBuilder) {
    if (c.length < 2 * com.cognitect.transit.types.SMALL_ARRAY_MAP_THRESHOLD && this.mapBuilder.fromArray) {
      var f = [];
      for (d = 0; d < c.length; d++) {
        e = c[d], f.push(this.decode(e, b, !0, !1)), f.push(this.decode(a[e], b, !1, !1));
      }
      return this.mapBuilder.fromArray(f, a);
    }
    f = this.mapBuilder.init(a);
    for (d = 0; d < c.length; d++) {
      e = c[d], f = this.mapBuilder.add(f, this.decode(e, b, !0, !1), this.decode(a[e], b, !1, !1), a);
    }
    return this.mapBuilder.finalize(f, a);
  }
  f = [];
  for (d = 0; d < c.length; d++) {
    e = c[d], f.push(this.decode(e, b, !0, !1)), f.push(this.decode(a[e], b, !1, !1));
  }
  return com.cognitect.transit.types.map(f, !1);
};
com.cognitect.transit.impl.decoder.Decoder.prototype.decodeArrayHash = function(a, b, c, d) {
  if (this.mapBuilder) {
    if (a.length < 2 * com.cognitect.transit.types.SMALL_ARRAY_MAP_THRESHOLD + 1 && this.mapBuilder.fromArray) {
      d = [];
      for (c = 1; c < a.length; c += 2) {
        d.push(this.decode(a[c], b, !0, !1)), d.push(this.decode(a[c + 1], b, !1, !1));
      }
      return this.mapBuilder.fromArray(d, a);
    }
    d = this.mapBuilder.init(a);
    for (c = 1; c < a.length; c += 2) {
      d = this.mapBuilder.add(d, this.decode(a[c], b, !0, !1), this.decode(a[c + 1], b, !1, !1), a);
    }
    return this.mapBuilder.finalize(d, a);
  }
  d = [];
  for (c = 1; c < a.length; c += 2) {
    d.push(this.decode(a[c], b, !0, !1)), d.push(this.decode(a[c + 1], b, !1, !1));
  }
  return com.cognitect.transit.types.map(d, !1);
};
com.cognitect.transit.impl.decoder.Decoder.prototype.decodeArray = function(a, b, c, d) {
  if (d) {
    var e = [];
    for (d = 0; d < a.length; d++) {
      e.push(this.decode(a[d], b, c, !1));
    }
    return e;
  }
  e = b && b.idx;
  if (2 === a.length && "string" === typeof a[0] && (d = this.decode(a[0], b, !1, !1), com.cognitect.transit.impl.decoder.isTag(d))) {
    return a = a[1], e = this.handlers[d.str], null != e ? e = e(this.decode(a, b, c, !0), this) : com.cognitect.transit.types.taggedValue(d.str, this.decode(a, b, c, !1));
  }
  b && e != b.idx && (b.idx = e);
  if (this.arrayBuilder) {
    if (32 >= a.length && this.arrayBuilder.fromArray) {
      e = [];
      for (d = 0; d < a.length; d++) {
        e.push(this.decode(a[d], b, c, !1));
      }
      return this.arrayBuilder.fromArray(e, a);
    }
    e = this.arrayBuilder.init(a);
    for (d = 0; d < a.length; d++) {
      e = this.arrayBuilder.add(e, this.decode(a[d], b, c, !1), a);
    }
    return this.arrayBuilder.finalize(e, a);
  }
  e = [];
  for (d = 0; d < a.length; d++) {
    e.push(this.decode(a[d], b, c, !1));
  }
  return e;
};
com.cognitect.transit.impl.decoder.Decoder.prototype.parseString = function(a, b, c) {
  if (a.charAt(0) === com.cognitect.transit.delimiters.ESC) {
    b = a.charAt(1);
    if (b === com.cognitect.transit.delimiters.ESC || b === com.cognitect.transit.delimiters.SUB || b === com.cognitect.transit.delimiters.RES) {
      return a.substring(1);
    }
    if (b === com.cognitect.transit.delimiters.TAG) {
      return com.cognitect.transit.impl.decoder.tag(a.substring(2));
    }
    c = this.handlers[b];
    return null == c ? this.defaultHandler(b, a.substring(2)) : c(a.substring(2), this);
  }
  return a;
};
com.cognitect.transit.impl.decoder.decoder = function(a) {
  return new com.cognitect.transit.impl.decoder.Decoder(a);
};
com.cognitect.transit.impl.reader = {};
com.cognitect.transit.impl.reader.JSONUnmarshaller = function(a) {
  this.decoder = new com.cognitect.transit.impl.decoder.Decoder(a);
};
com.cognitect.transit.impl.reader.JSONUnmarshaller.prototype.unmarshal = function(a, b) {
  return this.decoder.decode(JSON.parse(a), b);
};
com.cognitect.transit.impl.reader.Reader = function(a, b) {
  this.unmarshaller = a;
  this.options = b || {};
  this.cache = this.options.cache ? this.options.cache : new com.cognitect.transit.caching.ReadCache;
};
com.cognitect.transit.impl.reader.Reader.prototype.read = function(a) {
  a = this.unmarshaller.unmarshal(a, this.cache);
  this.cache.clear();
  return a;
};
com.cognitect.transit.impl.reader.Reader.prototype.read = com.cognitect.transit.impl.reader.Reader.prototype.read;
com.cognitect.transit.handlers = {};
com.cognitect.transit.handlers.ctorGuid = 0;
com.cognitect.transit.handlers.ctorGuidProperty = "transit$guid$" + com.cognitect.transit.util.randomUUID();
com.cognitect.transit.handlers.typeTag = function(a) {
  if (null == a) {
    return "null";
  }
  if (a === String) {
    return "string";
  }
  if (a === Boolean) {
    return "boolean";
  }
  if (a === Number) {
    return "number";
  }
  if (a === Array) {
    return "array";
  }
  if (a === Object) {
    return "map";
  }
  var b = a[com.cognitect.transit.handlers.ctorGuidProperty];
  null == b && ("undefined" != typeof Object.defineProperty ? (b = ++com.cognitect.transit.handlers.ctorGuid, Object.defineProperty(a, com.cognitect.transit.handlers.ctorGuidProperty, {value:b, enumerable:!1})) : a[com.cognitect.transit.handlers.ctorGuidProperty] = b = ++com.cognitect.transit.handlers.ctorGuid);
  return b;
};
com.cognitect.transit.handlers.constructor = function(a) {
  return null == a ? null : a.constructor;
};
com.cognitect.transit.handlers.padZeros = function(a, b) {
  a = a.toString();
  for (var c = a.length; c < b; c++) {
    a = "0" + a;
  }
  return a;
};
com.cognitect.transit.handlers.stringableKeys = function(a) {
  a = com.cognitect.transit.util.objectKeys(a);
  for (var b = 0; b < a.length; b++) {
  }
  return !0;
};
com.cognitect.transit.handlers.NilHandler = function() {
};
com.cognitect.transit.handlers.NilHandler.prototype.tag = function(a) {
  return "_";
};
com.cognitect.transit.handlers.NilHandler.prototype.rep = function(a) {
  return null;
};
com.cognitect.transit.handlers.NilHandler.prototype.stringRep = function(a) {
  return "null";
};
com.cognitect.transit.handlers.StringHandler = function() {
};
com.cognitect.transit.handlers.StringHandler.prototype.tag = function(a) {
  return "s";
};
com.cognitect.transit.handlers.StringHandler.prototype.rep = function(a) {
  return a;
};
com.cognitect.transit.handlers.StringHandler.prototype.stringRep = function(a) {
  return a;
};
com.cognitect.transit.handlers.NumberHandler = function() {
};
com.cognitect.transit.handlers.NumberHandler.prototype.tag = function(a) {
  return "i";
};
com.cognitect.transit.handlers.NumberHandler.prototype.rep = function(a) {
  return a;
};
com.cognitect.transit.handlers.NumberHandler.prototype.stringRep = function(a) {
  return a.toString();
};
com.cognitect.transit.handlers.IntegerHandler = function() {
};
com.cognitect.transit.handlers.IntegerHandler.prototype.tag = function(a) {
  return "i";
};
com.cognitect.transit.handlers.IntegerHandler.prototype.rep = function(a) {
  return a.toString();
};
com.cognitect.transit.handlers.IntegerHandler.prototype.stringRep = function(a) {
  return a.toString();
};
com.cognitect.transit.handlers.BooleanHandler = function() {
};
com.cognitect.transit.handlers.BooleanHandler.prototype.tag = function(a) {
  return "?";
};
com.cognitect.transit.handlers.BooleanHandler.prototype.rep = function(a) {
  return a;
};
com.cognitect.transit.handlers.BooleanHandler.prototype.stringRep = function(a) {
  return a.toString();
};
com.cognitect.transit.handlers.ArrayHandler = function() {
};
com.cognitect.transit.handlers.ArrayHandler.prototype.tag = function(a) {
  return "array";
};
com.cognitect.transit.handlers.ArrayHandler.prototype.rep = function(a) {
  return a;
};
com.cognitect.transit.handlers.ArrayHandler.prototype.stringRep = function(a) {
  return null;
};
com.cognitect.transit.handlers.MapHandler = function() {
};
com.cognitect.transit.handlers.MapHandler.prototype.tag = function(a) {
  return "map";
};
com.cognitect.transit.handlers.MapHandler.prototype.rep = function(a) {
  return a;
};
com.cognitect.transit.handlers.MapHandler.prototype.stringRep = function(a) {
  return null;
};
com.cognitect.transit.handlers.VerboseDateHandler = function() {
};
com.cognitect.transit.handlers.VerboseDateHandler.prototype.tag = function(a) {
  return "t";
};
com.cognitect.transit.handlers.VerboseDateHandler.prototype.rep = function(a) {
  return a.getUTCFullYear() + "-" + com.cognitect.transit.handlers.padZeros(a.getUTCMonth() + 1, 2) + "-" + com.cognitect.transit.handlers.padZeros(a.getUTCDate(), 2) + "T" + com.cognitect.transit.handlers.padZeros(a.getUTCHours(), 2) + ":" + com.cognitect.transit.handlers.padZeros(a.getUTCMinutes(), 2) + ":" + com.cognitect.transit.handlers.padZeros(a.getUTCSeconds(), 2) + "." + com.cognitect.transit.handlers.padZeros(a.getUTCMilliseconds(), 3) + "Z";
};
com.cognitect.transit.handlers.VerboseDateHandler.prototype.stringRep = function(a, b) {
  return b.rep(a);
};
com.cognitect.transit.handlers.DateHandler = function() {
};
com.cognitect.transit.handlers.DateHandler.prototype.tag = function(a) {
  return "m";
};
com.cognitect.transit.handlers.DateHandler.prototype.rep = function(a) {
  return a.valueOf();
};
com.cognitect.transit.handlers.DateHandler.prototype.stringRep = function(a) {
  return a.valueOf().toString();
};
com.cognitect.transit.handlers.DateHandler.prototype.getVerboseHandler = function(a) {
  return new com.cognitect.transit.handlers.VerboseDateHandler;
};
com.cognitect.transit.handlers.UUIDHandler = function() {
};
com.cognitect.transit.handlers.UUIDHandler.prototype.tag = function(a) {
  return "u";
};
com.cognitect.transit.handlers.UUIDHandler.prototype.rep = function(a) {
  return a.toString();
};
com.cognitect.transit.handlers.UUIDHandler.prototype.stringRep = function(a) {
  return a.toString();
};
com.cognitect.transit.handlers.KeywordHandler = function() {
};
com.cognitect.transit.handlers.KeywordHandler.prototype.tag = function(a) {
  return ":";
};
com.cognitect.transit.handlers.KeywordHandler.prototype.rep = function(a) {
  return a._name;
};
com.cognitect.transit.handlers.KeywordHandler.prototype.stringRep = function(a, b) {
  return b.rep(a);
};
com.cognitect.transit.handlers.SymbolHandler = function() {
};
com.cognitect.transit.handlers.SymbolHandler.prototype.tag = function(a) {
  return "$";
};
com.cognitect.transit.handlers.SymbolHandler.prototype.rep = function(a) {
  return a._name;
};
com.cognitect.transit.handlers.SymbolHandler.prototype.stringRep = function(a, b) {
  return b.rep(a);
};
com.cognitect.transit.handlers.TaggedHandler = function() {
};
com.cognitect.transit.handlers.TaggedHandler.prototype.tag = function(a) {
  return a.tag;
};
com.cognitect.transit.handlers.TaggedHandler.prototype.rep = function(a) {
  return a.rep;
};
com.cognitect.transit.handlers.TaggedHandler.prototype.stringRep = function(a, b) {
  return null;
};
com.cognitect.transit.handlers.TransitSetHandler = function() {
};
com.cognitect.transit.handlers.TransitSetHandler.prototype.tag = function(a) {
  return "set";
};
com.cognitect.transit.handlers.TransitSetHandler.prototype.rep = function(a) {
  var b = [];
  a.forEach(function(a, d) {
    b.push(a);
  });
  return com.cognitect.transit.types.taggedValue("array", b);
};
com.cognitect.transit.handlers.TransitSetHandler.prototype.stringRep = function(a, b) {
  return null;
};
com.cognitect.transit.handlers.TransitArrayMapHandler = function() {
};
com.cognitect.transit.handlers.TransitArrayMapHandler.prototype.tag = function(a) {
  return "map";
};
com.cognitect.transit.handlers.TransitArrayMapHandler.prototype.rep = function(a) {
  return a;
};
com.cognitect.transit.handlers.TransitArrayMapHandler.prototype.stringRep = function(a, b) {
  return null;
};
com.cognitect.transit.handlers.TransitMapHandler = function() {
};
com.cognitect.transit.handlers.TransitMapHandler.prototype.tag = function(a) {
  return "map";
};
com.cognitect.transit.handlers.TransitMapHandler.prototype.rep = function(a) {
  return a;
};
com.cognitect.transit.handlers.TransitMapHandler.prototype.stringRep = function(a, b) {
  return null;
};
com.cognitect.transit.handlers.BufferHandler = function() {
};
com.cognitect.transit.handlers.BufferHandler.prototype.tag = function(a) {
  return "b";
};
com.cognitect.transit.handlers.BufferHandler.prototype.rep = function(a) {
  return a.toString("base64");
};
com.cognitect.transit.handlers.BufferHandler.prototype.stringRep = function(a, b) {
  return null;
};
com.cognitect.transit.handlers.Uint8ArrayHandler = function() {
};
com.cognitect.transit.handlers.Uint8ArrayHandler.prototype.tag = function(a) {
  return "b";
};
com.cognitect.transit.handlers.Uint8ArrayHandler.prototype.rep = function(a) {
  return com.cognitect.transit.util.Uint8ToBase64(a);
};
com.cognitect.transit.handlers.Uint8ArrayHandler.prototype.stringRep = function(a, b) {
  return null;
};
com.cognitect.transit.handlers.defaultHandlers = function(a) {
  a.set(null, new com.cognitect.transit.handlers.NilHandler);
  a.set(String, new com.cognitect.transit.handlers.StringHandler);
  a.set(Number, new com.cognitect.transit.handlers.NumberHandler);
  a.set(goog.math.Long, new com.cognitect.transit.handlers.IntegerHandler);
  a.set(Boolean, new com.cognitect.transit.handlers.BooleanHandler);
  a.set(Array, new com.cognitect.transit.handlers.ArrayHandler);
  a.set(Object, new com.cognitect.transit.handlers.MapHandler);
  a.set(Date, new com.cognitect.transit.handlers.DateHandler);
  a.set(com.cognitect.transit.types.UUID, new com.cognitect.transit.handlers.UUIDHandler);
  a.set(com.cognitect.transit.types.Keyword, new com.cognitect.transit.handlers.KeywordHandler);
  a.set(com.cognitect.transit.types.Symbol, new com.cognitect.transit.handlers.SymbolHandler);
  a.set(com.cognitect.transit.types.TaggedValue, new com.cognitect.transit.handlers.TaggedHandler);
  a.set(com.cognitect.transit.types.TransitSet, new com.cognitect.transit.handlers.TransitSetHandler);
  a.set(com.cognitect.transit.types.TransitArrayMap, new com.cognitect.transit.handlers.TransitArrayMapHandler);
  a.set(com.cognitect.transit.types.TransitMap, new com.cognitect.transit.handlers.TransitMapHandler);
  "undefined" != typeof Buffer && a.set(Buffer, new com.cognitect.transit.handlers.BufferHandler);
  "undefined" != typeof Uint8Array && a.set(Uint8Array, new com.cognitect.transit.handlers.Uint8ArrayHandler);
  return a;
};
com.cognitect.transit.handlers.Handlers = function() {
  this.handlers = {};
  com.cognitect.transit.handlers.defaultHandlers(this);
};
com.cognitect.transit.handlers.Handlers.prototype.get = function(a) {
  a = "string" === typeof a ? this.handlers[a] : this.handlers[com.cognitect.transit.handlers.typeTag(a)];
  return null != a ? a : this.handlers["default"];
};
com.cognitect.transit.handlers.Handlers.prototype.get = com.cognitect.transit.handlers.Handlers.prototype.get;
com.cognitect.transit.handlers.validTag = function(a) {
  switch(a) {
    case "null":
    case "string":
    case "boolean":
    case "number":
    case "array":
    case "map":
      return !1;
  }
  return !0;
};
com.cognitect.transit.handlers.Handlers.prototype.set = function(a, b) {
  "string" === typeof a && com.cognitect.transit.handlers.validTag(a) ? this.handlers[a] = b : this.handlers[com.cognitect.transit.handlers.typeTag(a)] = b;
};
com.cognitect.transit.impl.writer = {};
com.cognitect.transit.impl.writer.escape = function(a) {
  if (0 < a.length) {
    var b = a.charAt(0);
    return b === com.cognitect.transit.delimiters.ESC || b === com.cognitect.transit.delimiters.SUB || b === com.cognitect.transit.delimiters.RES ? com.cognitect.transit.delimiters.ESC + a : a;
  }
  return a;
};
com.cognitect.transit.impl.writer.JSONMarshaller = function(a) {
  this.opts = a || {};
  this.preferStrings = null != this.opts.preferStrings ? this.opts.preferStrings : !0;
  this.objectBuilder = this.opts.objectBuilder || null;
  this.handlers = new com.cognitect.transit.handlers.Handlers;
  if (a = this.opts.handlers) {
    if (com.cognitect.transit.util.isArray(a) || !a.forEach) {
      throw Error('transit writer "handlers" option must be a map');
    }
    var b = this;
    a.forEach(function(a, d) {
      if (void 0 !== d) {
        b.handlers.set(d, a);
      } else {
        throw Error("Cannot create handler for JavaScript undefined");
      }
    });
  }
  this.handlerForForeign = this.opts.handlerForForeign;
  this.unpack = this.opts.unpack || function(a) {
    return com.cognitect.transit.types.isArrayMap(a) && null === a.backingMap ? a._entries : !1;
  };
  this.verbose = this.opts && this.opts.verbose || !1;
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.handler = function(a) {
  var b = this.handlers.get(com.cognitect.transit.handlers.constructor(a));
  return null != b ? b : (a = a && a.transitTag) ? this.handlers.get(a) : null;
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.registerHandler = function(a, b) {
  this.handlers.set(a, b);
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.emitNil = function(a, b) {
  return a ? this.emitString(com.cognitect.transit.delimiters.ESC, "_", "", a, b) : null;
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.emitString = function(a, b, c, d, e) {
  a = a + b + c;
  return e ? e.write(a, d) : a;
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.emitBoolean = function(a, b, c) {
  return b ? this.emitString(com.cognitect.transit.delimiters.ESC, "?", a.toString()[0], b, c) : a;
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.emitInteger = function(a, b, c) {
  return Infinity === a ? this.emitString(com.cognitect.transit.delimiters.ESC, "z", "INF", b, c) : -Infinity === a ? this.emitString(com.cognitect.transit.delimiters.ESC, "z", "-INF", b, c) : isNaN(a) ? this.emitString(com.cognitect.transit.delimiters.ESC, "z", "NaN", b, c) : b || "string" === typeof a || a instanceof goog.math.Long ? this.emitString(com.cognitect.transit.delimiters.ESC, "i", a.toString(), b, c) : a;
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.emitDouble = function(a, b, c) {
  return b ? this.emitString(a.ESC, "d", a, b, c) : a;
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.emitBinary = function(a, b, c) {
  return this.emitString(com.cognitect.transit.delimiters.ESC, "b", a, b, c);
};
com.cognitect.transit.impl.writer.JSONMarshaller.prototype.emitQuoted = function(a, b, c) {
  if (a.verbose) {
    a = {};
    var d = this.emitString(com.cognitect.transit.delimiters.ESC_TAG, "'", "", !0, c);
    a[d] = com.cognitect.transit.impl.writer.marshal(this, b, !1, c);
    return a;
  }
  return [this.emitString(com.cognitect.transit.delimiters.ESC_TAG, "'", "", !0, c), com.cognitect.transit.impl.writer.marshal(this, b, !1, c)];
};
com.cognitect.transit.impl.writer.emitObjects = function(a, b, c) {
  var d = [];
  if (com.cognitect.transit.util.isArray(b)) {
    for (var e = 0; e < b.length; e++) {
      d.push(com.cognitect.transit.impl.writer.marshal(a, b[e], !1, c));
    }
  } else {
    b.forEach(function(b, e) {
      d.push(com.cognitect.transit.impl.writer.marshal(a, b, !1, c));
    });
  }
  return d;
};
com.cognitect.transit.impl.writer.emitArray = function(a, b, c, d) {
  return com.cognitect.transit.impl.writer.emitObjects(a, b, d);
};
com.cognitect.transit.impl.writer.isStringableKey = function(a, b) {
  return "string" !== typeof b ? (a = a.handler(b)) && 1 === a.tag(b).length : !0;
};
com.cognitect.transit.impl.writer.stringableKeys = function(a, b) {
  var c = a.unpack(b), d = !0;
  if (c) {
    for (b = 0; b < c.length && (d = com.cognitect.transit.impl.writer.isStringableKey(a, c[b]), d); b += 2) {
    }
    return d;
  }
  if (b.keys) {
    c = b.keys();
    var e = null;
    if (c.next) {
      for (e = c.next(); !e.done;) {
        d = com.cognitect.transit.impl.writer.isStringableKey(a, e.value);
        if (!d) {
          break;
        }
        e = c.next();
      }
      return d;
    }
  }
  if (b.forEach) {
    return b.forEach(function(b, c) {
      d = d && com.cognitect.transit.impl.writer.isStringableKey(a, c);
    }), d;
  }
  throw Error("Cannot walk keys of object type " + com.cognitect.transit.handlers.constructor(b).name);
};
com.cognitect.transit.impl.writer.isForeignObject = function(a) {
  if (a.constructor.transit$isObject) {
    return !0;
  }
  var b = a.constructor.toString();
  b = b.substr(9);
  b = b.substr(0, b.indexOf("("));
  isObject = "Object" == b;
  "undefined" != typeof Object.defineProperty ? Object.defineProperty(a.constructor, "transit$isObject", {value:isObject, enumerable:!1}) : a.constructor.transit$isObject = isObject;
  return isObject;
};
com.cognitect.transit.impl.writer.emitMap = function(a, b, c, d) {
  var e = null, f = null, g = null;
  e = null;
  c = 0;
  if (b.constructor === Object || null != b.forEach || a.handlerForForeign && com.cognitect.transit.impl.writer.isForeignObject(b)) {
    if (a.verbose) {
      if (null != b.forEach) {
        if (com.cognitect.transit.impl.writer.stringableKeys(a, b)) {
          var h = {};
          b.forEach(function(b, c) {
            h[com.cognitect.transit.impl.writer.marshal(a, c, !0, !1)] = com.cognitect.transit.impl.writer.marshal(a, b, !1, d);
          });
        } else {
          e = a.unpack(b);
          f = [];
          g = a.emitString(com.cognitect.transit.delimiters.ESC_TAG, "cmap", "", !0, d);
          if (e) {
            for (; c < e.length; c += 2) {
              f.push(com.cognitect.transit.impl.writer.marshal(a, e[c], !1, !1)), f.push(com.cognitect.transit.impl.writer.marshal(a, e[c + 1], !1, d));
            }
          } else {
            b.forEach(function(b, c) {
              f.push(com.cognitect.transit.impl.writer.marshal(a, c, !1, !1));
              f.push(com.cognitect.transit.impl.writer.marshal(a, b, !1, d));
            });
          }
          h = {};
          h[g] = f;
        }
      } else {
        for (e = com.cognitect.transit.util.objectKeys(b), h = {}; c < e.length; c++) {
          h[com.cognitect.transit.impl.writer.marshal(a, e[c], !0, !1)] = com.cognitect.transit.impl.writer.marshal(a, b[e[c]], !1, d);
        }
      }
      return h;
    }
    if (null != b.forEach) {
      if (com.cognitect.transit.impl.writer.stringableKeys(a, b)) {
        e = a.unpack(b);
        h = ["^ "];
        if (e) {
          for (; c < e.length; c += 2) {
            h.push(com.cognitect.transit.impl.writer.marshal(a, e[c], !0, d)), h.push(com.cognitect.transit.impl.writer.marshal(a, e[c + 1], !1, d));
          }
        } else {
          b.forEach(function(b, c) {
            h.push(com.cognitect.transit.impl.writer.marshal(a, c, !0, d));
            h.push(com.cognitect.transit.impl.writer.marshal(a, b, !1, d));
          });
        }
        return h;
      }
      e = a.unpack(b);
      f = [];
      g = a.emitString(com.cognitect.transit.delimiters.ESC_TAG, "cmap", "", !0, d);
      if (e) {
        for (; c < e.length; c += 2) {
          f.push(com.cognitect.transit.impl.writer.marshal(a, e[c], !1, d)), f.push(com.cognitect.transit.impl.writer.marshal(a, e[c + 1], !1, d));
        }
      } else {
        b.forEach(function(b, c) {
          f.push(com.cognitect.transit.impl.writer.marshal(a, c, !1, d));
          f.push(com.cognitect.transit.impl.writer.marshal(a, b, !1, d));
        });
      }
      return [g, f];
    }
    h = ["^ "];
    for (e = com.cognitect.transit.util.objectKeys(b); c < e.length; c++) {
      h.push(com.cognitect.transit.impl.writer.marshal(a, e[c], !0, d)), h.push(com.cognitect.transit.impl.writer.marshal(a, b[e[c]], !1, d));
    }
    return h;
  }
  if (null != a.objectBuilder) {
    return a.objectBuilder(b, function(b) {
      return com.cognitect.transit.impl.writer.marshal(a, b, !0, d);
    }, function(b) {
      return com.cognitect.transit.impl.writer.marshal(a, b, !1, d);
    });
  }
  c = com.cognitect.transit.handlers.constructor(b).name;
  e = Error("Cannot write " + c);
  e.data = {obj:b, type:c};
  throw e;
};
com.cognitect.transit.impl.writer.emitTaggedMap = function(a, b, c, d, e) {
  return a.verbose ? (d = {}, d[a.emitString(com.cognitect.transit.delimiters.ESC_TAG, b, "", !0, e)] = com.cognitect.transit.impl.writer.marshal(a, c, !1, e), d) : [a.emitString(com.cognitect.transit.delimiters.ESC_TAG, b, "", !0, e), com.cognitect.transit.impl.writer.marshal(a, c, !1, e)];
};
com.cognitect.transit.impl.writer.emitEncoded = function(a, b, c, d, e, f, g) {
  if (1 === c.length) {
    if ("string" === typeof d) {
      return a.emitString(com.cognitect.transit.delimiters.ESC, c, d, f, g);
    }
    if (f || a.preferStrings) {
      (d = a.verbose && b.getVerboseHandler()) ? (c = d.tag(e), d = d.stringRep(e, d)) : d = b.stringRep(e, b);
      if (null !== d) {
        return a.emitString(com.cognitect.transit.delimiters.ESC, c, d, f, g);
      }
      a = Error('Tag "' + c + '" cannot be encoded as string');
      a.data = {tag:c, rep:d, obj:e};
      throw a;
    }
  }
  return com.cognitect.transit.impl.writer.emitTaggedMap(a, c, d, f, g);
};
com.cognitect.transit.impl.writer.marshal = function(a, b, c, d) {
  var e = a.handler(b) || (a.handlerForForeign ? a.handlerForForeign(b, a.handlers) : null), f = e ? e.tag(b) : null, g = e ? e.rep(b) : null;
  if (null != e && null != f) {
    switch(f) {
      case "_":
        return a.emitNil(c, d);
      case "s":
        return a.emitString("", "", com.cognitect.transit.impl.writer.escape(g), c, d);
      case "?":
        return a.emitBoolean(g, c, d);
      case "i":
        return a.emitInteger(g, c, d);
      case "d":
        return a.emitDouble(g, c, d);
      case "b":
        return a.emitBinary(g, c, d);
      case "'":
        return a.emitQuoted(a, g, d);
      case "array":
        return com.cognitect.transit.impl.writer.emitArray(a, g, c, d);
      case "map":
        return com.cognitect.transit.impl.writer.emitMap(a, g, c, d);
      default:
        return com.cognitect.transit.impl.writer.emitEncoded(a, e, f, g, b, c, d);
    }
  } else {
    throw a = com.cognitect.transit.handlers.constructor(b).name, c = Error("Cannot write " + a), c.data = {obj:b, type:a}, c;
  }
};
com.cognitect.transit.impl.writer.maybeQuoted = function(a, b) {
  a = a.handler(b) || (a.handlerForForeign ? a.handlerForForeign(b, a.handlers) : null);
  if (null != a) {
    return 1 === a.tag(b).length ? com.cognitect.transit.types.quoted(b) : b;
  }
  a = com.cognitect.transit.handlers.constructor(b).name;
  var c = Error("Cannot write " + a);
  c.data = {obj:b, type:a};
  throw c;
};
com.cognitect.transit.impl.writer.marshalTop = function(a, b, c, d) {
  return JSON.stringify(com.cognitect.transit.impl.writer.marshal(a, com.cognitect.transit.impl.writer.maybeQuoted(a, b), c, d));
};
com.cognitect.transit.impl.writer.Writer = function(a, b) {
  this._marshaller = a;
  this.options = b || {};
  this.cache = !1 === this.options.cache ? null : this.options.cache ? this.options.cache : new com.cognitect.transit.caching.WriteCache;
};
com.cognitect.transit.impl.writer.Writer.prototype.marshaller = function() {
  return this._marshaller;
};
com.cognitect.transit.impl.writer.Writer.prototype.marshaller = com.cognitect.transit.impl.writer.Writer.prototype.marshaller;
com.cognitect.transit.impl.writer.Writer.prototype.write = function(a, b) {
  b = b || {};
  var c = b.asMapKey || !1, d = this._marshaller.verbose ? !1 : this.cache;
  a = !1 === b.marshalTop ? com.cognitect.transit.impl.writer.marshal(this._marshaller, a, c, d) : com.cognitect.transit.impl.writer.marshalTop(this._marshaller, a, c, d);
  null != this.cache && this.cache.clear();
  return a;
};
com.cognitect.transit.impl.writer.Writer.prototype.write = com.cognitect.transit.impl.writer.Writer.prototype.write;
com.cognitect.transit.impl.writer.Writer.prototype.register = function(a, b) {
  this._marshaller.registerHandler(a, b);
};
com.cognitect.transit.impl.writer.Writer.prototype.register = com.cognitect.transit.impl.writer.Writer.prototype.register;
var TRANSIT_DEV = !0, TRANSIT_NODE_TARGET = !1, TRANSIT_BROWSER_TARGET = !1, TRANSIT_BROWSER_AMD_TARGET = !1;
com.cognitect.transit.reader = function(a, b) {
  if ("json" === a || "json-verbose" === a || null == a) {
    return a = new com.cognitect.transit.impl.reader.JSONUnmarshaller(b), new com.cognitect.transit.impl.reader.Reader(a, b);
  }
  throw Error("Cannot create reader of type " + a);
};
com.cognitect.transit.writer = function(a, b) {
  if ("json" === a || "json-verbose" === a || null == a) {
    return "json-verbose" === a && (null == b && (b = {}), b.verbose = !0), a = new com.cognitect.transit.impl.writer.JSONMarshaller(b), new com.cognitect.transit.impl.writer.Writer(a, b);
  }
  b = Error('Type must be "json"');
  b.data = {type:a};
  throw b;
};
com.cognitect.transit.makeWriteHandler = function(a) {
  var b = function() {
  };
  b.prototype.tag = a.tag;
  b.prototype.rep = a.rep;
  b.prototype.stringRep = a.stringRep;
  b.prototype.getVerboseHandler = a.getVerboseHandler;
  return new b;
};
com.cognitect.transit.makeBuilder = function(a) {
  var b = function() {
  };
  b.prototype.init = a.init;
  b.prototype.add = a.add;
  b.prototype.finalize = a.finalize;
  b.prototype.fromArray = a.fromArray;
  return new b;
};
com.cognitect.transit.date = com.cognitect.transit.types.date;
com.cognitect.transit.integer = com.cognitect.transit.types.intValue;
com.cognitect.transit.isInteger = com.cognitect.transit.types.isInteger;
com.cognitect.transit.uuid = com.cognitect.transit.types.uuid;
com.cognitect.transit.isUUID = com.cognitect.transit.types.isUUID;
com.cognitect.transit.bigInt = com.cognitect.transit.types.bigInteger;
com.cognitect.transit.isBigInt = com.cognitect.transit.types.isBigInteger;
com.cognitect.transit.bigDec = com.cognitect.transit.types.bigDecimalValue;
com.cognitect.transit.isBigDec = com.cognitect.transit.types.isBigDecimal;
com.cognitect.transit.keyword = com.cognitect.transit.types.keyword;
com.cognitect.transit.isKeyword = com.cognitect.transit.types.isKeyword;
com.cognitect.transit.symbol = com.cognitect.transit.types.symbol;
com.cognitect.transit.isSymbol = com.cognitect.transit.types.isSymbol;
com.cognitect.transit.binary = com.cognitect.transit.types.binary;
com.cognitect.transit.isBinary = com.cognitect.transit.types.isBinary;
com.cognitect.transit.uri = com.cognitect.transit.types.uri;
com.cognitect.transit.isURI = com.cognitect.transit.types.isURI;
com.cognitect.transit.map = com.cognitect.transit.types.map;
com.cognitect.transit.isMap = com.cognitect.transit.types.isMap;
com.cognitect.transit.set = com.cognitect.transit.types.set;
com.cognitect.transit.isSet = com.cognitect.transit.types.isSet;
com.cognitect.transit.list = com.cognitect.transit.types.list;
com.cognitect.transit.isList = com.cognitect.transit.types.isList;
com.cognitect.transit.quoted = com.cognitect.transit.types.quoted;
com.cognitect.transit.isQuoted = com.cognitect.transit.types.isQuoted;
com.cognitect.transit.tagged = com.cognitect.transit.types.taggedValue;
com.cognitect.transit.isTaggedValue = com.cognitect.transit.types.isTaggedValue;
com.cognitect.transit.link = com.cognitect.transit.types.link;
com.cognitect.transit.isLink = com.cognitect.transit.types.isLink;
com.cognitect.transit.hash = com.cognitect.transit.eq.hashCode;
com.cognitect.transit.hashMapLike = com.cognitect.transit.eq.hashMapLike;
com.cognitect.transit.hashArrayLike = com.cognitect.transit.eq.hashArrayLike;
com.cognitect.transit.equals = com.cognitect.transit.eq.equals;
com.cognitect.transit.extendToEQ = com.cognitect.transit.eq.extendToEQ;
com.cognitect.transit.mapToObject = function(a) {
  var b = {};
  a.forEach(function(a, d) {
    if ("string" !== typeof d) {
      throw Error("Cannot convert map with non-string keys");
    }
    b[d] = a;
  });
  return b;
};
com.cognitect.transit.objectToMap = function(a) {
  var b = com.cognitect.transit.map(), c;
  for (c in a) {
    a.hasOwnProperty(c) && b.set(c, a[c]);
  }
  return b;
};
com.cognitect.transit.decoder = com.cognitect.transit.impl.decoder.decoder;
com.cognitect.transit.readCache = com.cognitect.transit.caching.readCache;
com.cognitect.transit.writeCache = com.cognitect.transit.caching.writeCache;
com.cognitect.transit.UUIDfromString = com.cognitect.transit.types.UUIDfromString;
com.cognitect.transit.randomUUID = com.cognitect.transit.util.randomUUID;
com.cognitect.transit.stringableKeys = com.cognitect.transit.impl.writer.stringableKeys;
TRANSIT_BROWSER_TARGET && (goog.exportSymbol("transit.reader", com.cognitect.transit.reader), goog.exportSymbol("transit.writer", com.cognitect.transit.writer), goog.exportSymbol("transit.makeBuilder", com.cognitect.transit.makeBuilder), goog.exportSymbol("transit.makeWriteHandler", com.cognitect.transit.makeWriteHandler), goog.exportSymbol("transit.date", com.cognitect.transit.types.date), goog.exportSymbol("transit.integer", com.cognitect.transit.types.intValue), goog.exportSymbol("transit.isInteger", 
com.cognitect.transit.types.isInteger), goog.exportSymbol("transit.uuid", com.cognitect.transit.types.uuid), goog.exportSymbol("transit.isUUID", com.cognitect.transit.types.isUUID), goog.exportSymbol("transit.bigInt", com.cognitect.transit.types.bigInteger), goog.exportSymbol("transit.isBigInt", com.cognitect.transit.types.isBigInteger), goog.exportSymbol("transit.bigDec", com.cognitect.transit.types.bigDecimalValue), goog.exportSymbol("transit.isBigDec", com.cognitect.transit.types.isBigDecimal), 
goog.exportSymbol("transit.keyword", com.cognitect.transit.types.keyword), goog.exportSymbol("transit.isKeyword", com.cognitect.transit.types.isKeyword), goog.exportSymbol("transit.symbol", com.cognitect.transit.types.symbol), goog.exportSymbol("transit.isSymbol", com.cognitect.transit.types.isSymbol), goog.exportSymbol("transit.binary", com.cognitect.transit.types.binary), goog.exportSymbol("transit.isBinary", com.cognitect.transit.types.isBinary), goog.exportSymbol("transit.uri", com.cognitect.transit.types.uri), 
goog.exportSymbol("transit.isURI", com.cognitect.transit.types.isURI), goog.exportSymbol("transit.map", com.cognitect.transit.types.map), goog.exportSymbol("transit.isMap", com.cognitect.transit.types.isMap), goog.exportSymbol("transit.set", com.cognitect.transit.types.set), goog.exportSymbol("transit.isSet", com.cognitect.transit.types.isSet), goog.exportSymbol("transit.list", com.cognitect.transit.types.list), goog.exportSymbol("transit.isList", com.cognitect.transit.types.isList), goog.exportSymbol("transit.quoted", 
com.cognitect.transit.types.quoted), goog.exportSymbol("transit.isQuoted", com.cognitect.transit.types.isQuoted), goog.exportSymbol("transit.tagged", com.cognitect.transit.types.taggedValue), goog.exportSymbol("transit.isTaggedValue", com.cognitect.transit.types.isTaggedValue), goog.exportSymbol("transit.link", com.cognitect.transit.types.link), goog.exportSymbol("transit.isLink", com.cognitect.transit.types.isLink), goog.exportSymbol("transit.hash", com.cognitect.transit.eq.hashCode), goog.exportSymbol("transit.hashMapLike", 
com.cognitect.transit.eq.hashMapLike), goog.exportSymbol("transit.hashArrayLike", com.cognitect.transit.eq.hashArrayLike), goog.exportSymbol("transit.equals", com.cognitect.transit.eq.equals), goog.exportSymbol("transit.extendToEQ", com.cognitect.transit.eq.extendToEQ), goog.exportSymbol("transit.mapToObject", com.cognitect.transit.mapToObject), goog.exportSymbol("transit.objectToMap", com.cognitect.transit.objectToMap), goog.exportSymbol("transit.decoder", com.cognitect.transit.impl.decoder.decoder), 
goog.exportSymbol("transit.UUIDfromString", com.cognitect.transit.types.UUIDfromString), goog.exportSymbol("transit.randomUUID", com.cognitect.transit.util.randomUUID), goog.exportSymbol("transit.stringableKeys", com.cognitect.transit.impl.writer.stringableKeys), goog.exportSymbol("transit.readCache", com.cognitect.transit.caching.readCache), goog.exportSymbol("transit.writeCache", com.cognitect.transit.caching.writeCache));
TRANSIT_NODE_TARGET && (module.exports = {reader:com.cognitect.transit.reader, writer:com.cognitect.transit.writer, makeBuilder:com.cognitect.transit.makeBuilder, makeWriteHandler:com.cognitect.transit.makeWriteHandler, date:com.cognitect.transit.types.date, integer:com.cognitect.transit.types.intValue, isInteger:com.cognitect.transit.types.isInteger, uuid:com.cognitect.transit.types.uuid, isUUID:com.cognitect.transit.types.isUUID, bigInt:com.cognitect.transit.types.bigInteger, isBigInt:com.cognitect.transit.types.isBigInteger, 
bigDec:com.cognitect.transit.types.bigDecimalValue, isBigDec:com.cognitect.transit.types.isBigDecimal, keyword:com.cognitect.transit.types.keyword, isKeyword:com.cognitect.transit.types.isKeyword, symbol:com.cognitect.transit.types.symbol, isSymbol:com.cognitect.transit.types.isSymbol, binary:com.cognitect.transit.types.binary, isBinary:com.cognitect.transit.types.isBinary, uri:com.cognitect.transit.types.uri, isURI:com.cognitect.transit.types.isURI, map:com.cognitect.transit.types.map, isMap:com.cognitect.transit.types.isMap, 
set:com.cognitect.transit.types.set, isSet:com.cognitect.transit.types.isSet, list:com.cognitect.transit.types.list, isList:com.cognitect.transit.types.isList, quoted:com.cognitect.transit.types.quoted, isQuoted:com.cognitect.transit.types.isQuoted, tagged:com.cognitect.transit.types.taggedValue, isTaggedValue:com.cognitect.transit.types.isTaggedValue, link:com.cognitect.transit.types.link, isLink:com.cognitect.transit.types.isLink, hash:com.cognitect.transit.eq.hashCode, hashArrayLike:com.cognitect.transit.eq.hashArrayLike, 
hashMapLike:com.cognitect.transit.eq.hashMapLike, equals:com.cognitect.transit.eq.equals, extendToEQ:com.cognitect.transit.eq.extendToEQ, mapToObject:com.cognitect.transit.mapToObject, objectToMap:com.cognitect.transit.objectToMap, decoder:com.cognitect.transit.impl.decoder.decoder, UUIDfromString:com.cognitect.transit.types.UUIDfromString, randomUUID:com.cognitect.transit.util.randomUUID, stringableKeys:com.cognitect.transit.impl.writer.stringableKeys, readCache:com.cognitect.transit.caching.readCache, 
writeCache:com.cognitect.transit.caching.writeCache});
var cognitect = {transit:{}};
cljs.core.UUID.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.UUID ? this.uuid === b.uuid : b instanceof com.cognitect.transit.types.UUID ? this.uuid === b.toString() : !1;
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.UUID || b instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this.toString(), b.toString());
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.UUID || b instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this.toString(), b.toString());
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
goog.math.Long.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return this.equiv(b);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.UUID ? cljs.core._equiv.call(null, b, this) : this.equiv(b);
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return this.equiv(b);
};
goog.math.Long.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return com.cognitect.transit.eq.hashCode(this);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash.call(null, this.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return com.cognitect.transit.eq.hashCode(this);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write.call(null, b, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.toString()), '"'].join(""));
};
cognitect.transit.opts_merge = function(a, b) {
  for (var c = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b)), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f);
      a[g] = b[g];
      f += 1;
    } else {
      if (c = cljs.core.seq.call(null, c)) {
        d = c, cljs.core.chunked_seq_QMARK_.call(null, d) ? (c = cljs.core.chunk_first.call(null, d), f = cljs.core.chunk_rest.call(null, d), d = c, e = cljs.core.count.call(null, c), c = f) : (c = cljs.core.first.call(null, d), a[c] = b[c], c = cljs.core.next.call(null, d), d = null, e = 0), f = 0;
      } else {
        break;
      }
    }
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(a) {
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(a, b, c, d) {
  return cljs.core.assoc_BANG_.call(null, a, b, c);
};
cognitect.transit.MapBuilder.prototype.finalize = function(a, b) {
  return cljs.core.persistent_BANG_.call(null, a);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(a, b) {
  return cljs.core.PersistentArrayMap.fromArray.call(null, a, !0, !0);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = !0;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(a) {
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(a, b, c) {
  return cljs.core.conj_BANG_.call(null, a, b);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(a, b) {
  return cljs.core.persistent_BANG_.call(null, a);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(a, b) {
  return cljs.core.PersistentVector.fromArray.call(null, a, !0);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = !0;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function(a) {
  switch(arguments.length) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cognitect.transit.reader.call(null, a, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return com.cognitect.transit.reader(cljs.core.name.call(null, a), cognitect.transit.opts_merge.call(null, {handlers:cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(a) {
    return cljs.core.symbol.call(null, a);
  }, ":", function(a) {
    return cljs.core.keyword.call(null, a);
  }, "set", function(a) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, a);
  }, "list", function(a) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, a.reverse());
  }, "cmap", function(a) {
    for (var b = 0, c = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);;) {
      if (b < a.length) {
        var f = b + 2;
        c = cljs.core.assoc_BANG_.call(null, c, a[b], a[b + 1]);
        b = f;
      } else {
        return cljs.core.persistent_BANG_.call(null, c);
      }
    }
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(b))), mapBuilder:new cognitect.transit.MapBuilder, arrayBuilder:new cognitect.transit.VectorBuilder, prefersStrings:!1}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function(a, b) {
  return a.read(b);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(a) {
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(a) {
  return a.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(a) {
  return a.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = !0;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(a) {
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(a) {
  return a.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(a) {
  return a.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = !0;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(a) {
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(a) {
  var b = [];
  a = cljs.core.seq.call(null, a);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e);
      b.push(f);
      e += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        c = a, cljs.core.chunked_seq_QMARK_.call(null, c) ? (a = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = a, d = cljs.core.count.call(null, a), a = e) : (a = cljs.core.first.call(null, c), b.push(a), a = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
      } else {
        break;
      }
    }
  }
  return com.cognitect.transit.tagged("array", b);
};
cognitect.transit.ListHandler.prototype.stringRep = function(a) {
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = !0;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(a) {
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(a) {
  return a;
};
cognitect.transit.MapHandler.prototype.stringRep = function(a) {
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = !0;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(a) {
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(a) {
  var b = [];
  a = cljs.core.seq.call(null, a);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e);
      b.push(f);
      e += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        c = a, cljs.core.chunked_seq_QMARK_.call(null, c) ? (a = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = a, d = cljs.core.count.call(null, a), a = e) : (a = cljs.core.first.call(null, c), b.push(a), a = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
      } else {
        break;
      }
    }
  }
  return com.cognitect.transit.tagged("array", b);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = !0;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(a) {
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(a) {
  var b = [];
  a = cljs.core.seq.call(null, a);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e);
      b.push(f);
      e += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        c = a, cljs.core.chunked_seq_QMARK_.call(null, c) ? (a = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = a, d = cljs.core.count.call(null, a), a = e) : (a = cljs.core.first.call(null, c), b.push(a), a = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
      } else {
        break;
      }
    }
  }
  return b;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(a) {
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = !0;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(a) {
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(a) {
  return a.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(a) {
  return this.rep(a);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = !0;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function(a) {
  switch(arguments.length) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cognitect.transit.writer.call(null, a, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = new cognitect.transit.KeywordHandler, d = new cognitect.transit.SymbolHandler, e = new cognitect.transit.ListHandler, f = new cognitect.transit.MapHandler, g = new cognitect.transit.SetHandler, h = new cognitect.transit.VectorHandler, k = new cognitect.transit.UUIDHandler, l = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, 
  cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [f, e, f, e, e, e, c, e, e, h, e, e, e, e, 
  h, e, e, g, f, e, e, g, e, d, k, e, e]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(b));
  return com.cognitect.transit.writer(cljs.core.name.call(null, a), cognitect.transit.opts_merge.call(null, {objectBuilder:function(a, b, c, d, e, f, g, h) {
    return function(k, l, m) {
      return cljs.core.reduce_kv.call(null, function(a, b, c, d, e, f, g, h) {
        return function(a, b, c) {
          a.push(l.call(null, b), m.call(null, c));
          return a;
        };
      }(a, b, c, d, e, f, g, h), ["^ "], k);
    };
  }(c, d, e, f, g, h, k, l), handlers:function() {
    var a = cljs.core.clone.call(null, l);
    a.forEach = function(a, b, c, d, e, f, g, h, k) {
      return function(a) {
        for (var b = cljs.core.seq.call(null, this), c = null, d = 0, e = 0;;) {
          if (e < d) {
            var f = cljs.core._nth.call(null, c, e), g = cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            a.call(null, f, g);
            e += 1;
          } else {
            if (b = cljs.core.seq.call(null, b)) {
              cljs.core.chunked_seq_QMARK_.call(null, b) ? (c = cljs.core.chunk_first.call(null, b), b = cljs.core.chunk_rest.call(null, b), g = c, d = cljs.core.count.call(null, c), c = g) : (c = cljs.core.first.call(null, b), g = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), a.call(null, f, g), b = cljs.core.next.call(null, b), c = null, d = 0), e = 0;
            } else {
              return null;
            }
          }
        }
      };
    }(a, c, d, e, f, g, h, k, l);
    return a;
  }(), unpack:function(a, b, c, d, e, f, g, h) {
    return function(a) {
      return a instanceof cljs.core.PersistentArrayMap ? a.arr : !1;
    };
  }(c, d, e, f, g, h, k, l)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function(a, b) {
  return a.write(b);
};
cognitect.transit.read_handler = function(a) {
  return a;
};
cognitect.transit.write_handler = function(a) {
  switch(arguments.length) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cognitect.transit.write_handler.call(null, a, b, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cognitect.transit.write_handler.call(null, a, b, c, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  "undefined" === typeof cognitect.transit.t_cognitect$transit12602 && (cognitect.transit.t_cognitect$transit12602 = function(a, b, c, d, k) {
    this.tag_fn = a;
    this.rep_fn = b;
    this.str_rep_fn = c;
    this.verbose_handler_fn = d;
    this.meta12603 = k;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cognitect.transit.t_cognitect$transit12602.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cognitect.transit.t_cognitect$transit12602(this.tag_fn, this.rep_fn, this.str_rep_fn, this.verbose_handler_fn, b);
  }, cognitect.transit.t_cognitect$transit12602.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta12603;
  }, cognitect.transit.t_cognitect$transit12602.prototype.tag = function(a) {
    return this.tag_fn.call(null, a);
  }, cognitect.transit.t_cognitect$transit12602.prototype.rep = function(a) {
    return this.rep_fn.call(null, a);
  }, cognitect.transit.t_cognitect$transit12602.prototype.stringRep = function(a) {
    return cljs.core.truth_(this.str_rep_fn) ? this.str_rep_fn.call(null, a) : null;
  }, cognitect.transit.t_cognitect$transit12602.prototype.getVerboseHandler = function() {
    return cljs.core.truth_(this.verbose_handler_fn) ? this.verbose_handler_fn.call(null) : null;
  }, cognitect.transit.t_cognitect$transit12602.getBasis = function() {
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta12603", "meta12603", 1281087180, null)], null);
  }, cognitect.transit.t_cognitect$transit12602.cljs$lang$type = !0, cognitect.transit.t_cognitect$transit12602.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit12602", cognitect.transit.t_cognitect$transit12602.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "cognitect.transit/t_cognitect$transit12602");
  }, cognitect.transit.__GT_t_cognitect$transit12602 = function(a, b, c, d, k) {
    return new cognitect.transit.t_cognitect$transit12602(a, b, c, d, k);
  });
  return new cognitect.transit.t_cognitect$transit12602(a, b, c, d, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function(a, b) {
  return com.cognitect.transit.types.taggedValue(a, b);
};
cognitect.transit.tagged_value_QMARK_ = function(a) {
  return com.cognitect.transit.types.isTaggedValue(a);
};
cognitect.transit.integer = function(a) {
  return com.cognitect.transit.types.intValue(a);
};
cognitect.transit.integer_QMARK_ = function(a) {
  return com.cognitect.transit.types.isInteger(a);
};
cognitect.transit.bigint = function(a) {
  return com.cognitect.transit.types.bigInteger(a);
};
cognitect.transit.bigint_QMARK_ = function(a) {
  return com.cognitect.transit.types.isBigInteger(a);
};
cognitect.transit.bigdec = function(a) {
  return com.cognitect.transit.types.bigDecimalValue(a);
};
cognitect.transit.bigdec_QMARK_ = function(a) {
  return com.cognitect.transit.types.isBigDecimal(a);
};
cognitect.transit.uri = function(a) {
  return com.cognitect.transit.types.uri(a);
};
cognitect.transit.uri_QMARK_ = function(a) {
  return com.cognitect.transit.types.isURI(a);
};
cognitect.transit.uuid = function(a) {
  return com.cognitect.transit.types.uuid(a);
};
cognitect.transit.uuid_QMARK_ = function(a) {
  var b = com.cognitect.transit.types.isUUID(a);
  return cljs.core.truth_(b) ? b : a instanceof cljs.core.UUID;
};
cognitect.transit.binary = function(a) {
  return com.cognitect.transit.types.binary(a);
};
cognitect.transit.binary_QMARK_ = function(a) {
  return com.cognitect.transit.types.isBinary(a);
};
cognitect.transit.quoted = function(a) {
  return com.cognitect.transit.types.quoted(a);
};
cognitect.transit.quoted_QMARK_ = function(a) {
  return com.cognitect.transit.types.isQuoted(a);
};
cognitect.transit.link = function(a) {
  return com.cognitect.transit.types.link(a);
};
cognitect.transit.link_QMARK_ = function(a) {
  return com.cognitect.transit.types.isLink(a);
};
var http = {util:{}};
http.util.basic_auth = function(a) {
  if (cljs.core.truth_(a)) {
    var b = cljs.core.map_QMARK_.call(null, a) ? cljs.core.map.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "username", "username", 1605666410), new cljs.core.Keyword(null, "password", "password", 417022471)], null)) : a;
    a = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return ["Basic ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(no.en.core.base64_encode.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")))].join("");
  }
  return null;
};
http.util.build_url = function(a) {
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "scheme", "scheme", 90199613)), c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "server-name", "server-name", -1012104295)), d = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "server-port", "server-port", 663745648)), e = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "uri", "uri", -774711847)), f = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "query-string", "query-string", -1018845061));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var a = new goog.Uri;
    a.setScheme(cljs.core.name.call(null, cljs.core.truth_(b) ? b : new cljs.core.Keyword(null, "http", "http", 382524695)));
    a.setDomain(c);
    a.setPort(d);
    a.setPath(e);
    a.setQuery(f, !0);
    return a;
  }())].join("");
};
http.util.camelize = function(a) {
  return clojure.string.join.call(null, "-", cljs.core.map.call(null, clojure.string.capitalize, clojure.string.split.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), /-/)));
};
http.util.build_headers = function(a) {
  return cljs.core.clj__GT_js.call(null, cljs.core.zipmap.call(null, cljs.core.map.call(null, http.util.camelize, cljs.core.keys.call(null, a)), cljs.core.vals.call(null, a)));
};
http.util.user_agent = function() {
  return goog.userAgent.getUserAgentString();
};
http.util.android_QMARK_ = function() {
  return cljs.core.re_matches.call(null, /.*android.*/i, http.util.user_agent.call(null));
};
http.util.transit_decode = function(a, b, c) {
  b = cognitect.transit.reader.call(null, b, c);
  return cognitect.transit.read.call(null, b, a);
};
http.util.transit_encode = function(a, b, c) {
  b = cognitect.transit.writer.call(null, b, c);
  return cognitect.transit.write.call(null, b, a);
};
http.util.json_decode = function(a) {
  a = JSON.parse(a);
  return cljs.core.truth_(a) ? cljs.core.js__GT_clj.call(null, a, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0) : null;
};
http.util.json_encode = function(a) {
  return JSON.stringify(cljs.core.clj__GT_js.call(null, a));
};
http.util.parse_headers = function(a) {
  return cljs.core.reduce.call(null, function(a, c) {
    var b = clojure.string.split.call(null, c, /:\s+/);
    c = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return clojure.string.blank_QMARK_.call(null, c) || clojure.string.blank_QMARK_.call(null, b) ? a : cljs.core.assoc.call(null, a, clojure.string.lower_case.call(null, c), b);
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, cljs.core.truth_(a) ? a : "", /(\n)|(\r)|(\r\n)|(\n\r)/));
};
cljs.nodejs = {};
cljs.nodejs.require = require;
cljs.nodejs.process = process;
cljs.nodejs.enable_util_print_BANG_ = function() {
  cljs.core._STAR_print_newline_STAR_ = !1;
  cljs.core.set_print_fn_BANG_.call(null, function() {
    var a = function(a) {
      return console.log.apply(console, cljs.core.into_array.call(null, a));
    }, b = function(b) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(e, 0, null);
      }
      return a.call(this, c);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }());
  cljs.core.set_print_err_fn_BANG_.call(null, function() {
    var a = function(a) {
      return console.error.apply(console, cljs.core.into_array.call(null, a));
    }, b = function(b) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(e, 0, null);
      }
      return a.call(this, c);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }());
  return null;
};
atomist.json = {};
atomist.json.json__GT_clj = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.json.json__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.json.json__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  a = JSON.parse(a);
  return cljs.core.truth_(a) ? cljs.core.apply.call(null, cljs.core.js__GT_clj, a, b) : null;
};
atomist.json.json__GT_clj.cljs$lang$maxFixedArity = 1;
atomist.json.json__GT_clj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
atomist.json.clj__GT_json = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.json.clj__GT_json.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.json.clj__GT_json.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return JSON.stringify(cljs.core.clj__GT_js.call(null, a), atomist.json.null$, 2);
};
atomist.json.clj__GT_json.cljs$lang$maxFixedArity = 1;
atomist.json.clj__GT_json.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
atomist.json.read_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.json.read_str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.json.read_str.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return http.util.json_decode.call(null, a);
};
atomist.json.read_str.cljs$lang$maxFixedArity = 1;
atomist.json.read_str.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
atomist.json.json_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.json.json_str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.json.json_str.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return http.util.json_encode.call(null, a);
};
atomist.json.json_str.cljs$lang$maxFixedArity = 1;
atomist.json.json_str.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
atomist.maven = {};
atomist.maven.node$module$xml_js = require("xml-js");
atomist.maven.xml__GT_clj = function(a) {
  return atomist.json.json__GT_clj.call(null, atomist.maven.node$module$xml_js.xml2json(cljs_node_io.core.slurp.call(null, a)), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0);
};
atomist.maven.element_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, "element", (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a));
};
atomist.maven.element_name = function(a) {
  return function(b) {
    return cljs.core._EQ_.call(null, "element", (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b)) && cljs.core._EQ_.call(null, a, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b));
  };
};
atomist.maven.id_fields = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, ["groupId", null, "versioning", null, "packaging", null, "version", null, "artifactId", null], null), null);
atomist.maven.top_level_parent_QMARK_ = function(a) {
  return atomist.maven.id_fields.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a));
};
atomist.maven.top_level_QMARK_ = function(a) {
  return cljs.core.conj.call(null, atomist.maven.id_fields, "packaging").call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a));
};
atomist.maven.top_level_dependency_QMARK_ = function(a) {
  return cljs.core.conj.call(null, atomist.maven.id_fields, "scope").call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a));
};
atomist.maven.text = function(a) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), (new cljs.core.Keyword(null, "elements", "elements", 657646735)).cljs$core$IFn$_invoke$arity$1(a)));
};
atomist.maven.groupId = function(a) {
  return atomist.maven.text.call(null, cljs.core.first.call(null, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12652, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["groupId"], null), cljs.core.list(new cljs.core.Symbol(null, "element-name", 
      "element-name", 82040838, null), "groupId"))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", 
      "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "groupId")], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "element-name", "element-name", 
      82040838, null)], null));
      return atomist.maven.pathcache12652 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.element_name.call(null, 
    "groupId")], null), com.rpl.specter.ALL, com.rpl.specter.ALL, com.rpl.specter.ALL, atomist.maven.element_name], null)) : a;
  }(), a)));
};
atomist.maven.version = function(a) {
  return atomist.maven.text.call(null, cljs.core.first.call(null, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12655, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["version"], null), cljs.core.list(new cljs.core.Symbol(null, "element-name", 
      "element-name", 82040838, null), "version"))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", 
      "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "version")], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "element-name", "element-name", 
      82040838, null)], null));
      return atomist.maven.pathcache12655 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.element_name.call(null, 
    "version")], null), com.rpl.specter.ALL, com.rpl.specter.ALL, com.rpl.specter.ALL, atomist.maven.element_name], null)) : a;
  }(), a)));
};
atomist.maven.default_groupId = function(a, b) {
  if (cljs.core.contains_QMARK_.call(null, b, new cljs.core.Keyword(null, "groupId", "groupId", -921143743))) {
    return b;
  }
  a = atomist.maven.groupId.call(null, a);
  if (cljs.core.truth_(a)) {
    return cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "groupId", "groupId", -921143743), a);
  }
  throw Error("no groupId in pom (or parent pom)");
};
atomist.maven.default_version = function(a, b) {
  if (cljs.core.contains_QMARK_.call(null, b, new cljs.core.Keyword(null, "version", "version", 425292698))) {
    return b;
  }
  a = atomist.maven.version.call(null, a);
  if (cljs.core.truth_(a)) {
    return cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "version", "version", 425292698), a);
  }
  throw Error("no version in pom (or parent pom)");
};
atomist.maven.identity = function(a) {
  return atomist.maven.default_version.call(null, a, atomist.maven.default_groupId.call(null, a, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), (new cljs.core.Keyword(null, "elements", "elements", 657646735)).cljs$core$IFn$_invoke$arity$1(a)))], null);
  }, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12658, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.top_level_QMARK_, new cljs.core.Var(function() {
        return atomist.maven.top_level_QMARK_;
      }, new cljs.core.Symbol("atomist.maven", "top-level?", "atomist.maven/top-level?", -691059658, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "top-level?", "top-level?", -1660801280, null), "src/atomist/maven.cljs", 18, 1, 28, 28, 
      cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), null, cljs.core.truth_(atomist.maven.top_level_QMARK_) ? atomist.maven.top_level_QMARK_.cljs$lang$test : null])), new cljs.core.Symbol(null, "top-level?", "top-level?", -1660801280, null))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "top-level?", "top-level?", -1660801280, null)], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", 
      "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "top-level?", "top-level?", -1660801280, null)], null));
      return atomist.maven.pathcache12658 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.top_level_QMARK_], null), com.rpl.specter.ALL, com.rpl.specter.ALL, atomist.maven.top_level_QMARK_], null)) : 
    a;
  }(), a)))));
};
atomist.maven.dep_map = function(a) {
  return atomist.maven.default_groupId.call(null, a, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), (new cljs.core.Keyword(null, "elements", "elements", 657646735)).cljs$core$IFn$_invoke$arity$1(a)))], null);
  }, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12661, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.top_level_dependency_QMARK_, new cljs.core.Var(function() {
        return atomist.maven.top_level_dependency_QMARK_;
      }, new cljs.core.Symbol("atomist.maven", "top-level-dependency?", "atomist.maven/top-level-dependency?", -2131423613, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
      "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "top-level-dependency?", "top-level-dependency?", -892749431, null), 
      "src/atomist/maven.cljs", 29, 1, 31, 31, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), null, cljs.core.truth_(atomist.maven.top_level_dependency_QMARK_) ? atomist.maven.top_level_dependency_QMARK_.cljs$lang$test : null])), new cljs.core.Symbol(null, "top-level-dependency?", "top-level-dependency?", -892749431, null))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, 
      new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "top-level-dependency?", "top-level-dependency?", -892749431, null)], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "top-level-dependency?", 
      "top-level-dependency?", -892749431, null)], null));
      return atomist.maven.pathcache12661 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.top_level_dependency_QMARK_], null), com.rpl.specter.ALL, atomist.maven.top_level_dependency_QMARK_], null)) : a;
  }(), a))));
};
atomist.maven.parent_map = function(a) {
  return atomist.maven.default_version.call(null, a, atomist.maven.default_groupId.call(null, a, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, new cljs.core.Keyword(null, "text", "text", -1790561697), (new cljs.core.Keyword(null, "elements", "elements", 657646735)).cljs$core$IFn$_invoke$arity$1(a)))], null);
  }, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12664, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.top_level_parent_QMARK_, new cljs.core.Var(function() {
        return atomist.maven.top_level_parent_QMARK_;
      }, new cljs.core.Symbol("atomist.maven", "top-level-parent?", "atomist.maven/top-level-parent?", 820407179, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
      2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "top-level-parent?", "top-level-parent?", -826572099, null), "src/atomist/maven.cljs", 
      25, 1, 25, 25, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), null, cljs.core.truth_(atomist.maven.top_level_parent_QMARK_) ? atomist.maven.top_level_parent_QMARK_.cljs$lang$test : null])), new cljs.core.Symbol(null, "top-level-parent?", "top-level-parent?", -826572099, null))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 
      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "top-level-parent?", "top-level-parent?", -826572099, null)], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "top-level-parent?", "top-level-parent?", -826572099, null)], 
      null));
      return atomist.maven.pathcache12664 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.top_level_parent_QMARK_], null), com.rpl.specter.ALL, atomist.maven.top_level_parent_QMARK_], null)) : a;
  }(), a)))));
};
atomist.maven.__GT_name_version = function(a) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "groupId", "groupId", -921143743)).cljs$core$IFn$_invoke$arity$1(a)), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "artifactId", "artifactId", 1019340147)).cljs$core$IFn$_invoke$arity$1(a))].join(""), (new cljs.core.Keyword(null, "version", "version", 425292698)).cljs$core$IFn$_invoke$arity$1(a)], null);
};
atomist.maven.dependencies = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, atomist.maven.__GT_name_version, cljs.core.filter.call(null, function(a) {
    return cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "version", "version", 425292698));
  }, cljs.core.map.call(null, atomist.maven.dep_map, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12668, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dependencies"], null), cljs.core.list(new cljs.core.Symbol(null, 
      "element-name", "element-name", 82040838, null), "dependencies")), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dependency"], null), cljs.core.list(new cljs.core.Symbol(null, 
      "element-name", "element-name", 82040838, null), "dependency"))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", 
      "ALL", "s/ALL", 866837282, null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "dependencies"), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "dependency")], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), 
      new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)], null));
      return atomist.maven.pathcache12668 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.element_name.call(null, "dependencies"), new cljs.core.Keyword(null, "elements", "elements", 657646735), 
    com.rpl.specter.ALL, atomist.maven.element_name.call(null, "dependency")], null), com.rpl.specter.ALL, com.rpl.specter.ALL, atomist.maven.element_name, com.rpl.specter.ALL, atomist.maven.element_name], null)) : a;
  }(), a)))));
};
atomist.maven.dependency_management = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, atomist.maven.__GT_name_version, cljs.core.filter.call(null, function(a) {
    return cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "version", "version", 425292698));
  }, cljs.core.map.call(null, atomist.maven.dep_map, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12672, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dependencyManagement"], null), cljs.core.list(new cljs.core.Symbol(null, 
      "element-name", "element-name", 82040838, null), "dependencyManagement")), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dependencies"], null), cljs.core.list(new cljs.core.Symbol(null, 
      "element-name", "element-name", 82040838, null), "dependencies")), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dependency"], null), cljs.core.list(new cljs.core.Symbol(null, 
      "element-name", "element-name", 82040838, null), "dependency"))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", 
      "ALL", "s/ALL", 866837282, null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "dependencyManagement"), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "dependencies"), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, 
      null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "dependency")], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 
      866837282, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)], null));
      return atomist.maven.pathcache12672 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.element_name.call(null, "dependencyManagement"), new cljs.core.Keyword(null, "elements", "elements", 657646735), 
    com.rpl.specter.ALL, atomist.maven.element_name.call(null, "dependencies"), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.element_name.call(null, "dependency")], null), com.rpl.specter.ALL, com.rpl.specter.ALL, atomist.maven.element_name, com.rpl.specter.ALL, atomist.maven.element_name, com.rpl.specter.ALL, atomist.maven.element_name], null)) : a;
  }(), a)))));
};
atomist.maven.parent_identity = function(a) {
  return atomist.maven.__GT_name_version.call(null, cljs.core.first.call(null, cljs.core.map.call(null, atomist.maven.parent_map, com.rpl.specter.impl.compiled_select_STAR_.call(null, function() {
    var a = atomist.maven.pathcache12675, c = null == a ? function() {
      var a = com.rpl.specter.impl.magic_precompilation.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.impl.__GT_VarUse.call(null, com.rpl.specter.ALL, new cljs.core.Var(function() {
        return com.rpl.specter.ALL;
      }, new cljs.core.Symbol("com.rpl.specter", "ALL", "com.rpl.specter/ALL", -1409005960, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
      "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "com.rpl.specter", "com.rpl.specter", -2029095616, null), new cljs.core.Symbol(null, "ALL", "ALL", 866837407, null), "out/com/rpl/specter.cljc", 6, 1, 675, 678, cljs.core.List.EMPTY, "Navigate to every element of the collection. For maps navigates to\n          a vector of `[key value]`.", 
      cljs.core.truth_(com.rpl.specter.ALL) ? com.rpl.specter.ALL.cljs$lang$test : null])), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null)), com.rpl.specter.impl.__GT_FnInvocation.call(null, com.rpl.specter.impl.__GT_VarUse.call(null, atomist.maven.element_name, new cljs.core.Var(function() {
        return atomist.maven.element_name;
      }, new cljs.core.Symbol("atomist.maven", "element-name", "atomist.maven/element-name", 1932828944, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "src/atomist/maven.cljs", 20, 1, 18, 
      18, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null)), null, cljs.core.truth_(atomist.maven.element_name) ? atomist.maven.element_name.cljs$lang$test : null])), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["parent"], null), cljs.core.list(new cljs.core.Symbol(null, "element-name", 
      "element-name", 82040838, null), "parent"))], null)], null), "atomist.maven", cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Symbol("s", "ALL", 
      "s/ALL", 866837282, null), cljs.core.list(new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null), "parent")], null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol("s", "ALL", "s/ALL", 866837282, null), new cljs.core.Symbol(null, "element-name", "element-name", 82040838, null)], null));
      return atomist.maven.pathcache12675 = a;
    }() : a;
    a = com.rpl.specter.impl.cached_path_info_precompiled.call(null, c);
    c = com.rpl.specter.impl.cached_path_info_dynamic_QMARK_.call(null, c);
    return cljs.core.truth_(c) ? a.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, new cljs.core.Keyword(null, "elements", "elements", 657646735), com.rpl.specter.ALL, atomist.maven.element_name.call(null, "parent")], null), com.rpl.specter.ALL, com.rpl.specter.ALL, atomist.maven.element_name], 
    null)) : a;
  }(), a))));
};
atomist.maven.run = function(a) {
  try {
    atomist.cljs_log.info.call(null, "pom.xml ", a);
    var b = cljs_node_io.core.file.call(null, a);
    if (cljs.core.truth_(b.exists())) {
      var c = atomist.maven.xml__GT_clj.call(null, b), d = atomist.maven.identity.call(null, c), e = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.cons.call(null, atomist.maven.parent_identity.call(null, c), cljs.core.concat.call(null, atomist.maven.dependency_management.call(null, c), atomist.maven.dependencies.call(null, c))));
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "maven-project-deps", new cljs.core.Keyword(null, "data", "data", -232669377), e, new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "maven-deps", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
      "name", "name", 1843675177), "project-coordinates", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "groupId", "groupId", -921143743)).cljs$core$IFn$_invoke$arity$1(d)), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "artifactId", "artifactId", 1019340147)).cljs$core$IFn$_invoke$arity$1(d))].join(""), 
      new cljs.core.Keyword(null, "version", "version", 425292698), (new cljs.core.Keyword(null, "version", "version", 425292698)).cljs$core$IFn$_invoke$arity$1(d)], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "coords", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null));
    }
    return cljs.core.PersistentVector.EMPTY;
  } catch (f) {
    return atomist.cljs_log.info.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join("")), atomist.cljs_log.info.call(null, "error running fingerprintPackageJson"), cljs.core.PersistentVector.EMPTY;
  }
};
atomist.maven.fingerprint_tests = function() {
  return cljs.test.test_var.call(null, atomist.maven.fingerprint_tests.cljs$lang$var);
};
atomist.maven.fingerprint_tests.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "formatter", "formatter", -483008823)], null), cljs.core.constantly.call(null, cljs.pprint.pprint));
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "fingerprints");
  try {
    try {
      var a = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "maven-project-deps", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", 
      "2.0.3.RELEASE"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", "24.0-jre"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "maven-deps", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "project-coordinates", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "name", "name", 1843675177), "com.dealer.webplatform/jvms-parent-pom", new cljs.core.Keyword(null, "version", "version", 425292698), "2.6.4-SNAPSHOT"], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "coords", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null)], null), new cljs.core.List(null, atomist.maven.run.call(null, "test-resources/maven/pom1.xml"), null, 1, null), 2, null), b = cljs.core.apply.call(null, cljs.core._EQ_, a);
      cljs.core.truth_(b) ? cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
      "name", "name", 1843675177), "maven-project-deps", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", "2.0.3.RELEASE"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", "24.0-jre"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "maven-deps", 
      new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "project-coordinates", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "com.dealer.webplatform/jvms-parent-pom", new cljs.core.Keyword(null, "version", "version", 425292698), "2.6.4-SNAPSHOT"], null), new cljs.core.Keyword(null, 
      "abbreviation", "abbreviation", -2106594275), "coords", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "run", "run", -180635126, null), "test-resources/maven/pom1.xml")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, a), new cljs.core.Keyword(null, "message", "message", -406056002), "fingerprints are wrong"], null)) : cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 
      4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "maven-project-deps", new cljs.core.Keyword(null, "data", 
      "data", -232669377), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", "2.0.3.RELEASE"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", 
      "24.0-jre"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "maven-deps", new cljs.core.Keyword(null, "version", "version", 425292698), 
      "0.0.1"], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "project-coordinates", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "com.dealer.webplatform/jvms-parent-pom", new cljs.core.Keyword(null, "version", "version", 425292698), "2.6.4-SNAPSHOT"], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), 
      "coords", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "run", "run", -180635126, null), "test-resources/maven/pom1.xml")), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), a), null, 1, null), 2, null), 
      new cljs.core.Keyword(null, "message", "message", -406056002), "fingerprints are wrong"], null));
      return b;
    } catch (c) {
      return a = c, cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
      "name", "name", 1843675177), "maven-project-deps", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", "2.0.3.RELEASE"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", "24.0-jre"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "maven-deps", 
      new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "project-coordinates", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "com.dealer.webplatform/jvms-parent-pom", new cljs.core.Keyword(null, "version", "version", 425292698), "2.6.4-SNAPSHOT"], null), new cljs.core.Keyword(null, 
      "abbreviation", "abbreviation", -2106594275), "coords", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "run", "run", -180635126, null), "test-resources/maven/pom1.xml")), new cljs.core.Keyword(null, "actual", "actual", 107306363), a, new cljs.core.Keyword(null, "message", "message", -406056002), "fingerprints are wrong"], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
atomist.maven.fingerprint_tests.cljs$lang$var = new cljs.core.Var(function() {
  return atomist.maven.fingerprint_tests;
}, new cljs.core.Symbol("atomist.maven", "fingerprint-tests", "atomist.maven/fingerprint-tests", 797831478, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "fingerprint-tests", "fingerprint-tests", -438810624, null), "src/atomist/maven.cljs", 27, 1, 137, 137, cljs.core.List.EMPTY, null, cljs.core.truth_(atomist.maven.fingerprint_tests) ? 
atomist.maven.fingerprint_tests.cljs$lang$test : null]));
atomist.maven.edit = function(a, b, c) {
  return null;
};
atomist.maven.dependency_tests = function() {
  return cljs.test.test_var.call(null, atomist.maven.dependency_tests.cljs$lang$var);
};
atomist.maven.dependency_tests.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "formatter", "formatter", -483008823)], null), cljs.core.constantly.call(null, cljs.pprint.pprint));
  var a = atomist.maven.xml__GT_clj.call(null, "test-resources/maven/pom1.xml"), b = atomist.maven.xml__GT_clj.call(null, "test-resources/maven/pom2.xml");
  try {
    var c = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", "2.0.3.RELEASE"], null), new cljs.core.List(null, atomist.maven.parent_identity.call(null, a), null, 1, null), 2, null), d = cljs.core.apply.call(null, cljs.core._EQ_, c);
    cljs.core.truth_(d) ? cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", "2.0.3.RELEASE"], 
    null), cljs.core.list(new cljs.core.Symbol(null, "parent-identity", "parent-identity", -1750984071, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, c), new cljs.core.Keyword(null, "message", "message", -406056002), null], null)) : cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, 
    "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", "2.0.3.RELEASE"], null), cljs.core.list(new cljs.core.Symbol(null, "parent-identity", "parent-identity", -1750984071, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), c), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  } catch (p) {
    c = p, cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.springframework.boot/spring-boot-starter-parent", "2.0.3.RELEASE"], null), 
    cljs.core.list(new cljs.core.Symbol(null, "parent-identity", "parent-identity", -1750984071, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), c, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var e = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvm-scripts-parent", "2.6.4-SNAPSHOT"], null), new cljs.core.List(null, atomist.maven.parent_identity.call(null, b), null, 1, null), 2, null), f = cljs.core.apply.call(null, cljs.core._EQ_, e);
    cljs.core.truth_(f) ? cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvm-scripts-parent", "2.6.4-SNAPSHOT"], 
    null), cljs.core.list(new cljs.core.Symbol(null, "parent-identity", "parent-identity", -1750984071, null), new cljs.core.Symbol(null, "parent-pom", "parent-pom", 14701883, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, e), new cljs.core.Keyword(null, "message", "message", -406056002), null], null)) : cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), 
    new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvm-scripts-parent", "2.6.4-SNAPSHOT"], null), cljs.core.list(new cljs.core.Symbol(null, "parent-identity", "parent-identity", -1750984071, null), new cljs.core.Symbol(null, "parent-pom", "parent-pom", 
    14701883, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), e), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  } catch (p) {
    e = p, cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvm-scripts-parent", "2.6.4-SNAPSHOT"], null), cljs.core.list(new cljs.core.Symbol(null, 
    "parent-identity", "parent-identity", -1750984071, null), new cljs.core.Symbol(null, "parent-pom", "parent-pom", 14701883, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var g = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), new cljs.core.List(null, atomist.maven.dependencies.call(null, 
    a), null, 1, null), 2, null), h = cljs.core.apply.call(null, cljs.core._EQ_, g);
    cljs.core.truth_(h) ? cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependencies", "dependencies", -1546371164, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, 
    g), new cljs.core.Keyword(null, "message", "message", -406056002), null], null)) : cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependencies", "dependencies", -1546371164, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), g), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  } catch (p) {
    g = p, cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["com.dealer.webplatform/jvms-spring-boot-starter", "2.6.4-SNAPSHOT"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/jvms-spring-boot-test", "2.6.4-SNAPSHOT"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependencies", "dependencies", -1546371164, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), g, new cljs.core.Keyword(null, "message", 
    "message", -406056002), null], null));
  }
  try {
    var k = new cljs.core.List(null, new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.freefair.okhttp-spring-boot/okhttp-spring-boot-autoconfigure", "2.0.0-rc3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/fookeeper-spring-boot-starter", "1.2.3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["com.dealer.webplatform/launch-darkly-spring-boot-starter", "1.1.1"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.checkerframework/checker-qual", "2.4.0"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.newrelic.agent.java/newrelic-api", "${newrelic-agent.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger2", "${swagger.version}"], 
    null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger-ui", "${swagger.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/retrofit", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/adapter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/converter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/converter-jackson", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.github.resilience4j/resilience4j-circuitbreaker", "${resilience4j.version}"], null)], null), new cljs.core.List(null, atomist.maven.dependencies.call(null, 
    b), null, 1, null), 2, null), l = cljs.core.apply.call(null, cljs.core._EQ_, k);
    cljs.core.truth_(l) ? cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["io.freefair.okhttp-spring-boot/okhttp-spring-boot-autoconfigure", "2.0.0-rc3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/fookeeper-spring-boot-starter", "1.2.3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/launch-darkly-spring-boot-starter", "1.1.1"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.checkerframework/checker-qual", 
    "2.4.0"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.newrelic.agent.java/newrelic-api", "${newrelic-agent.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger2", "${swagger.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger-ui", "${swagger.version}"], null), new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/retrofit", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/adapter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/converter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["com.squareup.retrofit2/converter-jackson", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.github.resilience4j/resilience4j-circuitbreaker", "${resilience4j.version}"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependencies", "dependencies", -1546371164, null), new cljs.core.Symbol(null, "parent-pom", "parent-pom", 14701883, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
    cljs.core._EQ_, k), new cljs.core.Keyword(null, "message", "message", -406056002), null], null)) : cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.freefair.okhttp-spring-boot/okhttp-spring-boot-autoconfigure", "2.0.0-rc3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/fookeeper-spring-boot-starter", "1.2.3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/launch-darkly-spring-boot-starter", "1.1.1"], null), new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.checkerframework/checker-qual", "2.4.0"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.newrelic.agent.java/newrelic-api", "${newrelic-agent.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger2", "${swagger.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger-ui", 
    "${swagger.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/retrofit", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/adapter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/converter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/converter-jackson", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.github.resilience4j/resilience4j-circuitbreaker", "${resilience4j.version}"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependencies", "dependencies", -1546371164, null), new cljs.core.Symbol(null, "parent-pom", "parent-pom", 14701883, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), k), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  } catch (p) {
    b = p, cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["io.freefair.okhttp-spring-boot/okhttp-spring-boot-autoconfigure", "2.0.0-rc3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/fookeeper-spring-boot-starter", "1.2.3"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.dealer.webplatform/launch-darkly-spring-boot-starter", "1.1.1"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["org.checkerframework/checker-qual", 
    "2.4.0"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.newrelic.agent.java/newrelic-api", "${newrelic-agent.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger2", "${swagger.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.springfox/springfox-swagger-ui", "${swagger.version}"], null), new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/retrofit", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/adapter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.squareup.retrofit2/converter-java8", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["com.squareup.retrofit2/converter-jackson", "${retrofit.version}"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["io.github.resilience4j/resilience4j-circuitbreaker", "${resilience4j.version}"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependencies", "dependencies", -1546371164, null), new cljs.core.Symbol(null, "parent-pom", "parent-pom", 14701883, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), b, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var m = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", "24.0-jre"], null)], null), new cljs.core.List(null, atomist.maven.dependency_management.call(null, a), null, 1, null), 2, null), n = cljs.core.apply.call(null, 
    cljs.core._EQ_, m);
    cljs.core.truth_(n) ? cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", "24.0-jre"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependency-management", "dependency-management", 1143272908, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, m), new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null)) : cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", "24.0-jre"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependency-management", "dependency-management", 1143272908, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, 
    "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), m), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    return n;
  } catch (p) {
    return a = p, cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["com.amazonaws/aws-java-sdk-bom", "1.11.308"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["com.google.guava/guava", "24.0-jre"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "dependency-management", "dependency-management", 1143272908, null), new cljs.core.Symbol(null, "pom", "pom", -2084630684, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), a, new cljs.core.Keyword(null, "message", "message", -406056002), null], 
    null));
  }
};
atomist.maven.dependency_tests.cljs$lang$var = new cljs.core.Var(function() {
  return atomist.maven.dependency_tests;
}, new cljs.core.Symbol("atomist.maven", "dependency-tests", "atomist.maven/dependency-tests", 1322255379, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "atomist.maven", "atomist.maven", 574416706, null), new cljs.core.Symbol(null, "dependency-tests", "dependency-tests", 2024516889, null), "src/atomist/maven.cljs", 26, 1, 158, 158, cljs.core.List.EMPTY, null, cljs.core.truth_(atomist.maven.dependency_tests) ? 
atomist.maven.dependency_tests.cljs$lang$test : null]));
atomist.promise = {};
atomist.promise.from_promise = function(a) {
  var b = cljs.core.async.chan.call(null);
  a.then(function(a) {
    return function(b) {
      var c = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(a, c) {
        return function() {
          var d = function() {
            return function(a, b, c) {
              return function() {
                var b = null, c = function() {
                  var a = [null, null, null, null, null, null, null];
                  a[0] = b;
                  a[1] = 1;
                  return a;
                }, d = function(b) {
                  for (;;) {
                    a: {
                      try {
                        for (;;) {
                          var c = a.call(null, b);
                          if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var d = c;
                            break a;
                          }
                        }
                      } catch (w) {
                        if (w instanceof Object) {
                          b[5] = w, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw w;
                        }
                      }
                    }
                    if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      return d;
                    }
                  }
                };
                b = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return d.call(this, a);
                  }
                  throw Error("Invalid arity: " + (arguments.length - 1));
                };
                b.cljs$core$IFn$_invoke$arity$0 = c;
                b.cljs$core$IFn$_invoke$arity$1 = d;
                return b;
              }();
            }(function(a, c) {
              return function(a) {
                var d = a[1];
                return 1 === d ? (cljs.core.truth_(b) ? a[1] = 3 : a[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === d ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]) : 3 === d ? (d = cljs.core.js__GT_clj.call(null, b, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0), a[2] = d, a[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === d ? (a[2] = new cljs.core.Keyword(null, "done", "done", -889844188), 
                a[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === d ? cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 2, c, a[2]) : null;
              };
            }(a, c), a, c);
          }(), e = function() {
            var b = d.call(null);
            b[6] = a;
            return b;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, e);
        };
      }(c, a));
      return c;
    };
  }(b)).catch(function(a) {
    return function(a) {
      return atomist.cljs_log.error.call(null, "problem with promise", a);
    };
  }(b));
  return b;
};
atomist.promise.chan__GT_promise = function(a) {
  return new Promise(function(b, c) {
    var d = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(d) {
      return function() {
        var e = function() {
          return function(a, b) {
            return function() {
              var b = null, c = function() {
                var a = [null, null, null, null, null, null, null, null, null, null, null];
                a[0] = b;
                a[1] = 1;
                return a;
              }, d = function(b) {
                for (;;) {
                  a: {
                    try {
                      for (;;) {
                        var c = a.call(null, b);
                        if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var d = c;
                          break a;
                        }
                      }
                    } catch (t) {
                      if (t instanceof Object) {
                        b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw t;
                      }
                    }
                  }
                  if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    return d;
                  }
                }
              };
              b = function(a) {
                switch(arguments.length) {
                  case 0:
                    return c.call(this);
                  case 1:
                    return d.call(this, a);
                }
                throw Error("Invalid arity: " + (arguments.length - 1));
              };
              b.cljs$core$IFn$_invoke$arity$0 = c;
              b.cljs$core$IFn$_invoke$arity$1 = d;
              return b;
            }();
          }(function(d) {
            return function(d) {
              var e = d[1];
              if (1 === e) {
                return d[2] = null, d[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
              }
              if (2 === e) {
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]);
              }
              if (3 === e) {
                var f = atomist.cljs_log.error.call(null, d[2], " ended up here"), g = atomist.cljs_log.error.call(null, a);
                e = c.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
                d[7] = g;
                d[8] = f;
                d[2] = e;
                cljs.core.async.impl.ioc_helpers.process_exception.call(null, d);
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              }
              return 4 === e ? (cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, d, 3, new cljs.core.Keyword(null, "default", "default", -1987822328), null, 2), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 5, a)) : 5 === e ? (e = d[2], d[9] = e, cljs.core.truth_(e) ? d[1] = 6 : d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (f = d[9], e = atomist.cljs_log.info.call(null, "clj-editors promise:  ", f), f = b.call(null, f), d[10] = e, d[2] = 
              f, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 7 === e ? (f = d[9], e = c.call(null, f), d[2] = e, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = d[2], d[2] = e, cljs.core.async.impl.ioc_helpers.process_exception.call(null, d), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
            };
          }(d), d);
        }(), g = function() {
          var a = e.call(null);
          a[6] = d;
          return a;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
      };
    }(d));
    return d;
  });
};
var rewrite_clj = {node:{}};
rewrite_clj.node.protocols = {};
rewrite_clj.node.protocols.Node = function() {
};
rewrite_clj.node.protocols.tag = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$Node$tag$arity$1) {
    return a.rewrite_clj$node$protocols$Node$tag$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.tag[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.tag._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Node.tag", a);
};
rewrite_clj.node.protocols.printable_only_QMARK_ = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1) {
    return a.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.printable_only_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.printable_only_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Node.printable-only?", a);
};
rewrite_clj.node.protocols.sexpr = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$Node$sexpr$arity$1) {
    return a.rewrite_clj$node$protocols$Node$sexpr$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.sexpr[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.sexpr._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Node.sexpr", a);
};
rewrite_clj.node.protocols.length = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$Node$length$arity$1) {
    return a.rewrite_clj$node$protocols$Node$length$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.length[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.length._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Node.length", a);
};
rewrite_clj.node.protocols.string = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$Node$string$arity$1) {
    return a.rewrite_clj$node$protocols$Node$string$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.string[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.string._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Node.string", a);
};
goog.object.set(rewrite_clj.node.protocols.Node, "object", !0);
goog.object.set(rewrite_clj.node.protocols.tag, "object", function(a) {
  return new cljs.core.Keyword(null, "unknown", "unknown", -935977881);
});
goog.object.set(rewrite_clj.node.protocols.printable_only_QMARK_, "object", function(a) {
  return !1;
});
goog.object.set(rewrite_clj.node.protocols.sexpr, "object", function(a) {
  return a;
});
goog.object.set(rewrite_clj.node.protocols.length, "object", function(a) {
  return cljs.core.count.call(null, rewrite_clj.node.protocols.string.call(null, a));
});
goog.object.set(rewrite_clj.node.protocols.string, "object", function(a) {
  return cljs.core.pr_str.call(null, a);
});
rewrite_clj.node.protocols.sexprs = function(a) {
  return cljs.core.map.call(null, rewrite_clj.node.protocols.sexpr, cljs.core.remove.call(null, rewrite_clj.node.protocols.printable_only_QMARK_, a));
};
rewrite_clj.node.protocols.sum_lengths = function(a) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, rewrite_clj.node.protocols.length, a));
};
rewrite_clj.node.protocols.concat_strings = function(a) {
  return cljs.core.reduce.call(null, cljs.core.str, cljs.core.map.call(null, rewrite_clj.node.protocols.string, a));
};
rewrite_clj.node.protocols.InnerNode = function() {
};
rewrite_clj.node.protocols.inner_QMARK_ = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1) {
    return a.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.inner_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.inner_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "InnerNode.inner?", a);
};
rewrite_clj.node.protocols.children = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$InnerNode$children$arity$1) {
    return a.rewrite_clj$node$protocols$InnerNode$children$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.children[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.children._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "InnerNode.children", a);
};
rewrite_clj.node.protocols.replace_children = function(a, b) {
  if (null != a && null != a.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2) {
    return a.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2(a, b);
  }
  var c = rewrite_clj.node.protocols.replace_children[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = rewrite_clj.node.protocols.replace_children._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "InnerNode.replace-children", a);
};
goog.object.set(rewrite_clj.node.protocols.InnerNode, "object", !0);
goog.object.set(rewrite_clj.node.protocols.inner_QMARK_, "object", function(a) {
  return !1;
});
goog.object.set(rewrite_clj.node.protocols.children, "object", function(a) {
  throw Error("UnsupportedOperationException");
});
goog.object.set(rewrite_clj.node.protocols.replace_children, "object", function(a, b) {
  throw Error("UnsupportedOperationException");
});
rewrite_clj.node.protocols.child_sexprs = function(a) {
  return cljs.core.truth_(rewrite_clj.node.protocols.inner_QMARK_.call(null, a)) ? rewrite_clj.node.protocols.sexprs.call(null, rewrite_clj.node.protocols.children.call(null, a)) : null;
};
rewrite_clj.node.protocols.NodeCoerceable = function() {
};
rewrite_clj.node.protocols.coerce = function(a) {
  if (null != a && null != a.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1) {
    return a.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1(a);
  }
  var b = rewrite_clj.node.protocols.coerce[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = rewrite_clj.node.protocols.coerce._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "NodeCoerceable.coerce", a);
};
rewrite_clj.node.protocols.assert_sexpr_count = function(a, b) {
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.remove.call(null, rewrite_clj.node.protocols.printable_only_QMARK_, a)), b)) {
    return null;
  }
  throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["can only contain", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " non-whitespace form(s)."].join("")), "\n(\x3d (count (remove printable-only? nodes)) c)"].join(""));
};
rewrite_clj.node.protocols.assert_single_sexpr = function(a) {
  return rewrite_clj.node.protocols.assert_sexpr_count.call(null, a, 1);
};
rewrite_clj.reader = {};
rewrite_clj.reader.read_char = cljs.tools.reader.reader_types.read_char;
rewrite_clj.reader.get_column_number = cljs.tools.reader.reader_types.get_column_number;
rewrite_clj.reader.get_line_number = cljs.tools.reader.reader_types.get_line_number;
rewrite_clj.reader.peek_char = cljs.tools.reader.reader_types.peek_char;
rewrite_clj.reader.indexing_push_back_reader = cljs.tools.reader.reader_types.indexing_push_back_reader;
rewrite_clj.reader.unread = cljs.tools.reader.reader_types.unread;
rewrite_clj.reader.read_string = cljs.tools.reader.read_string;
rewrite_clj.reader.throw_reader = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return rewrite_clj.reader.throw_reader.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
rewrite_clj.reader.throw_reader.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = rewrite_clj.reader.get_column_number.call(null, a);
  a = rewrite_clj.reader.get_line_number.call(null, a);
  throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " [at line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), ", column ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), "]"].join(""));
};
rewrite_clj.reader.throw_reader.cljs$lang$maxFixedArity = 2;
rewrite_clj.reader.throw_reader.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
rewrite_clj.reader.boundary_QMARK_ = function(a) {
  return -1 < ['"', ":", ";", "'", "@", "^", "`", "~", "(", ")", "[", "]", "{", "}", "\\", null].indexOf(a);
};
rewrite_clj.reader.whitespace_QMARK_ = function(a) {
  return -1 < ["\r", "\n", "\t", " ", ","].indexOf(a);
};
rewrite_clj.reader.linebreak_QMARK_ = function(a) {
  return -1 < ["\r", "\n"].indexOf(a);
};
rewrite_clj.reader.space_QMARK_ = function(a) {
  return -1 < ["\t", " ", ","].indexOf(a);
};
rewrite_clj.reader.whitespace_or_boundary_QMARK_ = function(a) {
  var b = rewrite_clj.reader.whitespace_QMARK_.call(null, a);
  return b ? b : rewrite_clj.reader.boundary_QMARK_.call(null, a);
};
rewrite_clj.reader.buf = new goog.string.StringBuffer("");
rewrite_clj.reader.read_while = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.reader.read_while.call(null, a, b, cljs.core.not.call(null, b.call(null, null)));
};
rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (rewrite_clj.reader.buf.clear();;) {
    var d = rewrite_clj.reader.read_char.call(null, a);
    if (cljs.core.truth_(d)) {
      if (cljs.core.truth_(b.call(null, d))) {
        rewrite_clj.reader.buf.append(d);
      } else {
        return rewrite_clj.reader.unread.call(null, a, d), rewrite_clj.reader.buf.toString();
      }
    } else {
      return cljs.core.truth_(c) ? rewrite_clj.reader.buf.toString() : rewrite_clj.reader.throw_reader.call(null, a, "Unexpected EOF.");
    }
  }
};
rewrite_clj.reader.read_while.cljs$lang$maxFixedArity = 3;
rewrite_clj.reader.read_until = function(a, b) {
  return rewrite_clj.reader.read_while.call(null, a, cljs.core.complement.call(null, b), b.call(null, null));
};
rewrite_clj.reader.read_include_linebreak = function(a) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.reader.read_until.call(null, a, function(a) {
    return null == a || rewrite_clj.reader.linebreak_QMARK_.call(null, a);
  })), cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.reader.read_char.call(null, a))].join("");
};
rewrite_clj.reader.string__GT_edn = function(a) {
  return rewrite_clj.reader.read_string.call(null, a);
};
rewrite_clj.reader.ignore = function(a) {
  rewrite_clj.reader.read_char.call(null, a);
  return null;
};
rewrite_clj.reader.next = function(a) {
  return rewrite_clj.reader.read_char.call(null, a);
};
rewrite_clj.reader.peek = function(a) {
  return rewrite_clj.reader.peek_char.call(null, a);
};
rewrite_clj.reader.read_with_meta = function(a, b) {
  var c = rewrite_clj.reader.get_line_number.call(null, a), d = rewrite_clj.reader.get_column_number.call(null, a);
  b = b.call(null, a);
  if (cljs.core.truth_(b)) {
    var e = rewrite_clj.reader.get_line_number.call(null, a);
    a = rewrite_clj.reader.get_column_number.call(null, a);
    a = cljs.core._EQ_.call(null, 0, a) ? d + rewrite_clj.node.protocols.string.call(null, b).length : a;
    return cljs.core._EQ_.call(null, 0, d) ? b : cljs.core._with_meta.call(null, b, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "row", "row", -570139521), c, new cljs.core.Keyword(null, "col", "col", -1959363084), d, new cljs.core.Keyword(null, "end-row", "end-row", -545103581), e, new cljs.core.Keyword(null, "end-col", "end-col", -724155879), a], null));
  }
  return null;
};
rewrite_clj.reader.read_repeatedly = function(a, b) {
  return cljs.core.doall.call(null, cljs.core.take_while.call(null, cljs.core.identity, cljs.core.repeatedly.call(null, function() {
    return b.call(null, a);
  })));
};
rewrite_clj.reader.read_n = function(a, b, c, d, e) {
  if (!(0 < e)) {
    throw Error("Assert failed: (pos? n)");
  }
  for (var f = 0, g = cljs.core.PersistentVector.EMPTY;;) {
    if (f < e) {
      var h = c.call(null, a);
      if (cljs.core.truth_(h)) {
        f = cljs.core.truth_(d.call(null, h)) ? f + 1 : f, g = cljs.core.conj.call(null, g, h);
      } else {
        return rewrite_clj.reader.throw_reader.call(null, a, "%s node expects %d value%s.", b, e, cljs.core._EQ_.call(null, e, 1) ? "" : "s");
      }
    } else {
      return g;
    }
  }
};
rewrite_clj.reader.re_matches_STAR_ = function(a, b) {
  a = a.exec(b);
  return null != a && a[0] === b ? 1 === a.length ? a[0] : a : null;
};
rewrite_clj.reader.read_keyword = function(a, b) {
  b = cljs.tools.reader.read_token.call(null, a, new cljs.core.Keyword(null, "keyword", "keyword", 811389747), rewrite_clj.reader.read_char.call(null, a));
  var c = rewrite_clj.reader.re_matches_STAR_.call(null, cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$"), b);
  b = c[0];
  var d = c[1];
  c = c[2];
  return void 0 !== d && ":/" === d.substring(d.length - 2, d.length) || ":" === c[c.length - 1] || -1 !== b.indexOf("::", 1) ? cljs.tools.reader.impl.errors.reader_error.call(null, a, "Invalid token: ", b) : null != d && 0 < d.length ? cljs.core.keyword.call(null, d.substring(0, d.indexOf("/")), c) : cljs.core.keyword.call(null, b.substring(1));
};
rewrite_clj.node.stringz = {};
rewrite_clj.node.stringz.wrap_string = function(a) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), '"'].join("");
};
rewrite_clj.node.stringz.join_lines = function(a) {
  return clojure.string.join.call(null, "\n", a);
};
rewrite_clj.node.stringz.StringNode = function(a, b, c, d) {
  this.lines = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.stringz.StringNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "lines":
      return this.lines;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.stringz.StringNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lines", "lines", -700165781), this.lines], null)], null), this.__extmap));
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lines", "lines", -700165781)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.stringz.StringNode(this.lines, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1538615006 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.lines, b.lines) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return cljs.core.next.call(null, this.lines) ? new cljs.core.Keyword(null, "multi-line", "multi-line", 240640676) : new cljs.core.Keyword(null, "token", "token", -1211463215);
};
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  return rewrite_clj.node.stringz.join_lines.call(null, cljs.core.map.call(null, cljs.core.comp.call(null, cljs.tools.reader.read_string, rewrite_clj.node.stringz.wrap_string), this.lines));
};
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return 2 + cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, this.lines));
};
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return rewrite_clj.node.stringz.wrap_string.call(null, rewrite_clj.node.stringz.join_lines.call(null, this.lines));
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lines", "lines", -700165781), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.stringz.StringNode(this.lines, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), 
  null);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "lines", "lines", -700165781), b)) ? new rewrite_clj.node.stringz.StringNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.stringz.StringNode(this.lines, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "lines", "lines", -700165781), this.lines, null)], null), this.__extmap));
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.stringz.StringNode(this.lines, b, this.__extmap, this.__hash);
};
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.stringz.StringNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "lines", "lines", 940365746, null)], null);
};
rewrite_clj.node.stringz.StringNode.cljs$lang$type = !0;
rewrite_clj.node.stringz.StringNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.stringz/StringNode", null, 1, null);
};
rewrite_clj.node.stringz.StringNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.stringz/StringNode");
};
rewrite_clj.node.stringz.__GT_StringNode = function(a) {
  return new rewrite_clj.node.stringz.StringNode(a, null, null, null);
};
rewrite_clj.node.stringz.map__GT_StringNode = function(a) {
  return new rewrite_clj.node.stringz.StringNode((new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "lines", "lines", -700165781))), null);
};
rewrite_clj.node.stringz.string_node = function(a) {
  return "string" === typeof a ? rewrite_clj.node.stringz.__GT_StringNode.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null)) : rewrite_clj.node.stringz.__GT_StringNode.call(null, a);
};
rewrite_clj.node.whitespace = {};
rewrite_clj.node.whitespace._STAR_newline_fn_STAR_ = cljs.core.identity;
rewrite_clj.node.whitespace._STAR_count_fn_STAR_ = cljs.core.count;
rewrite_clj.node.whitespace.WhitespaceNode = function(a, b, c, d) {
  this.whitespace = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "whitespace":
      return this.whitespace;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.whitespace.WhitespaceNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483), this.whitespace], null)], null), this.__extmap));
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.whitespace.WhitespaceNode(this.whitespace, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1595850179 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.whitespace, b.whitespace) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  throw Error("Unsupported operation");
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return cljs.core.count.call(null, this.whitespace);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return this.whitespace;
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.whitespace.WhitespaceNode(this.whitespace, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, 
  this.__extmap, b)), null);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483), b)) ? new rewrite_clj.node.whitespace.WhitespaceNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.whitespace.WhitespaceNode(this.whitespace, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483), this.whitespace, null)], null), this.__extmap));
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.whitespace.WhitespaceNode(this.whitespace, b, this.__extmap, this.__hash);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.whitespace.WhitespaceNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "whitespace", "whitespace", 300496044, null)], null);
};
rewrite_clj.node.whitespace.WhitespaceNode.cljs$lang$type = !0;
rewrite_clj.node.whitespace.WhitespaceNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.whitespace/WhitespaceNode", null, 1, null);
};
rewrite_clj.node.whitespace.WhitespaceNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.whitespace/WhitespaceNode");
};
rewrite_clj.node.whitespace.__GT_WhitespaceNode = function(a) {
  return new rewrite_clj.node.whitespace.WhitespaceNode(a, null, null, null);
};
rewrite_clj.node.whitespace.map__GT_WhitespaceNode = function(a) {
  return new rewrite_clj.node.whitespace.WhitespaceNode((new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483))), null);
};
rewrite_clj.node.whitespace.NewlineNode = function(a, b, c, d) {
  this.newlines = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.whitespace.NewlineNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "newlines":
      return this.newlines;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.whitespace.NewlineNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "newlines", "newlines", -1185451518), this.newlines], null)], null), this.__extmap));
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "newlines", "newlines", -1185451518)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.whitespace.NewlineNode(this.newlines, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 979711303 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.newlines, b.newlines) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "newline", "newline", 1790071323);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  throw Error("Unsupported operation");
};
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return rewrite_clj.node.whitespace._STAR_count_fn_STAR_.call(null, this.newlines);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return rewrite_clj.node.whitespace._STAR_newline_fn_STAR_.call(null, this.newlines);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "newlines", "newlines", -1185451518), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.whitespace.NewlineNode(this.newlines, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, 
  b)), null);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "newlines", "newlines", -1185451518), b)) ? new rewrite_clj.node.whitespace.NewlineNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.whitespace.NewlineNode(this.newlines, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "newlines", "newlines", -1185451518), this.newlines, null)], null), this.__extmap));
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.whitespace.NewlineNode(this.newlines, b, this.__extmap, this.__hash);
};
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.whitespace.NewlineNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "newlines", "newlines", 455080009, null)], null);
};
rewrite_clj.node.whitespace.NewlineNode.cljs$lang$type = !0;
rewrite_clj.node.whitespace.NewlineNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.whitespace/NewlineNode", null, 1, null);
};
rewrite_clj.node.whitespace.NewlineNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.whitespace/NewlineNode");
};
rewrite_clj.node.whitespace.__GT_NewlineNode = function(a) {
  return new rewrite_clj.node.whitespace.NewlineNode(a, null, null, null);
};
rewrite_clj.node.whitespace.map__GT_NewlineNode = function(a) {
  return new rewrite_clj.node.whitespace.NewlineNode((new cljs.core.Keyword(null, "newlines", "newlines", -1185451518)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "newlines", "newlines", -1185451518))), null);
};
rewrite_clj.node.whitespace.whitespace_node = function(a) {
  return rewrite_clj.node.whitespace.__GT_WhitespaceNode.call(null, a);
};
rewrite_clj.node.whitespace.newline_node = function(a) {
  return rewrite_clj.node.whitespace.__GT_NewlineNode.call(null, a);
};
rewrite_clj.node.whitespace.newline_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["\n", null, "\r", null], null), null), a);
};
rewrite_clj.node.whitespace.whitespace_nodes = function(a) {
  return cljs.core.map.call(null, function(a) {
    var b = cljs.core.apply.call(null, cljs.core.str, a);
    return cljs.core.truth_(rewrite_clj.node.whitespace.newline_QMARK_.call(null, cljs.core.first.call(null, a))) ? rewrite_clj.node.whitespace.newline_node.call(null, b) : rewrite_clj.node.whitespace.whitespace_node.call(null, b);
  }, cljs.core.partition_by.call(null, rewrite_clj.node.whitespace.newline_QMARK_, a));
};
rewrite_clj.node.whitespace.spaces = function(a) {
  return rewrite_clj.node.whitespace.whitespace_node.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, a, " ")));
};
rewrite_clj.node.whitespace.newlines = function(a) {
  return rewrite_clj.node.whitespace.newline_node.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, a, "\n")));
};
var comma_5871 = rewrite_clj.node.whitespace.whitespace_node.call(null, ", ");
rewrite_clj.node.whitespace.comma_separated = function(a) {
  return function(b) {
    return cljs.core.butlast.call(null, cljs.core.interleave.call(null, b, cljs.core.repeat.call(null, a)));
  };
}(comma_5871);
var nl_5872 = rewrite_clj.node.whitespace.newline_node.call(null, "\n");
rewrite_clj.node.whitespace.line_separated = function(a) {
  return function(b) {
    return cljs.core.butlast.call(null, cljs.core.interleave.call(null, b, cljs.core.repeat.call(null, a)));
  };
}(nl_5872);
var space_5873 = rewrite_clj.node.whitespace.whitespace_node.call(null, " ");
rewrite_clj.node.whitespace.space_separated = function(a) {
  return function(b) {
    return cljs.core.butlast.call(null, cljs.core.interleave.call(null, b, cljs.core.repeat.call(null, a)));
  };
}(space_5873);
rewrite_clj.node.whitespace.whitespace_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483), null, new cljs.core.Keyword(null, "newline", "newline", 1790071323), null], null), null), rewrite_clj.node.protocols.tag.call(null, a));
};
rewrite_clj.node.whitespace.linebreak_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.node.protocols.tag.call(null, a), new cljs.core.Keyword(null, "newline", "newline", 1790071323));
};
rewrite_clj.node.meta = {};
rewrite_clj.node.meta.MetaNode = function(a, b, c, d, e, f) {
  this.tag = a;
  this.prefix = b;
  this.children = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.meta.MetaNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "prefix":
      return this.prefix;
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.meta.MetaNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", 
  -265908465), this.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.meta.MetaNode(this.tag, this.prefix, this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1501447658 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.tag, b.tag) && cljs.core._EQ_.call(null, this.prefix, b.prefix) && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return this.tag;
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  var b = rewrite_clj.node.protocols.sexprs.call(null, this.children);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  if (null == b || !(b.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IWithMeta$)) {
    throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["cannot attach metadata to: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, b))].join("")), "\n(implements? IWithMeta data)"].join(""));
  }
  return cljs.core.with_meta.call(null, b, cljs.core.map_QMARK_.call(null, a) ? a : cljs.core.PersistentArrayMap.createAsIfByAssoc([a, !0]));
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return cljs.core.count.call(null, this.prefix) + rewrite_clj.node.protocols.sum_lengths.call(null, this.children);
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings.call(null, this.children))].join("");
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "children", "children", -940561982), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.meta.MetaNode(this.tag, 
  this.prefix, this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  rewrite_clj.node.protocols.assert_sexpr_count.call(null, b, 2);
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), b)) ? new rewrite_clj.node.meta.MetaNode(c, this.prefix, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), b)) ? new rewrite_clj.node.meta.MetaNode(this.tag, c, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.meta.MetaNode(this.tag, 
  this.prefix, c, this.__meta, this.__extmap, null) : new rewrite_clj.node.meta.MetaNode(this.tag, this.prefix, this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.meta.MetaNode(this.tag, this.prefix, this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.meta.MetaNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.meta.MetaNode.cljs$lang$type = !0;
rewrite_clj.node.meta.MetaNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.meta/MetaNode", null, 1, null);
};
rewrite_clj.node.meta.MetaNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.meta/MetaNode");
};
rewrite_clj.node.meta.__GT_MetaNode = function(a, b, c) {
  return new rewrite_clj.node.meta.MetaNode(a, b, c, null, null, null);
};
rewrite_clj.node.meta.map__GT_MetaNode = function(a) {
  return new rewrite_clj.node.meta.MetaNode((new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "prefix", "prefix", 
  -265908465), new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.meta.meta_node = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$1 = function(a) {
  rewrite_clj.node.protocols.assert_sexpr_count.call(null, a, 2);
  return rewrite_clj.node.meta.__GT_MetaNode.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), "^", a);
};
rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.node.meta.meta_node.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, rewrite_clj.node.whitespace.spaces.call(null, 1), b], null));
};
rewrite_clj.node.meta.meta_node.cljs$lang$maxFixedArity = 2;
rewrite_clj.node.meta.raw_meta_node = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$1 = function(a) {
  rewrite_clj.node.protocols.assert_sexpr_count.call(null, a, 2);
  return rewrite_clj.node.meta.__GT_MetaNode.call(null, new cljs.core.Keyword(null, "meta*", "meta*", -949431606), "#^", a);
};
rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.node.meta.raw_meta_node.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, rewrite_clj.node.whitespace.spaces.call(null, 1), b], null));
};
rewrite_clj.node.meta.raw_meta_node.cljs$lang$maxFixedArity = 2;
rewrite_clj.node.token = {};
rewrite_clj.node.token.TokenNode = function(a, b, c, d, e) {
  this.value = a;
  this.string_value = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.token.TokenNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "value":
      return this.value;
    case "string-value":
      return this.string_value;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.token.TokenNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), this.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "string-value", 
  "string-value", 1109600561), this.string_value], null)], null), this.__extmap));
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "string-value", "string-value", 1109600561)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.token.TokenNode(this.value, this.string_value, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1106307029 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.value, b.value) && cljs.core._EQ_.call(null, this.string_value, b.string_value) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "token", "token", -1211463215);
};
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  return this.value;
};
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return this.string_value.length;
};
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return this.string_value;
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), null, new cljs.core.Keyword(null, "string-value", "string-value", 1109600561), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.token.TokenNode(this.value, this.string_value, 
  this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), b)) ? new rewrite_clj.node.token.TokenNode(c, this.string_value, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "string-value", "string-value", 1109600561), b)) ? new rewrite_clj.node.token.TokenNode(this.value, c, this.__meta, this.__extmap, null) : new rewrite_clj.node.token.TokenNode(this.value, this.string_value, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "value", "value", 305978217), this.value, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "string-value", "string-value", 1109600561), this.string_value, null)], null), this.__extmap));
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.token.TokenNode(this.value, this.string_value, b, this.__extmap, this.__hash);
};
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.token.TokenNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "string-value", "string-value", -1544835208, null)], null);
};
rewrite_clj.node.token.TokenNode.cljs$lang$type = !0;
rewrite_clj.node.token.TokenNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.token/TokenNode", null, 1, null);
};
rewrite_clj.node.token.TokenNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.token/TokenNode");
};
rewrite_clj.node.token.__GT_TokenNode = function(a, b) {
  return new rewrite_clj.node.token.TokenNode(a, b, null, null, null);
};
rewrite_clj.node.token.map__GT_TokenNode = function(a) {
  return new rewrite_clj.node.token.TokenNode((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "string-value", "string-value", 1109600561)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "string-value", "string-value", 1109600561))), null);
};
rewrite_clj.node.token.token_node = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return rewrite_clj.node.token.token_node.call(null, a, cljs.core.pr_str.call(null, a));
};
rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.node.token.__GT_TokenNode.call(null, a, b);
};
rewrite_clj.node.token.token_node.cljs$lang$maxFixedArity = 2;
rewrite_clj.node.seq = {};
rewrite_clj.node.seq.wrap_vec = function(a) {
  return ["[", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "]"].join("");
};
rewrite_clj.node.seq.wrap_list = function(a) {
  return ["(", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), ")"].join("");
};
rewrite_clj.node.seq.wrap_set = function(a) {
  return ["#{", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "}"].join("");
};
rewrite_clj.node.seq.wrap_map = function(a) {
  return ["{", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "}"].join("");
};
rewrite_clj.node.seq.SeqNode = function(a, b, c, d, e, f, g, h) {
  this.tag = a;
  this.wrap_fn = b;
  this.wrap_length = c;
  this.seq_fn = d;
  this.children = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.seq.SeqNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "wrap-fn":
      return this.wrap_fn;
    case "wrap-length":
      return this.wrap_length;
    case "seq-fn":
      return this.seq_fn;
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.seq.SeqNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "wrap-fn", "wrap-fn", 
  -270233130), this.wrap_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "wrap-length", "wrap-length", -268108519), this.wrap_length], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq-fn", "seq-fn", -991013231), this.seq_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", 
  "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "wrap-fn", "wrap-fn", -270233130), new cljs.core.Keyword(null, "wrap-length", "wrap-length", -268108519), new cljs.core.Keyword(null, "seq-fn", "seq-fn", -991013231), new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, 
  this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.seq.SeqNode(this.tag, this.wrap_fn, this.wrap_length, this.seq_fn, this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 580297420 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.tag, b.tag) && cljs.core._EQ_.call(null, this.wrap_fn, b.wrap_fn) && cljs.core._EQ_.call(null, this.wrap_length, b.wrap_length) && cljs.core._EQ_.call(null, this.seq_fn, b.seq_fn) && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return this.tag;
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  return this.seq_fn.call(null, rewrite_clj.node.protocols.sexprs.call(null, this.children));
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return this.wrap_length + rewrite_clj.node.protocols.sum_lengths.call(null, this.children);
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return this.wrap_fn.call(null, rewrite_clj.node.protocols.concat_strings.call(null, this.children));
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "children", "children", -940561982), null, new cljs.core.Keyword(null, "seq-fn", "seq-fn", -991013231), null, new cljs.core.Keyword(null, "wrap-fn", "wrap-fn", -270233130), null, new cljs.core.Keyword(null, "wrap-length", "wrap-length", -268108519), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), null], null), null), b) ? cljs.core.dissoc.call(null, 
  cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.seq.SeqNode(this.tag, this.wrap_fn, this.wrap_length, this.seq_fn, this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), b)) ? new rewrite_clj.node.seq.SeqNode(c, this.wrap_fn, this.wrap_length, this.seq_fn, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "wrap-fn", "wrap-fn", -270233130), b)) ? new rewrite_clj.node.seq.SeqNode(this.tag, c, this.wrap_length, this.seq_fn, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "wrap-length", "wrap-length", -268108519), b)) ? new rewrite_clj.node.seq.SeqNode(this.tag, this.wrap_fn, c, this.seq_fn, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "seq-fn", "seq-fn", -991013231), b)) ? new rewrite_clj.node.seq.SeqNode(this.tag, this.wrap_fn, this.wrap_length, c, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? 
  new rewrite_clj.node.seq.SeqNode(this.tag, this.wrap_fn, this.wrap_length, this.seq_fn, c, this.__meta, this.__extmap, null) : new rewrite_clj.node.seq.SeqNode(this.tag, this.wrap_fn, this.wrap_length, this.seq_fn, this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "wrap-fn", "wrap-fn", -270233130), this.wrap_fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "wrap-length", "wrap-length", -268108519), this.wrap_length, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "seq-fn", "seq-fn", -991013231), this.seq_fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.seq.SeqNode(this.tag, this.wrap_fn, this.wrap_length, this.seq_fn, this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.seq.SeqNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "wrap-fn", "wrap-fn", 1370298397, null), new cljs.core.Symbol(null, "wrap-length", "wrap-length", 1372423008, null), new cljs.core.Symbol(null, "seq-fn", "seq-fn", 649518296, null), new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.seq.SeqNode.cljs$lang$type = !0;
rewrite_clj.node.seq.SeqNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.seq/SeqNode", null, 1, null);
};
rewrite_clj.node.seq.SeqNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.seq/SeqNode");
};
rewrite_clj.node.seq.__GT_SeqNode = function(a, b, c, d, e) {
  return new rewrite_clj.node.seq.SeqNode(a, b, c, d, e, null, null, null);
};
rewrite_clj.node.seq.map__GT_SeqNode = function(a) {
  return new rewrite_clj.node.seq.SeqNode((new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "wrap-fn", "wrap-fn", -270233130)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "wrap-length", "wrap-length", -268108519)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "seq-fn", "seq-fn", -991013231)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "wrap-fn", "wrap-fn", -270233130), new cljs.core.Keyword(null, "wrap-length", "wrap-length", -268108519), new cljs.core.Keyword(null, "seq-fn", "seq-fn", -991013231), new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.seq.list_node = function(a) {
  return rewrite_clj.node.seq.__GT_SeqNode.call(null, new cljs.core.Keyword(null, "list", "list", 765357683), rewrite_clj.node.seq.wrap_list, 2, function(a) {
    return cljs.core.apply.call(null, cljs.core.list, a);
  }, a);
};
rewrite_clj.node.seq.vector_node = function(a) {
  return rewrite_clj.node.seq.__GT_SeqNode.call(null, new cljs.core.Keyword(null, "vector", "vector", 1902966158), rewrite_clj.node.seq.wrap_vec, 2, cljs.core.vec, a);
};
rewrite_clj.node.seq.set_node = function(a) {
  return rewrite_clj.node.seq.__GT_SeqNode.call(null, new cljs.core.Keyword(null, "set", "set", 304602554), rewrite_clj.node.seq.wrap_set, 3, cljs.core.set, a);
};
rewrite_clj.node.seq.map_node = function(a) {
  return rewrite_clj.node.seq.__GT_SeqNode.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), rewrite_clj.node.seq.wrap_map, 2, function(a) {
    return cljs.core.apply.call(null, cljs.core.hash_map, a);
  }, a);
};
rewrite_clj.node.fn = {};
rewrite_clj.node.fn.construct_fn = function(a, b, c) {
  return new cljs.core.List(null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.concat.call(null, a, cljs.core.truth_(b) ? new cljs.core.List(null, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), new cljs.core.List(null, b, null, 1, null), 2, null) : null)), new cljs.core.List(null, c, null, 1, null), 2, null), 3, null);
};
rewrite_clj.node.fn.sym_index = function(a) {
  if (cljs.core._EQ_.call(null, a, "\x26")) {
    return 0;
  }
  if (cljs.core._EQ_.call(null, a, "")) {
    return 1;
  }
  if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, a))) {
    return parseInt(a);
  }
  throw Error("arg literal must be %, %\x26 or %integer.");
};
rewrite_clj.node.fn.symbol__GT_gensym = function(a, b, c, d) {
  return d instanceof cljs.core.Symbol && (b = cljs.core.name.call(null, d), cljs.core._EQ_.call(null, b.indexOf("%"), 0)) ? (b = rewrite_clj.node.fn.sym_index.call(null, cljs.core.subs.call(null, b, 1)), cljs.core.swap_BANG_.call(null, c, cljs.core.max, b), cljs.core.nth.call(null, a, b)) : null;
};
rewrite_clj.node.fn.fn_walk = function(a) {
  var b = function() {
    return function f(a) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var b = cljs.core.seq.call(null, a);
          if (b) {
            if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
              var c = cljs.core.chunk_first.call(null, b), e = cljs.core.count.call(null, c), l = cljs.core.chunk_buffer.call(null, e);
              a: {
                for (var m = 0;;) {
                  if (m < e) {
                    var n = cljs.core._nth.call(null, c, m);
                    n = cljs.core._EQ_.call(null, n, 0) ? "rest__" : ["p", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), "__"].join("");
                    n = cljs.core.name.call(null, cljs.core.gensym.call(null, n));
                    cljs.core.chunk_append.call(null, l, cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), "#"].join("")));
                    m += 1;
                  } else {
                    c = !0;
                    break a;
                  }
                }
              }
              return c ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), f.call(null, cljs.core.chunk_rest.call(null, b))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), null);
            }
            l = cljs.core.first.call(null, b);
            l = cljs.core._EQ_.call(null, l, 0) ? "rest__" : ["p", cljs.core.str.cljs$core$IFn$_invoke$arity$1(l), "__"].join("");
            l = cljs.core.name.call(null, cljs.core.gensym.call(null, l));
            return cljs.core.cons.call(null, cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(l), "#"].join("")), f.call(null, cljs.core.rest.call(null, b)));
          }
          return null;
        }
      }, null, null);
    }.call(null, cljs.core.range.call(null));
  }(), c = cljs.core.atom.call(null, 0);
  a = clojure.walk.prewalk.call(null, function(a, b, c) {
    return function(d) {
      var e = rewrite_clj.node.fn.symbol__GT_gensym.call(null, a, b, c, d);
      return cljs.core.truth_(e) ? e : d;
    };
  }(b, !1, c), a);
  return rewrite_clj.node.fn.construct_fn.call(null, cljs.core.take.call(null, cljs.core.deref.call(null, c), cljs.core.rest.call(null, b)), null, a);
};
rewrite_clj.node.fn.FnNode = function(a, b, c, d) {
  this.children = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.fn.FnNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.fn.FnNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.fn.FnNode(this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1740346885 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  return rewrite_clj.node.fn.fn_walk.call(null, rewrite_clj.node.protocols.sexprs.call(null, this.children));
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return 3 + rewrite_clj.node.protocols.sum_lengths.call(null, this.children);
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return ["#(", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings.call(null, this.children)), ")"].join("");
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.fn.FnNode(this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), 
  null);
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.fn.FnNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.fn.FnNode(this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.fn.FnNode(this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.fn.FnNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.fn.FnNode.cljs$lang$type = !0;
rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.fn/FnNode", null, 1, null);
};
rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.fn/FnNode");
};
rewrite_clj.node.fn.__GT_FnNode = function(a) {
  return new rewrite_clj.node.fn.FnNode(a, null, null, null);
};
rewrite_clj.node.fn.map__GT_FnNode = function(a) {
  return new rewrite_clj.node.fn.FnNode((new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.fn.fn_node = function(a) {
  return rewrite_clj.node.fn.__GT_FnNode.call(null, a);
};
rewrite_clj.node.reader_macro = {};
rewrite_clj.node.reader_macro.ReaderNode = function(a, b, c, d, e, f, g, h, k) {
  this.tag = a;
  this.prefix = b;
  this.suffix = c;
  this.sexpr_fn = d;
  this.sexpr_count = e;
  this.children = f;
  this.__meta = g;
  this.__extmap = h;
  this.__hash = k;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "prefix":
      return this.prefix;
    case "suffix":
      return this.suffix;
    case "sexpr-fn":
      return this.sexpr_fn;
    case "sexpr-count":
      return this.sexpr_count;
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.reader-macro.ReaderNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", 
  "prefix", -265908465), this.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sexpr-fn", "sexpr-fn", -1214941414), this.sexpr_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sexpr-count", 
  "sexpr-count", 890534957), this.sexpr_count], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "sexpr-fn", "sexpr-fn", -1214941414), new cljs.core.Keyword(null, "sexpr-count", "sexpr-count", 890534957), new cljs.core.Keyword(null, "children", "children", -940561982)], 
  null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, this.suffix, this.sexpr_fn, this.sexpr_count, this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 6 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1051800113 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.tag, b.tag) && cljs.core._EQ_.call(null, this.prefix, b.prefix) && cljs.core._EQ_.call(null, this.suffix, b.suffix) && cljs.core._EQ_.call(null, this.sexpr_fn, b.sexpr_fn) && cljs.core._EQ_.call(null, this.sexpr_count, b.sexpr_count) && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return this.tag;
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return cljs.core.not.call(null, this.sexpr_fn);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  if (cljs.core.truth_(this.sexpr_fn)) {
    return this.sexpr_fn.call(null, rewrite_clj.node.protocols.sexprs.call(null, this.children));
  }
  throw Error("Unsupported operation");
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return rewrite_clj.node.protocols.sum_lengths.call(null, this.children) + 1 + cljs.core.count.call(null, this.prefix) + cljs.core.count.call(null, this.suffix);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings.call(null, this.children)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.suffix)].join("");
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "children", "children", -940561982), null, new cljs.core.Keyword(null, "sexpr-count", "sexpr-count", 890534957), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), null, new cljs.core.Keyword(null, "sexpr-fn", 
  "sexpr-fn", -1214941414), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, this.suffix, this.sexpr_fn, this.sexpr_count, this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  cljs.core.truth_(this.sexpr_count) && rewrite_clj.node.protocols.assert_sexpr_count.call(null, b, this.sexpr_count);
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), b)) ? new rewrite_clj.node.reader_macro.ReaderNode(c, this.prefix, this.suffix, this.sexpr_fn, this.sexpr_count, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), b)) ? new rewrite_clj.node.reader_macro.ReaderNode(this.tag, c, this.suffix, this.sexpr_fn, this.sexpr_count, this.children, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), b)) ? new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, c, this.sexpr_fn, this.sexpr_count, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "sexpr-fn", "sexpr-fn", -1214941414), b)) ? new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, this.suffix, c, this.sexpr_count, this.children, this.__meta, this.__extmap, 
  null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "sexpr-count", "sexpr-count", 890534957), b)) ? new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, this.suffix, this.sexpr_fn, c, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, this.suffix, this.sexpr_fn, this.sexpr_count, c, this.__meta, this.__extmap, 
  null) : new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, this.suffix, this.sexpr_fn, this.sexpr_count, this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "sexpr-fn", 
  "sexpr-fn", -1214941414), this.sexpr_fn, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "sexpr-count", "sexpr-count", 890534957), this.sexpr_count, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.reader_macro.ReaderNode(this.tag, this.prefix, this.suffix, this.sexpr_fn, this.sexpr_count, this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.reader_macro.ReaderNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "sexpr-fn", "sexpr-fn", 425590113, null), new cljs.core.Symbol(null, "sexpr-count", "sexpr-count", -1763900812, null), new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.reader_macro.ReaderNode.cljs$lang$type = !0;
rewrite_clj.node.reader_macro.ReaderNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.reader-macro/ReaderNode", null, 1, null);
};
rewrite_clj.node.reader_macro.ReaderNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.reader-macro/ReaderNode");
};
rewrite_clj.node.reader_macro.__GT_ReaderNode = function(a, b, c, d, e, f) {
  return new rewrite_clj.node.reader_macro.ReaderNode(a, b, c, d, e, f, null, null, null);
};
rewrite_clj.node.reader_macro.map__GT_ReaderNode = function(a) {
  return new rewrite_clj.node.reader_macro.ReaderNode((new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "sexpr-fn", "sexpr-fn", -1214941414)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "sexpr-count", "sexpr-count", 890534957)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "sexpr-fn", "sexpr-fn", -1214941414), new cljs.core.Keyword(null, "sexpr-count", "sexpr-count", 890534957), new cljs.core.Keyword(null, 
  "children", "children", -940561982))), null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode = function(a, b, c, d) {
  this.children = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.reader-macro.ReaderMacroNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.reader_macro.ReaderMacroNode(this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 856986356 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "reader-macro", "reader-macro", 750056422);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  return new cljs.core.List(null, new cljs.core.Symbol(null, "read-string", "read-string", -558384455, null), new cljs.core.List(null, this.rewrite_clj$node$protocols$Node$string$arity$1(null), null, 1, null), 2, null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return rewrite_clj.node.protocols.sum_lengths.call(null, this.children) + 1;
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings.call(null, this.children))].join("");
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.reader_macro.ReaderMacroNode(this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, 
  this.__extmap, b)), null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  rewrite_clj.node.protocols.assert_sexpr_count.call(null, b, 2);
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.reader_macro.ReaderMacroNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.reader_macro.ReaderMacroNode(this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.reader_macro.ReaderMacroNode(this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.cljs$lang$type = !0;
rewrite_clj.node.reader_macro.ReaderMacroNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.reader-macro/ReaderMacroNode", null, 1, null);
};
rewrite_clj.node.reader_macro.ReaderMacroNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.reader-macro/ReaderMacroNode");
};
rewrite_clj.node.reader_macro.__GT_ReaderMacroNode = function(a) {
  return new rewrite_clj.node.reader_macro.ReaderMacroNode(a, null, null, null);
};
rewrite_clj.node.reader_macro.map__GT_ReaderMacroNode = function(a) {
  return new rewrite_clj.node.reader_macro.ReaderMacroNode((new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.reader_macro.DerefNode = function(a, b, c, d) {
  this.children = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.reader_macro.DerefNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.reader-macro.DerefNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.reader_macro.DerefNode(this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1560233006 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "deref", "deref", -145586795);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null), rewrite_clj.node.protocols.sexprs.call(null, this.children));
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return rewrite_clj.node.protocols.sum_lengths.call(null, this.children) + 1;
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return ["@", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings.call(null, this.children))].join("");
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.reader_macro.DerefNode(this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, 
  b)), null);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  rewrite_clj.node.protocols.assert_sexpr_count.call(null, b, 1);
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.reader_macro.DerefNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.reader_macro.DerefNode(this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.reader_macro.DerefNode(this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.reader_macro.DerefNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.reader_macro.DerefNode.cljs$lang$type = !0;
rewrite_clj.node.reader_macro.DerefNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.reader-macro/DerefNode", null, 1, null);
};
rewrite_clj.node.reader_macro.DerefNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.reader-macro/DerefNode");
};
rewrite_clj.node.reader_macro.__GT_DerefNode = function(a) {
  return new rewrite_clj.node.reader_macro.DerefNode(a, null, null, null);
};
rewrite_clj.node.reader_macro.map__GT_DerefNode = function(a) {
  return new rewrite_clj.node.reader_macro.DerefNode((new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.reader_macro.__GT_node = function(a, b, c, d, e, f) {
  cljs.core.truth_(e) && rewrite_clj.node.protocols.assert_sexpr_count.call(null, f, e);
  return rewrite_clj.node.reader_macro.__GT_ReaderNode.call(null, a, b, c, d, e, f);
};
rewrite_clj.node.reader_macro.var_node = function(a) {
  for (;;) {
    if (cljs.core.sequential_QMARK_.call(null, a)) {
      return rewrite_clj.node.reader_macro.__GT_node.call(null, new cljs.core.Keyword(null, "var", "var", -769682797), "'", "", function(a) {
        return function(a) {
          return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "var", "var", 870848730, null), a);
        };
      }(a), 1, a);
    }
    a = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
};
rewrite_clj.node.reader_macro.eval_node = function(a) {
  for (;;) {
    if (cljs.core.sequential_QMARK_.call(null, a)) {
      return rewrite_clj.node.reader_macro.__GT_node.call(null, new cljs.core.Keyword(null, "eval", "eval", -1103567905), "\x3d", "", function(a) {
        return function(a) {
          return new cljs.core.List(null, new cljs.core.Symbol(null, "eval", "eval", 536963622, null), new cljs.core.List(null, cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), a), null, 1, null), 2, null);
        };
      }(a), 1, a);
    }
    a = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
};
rewrite_clj.node.reader_macro.reader_macro_node = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.node.reader_macro.reader_macro_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.node.reader_macro.reader_macro_node.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.node.reader_macro.reader_macro_node.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return rewrite_clj.node.reader_macro.__GT_ReaderMacroNode.call(null, a);
};
rewrite_clj.node.reader_macro.reader_macro_node.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.node.reader_macro.__GT_ReaderMacroNode.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, rewrite_clj.node.whitespace.spaces.call(null, 1), b], null));
};
rewrite_clj.node.reader_macro.reader_macro_node.cljs$lang$maxFixedArity = 2;
rewrite_clj.node.reader_macro.deref_node = function(a) {
  return cljs.core.sequential_QMARK_.call(null, a) ? rewrite_clj.node.reader_macro.__GT_DerefNode.call(null, a) : rewrite_clj.node.reader_macro.__GT_DerefNode.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null));
};
rewrite_clj.node.keyword = {};
rewrite_clj.node.keyword.KeywordNode = function(a, b, c, d, e) {
  this.k = a;
  this.namespaced_QMARK_ = b;
  this.__meta = c;
  this.__extmap = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.keyword.KeywordNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "k":
      return this.k;
    case "namespaced?":
      return this.namespaced_QMARK_;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.keyword.KeywordNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), this.k], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaced?", 
  "namespaced?", -877312877), this.namespaced_QMARK_], null)], null), this.__extmap));
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.Keyword(null, "namespaced?", "namespaced?", -877312877)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.keyword.KeywordNode(this.k, this.namespaced_QMARK_, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1681863292 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.k, b.k) && cljs.core._EQ_.call(null, this.namespaced_QMARK_, b.namespaced_QMARK_) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "token", "token", -1211463215);
};
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  var b = this;
  if (cljs.core.truth_(function() {
    var a = b.namespaced_QMARK_;
    return cljs.core.truth_(a) ? cljs.core.not.call(null, cljs.core.namespace.call(null, b.k)) : a;
  }())) {
    throw Error("Namespaced keywords not supported !");
  }
  return b.k;
};
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  a = cljs.core.count.call(null, cljs.core.name.call(null, this.k)) + 1;
  if (cljs.core.truth_(this.namespaced_QMARK_)) {
    return a + 1;
  }
  var b = cljs.core.namespace.call(null, this.k);
  return cljs.core.truth_(b) ? 1 + a + cljs.core.count.call(null, b) : a;
};
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  a = cljs.core.pr_str.call(null, this.k);
  return cljs.core.truth_(this.namespaced_QMARK_) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : a;
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "k", "k", -2146297393), null, new cljs.core.Keyword(null, "namespaced?", "namespaced?", -877312877), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.keyword.KeywordNode(this.k, this.namespaced_QMARK_, 
  this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), b)) ? new rewrite_clj.node.keyword.KeywordNode(c, this.namespaced_QMARK_, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "namespaced?", "namespaced?", -877312877), b)) ? new rewrite_clj.node.keyword.KeywordNode(this.k, c, this.__meta, this.__extmap, null) : new rewrite_clj.node.keyword.KeywordNode(this.k, this.namespaced_QMARK_, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "k", "k", -2146297393), this.k, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "namespaced?", "namespaced?", -877312877), this.namespaced_QMARK_, null)], null), this.__extmap));
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.keyword.KeywordNode(this.k, this.namespaced_QMARK_, b, this.__extmap, this.__hash);
};
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.keyword.KeywordNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "namespaced?", "namespaced?", 763218650, null)], null);
};
rewrite_clj.node.keyword.KeywordNode.cljs$lang$type = !0;
rewrite_clj.node.keyword.KeywordNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.keyword/KeywordNode", null, 1, null);
};
rewrite_clj.node.keyword.KeywordNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.keyword/KeywordNode");
};
rewrite_clj.node.keyword.__GT_KeywordNode = function(a, b) {
  return new rewrite_clj.node.keyword.KeywordNode(a, b, null, null, null);
};
rewrite_clj.node.keyword.map__GT_KeywordNode = function(a) {
  return new rewrite_clj.node.keyword.KeywordNode((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "namespaced?", "namespaced?", -877312877)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.Keyword(null, "namespaced?", "namespaced?", -877312877))), null);
};
rewrite_clj.node.keyword.keyword_node = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.nth.call(null, b, 0, null);
  if (!(a instanceof cljs.core.Keyword)) {
    throw Error("Assert failed: (keyword? k)");
  }
  return rewrite_clj.node.keyword.__GT_KeywordNode.call(null, a, b);
};
rewrite_clj.node.keyword.keyword_node.cljs$lang$maxFixedArity = 1;
rewrite_clj.node.keyword.keyword_node.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
rewrite_clj.node.comment = {};
rewrite_clj.node.comment.CommentNode = function(a, b, c, d) {
  this.s = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.comment.CommentNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "s":
      return this.s;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.comment.CommentNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "s", "s", 1705939918), this.s], null)], null), this.__extmap));
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "s", "s", 1705939918)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.comment.CommentNode(this.s, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 495469178 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.s, b.s) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "comment", "comment", 532206069);
};
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  throw Error("Unsupported operation");
};
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.s);
};
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return [";", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.s)].join("");
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "s", "s", 1705939918), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.comment.CommentNode(this.s, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "s", "s", 1705939918), b)) ? new rewrite_clj.node.comment.CommentNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.comment.CommentNode(this.s, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "s", "s", 1705939918), this.s, null)], null), this.__extmap));
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.comment.CommentNode(this.s, b, this.__extmap, this.__hash);
};
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.comment.CommentNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
rewrite_clj.node.comment.CommentNode.cljs$lang$type = !0;
rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.comment/CommentNode", null, 1, null);
};
rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.comment/CommentNode");
};
rewrite_clj.node.comment.__GT_CommentNode = function(a) {
  return new rewrite_clj.node.comment.CommentNode(a, null, null, null);
};
rewrite_clj.node.comment.map__GT_CommentNode = function(a) {
  return new rewrite_clj.node.comment.CommentNode((new cljs.core.Keyword(null, "s", "s", 1705939918)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "s", "s", 1705939918))), null);
};
rewrite_clj.node.comment.comment_node = function(a) {
  return rewrite_clj.node.comment.__GT_CommentNode.call(null, a);
};
rewrite_clj.node.comment.comment_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.node.protocols.tag.call(null, a), new cljs.core.Keyword(null, "comment", "comment", 532206069));
};
rewrite_clj.node.quote = {};
rewrite_clj.node.quote.QuoteNode = function(a, b, c, d, e, f, g) {
  this.tag = a;
  this.prefix = b;
  this.sym = c;
  this.children = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.quote.QuoteNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "prefix":
      return this.prefix;
    case "sym":
      return this.sym;
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.quote.QuoteNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", 
  -265908465), this.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), this.sym], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "sym", "sym", -1444860305), new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.quote.QuoteNode(this.tag, this.prefix, this.sym, this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 1712251858 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.tag, b.tag) && cljs.core._EQ_.call(null, this.prefix, b.prefix) && cljs.core._EQ_.call(null, this.sym, b.sym) && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return this.tag;
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  return new cljs.core.List(null, this.sym, new cljs.core.List(null, cljs.core.first.call(null, rewrite_clj.node.protocols.sexprs.call(null, this.children)), null, 1, null), 2, null);
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return cljs.core.count.call(null, this.prefix) + rewrite_clj.node.protocols.sum_lengths.call(null, this.children);
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings.call(null, this.children))].join("");
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "children", "children", -940561982), null, new cljs.core.Keyword(null, "sym", "sym", -1444860305), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new rewrite_clj.node.quote.QuoteNode(this.tag, this.prefix, this.sym, this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  rewrite_clj.node.protocols.assert_single_sexpr.call(null, b);
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), b)) ? new rewrite_clj.node.quote.QuoteNode(c, this.prefix, this.sym, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), b)) ? new rewrite_clj.node.quote.QuoteNode(this.tag, c, this.sym, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "sym", "sym", -1444860305), 
  b)) ? new rewrite_clj.node.quote.QuoteNode(this.tag, this.prefix, c, this.children, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.quote.QuoteNode(this.tag, this.prefix, this.sym, c, this.__meta, this.__extmap, null) : new rewrite_clj.node.quote.QuoteNode(this.tag, this.prefix, this.sym, this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "tag", "tag", -1290361223), this.tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "sym", "sym", -1444860305), this.sym, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", 
  "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.quote.QuoteNode(this.tag, this.prefix, this.sym, this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.quote.QuoteNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.quote.QuoteNode.cljs$lang$type = !0;
rewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.quote/QuoteNode", null, 1, null);
};
rewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.quote/QuoteNode");
};
rewrite_clj.node.quote.__GT_QuoteNode = function(a, b, c, d) {
  return new rewrite_clj.node.quote.QuoteNode(a, b, c, d, null, null, null);
};
rewrite_clj.node.quote.map__GT_QuoteNode = function(a) {
  return new rewrite_clj.node.quote.QuoteNode((new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, 
  "tag", "tag", -1290361223), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "sym", "sym", -1444860305), new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.quote.__GT_node = function(a, b, c, d) {
  rewrite_clj.node.protocols.assert_single_sexpr.call(null, d);
  return rewrite_clj.node.quote.__GT_QuoteNode.call(null, a, b, c, d);
};
rewrite_clj.node.quote.quote_node = function(a) {
  for (;;) {
    if (cljs.core.sequential_QMARK_.call(null, a)) {
      return rewrite_clj.node.quote.__GT_node.call(null, new cljs.core.Keyword(null, "quote", "quote", -262615245), "'", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), a);
    }
    a = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
};
rewrite_clj.node.quote.syntax_quote_node = function(a) {
  for (;;) {
    if (cljs.core.sequential_QMARK_.call(null, a)) {
      return rewrite_clj.node.quote.__GT_node.call(null, new cljs.core.Keyword(null, "syntax-quote", "syntax-quote", -1233164847), "`", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), a);
    }
    a = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
};
rewrite_clj.node.quote.unquote_node = function(a) {
  for (;;) {
    if (cljs.core.sequential_QMARK_.call(null, a)) {
      return rewrite_clj.node.quote.__GT_node.call(null, new cljs.core.Keyword(null, "unquote", "unquote", 1649741032), "~", new cljs.core.Symbol(null, "unquote", "unquote", -1004694737, null), a);
    }
    a = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
};
rewrite_clj.node.quote.unquote_splicing_node = function(a) {
  for (;;) {
    if (cljs.core.sequential_QMARK_.call(null, a)) {
      return rewrite_clj.node.quote.__GT_node.call(null, new cljs.core.Keyword(null, "unquote-splicing", "unquote-splicing", 1295267556), "~@", new cljs.core.Symbol(null, "unquote-splicing", "unquote-splicing", -1359168213, null), a);
    }
    a = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
};
rewrite_clj.node.uneval = {};
rewrite_clj.node.uneval.UnevalNode = function(a, b, c, d) {
  this.children = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.uneval.UnevalNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.uneval.UnevalNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.uneval.UnevalNode(this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return -1883175395 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "uneval", "uneval", 1932037707);
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  throw Error("Unsupported operation for unevalnode");
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return 2 + rewrite_clj.node.protocols.sum_lengths.call(null, this.children);
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return ["#_", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings.call(null, this.children))].join("");
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.uneval.UnevalNode(this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, 
  b)), null);
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  rewrite_clj.node.protocols.assert_single_sexpr.call(null, b);
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.uneval.UnevalNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.uneval.UnevalNode(this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.uneval.UnevalNode(this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.uneval.UnevalNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.uneval.UnevalNode.cljs$lang$type = !0;
rewrite_clj.node.uneval.UnevalNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.uneval/UnevalNode", null, 1, null);
};
rewrite_clj.node.uneval.UnevalNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.uneval/UnevalNode");
};
rewrite_clj.node.uneval.__GT_UnevalNode = function(a) {
  return new rewrite_clj.node.uneval.UnevalNode(a, null, null, null);
};
rewrite_clj.node.uneval.map__GT_UnevalNode = function(a) {
  return new rewrite_clj.node.uneval.UnevalNode((new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.uneval.uneval_node = function(a) {
  for (;;) {
    if (cljs.core.sequential_QMARK_.call(null, a)) {
      return rewrite_clj.node.protocols.assert_single_sexpr.call(null, a), rewrite_clj.node.uneval.__GT_UnevalNode.call(null, a);
    }
    a = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
};
rewrite_clj.node.forms = {};
rewrite_clj.node.forms.FormsNode = function(a, b, c, d) {
  this.children = a;
  this.__meta = b;
  this.__extmap = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
rewrite_clj.node.forms.FormsNode.prototype.toString = function() {
  return this.rewrite_clj$node$protocols$Node$string$arity$1(null);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "children":
      return this.children;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#rewrite-clj.node.forms.FormsNode{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982), this.children], null)], null), this.__extmap));
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", -940561982)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new rewrite_clj.node.forms.FormsNode(this.children, this.__meta, this.__extmap, this.__hash);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 1 + cljs.core.count.call(null, this.__extmap);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 116885345 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.children, b.children) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = function(a) {
  return new cljs.core.Keyword(null, "forms", "forms", 2045992350);
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = function(a) {
  return !1;
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = function(a) {
  a = rewrite_clj.node.protocols.sexprs.call(null, this.children);
  return cljs.core.next.call(null, a) ? cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), a) : cljs.core.first.call(null, a);
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = function(a) {
  return rewrite_clj.node.protocols.sum_lengths.call(null, this.children);
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = function(a) {
  return rewrite_clj.node.protocols.concat_strings.call(null, this.children);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new rewrite_clj.node.forms.FormsNode(this.children, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, 
  b)), null);
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = function(a) {
  return !0;
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = function(a) {
  return this.children;
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = function(a, b) {
  return cljs.core.assoc.call(null, this, new cljs.core.Keyword(null, "children", "children", -940561982), b);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.truth_(cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "children", "children", -940561982), b)) ? new rewrite_clj.node.forms.FormsNode(c, this.__meta, this.__extmap, null) : new rewrite_clj.node.forms.FormsNode(this.children, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "children", "children", -940561982), this.children, null)], null), this.__extmap));
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new rewrite_clj.node.forms.FormsNode(this.children, b, this.__extmap, this.__hash);
};
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
rewrite_clj.node.forms.FormsNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "children", "children", 699969545, null)], null);
};
rewrite_clj.node.forms.FormsNode.cljs$lang$type = !0;
rewrite_clj.node.forms.FormsNode.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "rewrite-clj.node.forms/FormsNode", null, 1, null);
};
rewrite_clj.node.forms.FormsNode.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "rewrite-clj.node.forms/FormsNode");
};
rewrite_clj.node.forms.__GT_FormsNode = function(a) {
  return new rewrite_clj.node.forms.FormsNode(a, null, null, null);
};
rewrite_clj.node.forms.map__GT_FormsNode = function(a) {
  return new rewrite_clj.node.forms.FormsNode((new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "children", "children", -940561982))), null);
};
rewrite_clj.node.forms.forms_node = function(a) {
  return rewrite_clj.node.forms.__GT_FormsNode.call(null, a);
};
rewrite_clj.node.coercer = {};
rewrite_clj.node.coercer.node_with_meta = function(a, b) {
  return null != b && (b.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IWithMeta$) ? (b = cljs.core.meta.call(null, b), cljs.core.empty_QMARK_.call(null, b) ? a : rewrite_clj.node.meta.meta_node.call(null, rewrite_clj.node.protocols.coerce.call(null, b), a)) : a;
};
goog.object.set(rewrite_clj.node.protocols.NodeCoerceable, "object", !0);
goog.object.set(rewrite_clj.node.protocols.coerce, "object", function(a) {
  return rewrite_clj.node.coercer.node_with_meta.call(null, rewrite_clj.node.token.token_node.call(null, a), a);
});
goog.object.set(rewrite_clj.node.protocols.NodeCoerceable, "number", !0);
goog.object.set(rewrite_clj.node.protocols.coerce, "number", function(a) {
  return rewrite_clj.node.coercer.node_with_meta.call(null, rewrite_clj.node.token.token_node.call(null, a), a);
});
goog.object.set(rewrite_clj.node.protocols.NodeCoerceable, "string", !0);
goog.object.set(rewrite_clj.node.protocols.coerce, "string", function(a) {
  return rewrite_clj.node.coercer.node_with_meta.call(null, rewrite_clj.node.stringz.string_node.call(null, a), a);
});
rewrite_clj.node.coercer.seq_node = function(a, b) {
  return rewrite_clj.node.coercer.node_with_meta.call(null, a.call(null, cljs.core.vec.call(null, rewrite_clj.node.whitespace.space_separated.call(null, cljs.core.map.call(null, rewrite_clj.node.protocols.coerce, b)))), b);
};
cljs.core.PersistentVector.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return rewrite_clj.node.coercer.seq_node.call(null, rewrite_clj.node.seq.vector_node, this);
};
cljs.core.List.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return rewrite_clj.node.coercer.seq_node.call(null, rewrite_clj.node.seq.list_node, this);
};
cljs.core.PersistentHashSet.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return rewrite_clj.node.coercer.seq_node.call(null, rewrite_clj.node.seq.set_node, this);
};
var comma_6063 = rewrite_clj.node.whitespace.whitespace_node.call(null, ", "), space_6064 = rewrite_clj.node.whitespace.whitespace_node.call(null, " ");
rewrite_clj.node.coercer.map__GT_children = function(a, b) {
  return function(c) {
    return cljs.core.vec.call(null, cljs.core.butlast.call(null, cljs.core.mapcat.call(null, function(a, b) {
      return function(c) {
        var d = cljs.core.nth.call(null, c, 0, null);
        c = cljs.core.nth.call(null, c, 1, null);
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.node.protocols.coerce.call(null, d), b, rewrite_clj.node.protocols.coerce.call(null, c), a], null);
      };
    }(a, b), c)));
  };
}(comma_6063, space_6064);
cljs.core.PersistentHashMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return rewrite_clj.node.coercer.node_with_meta.call(null, rewrite_clj.node.seq.map_node.call(null, rewrite_clj.node.coercer.map__GT_children.call(null, this)), this);
};
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL;
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = function(a) {
  return this;
};
rewrite_clj.node.tag = rewrite_clj.node.protocols.tag;
rewrite_clj.node.sexpr = rewrite_clj.node.protocols.sexpr;
rewrite_clj.node.string = rewrite_clj.node.protocols.string;
rewrite_clj.node.children = rewrite_clj.node.protocols.children;
rewrite_clj.node.child_sexprs = rewrite_clj.node.protocols.child_sexprs;
rewrite_clj.node.replace_children = rewrite_clj.node.protocols.replace_children;
rewrite_clj.node.inner_QMARK_ = rewrite_clj.node.protocols.inner_QMARK_;
rewrite_clj.node.printable_only_QMARK_ = rewrite_clj.node.protocols.printable_only_QMARK_;
rewrite_clj.node.coerce = rewrite_clj.node.protocols.coerce;
rewrite_clj.node.length = rewrite_clj.node.protocols.length;
rewrite_clj.node.forms_node = rewrite_clj.node.forms.forms_node;
rewrite_clj.node.keyword_node = rewrite_clj.node.keyword.keyword_node;
rewrite_clj.node.list_node = rewrite_clj.node.seq.list_node;
rewrite_clj.node.vector_node = rewrite_clj.node.seq.vector_node;
rewrite_clj.node.set_node = rewrite_clj.node.seq.set_node;
rewrite_clj.node.map_node = rewrite_clj.node.seq.map_node;
rewrite_clj.node.string_node = rewrite_clj.node.stringz.string_node;
rewrite_clj.node.comment_node = rewrite_clj.node.comment.comment_node;
rewrite_clj.node.comment_QMARK_ = rewrite_clj.node.comment.comment_QMARK_;
rewrite_clj.node.whitespace_node = rewrite_clj.node.whitespace.whitespace_node;
rewrite_clj.node.newline_node = rewrite_clj.node.whitespace.newline_node;
rewrite_clj.node.spaces = rewrite_clj.node.whitespace.spaces;
rewrite_clj.node.newlines = rewrite_clj.node.whitespace.newlines;
rewrite_clj.node.whitespace_QMARK_ = rewrite_clj.node.whitespace.whitespace_QMARK_;
rewrite_clj.node.linebreak_QMARK_ = rewrite_clj.node.whitespace.linebreak_QMARK_;
rewrite_clj.node.whitespace_or_comment_QMARK_ = function(a) {
  var b = rewrite_clj.node.whitespace_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? b : rewrite_clj.node.comment_QMARK_.call(null, a);
};
rewrite_clj.node.token_node = rewrite_clj.node.token.token_node;
rewrite_clj.node.var_node = rewrite_clj.node.reader_macro.var_node;
rewrite_clj.node.eval_node = rewrite_clj.node.reader_macro.eval_node;
rewrite_clj.node.reader_macro_node = rewrite_clj.node.reader_macro.reader_macro_node;
rewrite_clj.node.deref_node = rewrite_clj.node.reader_macro.deref_node;
rewrite_clj.node.quote_node = rewrite_clj.node.quote.quote_node;
rewrite_clj.node.syntax_quote_node = rewrite_clj.node.quote.syntax_quote_node;
rewrite_clj.node.unquote_node = rewrite_clj.node.quote.unquote_node;
rewrite_clj.node.unquote_splicing_node = rewrite_clj.node.quote.unquote_splicing_node;
rewrite_clj.node.uneval_node = rewrite_clj.node.uneval.uneval_node;
rewrite_clj.node.meta_node = rewrite_clj.node.meta.meta_node;
rewrite_clj.node.fn_node = rewrite_clj.node.fn.fn_node;
rewrite_clj.parser = {};
rewrite_clj.parser.keyword = {};
rewrite_clj.parser.keyword.parse_keyword = function(a) {
  rewrite_clj.reader.read_char.call(null, a);
  var b = rewrite_clj.reader.peek_char.call(null, a);
  if (cljs.core.truth_(b)) {
    if (":" === b) {
      return rewrite_clj.node.keyword_node.call(null, rewrite_clj.reader.read_keyword.call(null, a, ":"), !0);
    }
    rewrite_clj.reader.unread.call(null, a, ":");
    return rewrite_clj.node.keyword_node.call(null, rewrite_clj.reader.read_keyword.call(null, a, ":"));
  }
  return rewrite_clj.reader.throw_reader.call(null, a, "unexpected EOF while reading keyword.");
};
rewrite_clj.parser.token = {};
rewrite_clj.parser.token.join_2 = function(a, b) {
  return (new goog.string.StringBuffer(a)).append(b).toString();
};
rewrite_clj.parser.token.allowed_default_QMARK_ = function(a) {
  return !1;
};
rewrite_clj.parser.token.allowed_suffix_QMARK_ = function(a) {
  return "'" === a || ":" === a;
};
rewrite_clj.parser.token.read_to_boundary = function(a, b) {
  return rewrite_clj.reader.read_until.call(null, a, function(a) {
    return cljs.core.not.call(null, b.call(null, a)) && rewrite_clj.reader.whitespace_or_boundary_QMARK_.call(null, a);
  });
};
rewrite_clj.parser.token.read_to_char_boundary = function(a) {
  var b = rewrite_clj.reader.read_char.call(null, a);
  return rewrite_clj.parser.token.join_2.call(null, b, "\\" !== b ? rewrite_clj.parser.token.read_to_boundary.call(null, a, rewrite_clj.parser.token.allowed_default_QMARK_) : "");
};
rewrite_clj.parser.token.symbol_node = function(a, b, c) {
  a = rewrite_clj.parser.token.read_to_boundary.call(null, a, rewrite_clj.parser.token.allowed_suffix_QMARK_);
  if (cljs.core.empty_QMARK_.call(null, a)) {
    return rewrite_clj.node.token_node.call(null, b, c);
  }
  b = rewrite_clj.parser.token.join_2.call(null, c, a);
  return rewrite_clj.node.token_node.call(null, rewrite_clj.reader.read_string.call(null, b), b);
};
rewrite_clj.parser.token.parse_token = function(a) {
  var b = rewrite_clj.reader.read_char.call(null, a);
  b = rewrite_clj.parser.token.join_2.call(null, b, "\\" === b ? rewrite_clj.parser.token.read_to_char_boundary.call(null, a) : rewrite_clj.parser.token.read_to_boundary.call(null, a, rewrite_clj.parser.token.allowed_default_QMARK_));
  var c = rewrite_clj.reader.read_string.call(null, b);
  return c instanceof cljs.core.Symbol ? rewrite_clj.parser.token.symbol_node.call(null, a, c, b) : rewrite_clj.node.token_node.call(null, c, b);
};
rewrite_clj.parser.whitespace = {};
rewrite_clj.parser.whitespace.parse_whitespace = function(a) {
  return rewrite_clj.reader.linebreak_QMARK_.call(null, rewrite_clj.reader.peek_char.call(null, a)) ? rewrite_clj.node.newline_node.call(null, rewrite_clj.reader.read_while.call(null, a, rewrite_clj.reader.linebreak_QMARK_)) : rewrite_clj.node.whitespace_node.call(null, rewrite_clj.reader.read_while.call(null, a, rewrite_clj.reader.space_QMARK_));
};
rewrite_clj.parser.string = {};
rewrite_clj.parser.string.flush_into = function(a, b) {
  var c = b.toString();
  b.set("");
  return cljs.core.conj.call(null, a, c);
};
rewrite_clj.parser.string.read_string_data = function(a) {
  rewrite_clj.reader.ignore.call(null, a);
  for (var b = new goog.string.StringBuffer, c = !1, d = cljs.core.PersistentVector.EMPTY;;) {
    var e = rewrite_clj.reader.read_char.call(null, a);
    if (cljs.core.truth_(e)) {
      if (c || '"' !== e) {
        "\n" === e ? d = rewrite_clj.parser.string.flush_into.call(null, d, b) : (b.append(e), c = !c && "\\" === e);
      } else {
        return rewrite_clj.parser.string.flush_into.call(null, d, b);
      }
    } else {
      return rewrite_clj.reader.throw_reader.call(null, a, "Unexpected EOF while reading string.");
    }
  }
};
rewrite_clj.parser.string.parse_string = function(a) {
  return rewrite_clj.node.string_node.call(null, rewrite_clj.parser.string.read_string_data.call(null, a));
};
rewrite_clj.parser.string.parse_regex = function(a) {
  a = rewrite_clj.parser.string.read_string_data.call(null, a);
  a = clojure.string.join.call(null, "\n", a);
  return rewrite_clj.node.token_node.call(null, cljs.core.re_pattern.call(null, a), ['#"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), '"'].join(""));
};
rewrite_clj.parser.core = {};
rewrite_clj.parser.core._STAR_delimiter_STAR_ = null;
rewrite_clj.parser.core.parse_delim = function(a, b) {
  rewrite_clj.reader.ignore.call(null, a);
  return rewrite_clj.reader.read_repeatedly.call(null, a, function(a) {
    var c = rewrite_clj.parser.core._STAR_delimiter_STAR_;
    rewrite_clj.parser.core._STAR_delimiter_STAR_ = b;
    try {
      return rewrite_clj.parser.core.parse_next.call(null, a);
    } finally {
      rewrite_clj.parser.core._STAR_delimiter_STAR_ = c;
    }
  });
};
rewrite_clj.parser.core.parse_printables = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0, null) : null;
  return rewrite_clj.parser.core.parse_printables.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
rewrite_clj.parser.core.parse_printables.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  d = cljs.core.nth.call(null, d, 0, null);
  cljs.core.truth_(d) && rewrite_clj.reader.ignore.call(null, a);
  return rewrite_clj.reader.read_n.call(null, a, b, rewrite_clj.parser.core.parse_next, cljs.core.complement.call(null, rewrite_clj.node.printable_only_QMARK_), c);
};
rewrite_clj.parser.core.parse_printables.cljs$lang$maxFixedArity = 3;
rewrite_clj.parser.core.parse_printables.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
rewrite_clj.parser.core.parse_meta = function(a) {
  rewrite_clj.reader.ignore.call(null, a);
  return rewrite_clj.node.meta_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "meta", "meta", 1499536964), 2));
};
rewrite_clj.parser.core.parse_eof = function(a) {
  return cljs.core.truth_(rewrite_clj.parser.core._STAR_delimiter_STAR_) ? rewrite_clj.reader.throw_reader.call(null, a, "Unexpected EOF.") : null;
};
rewrite_clj.parser.core.parse_list = function(a) {
  return rewrite_clj.node.list_node.call(null, rewrite_clj.parser.core.parse_delim.call(null, a, ")"));
};
rewrite_clj.parser.core.parse_vector = function(a) {
  return rewrite_clj.node.vector_node.call(null, rewrite_clj.parser.core.parse_delim.call(null, a, "]"));
};
rewrite_clj.parser.core.parse_map = function(a) {
  return rewrite_clj.node.map_node.call(null, rewrite_clj.parser.core.parse_delim.call(null, a, "}"));
};
rewrite_clj.parser.core.parse_conditional = function(a) {
  rewrite_clj.reader.next.call(null, a);
  return rewrite_clj.node.reader_macro_node.call(null, function() {
    var b = function() {
      return rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "reader-macro", "reader-macro", 750056422), 1);
    };
    return cljs.core.cons.call(null, function() {
      switch(rewrite_clj.reader.peek.call(null, a)) {
        case "(":
          return rewrite_clj.node.token_node.call(null, cljs.core.symbol.call(null, "?"));
        case "@":
          return rewrite_clj.reader.next.call(null, a), rewrite_clj.node.token_node.call(null, cljs.core.symbol.call(null, "?@"));
        default:
          return rewrite_clj.reader.unread.call(null, a, "?"), cljs.core.first.call(null, b.call(null));
      }
    }(), b.call(null));
  }());
};
rewrite_clj.parser.core.parse_sharp = function(a) {
  rewrite_clj.reader.ignore.call(null, a);
  var b = cljs.tools.reader.reader_types.peek_char.call(null, a);
  return cljs.core._EQ_.call(null, null, b) ? rewrite_clj.reader.throw_reader.call(null, a, "Unexpected EOF.") : cljs.core._EQ_.call(null, "{", b) ? rewrite_clj.node.set_node.call(null, rewrite_clj.parser.core.parse_delim.call(null, a, "}")) : cljs.core._EQ_.call(null, "(", b) ? rewrite_clj.node.fn_node.call(null, rewrite_clj.parser.core.parse_delim.call(null, a, ")")) : cljs.core._EQ_.call(null, '"', b) ? rewrite_clj.parser.string.parse_regex.call(null, a) : cljs.core._EQ_.call(null, "^", b) ? rewrite_clj.node.meta_node.call(null, 
  rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "meta", "meta", 1499536964), 2, !0)) : cljs.core._EQ_.call(null, "'", b) ? rewrite_clj.node.var_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "var", "var", -769682797), 1, !0)) : cljs.core._EQ_.call(null, "\x3d", b) ? rewrite_clj.node.eval_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "eval", "eval", -1103567905), 
  1, !0)) : cljs.core._EQ_.call(null, "_", b) ? rewrite_clj.node.uneval_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "uneval", "uneval", 1932037707), 1, !0)) : cljs.core._EQ_.call(null, "?", b) ? rewrite_clj.parser.core.parse_conditional.call(null, a) : rewrite_clj.node.reader_macro_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "reader-macro", "reader-macro", 750056422), 2));
};
rewrite_clj.parser.core.parse_unmatched = function(a) {
  return rewrite_clj.reader.throw_reader.call(null, a, "Unmatched delimiter: %s", cljs.tools.reader.reader_types.peek_char.call(null, a));
};
rewrite_clj.parser.core.parse_deref = function(a) {
  return rewrite_clj.node.deref_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "deref", "deref", -145586795), 1, !0));
};
rewrite_clj.parser.core.parse_quote = function(a) {
  return rewrite_clj.node.quote_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "quote", "quote", -262615245), 1, !0));
};
rewrite_clj.parser.core.parse_syntax_quote = function(a) {
  return rewrite_clj.node.syntax_quote_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "syntax-quote", "syntax-quote", -1233164847), 1, !0));
};
rewrite_clj.parser.core.parse_unquote = function(a) {
  rewrite_clj.reader.ignore.call(null, a);
  var b = cljs.tools.reader.reader_types.peek_char.call(null, a);
  return cljs.core._EQ_.call(null, b, "@") ? rewrite_clj.node.unquote_splicing_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "unquote", "unquote", 1649741032), 1, !0)) : rewrite_clj.node.unquote_node.call(null, rewrite_clj.parser.core.parse_printables.call(null, a, new cljs.core.Keyword(null, "unquote", "unquote", 1649741032), 1));
};
rewrite_clj.parser.core.parse_comment = function(a) {
  rewrite_clj.reader.ignore.call(null, a);
  return rewrite_clj.node.comment_node.call(null, rewrite_clj.reader.read_include_linebreak.call(null, a));
};
rewrite_clj.parser.core.dispatch = function(a) {
  return null == a ? rewrite_clj.parser.core.parse_eof : a === rewrite_clj.parser.core._STAR_delimiter_STAR_ ? rewrite_clj.reader.ignore : rewrite_clj.reader.whitespace_QMARK_.call(null, a) ? rewrite_clj.parser.whitespace.parse_whitespace : "^" === a ? rewrite_clj.parser.core.parse_meta : "#" === a ? rewrite_clj.parser.core.parse_sharp : "(" === a ? rewrite_clj.parser.core.parse_list : "[" === a ? rewrite_clj.parser.core.parse_vector : "{" === a ? rewrite_clj.parser.core.parse_map : "}" === a ? rewrite_clj.parser.core.parse_unmatched : 
  "]" === a ? rewrite_clj.parser.core.parse_unmatched : ")" === a ? rewrite_clj.parser.core.parse_unmatched : "~" === a ? rewrite_clj.parser.core.parse_unquote : "'" === a ? rewrite_clj.parser.core.parse_quote : "`" === a ? rewrite_clj.parser.core.parse_syntax_quote : ";" === a ? rewrite_clj.parser.core.parse_comment : "@" === a ? rewrite_clj.parser.core.parse_deref : '"' === a ? rewrite_clj.parser.string.parse_string : ":" === a ? rewrite_clj.parser.keyword.parse_keyword : rewrite_clj.parser.token.parse_token;
};
rewrite_clj.parser.core.parse_next = function(a) {
  return rewrite_clj.reader.read_with_meta.call(null, a, rewrite_clj.parser.core.dispatch.call(null, cljs.tools.reader.reader_types.peek_char.call(null, a)));
};
rewrite_clj.parser.parse = function(a) {
  return rewrite_clj.parser.core.parse_next.call(null, a);
};
rewrite_clj.parser.parse_all = function(a) {
  var b = cljs.core.doall.call(null, cljs.core.take_while.call(null, cljs.core.identity, cljs.core.repeatedly.call(null, function() {
    return rewrite_clj.parser.parse.call(null, a);
  })));
  return cljs.core.with_meta.call(null, rewrite_clj.node.forms_node.call(null, b), cljs.core.meta.call(null, cljs.core.first.call(null, b)));
};
rewrite_clj.parser.parse_string = function(a) {
  return rewrite_clj.parser.parse.call(null, rewrite_clj.reader.indexing_push_back_reader.call(null, a));
};
rewrite_clj.parser.parse_string_all = function(a) {
  return rewrite_clj.parser.parse_all.call(null, rewrite_clj.reader.indexing_push_back_reader.call(null, a));
};
clojure.zip = {};
clojure.zip.zipper = function(a, b, c, d) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, null], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("zip", "branch?", "zip/branch?", -998880862), a, new cljs.core.Keyword("zip", "children", "zip/children", -940194589), b, new cljs.core.Keyword("zip", "make-node", "zip/make-node", 1103800591), c], null));
};
clojure.zip.seq_zip = function(a) {
  return clojure.zip.zipper.call(null, cljs.core.seq_QMARK_, cljs.core.identity, function(a, c) {
    return cljs.core.with_meta.call(null, c, cljs.core.meta.call(null, a));
  }, a);
};
clojure.zip.vector_zip = function(a) {
  return clojure.zip.zipper.call(null, cljs.core.vector_QMARK_, cljs.core.seq, function(a, c) {
    return cljs.core.with_meta.call(null, cljs.core.vec.call(null, c), cljs.core.meta.call(null, a));
  }, a);
};
clojure.zip.xml_zip = function(a) {
  return clojure.zip.zipper.call(null, cljs.core.complement.call(null, cljs.core.string_QMARK_), cljs.core.comp.call(null, cljs.core.seq, new cljs.core.Keyword(null, "content", "content", 15833224)), function(a, c) {
    return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "content", "content", 15833224), cljs.core.truth_(c) ? cljs.core.apply.call(null, cljs.core.vector, c) : c);
  }, a);
};
clojure.zip.node = function(a) {
  return a.call(null, 0);
};
clojure.zip.branch_QMARK_ = function(a) {
  return (new cljs.core.Keyword("zip", "branch?", "zip/branch?", -998880862)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a)).call(null, clojure.zip.node.call(null, a));
};
clojure.zip.children = function(a) {
  if (cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, a))) {
    return (new cljs.core.Keyword("zip", "children", "zip/children", -940194589)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a)).call(null, clojure.zip.node.call(null, a));
  }
  throw "called children on a leaf node";
};
clojure.zip.make_node = function(a, b, c) {
  return (new cljs.core.Keyword("zip", "make-node", "zip/make-node", 1103800591)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a)).call(null, b, c);
};
clojure.zip.path = function(a) {
  return (new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565)).cljs$core$IFn$_invoke$arity$1(a.call(null, 1));
};
clojure.zip.lefts = function(a) {
  return cljs.core.seq.call(null, (new cljs.core.Keyword(null, "l", "l", 1395893423)).cljs$core$IFn$_invoke$arity$1(a.call(null, 1)));
};
clojure.zip.rights = function(a) {
  return (new cljs.core.Keyword(null, "r", "r", -471384190)).cljs$core$IFn$_invoke$arity$1(a.call(null, 1));
};
clojure.zip.down = function(a) {
  if (cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, a))) {
    var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null), d = clojure.zip.children.call(null, a), e = cljs.core.seq.call(null, d), f = cljs.core.first.call(null, e);
    e = cljs.core.next.call(null, e);
    return cljs.core.truth_(d) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565), cljs.core.truth_(c) ? cljs.core.conj.call(null, (new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565)).cljs$core$IFn$_invoke$arity$1(c), b) : new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null), new cljs.core.Keyword(null, "ppath", "ppath", -1758182784), c, new cljs.core.Keyword(null, "r", "r", -471384190), e], null)], null), cljs.core.meta.call(null, a)) : null;
  }
  return null;
};
clojure.zip.up = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null), d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "l", "l", 1395893423));
  var e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ppath", "ppath", -1758182784)), f = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565)), g = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "r", "r", -471384190));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "changed?", "changed?", -437828330));
  return cljs.core.truth_(f) ? (f = cljs.core.peek.call(null, f), cljs.core.with_meta.call(null, cljs.core.truth_(d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null, a, f, cljs.core.concat.call(null, c, cljs.core.cons.call(null, b, g))), cljs.core.truth_(e) ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0) : e], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [f, e], null), cljs.core.meta.call(null, a))) : null;
};
clojure.zip.root = function(a) {
  for (;;) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "end", "end", -268185958), a.call(null, 1))) {
      return clojure.zip.node.call(null, a);
    }
    var b = clojure.zip.up.call(null, a);
    if (cljs.core.truth_(b)) {
      a = b;
    } else {
      return clojure.zip.node.call(null, a);
    }
  }
};
clojure.zip.right = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "r", "r", -471384190)), f = cljs.core.seq.call(null, e), g = cljs.core.first.call(null, f);
  f = cljs.core.next.call(null, f);
  return cljs.core.truth_(cljs.core.truth_(c) ? e : c) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.conj.call(null, d, b), new cljs.core.Keyword(null, "r", "r", -471384190), f)], null), cljs.core.meta.call(null, a)) : null;
};
clojure.zip.rightmost = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "r", "r", -471384190));
  return cljs.core.truth_(cljs.core.truth_(c) ? e : c) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.last.call(null, e), cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.apply.call(null, cljs.core.conj, d, b, cljs.core.butlast.call(null, e)), new cljs.core.Keyword(null, "r", "r", -471384190), null)], null), cljs.core.meta.call(null, a)) : a;
};
clojure.zip.left = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "r", "r", -471384190));
  return cljs.core.truth_(cljs.core.truth_(c) ? cljs.core.seq.call(null, d) : c) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null, d), cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.pop.call(null, d), new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.cons.call(null, b, e))], null), cljs.core.meta.call(null, a)) : null;
};
clojure.zip.leftmost = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "r", "r", -471384190));
  return cljs.core.truth_(cljs.core.truth_(c) ? cljs.core.seq.call(null, d) : c) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, d), cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.concat.call(null, cljs.core.rest.call(null, d), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [b], null), e))], null), cljs.core.meta.call(null, a)) : a;
};
clojure.zip.insert_left = function(a, b) {
  var c = cljs.core.nth.call(null, a, 0, null), d = cljs.core.nth.call(null, a, 1, null);
  d = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  var e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "l", "l", 1395893423));
  if (null == d) {
    throw "Insert at top";
  }
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.conj.call(null, e, b), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, a));
};
clojure.zip.insert_right = function(a, b) {
  var c = cljs.core.nth.call(null, a, 0, null), d = cljs.core.nth.call(null, a, 1, null);
  d = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  var e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (null == d) {
    throw "Insert at top";
  }
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.cons.call(null, b, e), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, a));
};
clojure.zip.replace = function(a, b) {
  cljs.core.nth.call(null, a, 0, null);
  var c = cljs.core.nth.call(null, a, 1, null);
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, a));
};
clojure.zip.edit = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return clojure.zip.edit.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
clojure.zip.edit.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return clojure.zip.replace.call(null, a, cljs.core.apply.call(null, b, clojure.zip.node.call(null, a), c));
};
clojure.zip.edit.cljs$lang$maxFixedArity = 2;
clojure.zip.edit.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.zip.insert_child = function(a, b) {
  return clojure.zip.replace.call(null, a, clojure.zip.make_node.call(null, a, clojure.zip.node.call(null, a), cljs.core.cons.call(null, b, clojure.zip.children.call(null, a))));
};
clojure.zip.append_child = function(a, b) {
  return clojure.zip.replace.call(null, a, clojure.zip.make_node.call(null, a, clojure.zip.node.call(null, a), cljs.core.concat.call(null, clojure.zip.children.call(null, a), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null))));
};
clojure.zip.next = function(a) {
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "end", "end", -268185958), a.call(null, 1))) {
    return a;
  }
  var b = clojure.zip.branch_QMARK_.call(null, a);
  b = cljs.core.truth_(b) ? clojure.zip.down.call(null, a) : b;
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = clojure.zip.right.call(null, a);
  if (cljs.core.truth_(b)) {
    return b;
  }
  for (;;) {
    if (cljs.core.truth_(clojure.zip.up.call(null, a))) {
      b = clojure.zip.right.call(null, clojure.zip.up.call(null, a));
      if (cljs.core.truth_(b)) {
        return b;
      }
      a = clojure.zip.up.call(null, a);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.node.call(null, a), new cljs.core.Keyword(null, "end", "end", -268185958)], null);
    }
  }
};
clojure.zip.prev = function(a) {
  var b = clojure.zip.left.call(null, a);
  if (cljs.core.truth_(b)) {
    for (a = b;;) {
      if (b = clojure.zip.branch_QMARK_.call(null, a), b = cljs.core.truth_(b) ? clojure.zip.down.call(null, a) : b, cljs.core.truth_(b)) {
        a = clojure.zip.rightmost.call(null, b);
      } else {
        return a;
      }
    }
  } else {
    return clojure.zip.up.call(null, a);
  }
};
clojure.zip.end_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "end", "end", -268185958), a.call(null, 1));
};
clojure.zip.remove = function(a) {
  cljs.core.nth.call(null, a, 0, null);
  var b = cljs.core.nth.call(null, a, 1, null);
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "l", "l", 1395893423)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ppath", "ppath", -1758182784)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (null == b) {
    throw "Remove at top";
  }
  if (0 < cljs.core.count.call(null, c)) {
    for (a = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null, c), cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.pop.call(null, c), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, a));;) {
      if (b = clojure.zip.branch_QMARK_.call(null, a), b = cljs.core.truth_(b) ? clojure.zip.down.call(null, a) : b, cljs.core.truth_(b)) {
        a = clojure.zip.rightmost.call(null, b);
      } else {
        return a;
      }
    }
  } else {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null, a, cljs.core.peek.call(null, e), f), cljs.core.truth_(d) ? cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0) : d], null), cljs.core.meta.call(null, a));
  }
};
rewrite_clj.zip = {};
rewrite_clj.zip.whitespace = {};
rewrite_clj.zip.whitespace.whitespace_QMARK_ = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.whitespace_QMARK_.call(null, a);
};
rewrite_clj.zip.whitespace.linebreak_QMARK_ = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.linebreak_QMARK_.call(null, a);
};
rewrite_clj.zip.whitespace.comment_QMARK_ = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.comment_QMARK_.call(null, a);
};
rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = function(a) {
  var b = rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? cljs.core.not.call(null, rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null, a)) : b;
};
rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.whitespace_or_comment_QMARK_.call(null, a);
};
rewrite_clj.zip.whitespace.skip = function(a, b, c) {
  return cljs.core.first.call(null, cljs.core.drop_while.call(null, b, cljs.core.take_while.call(null, cljs.core.complement.call(null, clojure.zip.end_QMARK_), cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, a, c)))));
};
rewrite_clj.zip.whitespace.skip_whitespace = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.right, a);
};
rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.whitespace.skip.call(null, a, rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_, b);
};
rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2;
rewrite_clj.zip.whitespace.skip_whitespace_left = function(a) {
  return rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.left, a);
};
rewrite_clj.zip.whitespace.prepend_space = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return rewrite_clj.zip.whitespace.prepend_space.call(null, a, 1);
};
rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.zip.insert_left.call(null, a, rewrite_clj.node.spaces.call(null, b));
};
rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2;
rewrite_clj.zip.whitespace.append_space = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return rewrite_clj.zip.whitespace.append_space.call(null, a, 1);
};
rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.zip.insert_right.call(null, a, rewrite_clj.node.spaces.call(null, b));
};
rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2;
rewrite_clj.zip.whitespace.prepend_newline = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return rewrite_clj.zip.whitespace.prepend_newline.call(null, a, 1);
};
rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.zip.insert_left.call(null, a, rewrite_clj.node.newlines.call(null, b));
};
rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2;
rewrite_clj.zip.whitespace.append_newline = function(a) {
  switch(arguments.length) {
    case 1:
      return rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return rewrite_clj.zip.whitespace.append_newline.call(null, a, 1);
};
rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.zip.insert_right.call(null, a, rewrite_clj.node.newlines.call(null, b));
};
rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2;
rewrite_clj.zip.move = {};
rewrite_clj.zip.move.right = function(a) {
  a = null == a ? null : clojure.zip.right.call(null, a);
  return null == a ? null : rewrite_clj.zip.whitespace.skip_whitespace.call(null, a);
};
rewrite_clj.zip.move.left = function(a) {
  a = null == a ? null : clojure.zip.left.call(null, a);
  return null == a ? null : rewrite_clj.zip.whitespace.skip_whitespace_left.call(null, a);
};
rewrite_clj.zip.move.down = function(a) {
  a = null == a ? null : clojure.zip.down.call(null, a);
  return null == a ? null : rewrite_clj.zip.whitespace.skip_whitespace.call(null, a);
};
rewrite_clj.zip.move.up = function(a) {
  a = null == a ? null : clojure.zip.up.call(null, a);
  return null == a ? null : rewrite_clj.zip.whitespace.skip_whitespace_left.call(null, a);
};
rewrite_clj.zip.move.next = function(a) {
  if (cljs.core.truth_(a)) {
    var b = null == a ? null : clojure.zip.next.call(null, a);
    b = null == b ? null : rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.next, b);
    return cljs.core.truth_(b) ? b : cljs.core.vary_meta.call(null, a, cljs.core.assoc, new cljs.core.Keyword("rewrite-clj.zip.move", "end?", "rewrite-clj.zip.move/end?", 891526475), !0);
  }
  return null;
};
rewrite_clj.zip.move.end_QMARK_ = function(a) {
  var b = cljs.core.not.call(null, a);
  if (b) {
    return b;
  }
  b = clojure.zip.end_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? b : (new cljs.core.Keyword("rewrite-clj.zip.move", "end?", "rewrite-clj.zip.move/end?", 891526475)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
};
rewrite_clj.zip.move.rightmost_QMARK_ = function(a) {
  return null == rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.right.call(null, a));
};
rewrite_clj.zip.move.leftmost_QMARK_ = function(a) {
  return null == rewrite_clj.zip.whitespace.skip_whitespace_left.call(null, clojure.zip.left.call(null, a));
};
rewrite_clj.zip.move.prev = function(a) {
  a = null == a ? null : clojure.zip.prev.call(null, a);
  return null == a ? null : rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.prev, a);
};
rewrite_clj.zip.move.leftmost = function(a) {
  a = null == a ? null : clojure.zip.leftmost.call(null, a);
  return null == a ? null : rewrite_clj.zip.whitespace.skip_whitespace.call(null, a);
};
rewrite_clj.zip.move.rightmost = function(a) {
  a = null == a ? null : clojure.zip.rightmost.call(null, a);
  return null == a ? null : rewrite_clj.zip.whitespace.skip_whitespace_left.call(null, a);
};
rewrite_clj.zip.utils = {};
rewrite_clj.zip.utils.update_in_path = function(a, b, c) {
  var d = cljs.core.nth.call(null, a, 0, null), e = cljs.core.nth.call(null, a, 1, null), f = cljs.core.get.call(null, e, b);
  return cljs.core.seq.call(null, f) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, cljs.core.assoc.call(null, e, b, c.call(null, f), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, a)) : a;
};
rewrite_clj.zip.utils.remove_right = function(a) {
  return rewrite_clj.zip.utils.update_in_path.call(null, a, new cljs.core.Keyword(null, "r", "r", -471384190), cljs.core.next);
};
rewrite_clj.zip.utils.remove_left = function(a) {
  return rewrite_clj.zip.utils.update_in_path.call(null, a, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.pop);
};
rewrite_clj.zip.utils.remove_while = function(a, b) {
  for (;;) {
    var c = clojure.zip.prev.call(null, a);
    if (cljs.core.not.call(null, function() {
      var a = c;
      return cljs.core.truth_(a) ? b.call(null, c) : a;
    }())) {
      return a;
    }
    a = clojure.zip.remove.call(null, a);
  }
};
rewrite_clj.zip.utils.remove_right_while = function(a, b) {
  for (;;) {
    var c = clojure.zip.right.call(null, a);
    if (cljs.core.truth_(c)) {
      if (cljs.core.truth_(b.call(null, c))) {
        a = rewrite_clj.zip.utils.remove_right.call(null, a);
      } else {
        return a;
      }
    } else {
      return a;
    }
  }
};
rewrite_clj.zip.utils.remove_left_while = function(a, b) {
  for (;;) {
    var c = clojure.zip.left.call(null, a);
    if (cljs.core.truth_(c)) {
      if (cljs.core.truth_(b.call(null, c))) {
        a = rewrite_clj.zip.utils.remove_left.call(null, a);
      } else {
        return a;
      }
    } else {
      return a;
    }
  }
};
rewrite_clj.zip.utils.remove_and_move_left = function(a) {
  cljs.core.nth.call(null, a, 0, null);
  var b = cljs.core.nth.call(null, a, 1, null);
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "l", "l", 1395893423));
  return cljs.core.seq.call(null, c) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null, c), cljs.core.assoc.call(null, cljs.core.update_in.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "l", "l", 1395893423)], null), cljs.core.pop), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, 
  a)) : null;
};
rewrite_clj.zip.utils.remove_and_move_right = function(a) {
  cljs.core.nth.call(null, a, 0, null);
  var b = cljs.core.nth.call(null, a, 1, null);
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "r", "r", -471384190));
  return cljs.core.seq.call(null, c) ? cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, c), cljs.core.assoc.call(null, cljs.core.update_in.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "r", "r", -471384190)], null), cljs.core.next), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, 
  a)) : null;
};
rewrite_clj.zip.utils.remove_and_move_up = function(a) {
  cljs.core.nth.call(null, a, 0, null);
  var b = cljs.core.nth.call(null, a, 1, null);
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "l", "l", 1395893423)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ppath", "ppath", -1758182784)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "pnodes", "pnodes", 1739080565)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "r", "r", -471384190));
  if (null == b) {
    throw Error("Remove at top");
  }
  return 0 < cljs.core.count.call(null, c) ? clojure.zip.up.call(null, cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null, c), cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "l", "l", 1395893423), cljs.core.pop.call(null, c), new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0)], null), cljs.core.meta.call(null, a))) : cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null, a, cljs.core.peek.call(null, e), f), cljs.core.truth_(d) ? cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "changed?", "changed?", -437828330), !0) : d], null), cljs.core.meta.call(null, a));
};
rewrite_clj.zip.removez = {};
rewrite_clj.zip.removez.remove_trailing_space = function(a, b) {
  return rewrite_clj.zip.utils.remove_right_while.call(null, a, b);
};
rewrite_clj.zip.removez.remove_preceding_space = function(a, b) {
  return rewrite_clj.zip.utils.remove_left_while.call(null, a, b);
};
rewrite_clj.zip.removez.remove = function(a) {
  if (!cljs.core.truth_(a)) {
    throw Error("Assert failed: zloc");
  }
  var b = rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.prev, clojure.zip.remove.call(null, rewrite_clj.zip.removez.remove_trailing_space.call(null, cljs.core.truth_(function() {
    var b = rewrite_clj.zip.move.rightmost_QMARK_.call(null, a);
    return cljs.core.truth_(b) ? b : rewrite_clj.zip.move.leftmost_QMARK_.call(null, a);
  }()) ? rewrite_clj.zip.removez.remove_preceding_space.call(null, a, rewrite_clj.zip.whitespace.whitespace_QMARK_) : a, rewrite_clj.zip.whitespace.whitespace_QMARK_)));
  if (!cljs.core.truth_(b)) {
    throw Error("Assert failed: %");
  }
  return b;
};
rewrite_clj.zip.removez.remove_preserve_newline = function(a) {
  if (!cljs.core.truth_(a)) {
    throw Error("Assert failed: zloc");
  }
  var b = rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.prev, clojure.zip.remove.call(null, rewrite_clj.zip.removez.remove_trailing_space.call(null, cljs.core.truth_(function() {
    var b = rewrite_clj.zip.move.rightmost_QMARK_.call(null, a);
    return cljs.core.truth_(b) ? b : rewrite_clj.zip.move.leftmost_QMARK_.call(null, a);
  }()) ? rewrite_clj.zip.removez.remove_preceding_space.call(null, a, function(a) {
    var b = rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null, a);
    return cljs.core.truth_(b) ? cljs.core.not.call(null, rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null, a)) : b;
  }) : a, function(a) {
    var b = rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null, a);
    return cljs.core.truth_(b) ? cljs.core.not.call(null, rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null, a)) : b;
  })));
  if (!cljs.core.truth_(b)) {
    throw Error("Assert failed: %");
  }
  return b;
};
rewrite_clj.zip.base = {};
rewrite_clj.zip.base.edn_STAR_ = function(a) {
  return clojure.zip.zipper.call(null, rewrite_clj.node.inner_QMARK_, cljs.core.comp.call(null, cljs.core.seq, rewrite_clj.node.children), rewrite_clj.node.replace_children, a);
};
rewrite_clj.zip.base.edn = function(a) {
  for (;;) {
    if (cljs.core._EQ_.call(null, rewrite_clj.node.tag.call(null, a), new cljs.core.Keyword(null, "forms", "forms", 2045992350))) {
      a = rewrite_clj.zip.base.edn_STAR_.call(null, a);
      var b = rewrite_clj.zip.whitespace.skip_whitespace.call(null, clojure.zip.down.call(null, a));
      return cljs.core.truth_(b) ? b : a;
    }
    a = rewrite_clj.node.forms_node.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null));
  }
};
rewrite_clj.zip.base.tag = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.tag.call(null, a);
};
rewrite_clj.zip.base.sexpr = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.sexpr.call(null, a);
};
rewrite_clj.zip.base.child_sexprs = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.child_sexprs.call(null, a);
};
rewrite_clj.zip.base.length = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  a = null == a ? null : rewrite_clj.node.length.call(null, a);
  return cljs.core.truth_(a) ? a : 0;
};
rewrite_clj.zip.base.of_string = function(a) {
  a = null == a ? null : rewrite_clj.parser.parse_string_all.call(null, a);
  return null == a ? null : rewrite_clj.zip.base.edn.call(null, a);
};
rewrite_clj.zip.base.string = function(a) {
  a = null == a ? null : clojure.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.string.call(null, a);
};
rewrite_clj.zip.base.root_string = function(a) {
  a = null == a ? null : clojure.zip.root.call(null, a);
  return null == a ? null : rewrite_clj.node.string.call(null, a);
};
rewrite_clj.zip.findz = {};
rewrite_clj.zip.findz.tag_predicate = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return rewrite_clj.zip.findz.tag_predicate.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
rewrite_clj.zip.findz.tag_predicate.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null);
  return cljs.core.truth_(c) ? function(b, c) {
    return function(b) {
      var d = cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, b), a);
      return d ? c.call(null, b) : d;
    };
  }(b, c) : function(b, c) {
    return function(b) {
      return cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, b), a);
    };
  }(b, c);
};
rewrite_clj.zip.findz.tag_predicate.cljs$lang$maxFixedArity = 1;
rewrite_clj.zip.findz.tag_predicate.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
rewrite_clj.zip.findz.in_range_QMARK_ = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "row", "row", -570139521)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "col", "col", -1959363084));
  a = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "end-row", "end-row", -545103581));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "end-col", "end-col", -724155879));
  var f = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  b = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "row", "row", -570139521));
  f = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "col", "col", -1959363084));
  var g = b >= d;
  return g && (g = b <= a) ? (d = cljs.core._EQ_.call(null, b, d) ? f >= e : !0) ? cljs.core._EQ_.call(null, b, a) ? f <= c : !0 : d : g;
};
rewrite_clj.zip.findz.find = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.first.call(null, cljs.core.drop_while.call(null, cljs.core.complement.call(null, c), cljs.core.take_while.call(null, cljs.core.complement.call(null, rewrite_clj.zip.move.end_QMARK_), cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, b, a)))));
};
rewrite_clj.zip.findz.find.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_last_by_pos = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_last_by_pos.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_last_by_pos.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_last_by_pos.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_last_by_pos.call(null, a, b, cljs.core.constantly.call(null, !0));
};
rewrite_clj.zip.findz.find_last_by_pos.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.last.call(null, cljs.core.filter.call(null, function(a) {
    var d = c.call(null, a);
    return cljs.core.truth_(d) ? rewrite_clj.zip.findz.in_range_QMARK_.call(null, cljs.core.meta.call(null, clojure.zip.node.call(null, a)), b) : d;
  }, cljs.core.take_while.call(null, cljs.core.complement.call(null, rewrite_clj.zip.move.end_QMARK_), cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, clojure.zip.next, a)))));
};
rewrite_clj.zip.findz.find_last_by_pos.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_depth_first = function(a, b) {
  return rewrite_clj.zip.findz.find.call(null, a, rewrite_clj.zip.move.next, b);
};
rewrite_clj.zip.findz.find_next = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_next.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_next.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_next.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_next.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find_next.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = null == a ? null : b.call(null, a);
  return null == a ? null : rewrite_clj.zip.findz.find.call(null, a, b, c);
};
rewrite_clj.zip.findz.find_next.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_next_depth_first = function(a, b) {
  return rewrite_clj.zip.findz.find_next.call(null, a, rewrite_clj.zip.move.next, b);
};
rewrite_clj.zip.findz.find_tag = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_tag.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_tag.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_tag.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_tag.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find_tag.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return rewrite_clj.zip.findz.find.call(null, a, b, function(a) {
    return cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, a), c);
  });
};
rewrite_clj.zip.findz.find_tag.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_next_tag = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_next_tag.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_next_tag.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_next_tag.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_next_tag.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find_next_tag.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return rewrite_clj.zip.findz.find_next.call(null, a, b, rewrite_clj.zip.findz.tag_predicate.call(null, c));
};
rewrite_clj.zip.findz.find_next_tag.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_tag_by_pos = function(a, b, c) {
  return rewrite_clj.zip.findz.find_last_by_pos.call(null, a, b, function(a) {
    return cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, a), c);
  });
};
rewrite_clj.zip.findz.find_token = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_token.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_token.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_token.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find_token.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return rewrite_clj.zip.findz.find.call(null, a, b, rewrite_clj.zip.findz.tag_predicate.call(null, new cljs.core.Keyword(null, "token", "token", -1211463215), c));
};
rewrite_clj.zip.findz.find_token.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_next_token = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_next_token.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_next_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_next_token.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_next_token.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find_next_token.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return rewrite_clj.zip.findz.find_token.call(null, b.call(null, a), b, c);
};
rewrite_clj.zip.findz.find_next_token.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_value = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_value.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_value.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_value.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_value.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find_value.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.set_QMARK_.call(null, c) ? cljs.core.comp.call(null, c, rewrite_clj.zip.base.sexpr) : function(a) {
    return cljs.core._EQ_.call(null, rewrite_clj.zip.base.sexpr.call(null, a), c);
  };
  return rewrite_clj.zip.findz.find_token.call(null, a, b, d);
};
rewrite_clj.zip.findz.find_value.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.findz.find_next_value = function(a) {
  switch(arguments.length) {
    case 2:
      return rewrite_clj.zip.findz.find_next_value.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return rewrite_clj.zip.findz.find_next_value.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
rewrite_clj.zip.findz.find_next_value.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return rewrite_clj.zip.findz.find_next_value.call(null, a, rewrite_clj.zip.move.right, b);
};
rewrite_clj.zip.findz.find_next_value.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return rewrite_clj.zip.findz.find_value.call(null, b.call(null, a), b, c);
};
rewrite_clj.zip.findz.find_next_value.cljs$lang$maxFixedArity = 3;
rewrite_clj.zip.insert = {};
rewrite_clj.zip.insert.space = rewrite_clj.node.spaces.call(null, 1);
rewrite_clj.zip.insert.insert = function(a, b, c, d, e) {
  e = rewrite_clj.node.coerce.call(null, e);
  var f = a.call(null, d);
  return cljs.core.reduce.call(null, b, d, cljs.core.truth_(function() {
    var a = cljs.core.not.call(null, f);
    return a ? a : rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null, f);
  }()) ? cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e], null), c) : cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space, e], null), c));
};
rewrite_clj.zip.insert.insert_right = function(a, b) {
  return rewrite_clj.zip.insert.insert.call(null, clojure.zip.right, clojure.zip.insert_right, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null), a, b);
};
rewrite_clj.zip.insert.insert_left = function(a, b) {
  return rewrite_clj.zip.insert.insert.call(null, clojure.zip.left, clojure.zip.insert_left, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null), a, b);
};
rewrite_clj.zip.insert.insert_child = function(a, b) {
  return rewrite_clj.zip.insert.insert.call(null, clojure.zip.down, clojure.zip.insert_child, cljs.core.PersistentVector.EMPTY, a, b);
};
rewrite_clj.zip.insert.append_child = function(a, b) {
  return rewrite_clj.zip.insert.insert.call(null, function(a) {
    a = null == a ? null : clojure.zip.down.call(null, a);
    return null == a ? null : clojure.zip.rightmost.call(null, a);
  }, clojure.zip.append_child, cljs.core.PersistentVector.EMPTY, a, b);
};
rewrite_clj.zip.editz = {};
rewrite_clj.zip.editz.replace = function(a, b) {
  return clojure.zip.replace.call(null, a, rewrite_clj.node.coerce.call(null, b));
};
rewrite_clj.zip.editz.edit_node = function(a, b) {
  return rewrite_clj.node.coerce.call(null, b.call(null, rewrite_clj.node.sexpr.call(null, a)));
};
rewrite_clj.zip.editz.edit = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return rewrite_clj.zip.editz.edit.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
rewrite_clj.zip.editz.edit.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return clojure.zip.edit.call(null, a, rewrite_clj.zip.editz.edit_node, function(a) {
    return cljs.core.apply.call(null, b, a, c);
  });
};
rewrite_clj.zip.editz.edit.cljs$lang$maxFixedArity = 2;
rewrite_clj.zip.editz.edit.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
rewrite_clj.zip.editz.splice = function(a) {
  if (cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, a))) {
    var b = cljs.core.seq.call(null, cljs.core.drop_while.call(null, rewrite_clj.node.whitespace_QMARK_, cljs.core.reverse.call(null, cljs.core.drop_while.call(null, rewrite_clj.node.whitespace_QMARK_, clojure.zip.children.call(null, a)))));
    return b ? (a = rewrite_clj.zip.utils.remove_and_move_right.call(null, cljs.core.reduce.call(null, clojure.zip.insert_right, a, b)), b = rewrite_clj.zip.whitespace.skip_whitespace.call(null, a), cljs.core.truth_(b) ? b : a) : rewrite_clj.zip.removez.remove.call(null, a);
  }
  return a;
};
rewrite_clj.zip.editz.edit_token = function(a, b) {
  var c = rewrite_clj.zip.base.sexpr.call(null, a);
  b = "string" === typeof c ? b.call(null, c) : c instanceof cljs.core.Keyword ? cljs.core.keyword.call(null, cljs.core.namespace.call(null, c), b.call(null, cljs.core.name.call(null, c))) : c instanceof cljs.core.Symbol ? cljs.core.symbol.call(null, cljs.core.namespace.call(null, c), b.call(null, cljs.core.name.call(null, c))) : null;
  return clojure.zip.replace.call(null, a, rewrite_clj.node.token_node.call(null, b));
};
rewrite_clj.zip.editz.edit_multi_line = function(a, b) {
  b = cljs.core.update_in.call(null, clojure.zip.node.call(null, a), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lines", "lines", -700165781)], null), cljs.core.comp.call(null, b, cljs.core.vec));
  return clojure.zip.replace.call(null, a, b);
};
rewrite_clj.zip.editz.prefix = function(a, b) {
  var c = rewrite_clj.zip.base.tag.call(null, a), d = c instanceof cljs.core.Keyword ? c.fqn : null;
  switch(d) {
    case "token":
      return rewrite_clj.zip.editz.edit_token.call(null, a, function(a, c) {
        return function(a) {
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
        };
      }(c, d));
    case "multi-line":
      return rewrite_clj.zip.editz.edit_multi_line.call(null, a, function(a, c) {
        return function(d) {
          return cljs.core.empty_QMARK_.call(null, d) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null) : cljs.core.update_in.call(null, d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [0], null), function(a, c) {
            return function(a) {
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
            };
          }(a, c));
        };
      }(c, d));
    default:
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
  }
};
rewrite_clj.zip.editz.suffix = function(a, b) {
  var c = rewrite_clj.zip.base.tag.call(null, a), d = c instanceof cljs.core.Keyword ? c.fqn : null;
  switch(d) {
    case "token":
      return rewrite_clj.zip.editz.edit_token.call(null, a, function(a, c) {
        return function(a) {
          return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
        };
      }(c, d));
    case "multi-line":
      return rewrite_clj.zip.editz.edit_multi_line.call(null, a, function(a, c) {
        return function(a) {
          return cljs.core.empty_QMARK_.call(null, a) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null) : cljs.core.concat.call(null, cljs.core.butlast.call(null, a), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, a)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
        };
      }(c, d));
    default:
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
  }
};
rewrite_clj.zip.seqz = {};
rewrite_clj.zip.seqz.seq_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "vector", "vector", 1902966158), null, new cljs.core.Keyword(null, "list", "list", 765357683), null, new cljs.core.Keyword(null, "set", "set", 304602554), null, new cljs.core.Keyword(null, "map", "map", 1371690461), null, new cljs.core.Keyword(null, "forms", "forms", 2045992350), null], null), null), rewrite_clj.zip.base.tag.call(null, a));
};
rewrite_clj.zip.seqz.list_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, a), new cljs.core.Keyword(null, "list", "list", 765357683));
};
rewrite_clj.zip.seqz.vector_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, a), new cljs.core.Keyword(null, "vector", "vector", 1902966158));
};
rewrite_clj.zip.seqz.set_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, a), new cljs.core.Keyword(null, "set", "set", 304602554));
};
rewrite_clj.zip.seqz.map_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.zip.base.tag.call(null, a), new cljs.core.Keyword(null, "map", "map", 1371690461));
};
rewrite_clj.zip.seqz.map_seq = function(a, b) {
  if (!cljs.core.truth_(rewrite_clj.zip.seqz.seq_QMARK_.call(null, b))) {
    throw Error("Assert failed: (seq? zloc)");
  }
  var c = rewrite_clj.zip.move.down.call(null, b);
  return cljs.core.truth_(c) ? (b = a.call(null, c), c = null == b ? null : cljs.core.iterate.call(null, function(b, c, f) {
    return function(b) {
      b = rewrite_clj.zip.move.right.call(null, b);
      return cljs.core.truth_(b) ? a.call(null, b) : null;
    };
  }(b, c, c), b), c = null == c ? null : cljs.core.take_while.call(null, cljs.core.identity, c), c = null == c ? null : cljs.core.last.call(null, c), null == c ? null : rewrite_clj.zip.move.up.call(null, c)) : b;
};
rewrite_clj.zip.seqz.map_vals = function(a, b) {
  if (!cljs.core.truth_(rewrite_clj.zip.seqz.map_QMARK_.call(null, b))) {
    throw Error("Assert failed: (map? zloc)");
  }
  for (var c = rewrite_clj.zip.move.down.call(null, b);;) {
    if (cljs.core.not.call(null, function() {
      var a = c;
      return cljs.core.truth_(a) ? clojure.zip.node.call(null, c) : a;
    }())) {
      return b;
    }
    var d = rewrite_clj.zip.move.right.call(null, c);
    if (cljs.core.truth_(d)) {
      var e = a.call(null, d);
      cljs.core.truth_(e) ? (d = e, b = rewrite_clj.zip.move.right.call(null, d), d = rewrite_clj.zip.move.up.call(null, d), c = b, b = d) : c = d = rewrite_clj.zip.move.right.call(null, d);
    } else {
      return b;
    }
  }
};
rewrite_clj.zip.seqz.map_keys = function(a, b) {
  if (!cljs.core.truth_(rewrite_clj.zip.seqz.map_QMARK_.call(null, b))) {
    throw Error("Assert failed: (map? zloc)");
  }
  for (var c = rewrite_clj.zip.move.down.call(null, b);;) {
    if (cljs.core.not.call(null, function() {
      var a = c;
      return cljs.core.truth_(a) ? clojure.zip.node.call(null, c) : a;
    }())) {
      return b;
    }
    var d = a.call(null, c);
    cljs.core.truth_(d) ? (b = rewrite_clj.zip.move.right.call(null, rewrite_clj.zip.move.right.call(null, d)), d = rewrite_clj.zip.move.up.call(null, d), c = b, b = d) : c = d = rewrite_clj.zip.move.right.call(null, rewrite_clj.zip.move.right.call(null, c));
  }
};
rewrite_clj.zip.seqz.map = function(a, b) {
  if (!cljs.core.truth_(rewrite_clj.zip.seqz.seq_QMARK_.call(null, b))) {
    throw Error("Assert failed: (seq? zloc)");
  }
  return cljs.core.truth_(rewrite_clj.zip.seqz.map_QMARK_.call(null, b)) ? rewrite_clj.zip.seqz.map_vals.call(null, a, b) : rewrite_clj.zip.seqz.map_seq.call(null, a, b);
};
rewrite_clj.zip.seqz.get = function(a, b) {
  if (!cljs.core.truth_(function() {
    var c = rewrite_clj.zip.seqz.map_QMARK_.call(null, a);
    if (cljs.core.truth_(c)) {
      return c;
    }
    c = rewrite_clj.zip.seqz.seq_QMARK_.call(null, a);
    return cljs.core.truth_(c) ? cljs.core.integer_QMARK_.call(null, b) : c;
  }())) {
    throw Error("Assert failed: (or (map? zloc) (and (seq? zloc) (integer? k)))");
  }
  if (cljs.core.truth_(rewrite_clj.zip.seqz.map_QMARK_.call(null, a))) {
    var c = null == a ? null : rewrite_clj.zip.move.down.call(null, a);
    c = null == c ? null : rewrite_clj.zip.findz.find_value.call(null, c, b);
    return null == c ? null : rewrite_clj.zip.move.right.call(null, c);
  }
  return cljs.core.nth.call(null, function() {
    var b = rewrite_clj.zip.move.down.call(null, a);
    b = null == b ? null : cljs.core.iterate.call(null, rewrite_clj.zip.move.right, b);
    return null == b ? null : cljs.core.take_while.call(null, cljs.core.identity, b);
  }(), b);
};
rewrite_clj.zip.seqz.assoc = function(a, b, c) {
  var d = rewrite_clj.zip.seqz.get.call(null, a, b);
  if (cljs.core.truth_(d)) {
    return rewrite_clj.zip.move.up.call(null, rewrite_clj.zip.editz.replace.call(null, d, c));
  }
  if (cljs.core.truth_(rewrite_clj.zip.seqz.map_QMARK_.call(null, a))) {
    return rewrite_clj.zip.insert.append_child.call(null, rewrite_clj.zip.insert.append_child.call(null, a, b), c);
  }
  throw Error(["index out of bounds: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
rewrite_clj.zip.node = clojure.zip.node;
rewrite_clj.zip.root = clojure.zip.root;
rewrite_clj.zip.of_string = rewrite_clj.zip.base.of_string;
rewrite_clj.zip.root_string = rewrite_clj.zip.base.root_string;
rewrite_clj.zip.string = rewrite_clj.zip.base.string;
rewrite_clj.zip.tag = rewrite_clj.zip.base.tag;
rewrite_clj.zip.sexpr = rewrite_clj.zip.base.sexpr;
rewrite_clj.zip.right = rewrite_clj.zip.move.right;
rewrite_clj.zip.left = rewrite_clj.zip.move.left;
rewrite_clj.zip.down = rewrite_clj.zip.move.down;
rewrite_clj.zip.up = rewrite_clj.zip.move.up;
rewrite_clj.zip.next = rewrite_clj.zip.move.next;
rewrite_clj.zip.end_QMARK_ = rewrite_clj.zip.move.end_QMARK_;
rewrite_clj.zip.rightmost_QMARK_ = rewrite_clj.zip.move.rightmost_QMARK_;
rewrite_clj.zip.leftmost_QMARK_ = rewrite_clj.zip.move.leftmost_QMARK_;
rewrite_clj.zip.prev = rewrite_clj.zip.move.prev;
rewrite_clj.zip.leftmost = rewrite_clj.zip.move.leftmost;
rewrite_clj.zip.rightmost = rewrite_clj.zip.move.rightmost;
rewrite_clj.zip.find = rewrite_clj.zip.findz.find;
rewrite_clj.zip.find_last_by_pos = rewrite_clj.zip.findz.find_last_by_pos;
rewrite_clj.zip.find_depth_first = rewrite_clj.zip.findz.find_depth_first;
rewrite_clj.zip.find_next = rewrite_clj.zip.findz.find_next;
rewrite_clj.zip.find_next_depth_first = rewrite_clj.zip.findz.find_next_depth_first;
rewrite_clj.zip.find_tag = rewrite_clj.zip.findz.find_tag;
rewrite_clj.zip.find_next_tag = rewrite_clj.zip.findz.find_next_tag;
rewrite_clj.zip.find_tag_by_pos = rewrite_clj.zip.findz.find_tag_by_pos;
rewrite_clj.zip.find_token = rewrite_clj.zip.findz.find_token;
rewrite_clj.zip.find_next_token = rewrite_clj.zip.findz.find_next_token;
rewrite_clj.zip.find_value = rewrite_clj.zip.findz.find_value;
rewrite_clj.zip.find_next_value = rewrite_clj.zip.findz.find_next_value;
rewrite_clj.zip.replace = rewrite_clj.zip.editz.replace;
rewrite_clj.zip.edit = rewrite_clj.zip.editz.edit;
rewrite_clj.zip.splice = rewrite_clj.zip.editz.splice;
rewrite_clj.zip.prefix = rewrite_clj.zip.editz.prefix;
rewrite_clj.zip.suffix = rewrite_clj.zip.editz.suffix;
rewrite_clj.zip.remove = rewrite_clj.zip.removez.remove;
rewrite_clj.zip.remove_preserve_newline = rewrite_clj.zip.removez.remove_preserve_newline;
rewrite_clj.zip.insert_right = rewrite_clj.zip.insert.insert_right;
rewrite_clj.zip.insert_left = rewrite_clj.zip.insert.insert_left;
rewrite_clj.zip.insert_child = rewrite_clj.zip.insert.insert_child;
rewrite_clj.zip.append_child = rewrite_clj.zip.insert.append_child;
rewrite_clj.zip.seq_QMARK_ = rewrite_clj.zip.seqz.seq_QMARK_;
rewrite_clj.zip.list_QMARK_ = rewrite_clj.zip.seqz.list_QMARK_;
rewrite_clj.zip.vector_QMARK_ = rewrite_clj.zip.seqz.vector_QMARK_;
rewrite_clj.zip.set_QMARK_ = rewrite_clj.zip.seqz.set_QMARK_;
rewrite_clj.zip.map_QMARK_ = rewrite_clj.zip.seqz.map_QMARK_;
rewrite_clj.zip.map_vals = rewrite_clj.zip.seqz.map_vals;
rewrite_clj.zip.map_keys = rewrite_clj.zip.seqz.map_keys;
rewrite_clj.zip.map = rewrite_clj.zip.seqz.map;
rewrite_clj.zip.get = rewrite_clj.zip.seqz.get;
rewrite_clj.zip.assoc = rewrite_clj.zip.seqz.assoc;
goog.crypt.Hash = function() {
  this.blockSize = -1;
};
goog.crypt.Hash.prototype.reset = goog.abstractMethod;
goog.crypt.Hash.prototype.update = goog.abstractMethod;
goog.crypt.Hash.prototype.digest = goog.abstractMethod;
goog.crypt.Sha2 = function(a, b) {
  goog.crypt.Hash.call(this);
  this.blockSize = goog.crypt.Sha2.BLOCKSIZE_;
  this.chunk_ = goog.global.Uint8Array ? new Uint8Array(this.blockSize) : Array(this.blockSize);
  this.total_ = this.inChunk_ = 0;
  this.hash_ = [];
  this.numHashBlocks_ = a;
  this.initHashBlocks_ = b;
  this.w_ = goog.global.Int32Array ? new Int32Array(64) : Array(64);
  goog.isDef(goog.crypt.Sha2.Kx_) || (goog.crypt.Sha2.Kx_ = goog.global.Int32Array ? new Int32Array(goog.crypt.Sha2.K_) : goog.crypt.Sha2.K_);
  this.reset();
};
goog.inherits(goog.crypt.Sha2, goog.crypt.Hash);
goog.crypt.Sha2.BLOCKSIZE_ = 64;
goog.crypt.Sha2.PADDING_ = goog.array.concat(128, goog.array.repeat(0, goog.crypt.Sha2.BLOCKSIZE_ - 1));
goog.crypt.Sha2.prototype.reset = function() {
  this.total_ = this.inChunk_ = 0;
  this.hash_ = goog.global.Int32Array ? new Int32Array(this.initHashBlocks_) : goog.array.clone(this.initHashBlocks_);
};
goog.crypt.Sha2.prototype.computeChunk_ = function() {
  var a = this.chunk_;
  goog.asserts.assert(a.length == this.blockSize);
  for (var b = this.w_, c = 0, d = 0; d < a.length;) {
    b[c++] = a[d] << 24 | a[d + 1] << 16 | a[d + 2] << 8 | a[d + 3], d = 4 * c;
  }
  for (a = 16; 64 > a; a++) {
    d = b[a - 15] | 0;
    c = b[a - 2] | 0;
    var e = (b[a - 16] | 0) + ((d >>> 7 | d << 25) ^ (d >>> 18 | d << 14) ^ d >>> 3) | 0, f = (b[a - 7] | 0) + ((c >>> 17 | c << 15) ^ (c >>> 19 | c << 13) ^ c >>> 10) | 0;
    b[a] = e + f | 0;
  }
  c = this.hash_[0] | 0;
  d = this.hash_[1] | 0;
  var g = this.hash_[2] | 0, h = this.hash_[3] | 0, k = this.hash_[4] | 0, l = this.hash_[5] | 0, m = this.hash_[6] | 0;
  e = this.hash_[7] | 0;
  for (a = 0; 64 > a; a++) {
    var n = ((c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10)) + (c & d ^ c & g ^ d & g) | 0;
    f = k & l ^ ~k & m;
    e = e + ((k >>> 6 | k << 26) ^ (k >>> 11 | k << 21) ^ (k >>> 25 | k << 7)) | 0;
    f = f + (goog.crypt.Sha2.Kx_[a] | 0) | 0;
    f = e + (f + (b[a] | 0) | 0) | 0;
    e = m;
    m = l;
    l = k;
    k = h + f | 0;
    h = g;
    g = d;
    d = c;
    c = f + n | 0;
  }
  this.hash_[0] = this.hash_[0] + c | 0;
  this.hash_[1] = this.hash_[1] + d | 0;
  this.hash_[2] = this.hash_[2] + g | 0;
  this.hash_[3] = this.hash_[3] + h | 0;
  this.hash_[4] = this.hash_[4] + k | 0;
  this.hash_[5] = this.hash_[5] + l | 0;
  this.hash_[6] = this.hash_[6] + m | 0;
  this.hash_[7] = this.hash_[7] + e | 0;
};
goog.crypt.Sha2.prototype.update = function(a, b) {
  goog.isDef(b) || (b = a.length);
  var c = 0, d = this.inChunk_;
  if (goog.isString(a)) {
    for (; c < b;) {
      this.chunk_[d++] = a.charCodeAt(c++), d == this.blockSize && (this.computeChunk_(), d = 0);
    }
  } else {
    if (goog.isArrayLike(a)) {
      for (; c < b;) {
        var e = a[c++];
        if (!("number" == typeof e && 0 <= e && 255 >= e && e == (e | 0))) {
          throw Error("message must be a byte array");
        }
        this.chunk_[d++] = e;
        d == this.blockSize && (this.computeChunk_(), d = 0);
      }
    } else {
      throw Error("message must be string or array");
    }
  }
  this.inChunk_ = d;
  this.total_ += b;
};
goog.crypt.Sha2.prototype.digest = function() {
  var a = [], b = 8 * this.total_;
  56 > this.inChunk_ ? this.update(goog.crypt.Sha2.PADDING_, 56 - this.inChunk_) : this.update(goog.crypt.Sha2.PADDING_, this.blockSize - (this.inChunk_ - 56));
  for (var c = 63; 56 <= c; c--) {
    this.chunk_[c] = b & 255, b /= 256;
  }
  this.computeChunk_();
  for (c = b = 0; c < this.numHashBlocks_; c++) {
    for (var d = 24; 0 <= d; d -= 8) {
      a[b++] = this.hash_[c] >> d & 255;
    }
  }
  return a;
};
goog.crypt.Sha2.K_ = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 
2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
goog.crypt.Sha256 = function() {
  goog.crypt.Sha2.call(this, 8, goog.crypt.Sha256.INIT_HASH_BLOCK_);
};
goog.inherits(goog.crypt.Sha256, goog.crypt.Sha2);
goog.crypt.Sha256.INIT_HASH_BLOCK_ = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];
atomist.npm = {};
atomist.npm.node$module$semver = require("semver");
atomist.npm.get_json = function(a) {
  return http.util.json_decode.call(null, cljs_node_io.core.slurp.call(null, a));
};
atomist.npm.packages = function(a) {
  return cljs.core.map.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, b), a], null);
  }, cljs.core.seq.call(null, (new cljs.core.Keyword(null, "dependencies", "dependencies", 1108064605)).cljs$core$IFn$_invoke$arity$1(atomist.npm.get_json.call(null, a))));
};
atomist.npm.edit = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  a = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "basedir", "basedir", 2135113679));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "path", "path", -188191168));
  var d = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  b = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "name", "name", 1843675177));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "version", "version", 425292698));
  a = cljs_node_io.core.file.call(null, a, c);
  return cljs.core.truth_(a.exists()) ? cljs_node_io.core.spit.call(null, a, atomist.json.clj__GT_json.call(null, cljs.core.update_in.call(null, atomist.json.json__GT_clj.call(null, cljs_node_io.core.slurp.call(null, a)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dependencies"], null), cljs.core.assoc, b, d), new cljs.core.Keyword(null, "pprint", "pprint", 1220198395), !0)) : null;
};
atomist.npm.run = function(a) {
  try {
    atomist.cljs_log.info.call(null, "package.json ", a);
    var b = cljs_node_io.core.file.call(null, a);
    if (cljs.core.truth_(b.exists())) {
      var c = atomist.npm.get_json.call(null, b), d = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, atomist.npm.packages.call(null, b));
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "npm-project-deps", new cljs.core.Keyword(null, "data", "data", -232669377), d, new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "npm-deps", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
      "name", "name", 1843675177), "project-coordinates", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "version", "version", 425292698), (new cljs.core.Keyword(null, "version", "version", 425292698)).cljs$core$IFn$_invoke$arity$1(c)], null), new cljs.core.Keyword(null, 
      "abbreviation", "abbreviation", -2106594275), "coords", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null));
    }
    return cljs.core.PersistentVector.EMPTY;
  } catch (e) {
    return atomist.cljs_log.info.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join("")), atomist.cljs_log.info.call(null, "error running fingerprintPackageJson"), cljs.core.PersistentVector.EMPTY;
  }
};
atomist.fingerprint = {};
atomist.fingerprint.string__GT_bytes = function(a) {
  return goog.crypt.stringToUtf8ByteArray(a);
};
atomist.fingerprint.digest = function(a, b) {
  a.update(b);
  return a.digest();
};
atomist.fingerprint.bytes__GT_hex = function(a) {
  return goog.crypt.byteArrayToHex(a);
};
atomist.fingerprint.sha_256 = function(a) {
  return atomist.fingerprint.bytes__GT_hex.call(null, atomist.fingerprint.digest.call(null, new goog.crypt.Sha256, atomist.fingerprint.string__GT_bytes.call(null, a)));
};
atomist.fingerprint.dependencies = function(a) {
  return rewrite_clj.zip.right.call(null, rewrite_clj.zip.find_next_value.call(null, rewrite_clj.zip.down.call(null, a), new cljs.core.Keyword(null, "dependencies", "dependencies", 1108064605)));
};
atomist.fingerprint.project_dependencies = function(a) {
  return cljs.core.map.call(null, function(a) {
    return cljs.core.conj.call(null, cljs.core.rest.call(null, a), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))].join(""));
  }, cljs.core.sort_by.call(null, cljs.core.comp.call(null, cljs.core.name, cljs.core.first), rewrite_clj.zip.sexpr.call(null, atomist.fingerprint.dependencies.call(null, rewrite_clj.zip.of_string.call(null, cljs_node_io.core.slurp.call(null, a))))));
};
atomist.fingerprint.get_version = function(a) {
  return cljs.core.nth.call(null, cljs.reader.read_string.call(null, cljs_node_io.core.slurp.call(null, a)), 2);
};
atomist.fingerprint.get_name = function(a) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.reader.read_string.call(null, cljs_node_io.core.slurp.call(null, a)), 1))].join("");
};
atomist.fingerprint.run = function(a) {
  return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.PersistentVector.EMPTY, function() {
    var b = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, atomist.fingerprint.project_dependencies.call(null, a));
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "clojure-project-deps", new cljs.core.Keyword(null, "data", "data", -232669377), b, new cljs.core.Keyword(null, "abbreviation", "abbreviation", -2106594275), "lein-deps", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null);
  }()), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "project-coordinates", new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), atomist.fingerprint.get_name.call(null, a), new cljs.core.Keyword(null, "version", "version", 425292698), atomist.fingerprint.get_version.call(null, a)], null), new cljs.core.Keyword(null, "abbreviation", "abbreviation", 
  -2106594275), "coords", new cljs.core.Keyword(null, "version", "version", 425292698), "0.0.1"], null));
};
clojure.data = {};
clojure.data.atom_diff = function(a, b) {
  return cljs.core._EQ_.call(null, a, b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, null], null);
};
clojure.data.vectorize = function(a) {
  return cljs.core.seq.call(null, a) ? cljs.core.reduce.call(null, function(a, c) {
    var b = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    return cljs.core.assoc.call(null, a, b, c);
  }, cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.apply.call(null, cljs.core.max, cljs.core.keys.call(null, a)), null)), a) : null;
};
clojure.data.diff_associative_key = function(a, b, c) {
  var d = cljs.core.get.call(null, a, c), e = cljs.core.get.call(null, b, c), f = clojure.data.diff.call(null, d, e), g = cljs.core.nth.call(null, f, 0, null), h = cljs.core.nth.call(null, f, 1, null);
  f = cljs.core.nth.call(null, f, 2, null);
  a = cljs.core.contains_QMARK_.call(null, a, c);
  b = cljs.core.contains_QMARK_.call(null, b, c);
  d = a && b && (null != f || null == d && null == e);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [!a || null == g && d ? null : cljs.core.PersistentArrayMap.createAsIfByAssoc([c, g]), !b || null == h && d ? null : cljs.core.PersistentArrayMap.createAsIfByAssoc([c, h]), d ? cljs.core.PersistentArrayMap.createAsIfByAssoc([c, f]) : null], null);
};
clojure.data.diff_associative = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.data.diff_associative.call(null, a, b, clojure.set.union.call(null, cljs.core.keys.call(null, a), cljs.core.keys.call(null, b)));
};
clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(a, b) {
    return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.merge, a, b));
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, null], null), cljs.core.map.call(null, cljs.core.partial.call(null, clojure.data.diff_associative_key, a, b), c));
};
clojure.data.diff_associative.cljs$lang$maxFixedArity = 3;
clojure.data.diff_sequential = function(a, b) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, clojure.data.vectorize, clojure.data.diff_associative.call(null, cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.vec.call(null, a), cljs.core.vector_QMARK_.call(null, b) ? b : cljs.core.vec.call(null, b), cljs.core.range.call(null, function() {
    var c = cljs.core.count.call(null, a), d = cljs.core.count.call(null, b);
    return c > d ? c : d;
  }()))));
};
clojure.data.diff_set = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_empty.call(null, clojure.set.difference.call(null, a, b)), cljs.core.not_empty.call(null, clojure.set.difference.call(null, b, a)), cljs.core.not_empty.call(null, clojure.set.intersection.call(null, a, b))], null);
};
clojure.data.EqualityPartition = function() {
};
clojure.data.equality_partition = function(a) {
  if (null != a && null != a.clojure$data$EqualityPartition$equality_partition$arity$1) {
    return a.clojure$data$EqualityPartition$equality_partition$arity$1(a);
  }
  var b = clojure.data.equality_partition[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = clojure.data.equality_partition._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "EqualityPartition.equality-partition", a);
};
clojure.data.Diff = function() {
};
clojure.data.diff_similar = function(a, b) {
  if (null != a && null != a.clojure$data$Diff$diff_similar$arity$2) {
    return a.clojure$data$Diff$diff_similar$arity$2(a, b);
  }
  var c = clojure.data.diff_similar[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = clojure.data.diff_similar._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Diff.diff-similar", a);
};
goog.object.set(clojure.data.EqualityPartition, "null", !0);
goog.object.set(clojure.data.equality_partition, "null", function(a) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "string", !0);
goog.object.set(clojure.data.equality_partition, "string", function(a) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "number", !0);
goog.object.set(clojure.data.equality_partition, "number", function(a) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "array", !0);
goog.object.set(clojure.data.equality_partition, "array", function(a) {
  return new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
});
goog.object.set(clojure.data.EqualityPartition, "function", !0);
goog.object.set(clojure.data.equality_partition, "function", function(a) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "boolean", !0);
goog.object.set(clojure.data.equality_partition, "boolean", function(a) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "_", !0);
goog.object.set(clojure.data.equality_partition, "_", function(a) {
  return (null != a ? a.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMap$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, a)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, a)) ? new cljs.core.Keyword(null, "map", "map", 1371690461) : (null != a ? a.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISet$ || (a.cljs$lang$protocol_mask$partition0$ ? 
  0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, a)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, a)) ? new cljs.core.Keyword(null, "set", "set", 304602554) : (null != a ? a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, a)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, 
  a)) ? new cljs.core.Keyword(null, "sequential", "sequential", -1082983960) : new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.Diff, "null", !0);
goog.object.set(clojure.data.diff_similar, "null", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "string", !0);
goog.object.set(clojure.data.diff_similar, "string", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "number", !0);
goog.object.set(clojure.data.diff_similar, "number", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "array", !0);
goog.object.set(clojure.data.diff_similar, "array", function(a, b) {
  return clojure.data.diff_sequential.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "function", !0);
goog.object.set(clojure.data.diff_similar, "function", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "boolean", !0);
goog.object.set(clojure.data.diff_similar, "boolean", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "_", !0);
goog.object.set(clojure.data.diff_similar, "_", function(a, b) {
  return function() {
    var b = clojure.data.equality_partition.call(null, a);
    b = b instanceof cljs.core.Keyword ? b.fqn : null;
    switch(b) {
      case "atom":
        return clojure.data.atom_diff;
      case "set":
        return clojure.data.diff_set;
      case "sequential":
        return clojure.data.diff_sequential;
      case "map":
        return clojure.data.diff_associative;
      default:
        throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
    }
  }().call(null, a, b);
});
clojure.data.diff = function(a, b) {
  return cljs.core._EQ_.call(null, a, b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null) : cljs.core._EQ_.call(null, clojure.data.equality_partition.call(null, a), clojure.data.equality_partition.call(null, b)) ? clojure.data.diff_similar.call(null, a, b) : clojure.data.atom_diff.call(null, a, b);
};
var editors = {core:{}};
cljs.nodejs.enable_util_print_BANG_.call(null);
editors.core.get_version = function(a) {
  return cljs.core.nth.call(null, cljs.reader.read_string.call(null, a), 2);
};
editors.core.get_name = function(a) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.reader.read_string.call(null, a), 1))].join("");
};
editors.core.update_version = function(a, b) {
  return rewrite_clj.zip.root_string.call(null, rewrite_clj.zip.edit.call(null, rewrite_clj.zip.right.call(null, rewrite_clj.zip.right.call(null, rewrite_clj.zip.down.call(null, rewrite_clj.zip.of_string.call(null, a)))), cljs.core.constantly.call(null, b)));
};
editors.core.project_dependencies = function(a) {
  return cljs.core.map.call(null, function(a) {
    return cljs.core.conj.call(null, cljs.core.rest.call(null, a), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))].join(""));
  }, cljs.core.sort_by.call(null, cljs.core.comp.call(null, cljs.core.name, cljs.core.first), rewrite_clj.zip.sexpr.call(null, rewrite_clj.zip.right.call(null, rewrite_clj.zip.find_next_value.call(null, rewrite_clj.zip.down.call(null, rewrite_clj.zip.of_string.call(null, a)), new cljs.core.Keyword(null, "dependencies", "dependencies", 1108064605))))));
};
editors.core.edit_library = function(a, b, c) {
  return rewrite_clj.zip.root_string.call(null, rewrite_clj.zip.edit.call(null, rewrite_clj.zip.right.call(null, rewrite_clj.zip.find.call(null, rewrite_clj.zip.find_next_value.call(null, rewrite_clj.zip.down.call(null, rewrite_clj.zip.of_string.call(null, a)), new cljs.core.Keyword(null, "dependencies", "dependencies", 1108064605)), rewrite_clj.zip.next, function(a) {
    a = rewrite_clj.zip.sexpr.call(null, a);
    return cljs.core.truth_(a) ? a instanceof cljs.core.Symbol && cljs.core._EQ_.call(null, b, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")) : null;
  })), cljs.core.constantly.call(null, c)));
};
atomist.deps = {};
atomist.deps.get_file = function(a, b) {
  a = cljs_node_io.core.file.call(null, a, b);
  return cljs.core.truth_(a.exists()) ? a : null;
};
atomist.deps.file_type = function(a) {
  return cljs.core._EQ_.call(null, a.getName(), "project.clj") ? new cljs.core.Keyword(null, "lein", "lein", -1911371426) : cljs.core._EQ_.call(null, a.getName(), "pom.xml") ? new cljs.core.Keyword(null, "pom", "pom", 569805085) : cljs.core._EQ_.call(null, a.getName(), "package.json") ? new cljs.core.Keyword(null, "npm", "npm", 785664792) : new cljs.core.Keyword(null, "unknown", "unknown", -935977881);
};
atomist.deps.get_deps = function(a) {
  var b = atomist.deps.get_file.call(null, a, "package.json");
  cljs.core.truth_(b) ? a = b : (b = atomist.deps.get_file.call(null, a, "project.clj"), a = cljs.core.truth_(b) ? b : atomist.deps.get_file.call(null, a, "pom.xml"));
  if (cljs.core.truth_(a)) {
    switch(b = atomist.deps.file_type.call(null, a), b instanceof cljs.core.Keyword ? b.fqn : null) {
      case "npm":
        return atomist.npm.packages.call(null, a);
      case "lein":
        return atomist.fingerprint.project_dependencies.call(null, a);
      case "pom":
        return "";
      default:
        return cljs.core.PersistentVector.EMPTY;
    }
  } else {
    return null;
  }
};
atomist.deps.get_fingerprint = function(a) {
  return new Promise(function(b, c) {
    return b.call(null, function() {
      var b = function() {
        var b = atomist.deps.get_file.call(null, a, "package.json");
        if (cljs.core.truth_(b)) {
          return b;
        }
        b = atomist.deps.get_file.call(null, a, "project.clj");
        return cljs.core.truth_(b) ? b : atomist.deps.get_file.call(null, a, "pom.xml");
      }();
      if (cljs.core.truth_(b)) {
        var c = function() {
          var a = atomist.deps.file_type.call(null, b);
          switch(a instanceof cljs.core.Keyword ? a.fqn : null) {
            case "npm":
              return atomist.npm.run.call(null, b);
            case "lein":
              return atomist.fingerprint.run.call(null, b);
            case "pom":
              return atomist.maven.run.call(null, b);
            default:
              return cljs.core.empty.call(null, cljs.core.PersistentVector.EMPTY);
          }
        }();
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, function(a, b, c) {
          return function(a) {
            return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "sha", "sha", -950317251), atomist.fingerprint.sha_256.call(null, atomist.json.json_str.call(null, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a))), new cljs.core.Keyword(null, "data", "data", -232669377), atomist.json.json_str.call(null, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Keyword(null, "value", "value", 305978217), 
            atomist.json.json_str.call(null, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a)));
          };
        }(c, b, b), c));
      }
      return null;
    }());
  });
};
atomist.deps.edit = function(a, b, c) {
  var d = atomist.deps.get_file.call(null, a, "package.json");
  cljs.core.truth_(d) || (d = atomist.deps.get_file.call(null, a, "project.clj"), d = cljs.core.truth_(d) ? d : atomist.deps.get_file.call(null, a, "pom.xml"));
  if (cljs.core.truth_(d)) {
    switch(d = atomist.deps.file_type.call(null, d), d instanceof cljs.core.Keyword ? d.fqn : null) {
      case "npm":
        return atomist.npm.edit.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "basedir", "basedir", 2135113679), a, new cljs.core.Keyword(null, "path", "path", -188191168), "package.json"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), b, new cljs.core.Keyword(null, "version", "version", 425292698), c], null));
      case "lein":
        return editors.core.edit_library.call(null, a, b, c);
      case "pom":
        return atomist.maven.edit.call(null, a, b, c);
      default:
        return cljs.core.PersistentVector.EMPTY;
    }
  } else {
    return null;
  }
};
atomist.impact = {};
atomist.impact.push_impact_QMARK_ = function(a) {
  return 0 < cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(a) {
    return cljs.core.second.call(null, a);
  }, a));
};
atomist.impact.get_team_id = function(a) {
  var b = (new cljs.core.Keyword(null, "team_id", "team_id", 88655897)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "extensions", "extensions", -1103629196)).cljs$core$IFn$_invoke$arity$1(a));
  return cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "team", "team", 1355747699)).cljs$core$IFn$_invoke$arity$1(a));
};
atomist.impact.get_repo_details = function(a) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a))) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "owner", "owner", -392611939)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "org", "org", 1495985)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, 
  "repo", "repo", -1999060679)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "after", "after", 594996914)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "push", "push", 799791267)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a)))))))), (new cljs.core.Keyword(null, "name", 
  "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "repo", "repo", -1999060679)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "after", "after", 594996914)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "push", "push", 799791267)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a))))))), 
  (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "channels", "channels", 1132759174)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "repo", "repo", -1999060679)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "after", "after", 594996914)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "push", "push", 799791267)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, 
  (new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a)))))))))], null) : null;
};
atomist.impact.before_commit = function(a) {
  return (new cljs.core.Keyword(null, "before", "before", -1633692388)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "push", "push", 799791267)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a)))));
};
atomist.impact.after_commit = function(a) {
  return (new cljs.core.Keyword(null, "after", "after", 594996914)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "push", "push", 799791267)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a)))));
};
atomist.impact.impact_id = function(a) {
  return (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a))));
};
atomist.impact.sha_impacts_QMARK_ = function(a) {
  a = null == a ? null : (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a);
  a = null == a ? null : (new cljs.core.Keyword(null, "PushImpact", "PushImpact", -2059310124)).cljs$core$IFn$_invoke$arity$1(a);
  a = null == a ? null : cljs.core.first.call(null, a);
  a = null == a ? null : (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a);
  a = null == a ? null : atomist.json.read_str.call(null, a, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), cljs.core.keyword);
  return null == a ? null : atomist.impact.push_impact_QMARK_.call(null, a);
};
atomist.impact.diff_fingerprint_data = function(a, b) {
  return cljs.core.zipmap.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "from", "from", 1815293044), new cljs.core.Keyword(null, "to", "to", 192099007)], null), clojure.data.diff.call(null, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, a), cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, b)));
};
atomist.impact.call_js = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.impact.call_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.impact.call_js.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.into_array.call(null, cljs.core.map.call(null, cljs.core.clj__GT_js, b));
  return a.apply(a, b);
};
atomist.impact.call_js.cljs$lang$maxFixedArity = 1;
atomist.impact.call_js.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
atomist.impact.get_fingerprint_data = function(a, b, c) {
  var d = cljs.core.async.chan.call(null);
  a = a.call(null, b, c);
  a.then(function(a, b) {
    return function(c) {
      var d = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(a, b, d) {
        return function() {
          var e = function() {
            return function(a, b, c, d) {
              return function() {
                var b = null, c = function() {
                  var a = [null, null, null, null, null, null, null];
                  a[0] = b;
                  a[1] = 1;
                  return a;
                }, d = function(b) {
                  for (;;) {
                    a: {
                      try {
                        for (;;) {
                          var c = a.call(null, b);
                          if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var d = c;
                            break a;
                          }
                        }
                      } catch (Q) {
                        if (Q instanceof Object) {
                          b[5] = Q, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw Q;
                        }
                      }
                    }
                    if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      return d;
                    }
                  }
                };
                b = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return d.call(this, a);
                  }
                  throw Error("Invalid arity: " + (arguments.length - 1));
                };
                b.cljs$core$IFn$_invoke$arity$0 = c;
                b.cljs$core$IFn$_invoke$arity$1 = d;
                return b;
              }();
            }(function(a, b, d) {
              return function(a) {
                var d = a[1];
                return 1 === d ? (d = atomist.json.read_str.call(null, c), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 2, b, d)) : 2 === d ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]) : null;
              };
            }(a, b, d), a, b, d);
          }(), f = function() {
            var b = e.call(null);
            b[6] = a;
            return b;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
        };
      }(d, a, b));
      return d;
    };
  }(d, a)).catch(function(a, b) {
    return function(c) {
      var d = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(a, b, d) {
        return function() {
          var e = function() {
            return function(a, b, c, d) {
              return function() {
                var b = null, c = function() {
                  var a = [null, null, null, null, null, null, null];
                  a[0] = b;
                  a[1] = 1;
                  return a;
                }, d = function(b) {
                  for (;;) {
                    a: {
                      try {
                        for (;;) {
                          var c = a.call(null, b);
                          if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var d = c;
                            break a;
                          }
                        }
                      } catch (Q) {
                        if (Q instanceof Object) {
                          b[5] = Q, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw Q;
                        }
                      }
                    }
                    if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      return d;
                    }
                  }
                };
                b = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return d.call(this, a);
                  }
                  throw Error("Invalid arity: " + (arguments.length - 1));
                };
                b.cljs$core$IFn$_invoke$arity$0 = c;
                b.cljs$core$IFn$_invoke$arity$1 = d;
                return b;
              }();
            }(function(a, b, d) {
              return function(a) {
                var d = a[1];
                return 1 === d ? (d = [new cljs.core.Keyword(null, "error", "error", -978969032)], d = cljs.core.PersistentHashMap.fromArrays(d, [c]), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 2, b, d)) : 2 === d ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]) : null;
              };
            }(a, b, d), a, b, d);
          }(), f = function() {
            var b = e.call(null);
            b[6] = a;
            return b;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
        };
      }(d, a, b));
      return d;
    };
  }(d, a));
  return d;
};
atomist.impact.diff_handler = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "get-fingerprint", "get-fingerprint", 1789628678)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "fp-name", "fp-name", -1607557744)), f = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, n) {
    return function() {
      var g = function() {
        return function(a, b, c, d, e, f, g) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (D) {
                    if (D instanceof Object) {
                      b[5] = D, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw D;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g) {
          return function(h) {
            var k = h[1];
            if (7 === k) {
              var l = h;
              cljs.core.truth_(h[2]) ? l[1] = 11 : l[1] = 12;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === k) {
              var m = function() {
                return function(a, b, c, d, e, f, g) {
                  return function(a) {
                    return atomist.impact.call_js.call(null, (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(a), e);
                  };
                }(k, b, c, d, e, f, g);
              }();
              h[7] = m;
              l = h;
              cljs.core.truth_(a) ? l[1] = 2 : l[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === k) {
              m = h[7];
              var n = h[8], p = h[9], q = cljs.core.filter.call(null, m, h[2]), r = atomist.impact.get_team_id.call(null, e);
              l = atomist.impact.get_repo_details.call(null, e);
              m = cljs.core.nth.call(null, l, 0, null);
              var t = cljs.core.nth.call(null, l, 1, null), u = cljs.core.nth.call(null, l, 2, null);
              h[10] = q;
              h[8] = l;
              h[11] = u;
              h[12] = r;
              h[13] = t;
              h[9] = m;
              l = h;
              cljs.core.truth_(m) ? l[1] = 5 : l[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === k) {
              q = h[10];
              n = h[8];
              u = h[11];
              r = h[12];
              t = h[13];
              var y = h[14];
              p = h[9];
              var v = h[2], w = atomist.impact.diff_fingerprint_data.call(null, y, v);
              m = function() {
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, y, v, w, x, z, F, A, I) {
                  return function(a, b) {
                    try {
                      return atomist.impact.call_js.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.select_keys.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, F, new cljs.core.Keyword(null, "data", "data", -232669377), k, new cljs.core.Keyword(null, "owner", "owner", -392611939), d, new cljs.core.Keyword(null, "repo", "repo", -1999060679), e, new cljs.core.Keyword(null, "channel", 
                      "channel", 734187692), f), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "from", "from", 1815293044), new cljs.core.Keyword(null, "data", "data", -232669377)], null), g), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "to", "to", 192099007), new cljs.core.Keyword(null, "data", "data", -232669377)], null), h), new cljs.core.PersistentVector(null, 6, 
                      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "owner", "owner", -392611939), new cljs.core.Keyword(null, "repo", "repo", -1999060679), new cljs.core.Keyword(null, "channel", "channel", 734187692), new cljs.core.Keyword(null, "from", "from", 1815293044), new cljs.core.Keyword(null, "to", "to", 192099007)], null))), a + 1;
                    } catch (ea) {
                      return b = ea, console.log(b.stack), atomist.cljs_log.error.call(null, b, "Error calling handler"), a;
                    }
                  };
                }(q, r, n, p, t, u, y, v, w, q, n, u, r, t, y, p, v, w, k, b, c, d, e, f, g);
              }();
              m = cljs.core.reduce.call(null, m, 0, q);
              h[2] = m;
              h[1] = 13;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 13 === k ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, h, h[2]) : 6 === k ? (p = h[9], h[2] = p, h[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === k ? (h[2] = cljs.core.PersistentVector.EMPTY, h[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 12 === k ? (q = h[10], t = h[13], p = h[9], m = cljs.core.empty_QMARK_.call(null, q), m = atomist.cljs_log.infof.call(null, "%s skipped -\x3e %s %s empty?-\x3e%s", g, p, t, m), h[15] = 
            m, h[2] = 0, h[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === k ? (h[2] = a, h[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === k ? (m = atomist.impact.before_commit.call(null, e), m = (new cljs.core.Keyword(null, "sha", "sha", -950317251)).cljs$core$IFn$_invoke$arity$1(m), m = atomist.impact.get_fingerprint_data.call(null, f, m, g), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, h, 14, m)) : 9 === k ? (t = h[13], h[2] = 
            t, h[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === k ? (t = h[13], l = h, cljs.core.truth_(t) ? l[1] = 8 : l[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === k ? (y = h[2], m = atomist.impact.after_commit.call(null, e), m = (new cljs.core.Keyword(null, "sha", "sha", -950317251)).cljs$core$IFn$_invoke$arity$1(m), m = atomist.impact.get_fingerprint_data.call(null, f, m, g), h[14] = y, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, 
            h, 15, m)) : 10 === k ? (h[2] = h[2], h[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === k ? (q = h[10], m = cljs.core.empty_QMARK_.call(null, q), h[2] = !m, h[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c, d, e, f, n), b, c, d, e, f, n);
      }(), h = function() {
        var a = g.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(f, b, c, c, d, e));
  return f;
};
atomist.impact.diff_fp = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "fp-name", "fp-name", -1607557744)), d = cljs.core.some.call(null, function(a, b, c, d) {
    return function(a) {
      return cljs.core._EQ_.call(null, d, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a)) ? a : null;
    };
  }(a, b, b, c), (new cljs.core.Keyword(null, "fingerprints", "fingerprints", -567401931)).cljs$core$IFn$_invoke$arity$1(atomist.impact.before_commit.call(null, b)));
  a = cljs.core.some.call(null, function(a, b, c, d, k) {
    return function(a) {
      return cljs.core._EQ_.call(null, k, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a)) ? a : null;
    };
  }(d, a, b, b, c), (new cljs.core.Keyword(null, "fingerprints", "fingerprints", -567401931)).cljs$core$IFn$_invoke$arity$1(atomist.impact.after_commit.call(null, b)));
  c = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "from", "from", 1815293044), d, new cljs.core.Keyword(null, "to", "to", 192099007), a);
  return atomist.impact.diff_handler.call(null, cljs.core.truth_(cljs.core.truth_(d) ? !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "sha", "sha", -950317251)).cljs$core$IFn$_invoke$arity$1(d), (new cljs.core.Keyword(null, "sha", "sha", -950317251)).cljs$core$IFn$_invoke$arity$1(a)) : d) ? cljs.core.concat.call(null, (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(b), (new cljs.core.Keyword(null, "no-diff-handlers", "no-diff-handlers", -1931263418)).cljs$core$IFn$_invoke$arity$1(b)) : 
  (new cljs.core.Keyword(null, "no-diff-handlers", "no-diff-handlers", -1931263418)).cljs$core$IFn$_invoke$arity$1(b), c);
};
atomist.impact.check_push_impact = function(a) {
  atomist.cljs_log.info.call(null, "sha-impacts ", atomist.impact.sha_impacts_QMARK_.call(null, a), " - push impact id is ", atomist.impact.impact_id.call(null, a));
  return cljs.core.async.reduce.call(null, cljs.core._PLUS_, 0, cljs.core.async.merge.call(null, cljs.core.map.call(null, function(b) {
    return atomist.impact.diff_fp.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "fp-name", "fp-name", -1607557744), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)));
  }, (new cljs.core.Keyword(null, "fingerprints", "fingerprints", -567401931)).cljs$core$IFn$_invoke$arity$1(atomist.impact.after_commit.call(null, a)))));
};
atomist.impact.process_push_impact = function(a, b, c, d) {
  return atomist.impact.check_push_impact.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "get-fingerprint", "get-fingerprint", 1789628678), b, new cljs.core.Keyword(null, "handlers", "handlers", 79528781), c, new cljs.core.Keyword(null, "no-diff-handlers", "no-diff-handlers", -1931263418), d));
};
var cljfmt = {core:{}};
cljfmt.core.zwhitespace_QMARK_ = rewrite_clj.zip.whitespace.whitespace_QMARK_;
cljfmt.core.zlinebreak_QMARK_ = rewrite_clj.zip.whitespace.linebreak_QMARK_;
cljfmt.core.includes_QMARK_ = clojure.string.includes_QMARK_;
cljfmt.core.edit_all = function(a, b, c) {
  for (a = cljs.core.truth_(b.call(null, a)) ? c.call(null, a) : a;;) {
    var d = rewrite_clj.zip.find_next.call(null, a, clojure.zip.next, b);
    if (cljs.core.truth_(d)) {
      a = c.call(null, d);
    } else {
      return a;
    }
  }
};
cljfmt.core.transform = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljfmt.core.transform.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljfmt.core.transform.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return rewrite_clj.zip.root.call(null, cljs.core.apply.call(null, b, rewrite_clj.zip.base.edn.call(null, a), c));
};
cljfmt.core.transform.cljs$lang$maxFixedArity = 2;
cljfmt.core.transform.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljfmt.core.surrounding_QMARK_ = function(a, b) {
  var c = b.call(null, a);
  return cljs.core.truth_(c) ? null == clojure.zip.left.call(null, a) || null == rewrite_clj.zip.whitespace.skip.call(null, clojure.zip.right, b, a) : c;
};
cljfmt.core.top_QMARK_ = function(a) {
  return cljs.core.truth_(a) ? cljs.core.not_EQ_.call(null, rewrite_clj.zip.node.call(null, a), rewrite_clj.zip.root.call(null, a)) : a;
};
cljfmt.core.surrounding_whitespace_QMARK_ = function(a) {
  var b = cljfmt.core.top_QMARK_.call(null, rewrite_clj.zip.up.call(null, a));
  return cljs.core.truth_(b) ? cljfmt.core.surrounding_QMARK_.call(null, a, cljfmt.core.zwhitespace_QMARK_) : b;
};
cljfmt.core.remove_surrounding_whitespace = function(a) {
  return cljfmt.core.transform.call(null, a, cljfmt.core.edit_all, cljfmt.core.surrounding_whitespace_QMARK_, clojure.zip.remove);
};
cljfmt.core.element_QMARK_ = function(a) {
  return cljs.core.truth_(a) ? cljs.core.not.call(null, rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_.call(null, a)) : a;
};
cljfmt.core.reader_macro_QMARK_ = function(a) {
  return cljs.core.truth_(a) ? cljs.core._EQ_.call(null, rewrite_clj.node.tag.call(null, rewrite_clj.zip.node.call(null, a)), new cljs.core.Keyword(null, "reader-macro", "reader-macro", 750056422)) : a;
};
cljfmt.core.missing_whitespace_QMARK_ = function(a) {
  var b = cljfmt.core.element_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? (b = cljs.core.not.call(null, cljfmt.core.reader_macro_QMARK_.call(null, clojure.zip.up.call(null, a)))) ? cljfmt.core.element_QMARK_.call(null, clojure.zip.right.call(null, a)) : b : b;
};
cljfmt.core.insert_missing_whitespace = function(a) {
  return cljfmt.core.transform.call(null, a, cljfmt.core.edit_all, cljfmt.core.missing_whitespace_QMARK_, rewrite_clj.zip.whitespace.append_space);
};
cljfmt.core.whitespace_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.zip.tag.call(null, a), new cljs.core.Keyword(null, "whitespace", "whitespace", -1340035483));
};
cljfmt.core.comment_QMARK_ = function(a) {
  a = null == a ? null : rewrite_clj.zip.node.call(null, a);
  return null == a ? null : rewrite_clj.node.comment_QMARK_.call(null, a);
};
cljfmt.core.line_break_QMARK_ = function(a) {
  var b = cljfmt.core.zlinebreak_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? b : cljfmt.core.comment_QMARK_.call(null, a);
};
cljfmt.core.skip_whitespace = function(a) {
  return rewrite_clj.zip.whitespace.skip.call(null, clojure.zip.next, cljfmt.core.whitespace_QMARK_, a);
};
cljfmt.core.count_newlines = function(a) {
  for (var b = 0;;) {
    if (cljs.core.truth_(cljfmt.core.zlinebreak_QMARK_.call(null, a))) {
      var c = cljfmt.core.skip_whitespace.call(null, clojure.zip.right.call(null, a));
      b = cljs.core.count.call(null, rewrite_clj.zip.string.call(null, a)) + b;
      a = c;
    } else {
      return b;
    }
  }
};
cljfmt.core.consecutive_blank_line_QMARK_ = function(a) {
  return 2 < cljfmt.core.count_newlines.call(null, a);
};
cljfmt.core.remove_whitespace_and_newlines = function(a) {
  for (;;) {
    if (cljs.core.truth_(cljfmt.core.zwhitespace_QMARK_.call(null, a))) {
      a = clojure.zip.remove.call(null, a);
    } else {
      return a;
    }
  }
};
cljfmt.core.replace_consecutive_blank_lines = function(a) {
  return cljfmt.core.remove_whitespace_and_newlines.call(null, clojure.zip.next.call(null, clojure.zip.replace.call(null, a, rewrite_clj.node.newlines.call(null, 2))));
};
cljfmt.core.remove_consecutive_blank_lines = function(a) {
  return cljfmt.core.transform.call(null, a, cljfmt.core.edit_all, cljfmt.core.consecutive_blank_line_QMARK_, cljfmt.core.replace_consecutive_blank_lines);
};
cljfmt.core.indentation_QMARK_ = function(a) {
  var b = cljfmt.core.line_break_QMARK_.call(null, clojure.zip.prev.call(null, a));
  return cljs.core.truth_(b) ? cljfmt.core.whitespace_QMARK_.call(null, a) : b;
};
cljfmt.core.comment_next_QMARK_ = function(a) {
  return cljfmt.core.comment_QMARK_.call(null, cljfmt.core.skip_whitespace.call(null, clojure.zip.next.call(null, a)));
};
cljfmt.core.line_break_next_QMARK_ = function(a) {
  return cljfmt.core.line_break_QMARK_.call(null, cljfmt.core.skip_whitespace.call(null, clojure.zip.next.call(null, a)));
};
cljfmt.core.should_indent_QMARK_ = function(a) {
  var b = cljfmt.core.line_break_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? cljs.core.not.call(null, cljfmt.core.line_break_next_QMARK_.call(null, a)) : b;
};
cljfmt.core.should_unindent_QMARK_ = function(a) {
  var b = cljfmt.core.indentation_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? cljs.core.not.call(null, cljfmt.core.comment_next_QMARK_.call(null, a)) : b;
};
cljfmt.core.unindent = function(a) {
  return cljfmt.core.transform.call(null, a, cljfmt.core.edit_all, cljfmt.core.should_unindent_QMARK_, clojure.zip.remove);
};
cljfmt.core.start_element = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.Keyword(null, "unquote-splicing", "unquote-splicing", 1295267556), new cljs.core.Keyword(null, "reader-macro", "reader-macro", 750056422), new cljs.core.Keyword(null, "unquote", "unquote", 1649741032), new cljs.core.Keyword(null, "meta*", "meta*", -949431606), new cljs.core.Keyword(null, "uneval", "uneval", 
1932037707), new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "syntax-quote", "syntax-quote", -1233164847), new cljs.core.Keyword(null, "list", "list", 765357683), new cljs.core.Keyword(null, "var", "var", -769682797), new cljs.core.Keyword(null, "quote", "quote", -262615245), new cljs.core.Keyword(null, "deref", "deref", -145586795), new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, 
"eval", "eval", -1103567905)], "#( ^ ~@ # ~ #^ #_ [ ` ( #' ' @ #{ { #\x3d".split(" "));
cljfmt.core.prior_line_string = function(a) {
  var b = a;
  for (a = cljs.core.List.EMPTY;;) {
    var c = clojure.zip.left.call(null, b);
    if (cljs.core.truth_(c)) {
      if (b = c, c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.string.call(null, rewrite_clj.zip.node.call(null, b)))].join(""), a = cljs.core.cons.call(null, c, a), !cljs.core.not.call(null, cljfmt.core.includes_QMARK_.call(null, c, "\n"))) {
        return cljs.core.apply.call(null, cljs.core.str, a);
      }
    } else {
      if (b = clojure.zip.up.call(null, b), cljs.core.truth_(b)) {
        c = b, a = cljs.core.cons.call(null, cljfmt.core.start_element.call(null, rewrite_clj.node.tag.call(null, rewrite_clj.zip.node.call(null, b))), a), b = c;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, a);
      }
    }
  }
};
cljfmt.core.last_line_in_string = function(a) {
  return cljs.core.subs.call(null, a, a.lastIndexOf("\n") + 1);
};
cljfmt.core.margin = function(a) {
  return cljs.core.count.call(null, cljfmt.core.last_line_in_string.call(null, cljfmt.core.prior_line_string.call(null, a)));
};
cljfmt.core.whitespace = function(a) {
  return rewrite_clj.node.whitespace_node.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, a, " ")));
};
cljfmt.core.coll_indent = function(a) {
  return cljfmt.core.margin.call(null, clojure.zip.leftmost.call(null, a));
};
cljfmt.core.index_of = function(a) {
  return cljs.core.count.call(null, cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, rewrite_clj.zip.left, a))) - 1;
};
cljfmt.core.list_indent = function(a) {
  return 1 < cljfmt.core.index_of.call(null, a) ? cljfmt.core.margin.call(null, rewrite_clj.zip.right.call(null, clojure.zip.leftmost.call(null, a))) : cljfmt.core.coll_indent.call(null, a);
};
cljfmt.core.indent_size = 2;
cljfmt.core.indent_width = function(a) {
  a = rewrite_clj.zip.tag.call(null, a);
  a = a instanceof cljs.core.Keyword ? a.fqn : null;
  switch(a) {
    case "list":
      return cljfmt.core.indent_size;
    case "fn":
      return cljfmt.core.indent_size + 1;
    default:
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
};
cljfmt.core.remove_namespace = function(a) {
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.call(null, cljs.core.name.call(null, a)) : a;
};
cljfmt.core.pattern_QMARK_ = function(a) {
  return a instanceof RegExp;
};
cljfmt.core.indent_matches_QMARK_ = function(a, b) {
  return a instanceof cljs.core.Symbol ? cljs.core._EQ_.call(null, a, b) : cljs.core.truth_(cljfmt.core.pattern_QMARK_.call(null, a)) ? cljs.core.re_find.call(null, a, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")) : null;
};
cljfmt.core.token_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, rewrite_clj.zip.tag.call(null, a), new cljs.core.Keyword(null, "token", "token", -1211463215));
};
cljfmt.core.token_value = function(a) {
  var b = cljfmt.core.token_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? rewrite_clj.zip.sexpr.call(null, a) : b;
};
cljfmt.core.reader_conditional_QMARK_ = function(a) {
  var b = cljfmt.core.reader_macro_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["?", null, "?@", null], null), null)).call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljfmt.core.token_value.call(null, rewrite_clj.zip.down.call(null, a)))].join("")) : b;
};
cljfmt.core.form_symbol = function(a) {
  return cljfmt.core.remove_namespace.call(null, cljfmt.core.token_value.call(null, rewrite_clj.zip.leftmost.call(null, a)));
};
cljfmt.core.index_matches_top_argument_QMARK_ = function(a, b, c) {
  return 0 < b && cljs.core._EQ_.call(null, c, cljfmt.core.index_of.call(null, cljs.core.nth.call(null, cljs.core.iterate.call(null, rewrite_clj.zip.up, a), b - 1)));
};
cljfmt.core.inner_indent = function(a, b, c, d) {
  var e = cljs.core.nth.call(null, cljs.core.iterate.call(null, rewrite_clj.zip.up, a), c);
  if (cljs.core.truth_(function() {
    var f = cljfmt.core.indent_matches_QMARK_.call(null, b, cljfmt.core.form_symbol.call(null, e));
    return cljs.core.truth_(f) ? (f = null == d) ? f : cljfmt.core.index_matches_top_argument_QMARK_.call(null, a, c, d) : f;
  }())) {
    var f = rewrite_clj.zip.up.call(null, a);
    return cljfmt.core.margin.call(null, f) + cljfmt.core.indent_width.call(null, f);
  }
  return null;
};
cljfmt.core.nth_form = function(a, b) {
  return cljs.core.reduce.call(null, function(a, b) {
    return cljs.core.truth_(a) ? b.call(null, a) : null;
  }, rewrite_clj.zip.leftmost.call(null, a), cljs.core.repeat.call(null, b, rewrite_clj.zip.right));
};
cljfmt.core.first_form_in_line_QMARK_ = function(a) {
  for (;;) {
    if (a = clojure.zip.left.call(null, a), cljs.core.truth_(a)) {
      if (!cljs.core.truth_(cljfmt.core.whitespace_QMARK_.call(null, a))) {
        var b = cljfmt.core.zlinebreak_QMARK_.call(null, a);
        return cljs.core.truth_(b) ? b : cljfmt.core.comment_QMARK_.call(null, a);
      }
    } else {
      return !0;
    }
  }
};
cljfmt.core.block_indent = function(a, b, c) {
  return cljs.core.truth_(cljfmt.core.indent_matches_QMARK_.call(null, b, cljfmt.core.form_symbol.call(null, a))) ? cljs.core.truth_(function() {
    var b = null == a ? null : cljfmt.core.nth_form.call(null, a, c + 1);
    b = null == b ? null : cljfmt.core.first_form_in_line_QMARK_.call(null, b);
    return cljs.core.truth_(b) ? cljfmt.core.index_of.call(null, a) > c : b;
  }()) ? cljfmt.core.inner_indent.call(null, a, b, 0, null) : cljfmt.core.list_indent.call(null, a) : null;
};
cljfmt.core.default_indents = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, "are", "are", 1713001856, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "cond-\x3e\x3e", "cond-\x3e\x3e", 348844960, null), new cljs.core.Symbol(null, "while", "while", -1691317983, null), new cljs.core.Symbol(null, "try", "try", -1273693247, null), new cljs.core.Symbol(null, "bound-fn", "bound-fn", 125411266, null), 
new cljs.core.Symbol(null, "match", "match", -1434376219, null), new cljs.core.Symbol(null, "testing", "testing", -1492767066, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), new cljs.core.Symbol(null, "deftype", "deftype", 1980826088, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "go", 
"go", 1493584872, null), new cljs.core.Symbol(null, "if-some", "if-some", 1960677609, null), new cljs.core.Symbol(null, "with-precision", "with-precision", 393049897, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "defstruct", "defstruct", -506568086, null), new cljs.core.Symbol(null, "doto", "doto", 1252536074, null), new cljs.core.Symbol(null, "future", "future", -776593045, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, 
"alt!", "alt!", 1759993452, null), new cljs.core.Symbol(null, "as-\x3e", "as-\x3e", 1430690540, null), new cljs.core.Symbol(null, "do", "do", 1686842252, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "extend", "extend", -817951763, null), new cljs.core.Symbol(null, "go-loop", "go-loop", 692273294, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, 
"if", "if", 1181717262, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "deftest", "deftest", 938248815, null), new cljs.core.Symbol(null, "extend-type", "extend-type", 1123355921, null), new cljs.core.Symbol(null, "defmethod", "defmethod", -579171823, null), new cljs.core.Symbol(null, "struct-map", "struct-map", -1387540878, null), new cljs.core.Symbol(null, "extend-protocol", "extend-protocol", 306378578, null), new cljs.core.Symbol(null, "cond-\x3e", 
"cond-\x3e", 561741875, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, "reify", "reify", 1885539699, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "alt!!", "alt!!", 662409428, null), new cljs.core.Symbol(null, "defprotocol", "defprotocol", 1388695348, null), 
new cljs.core.Symbol(null, "letfn", "letfn", -480490827, null), new cljs.core.Symbol(null, "use-fixtures", "use-fixtures", -1608548619, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "for", "for", 316745208, null), new cljs.core.Symbol(null, "binding", 
"binding", -2114503176, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "proxy", "proxy", 1523077913, null), new cljs.core.Symbol(null, "with-redefs", "with-redefs", -1143728263, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "defmulti", "defmulti", 1936112154, null), new cljs.core.Symbol(null, "if-let", "if-let", 
1803593690, null), new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), new cljs.core.Symbol(null, "thread", "thread", -1707434245, null), new cljs.core.Symbol(null, "comment", "comment", -2122229700, null), new cljs.core.Symbol(null, "defrecord", "defrecord", 273038109, null), new cljs.core.Symbol(null, "when-some", "when-some", 1700415903, null), new cljs.core.Symbol(null, "def", "def", 597100991, null)], [new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 2], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 
664686210), 0], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", 
-1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 2], 
null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 
1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"inner", "inner", -1383171215), 1], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 2, 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 2], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", 
-1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 2], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 0], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 
664686210), 2], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null)]), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, "defroutes", "defroutes", -1310011104, null), new cljs.core.Symbol(null, "PUT", "PUT", -201468416, null), new cljs.core.Symbol(null, "POST", "POST", 1750988384, null), new cljs.core.Symbol(null, "let-routes", "let-routes", -376261774, null), new cljs.core.Symbol(null, 
"DELETE", "DELETE", -965761997, null), new cljs.core.Symbol(null, "rfn", "rfn", 649648083, null), new cljs.core.Symbol(null, "ANY", "ANY", 1875082901, null), new cljs.core.Symbol(null, "GET", "GET", -917844743, null), new cljs.core.Symbol(null, "HEAD", "HEAD", 1903810169, null), new cljs.core.Symbol(null, "PATCH", "PATCH", -1233173284, null), new cljs.core.Symbol(null, "context", "context", 810340414, null), new cljs.core.Symbol(null, "OPTIONS", "OPTIONS", 742094783, null)], [new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "block", "block", 664686210), 1], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", 
-1383171215), 0], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null)]), new cljs.core.PersistentArrayMap(null, 2, [/^def/, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"inner", "inner", -1383171215), 0], null)], null), /^with-/, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inner", "inner", -1383171215), 0], null)], null)], null));
"undefined" === typeof cljfmt.core.indenter_fn && (cljfmt.core.indenter_fn = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljfmt.core", "indenter-fn"), function(a, b, c, d, e) {
    return function(a, b) {
      a = cljs.core.seq.call(null, b);
      b = cljs.core.first.call(null, a);
      cljs.core.next.call(null, a);
      return b;
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljfmt.core.indenter_fn, new cljs.core.Keyword(null, "inner", "inner", -1383171215), function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = cljs.core.nth.call(null, b, 2, null);
  return function(b, c, d, e) {
    return function(b) {
      return cljfmt.core.inner_indent.call(null, b, a, d, e);
    };
  }(b, c, d, e);
});
cljs.core._add_method.call(null, cljfmt.core.indenter_fn, new cljs.core.Keyword(null, "block", "block", 664686210), function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
  return function(b, c, d) {
    return function(b) {
      return cljfmt.core.block_indent.call(null, b, a, d);
    };
  }(b, c, d);
});
cljfmt.core.make_indenter = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  return cljs.core.apply.call(null, cljs.core.some_fn, cljs.core.map.call(null, cljs.core.partial.call(null, cljfmt.core.indenter_fn, b), a));
};
cljfmt.core.indent_order = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  cljs.core.nth.call(null, a, 1, null);
  return b instanceof cljs.core.Symbol ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : cljs.core.truth_(cljfmt.core.pattern_QMARK_.call(null, b)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : null;
};
cljfmt.core.custom_indent = function(a, b) {
  if (cljs.core.empty_QMARK_.call(null, b)) {
    return cljfmt.core.list_indent.call(null, a);
  }
  b = cljs.core.apply.call(null, cljs.core.some_fn, cljs.core.map.call(null, cljfmt.core.make_indenter, cljs.core.sort_by.call(null, cljfmt.core.indent_order, b))).call(null, a);
  return cljs.core.truth_(b) ? b : cljfmt.core.list_indent.call(null, a);
};
cljfmt.core.indent_amount = function(a, b) {
  var c = rewrite_clj.zip.tag.call(null, rewrite_clj.zip.up.call(null, a)), d = rewrite_clj.zip.up.call(null, rewrite_clj.zip.up.call(null, a));
  return cljs.core.truth_(cljfmt.core.reader_conditional_QMARK_.call(null, d)) ? cljfmt.core.coll_indent.call(null, a) : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "list", "list", 765357683), null], null), null)).call(null, c)) ? cljfmt.core.custom_indent.call(null, a, b) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), 
  c) ? cljfmt.core.indent_amount.call(null, rewrite_clj.zip.up.call(null, a), b) : cljfmt.core.coll_indent.call(null, a);
};
cljfmt.core.indent_line = function(a, b) {
  b = cljfmt.core.indent_amount.call(null, a, b);
  return 0 < b ? clojure.zip.insert_right.call(null, a, cljfmt.core.whitespace.call(null, b)) : a;
};
cljfmt.core.indent = function(a) {
  switch(arguments.length) {
    case 1:
      return cljfmt.core.indent.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljfmt.core.indent.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljfmt.core.indent.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljfmt.core.indent.call(null, a, cljfmt.core.default_indents);
};
cljfmt.core.indent.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljfmt.core.transform.call(null, a, cljfmt.core.edit_all, cljfmt.core.should_indent_QMARK_, function(a) {
    return cljfmt.core.indent_line.call(null, a, b);
  });
};
cljfmt.core.indent.cljs$lang$maxFixedArity = 2;
cljfmt.core.reindent = function(a) {
  switch(arguments.length) {
    case 1:
      return cljfmt.core.reindent.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljfmt.core.reindent.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljfmt.core.reindent.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljfmt.core.indent.call(null, cljfmt.core.unindent.call(null, a));
};
cljfmt.core.reindent.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljfmt.core.indent.call(null, cljfmt.core.unindent.call(null, a), b);
};
cljfmt.core.reindent.cljs$lang$maxFixedArity = 2;
cljfmt.core.root_QMARK_ = function(a) {
  return null == clojure.zip.up.call(null, a);
};
cljfmt.core.final_QMARK_ = function(a) {
  var b = null == clojure.zip.right.call(null, a);
  return b ? cljfmt.core.root_QMARK_.call(null, clojure.zip.up.call(null, a)) : b;
};
cljfmt.core.trailing_whitespace_QMARK_ = function(a) {
  var b = cljfmt.core.whitespace_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? (b = cljfmt.core.zlinebreak_QMARK_.call(null, clojure.zip.right.call(null, a)), cljs.core.truth_(b) ? b : cljfmt.core.final_QMARK_.call(null, a)) : b;
};
cljfmt.core.remove_trailing_whitespace = function(a) {
  return cljfmt.core.transform.call(null, a, cljfmt.core.edit_all, cljfmt.core.trailing_whitespace_QMARK_, clojure.zip.remove);
};
cljfmt.core.reformat_form = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljfmt.core.reformat_form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljfmt.core.reformat_form.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.nth.call(null, b, 0, null);
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.truth_((new cljs.core.Keyword(null, "remove-consecutive-blank-lines?", "remove-consecutive-blank-lines?", 982824512)).cljs$core$IFn$_invoke$arity$2(b, !0)) ? cljfmt.core.remove_consecutive_blank_lines.call(null, a) : a;
  a = cljs.core.truth_((new cljs.core.Keyword(null, "remove-surrounding-whitespace?", "remove-surrounding-whitespace?", -2083582887)).cljs$core$IFn$_invoke$arity$2(b, !0)) ? cljfmt.core.remove_surrounding_whitespace.call(null, a) : a;
  a = cljs.core.truth_((new cljs.core.Keyword(null, "insert-missing-whitespace?", "insert-missing-whitespace?", -1012188573)).cljs$core$IFn$_invoke$arity$2(b, !0)) ? cljfmt.core.insert_missing_whitespace.call(null, a) : a;
  a = cljs.core.truth_((new cljs.core.Keyword(null, "indentation?", "indentation?", -649129482)).cljs$core$IFn$_invoke$arity$2(b, !0)) ? cljfmt.core.reindent.call(null, a, (new cljs.core.Keyword(null, "indents", "indents", -569647275)).cljs$core$IFn$_invoke$arity$2(b, cljfmt.core.default_indents)) : a;
  return cljs.core.truth_((new cljs.core.Keyword(null, "remove-trailing-whitespace?", "remove-trailing-whitespace?", 251206854)).cljs$core$IFn$_invoke$arity$2(b, !0)) ? cljfmt.core.remove_trailing_whitespace.call(null, a) : a;
};
cljfmt.core.reformat_form.cljs$lang$maxFixedArity = 1;
cljfmt.core.reformat_form.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljfmt.core.reformat_string = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljfmt.core.reformat_string.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljfmt.core.reformat_string.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.nth.call(null, b, 0, null);
  return rewrite_clj.node.string.call(null, cljfmt.core.reformat_form.call(null, rewrite_clj.parser.parse_string_all.call(null, a), b));
};
cljfmt.core.reformat_string.cljs$lang$maxFixedArity = 1;
cljfmt.core.reformat_string.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
editors.cljfmt = {};
editors.cljfmt.grep = function(a, b) {
  return cljs.core.filter.call(null, function(b) {
    return cljs.core.re_find.call(null, a, b);
  }, cljs_node_io.core.file_seq.call(null, b));
};
editors.cljfmt.find_files = function(a) {
  var b = cljs_node_io.core.file.call(null, a);
  return cljs.core.truth_(b.isDirectory()) ? editors.cljfmt.grep.call(null, /\.clj[sx]?$/, a) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null);
};
editors.cljfmt.cljfmt = function(a) {
  atomist.cljs_log.info.call(null, "call cljfmt on ", a);
  var b = editors.cljfmt.find_files.call(null, a);
  a = cljs.core.atom.call(null, !1);
  atomist.cljs_log.infof.call(null, "Checking %s files...", cljs.core.count.call(null, b));
  b = cljs.core.seq.call(null, b);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e), g = cljs_node_io.core.slurp.call(null, f);
      try {
        var h = cljfmt.core.reformat_string.call(null, g);
        cljs.core.not_EQ_.call(null, g, h) ? (atomist.cljs_log.info.call(null, "Reformatting", f), cljs_node_io.core.spit.call(null, f, h), atomist.cljs_log.info.call(null, "Written..."), cljs.core.reset_BANG_.call(null, a, !0)) : atomist.cljs_log.info.call(null, "No need to reformat", f);
      } catch (l) {
        atomist.cljs_log.warn.call(null, l, "Failed to format file:  ", f);
      }
      e += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
          d = cljs.core.chunk_first.call(null, b), b = cljs.core.chunk_rest.call(null, b), c = d, d = cljs.core.count.call(null, d);
        } else {
          c = cljs.core.first.call(null, b);
          d = cljs_node_io.core.slurp.call(null, c);
          try {
            var k = cljfmt.core.reformat_string.call(null, d);
            cljs.core.not_EQ_.call(null, d, k) ? (atomist.cljs_log.info.call(null, "Reformatting", c), cljs_node_io.core.spit.call(null, c, k), atomist.cljs_log.info.call(null, "Written..."), cljs.core.reset_BANG_.call(null, a, !0)) : atomist.cljs_log.info.call(null, "No need to reformat", c);
          } catch (l) {
            atomist.cljs_log.warn.call(null, l, "Failed to format file:  ", c);
          }
          b = cljs.core.next.call(null, b);
          c = null;
          d = 0;
        }
        e = 0;
      } else {
        break;
      }
    }
  }
  return cljs.core.truth_(cljs.core.deref.call(null, a)) ? (atomist.cljs_log.info.call(null, "Finished formatting"), !0) : atomist.cljs_log.info.call(null, "No clojure files formatted");
};
atomist.goals = {};
atomist.goals.pretty_log = function(a, b) {
  return atomist.cljs_log.info.call(null, a, ": ", function() {
    var a = new goog.string.StringBuffer, d = cljs.core._STAR_print_newline_STAR_, e = cljs.core._STAR_print_fn_STAR_;
    cljs.core._STAR_print_newline_STAR_ = !0;
    cljs.core._STAR_print_fn_STAR_ = function(a, b, c) {
      return function(a) {
        return c.append(a);
      };
    }(d, e, a);
    try {
      cljs.pprint.pprint.call(null, b);
    } finally {
      cljs.core._STAR_print_fn_STAR_ = e, cljs.core._STAR_print_newline_STAR_ = d;
    }
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  }());
};
atomist.goals.get_options = function(a, b) {
  b = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.name, cljs.core.keys.call(null, b)));
  atomist.cljs_log.info.call(null, "current goals ", b);
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, function(a) {
    return function(a) {
      var b = cljs.core.seq.call(null, a);
      a = cljs.core.first.call(null, b);
      b = cljs.core.next.call(null, b);
      var c = cljs.core.first.call(null, b);
      cljs.core.next.call(null, b);
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), goog.string.format("%s %s", cljs.core.name.call(null, a), c), new cljs.core.Keyword(null, "value", "value", 305978217), goog.string.format("%s:%s", cljs.core.name.call(null, a), c)], null);
    };
  }(b), cljs.core.filter.call(null, function(a) {
    return function(b) {
      return cljs.core.complement.call(null, a).call(null, cljs.core.name.call(null, cljs.core.first.call(null, b)));
    };
  }(b), a)));
};
atomist.goals.message = function(a) {
  return ["Current library targets:\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.core.not_empty.call(null, a)) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, "\n", cljs.core.map.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return goog.string.format("*%s:%s*", cljs.core.name.call(null, b), a);
  }, a))) : "NONE")].join("");
};
atomist.goals.preferences__GT_goals = function(a) {
  var b = null == a ? null : (new cljs.core.Keyword(null, "ChatTeam", "ChatTeam", -537934428)).cljs$core$IFn$_invoke$arity$1(a), c = null == b ? null : cljs.core.first.call(null, b), d = null == c ? null : (new cljs.core.Keyword(null, "preferences", "preferences", -484312211)).cljs$core$IFn$_invoke$arity$1(c);
  a = null == d ? null : cljs.core.filter.call(null, function(a, b, c, d) {
    return function(a) {
      return cljs.core._EQ_.call(null, "atomist:fingerprints:clojure:project-deps", (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a));
    };
  }(a, b, c, d), d);
  a = null == a ? null : cljs.core.first.call(null, a);
  a = null == a ? null : (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(a);
  return null == a ? null : atomist.json.json__GT_clj.call(null, a);
};
atomist.goals.options = function(a, b) {
  a = atomist.goals.preferences__GT_goals.call(null, a);
  b = atomist.deps.get_deps.call(null, b);
  b = atomist.goals.get_options.call(null, b, a);
  atomist.cljs_log.info.call(null, "goals are ", a);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [atomist.goals.message.call(null, a), b], null);
};
atomist.goals.with_project_goals = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (1 === e) {
              e = atomist.cljs_log.info.call(null, "start by calling f1 with no args");
              var f = a.call(null);
              f = atomist.promise.from_promise.call(null, f);
              d[7] = e;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 2, f);
            }
            if (2 === e) {
              var g = d[2];
              e = atomist.goals.pretty_log.call(null, "Preference GraphQL query:  ", g);
              f = atomist.cljs_log.info.call(null, "project should be in basedir ", b);
              var h = atomist.goals.options.call(null, g, b);
              g = cljs.core.nth.call(null, h, 0, null);
              h = cljs.core.nth.call(null, h, 1, null);
              h = cljs.core.clj__GT_js.call(null, h);
              g = c.call(null, g, h);
              g = atomist.promise.from_promise.call(null, g);
              d[8] = f;
              d[9] = e;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 3, g);
            }
            return 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
atomist.goals.with_new_goal = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return d[2] = d[2], d[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              e = atomist.cljs_log.info.call(null, "start by calling f1 with no args with parameters ", c);
              var f = cljs.core.map_QMARK_.call(null, c);
              d[7] = e;
              d[1] = f ? 2 : 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              f = d[2];
              e = cljs.core.nth.call(null, f, 0, null);
              var g = cljs.core.nth.call(null, f, 1, null);
              f = a.call(null);
              f = atomist.promise.from_promise.call(null, f);
              d[8] = g;
              d[9] = e;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 8, f);
            }
            if (15 === e) {
              return d[2] = null, d[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return e = cljs.core.first.call(null, d[10]), d[2] = e, d[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              return d[2] = null, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === e) {
              g = d[8];
              e = d[9];
              f = d[11];
              var h = d[2], k = atomist.goals.preferences__GT_goals.call(null, f);
              f = atomist.goals.pretty_log.call(null, "Preference GraphQL query:  ", f);
              var r = atomist.cljs_log.info.call(null, "chat-team to use ", h), t = cljs.core.assoc.call(null, k, e, g);
              t = atomist.json.json_str.call(null, t);
              t = atomist.cljs_log.info.call(null, "update goals to ", t);
              e = cljs.core.assoc.call(null, k, e, g);
              e = atomist.json.json_str.call(null, e);
              e = b.call(null, h, e);
              e = atomist.promise.from_promise.call(null, e);
              d[12] = t;
              d[13] = f;
              d[14] = r;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 18, e);
            }
            return 3 === e ? (e = "string" === typeof c, cljs.core.truth_(e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 12 === e ? (d[2] = null, d[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? (e = cljs.core.PersistentVector.EMPTY_NODE, f = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(c), r = (new cljs.core.Keyword(null, "version", "version", 425292698)).cljs$core$IFn$_invoke$arity$1(c), 
            e = new cljs.core.PersistentVector(null, 2, 5, e, [f, r], null), d[2] = e, d[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = d[2], d[10] = e, cljs.core.truth_(null == e) ? d[1] = 12 : d[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (d[2] = null, d[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = cljs.core.re_find.call(null, /(.*):(.*)/, c), e = cljs.core.drop.call(null, 1, e), d[2] = 
            e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === e ? (e = d[2], d[15] = e, cljs.core.truth_(null == e) ? d[1] = 15 : d[1] = 16, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === e ? (e = d[15], e = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(e), d[2] = e, d[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (f = d[11], e = (new cljs.core.Keyword(null, "ChatTeam", "ChatTeam", 
            -537934428)).cljs$core$IFn$_invoke$arity$1(f), d[2] = e, d[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === e ? (e = d[2], f = atomist.cljs_log.info.call(null, "mutation finished ", e), d[16] = f, cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, e)) : 8 === e ? (e = d[2], d[11] = e, cljs.core.truth_(null == e) ? d[1] = 9 : d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
atomist.goals.create_library_editor_choice = function(a, b, c) {
  var d = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "owner", "owner", -392611939)), f = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "repo", "repo", -1999060679)), g = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "channel-name", "channel-name", -188505362)), h = null != c && (c.cljs$lang$protocol_mask$partition0$ & 
  64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, k = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "library", "library", 467978288)), l = null != k && (k.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, k) : k, m = cljs.core.get.call(null, l, new cljs.core.Keyword(null, "name", "name", 1843675177)), n = cljs.core.get.call(null, 
  l, new cljs.core.Keyword(null, "version", "version", 425292698)), p = null != h && (h.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === h.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, h) : h, q = cljs.core.get.call(null, p, new cljs.core.Keyword(null, "current", "current", -1088038603)), r = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, c, d, e, f, g, h, k, l, m, n, p, q, r, B, G, K, J) {
    return function() {
      var t = function() {
        return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, y, v) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (ea) {
                    if (ea instanceof Object) {
                      b[5] = ea, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw ea;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, y, v) {
          return function(a) {
            var c = a[1];
            if (1 === c) {
              c = goog.string.format("Target version for library *%s* is *%s*", y, v);
              var d = goog.string.format("Currently *%s* in \x3chttps://github.com/%s/%s|%s/%s\x3e", e, k, l, k, l);
              c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("");
              d = cljs.core.clj__GT_js.call(null, q);
              c = b.call(null, c, d);
              c = atomist.promise.from_promise.call(null, c);
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 2, c);
            }
            return 2 === c ? (c = cljs.core.println.call(null, a[2]), cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, c)) : null;
          };
        }(a, c, d, e, f, g, h, k, l, m, n, p, q, r, B, G, K, J), a, c, d, e, f, g, h, k, l, m, n, p, q, r, B, G, K, J);
      }(), u = function() {
        var b = t.call(null);
        b[6] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, u);
    };
  }(r, h, p, q, a, d, d, e, f, g, c, h, h, k, l, l, m, n));
  return r;
};
atomist.goals.has_goal_QMARK_ = function(a, b) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, cljs.core.name, cljs.core.keys.call(null, a))).call(null, b);
};
atomist.goals.check_library = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return atomist.goals.check_library.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
atomist.goals.check_library.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.seq.call(null, b);
  b = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  var d = cljs.core.first.call(null, c);
  cljs.core.next.call(null, c);
  atomist.cljs_log.infof.call(null, "check %s %s and %s", cljs.core.name.call(null, b), d, a);
  var e = cljs.core.name.call(null, b);
  atomist.cljs_log.infof.call(null, "check %s %s and %s", e, d, a);
  return cljs.core.truth_(function() {
    var b = atomist.goals.has_goal_QMARK_.call(null, a, e);
    return cljs.core.truth_(b) ? !cljs.core._EQ_.call(null, d, cljs.core.get.call(null, a, e)) : b;
  }()) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "library", "library", 467978288), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), e, new cljs.core.Keyword(null, "version", "version", 425292698), cljs.core.get.call(null, a, e)], null), new cljs.core.Keyword(null, "current", "current", -1088038603), d], null) : null;
};
atomist.goals.check_library.cljs$lang$maxFixedArity = 1;
atomist.goals.check_library.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
atomist.goals.check_libraries = function(a, b, c) {
  var d = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "to", "to", 192099007)), f = null != e && (e.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === e.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, e) : e, g = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "data", 
  "data", -232669377));
  return cljs.core.map.call(null, cljs.core.partial.call(null, atomist.goals.create_library_editor_choice, d, c), cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, function(b, c, d, e, f, g) {
    return function(b) {
      return cljs.core.apply.call(null, atomist.goals.check_library, a, b);
    };
  }(b, d, d, e, f, g), g)));
};
atomist.goals.check_library_goals = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return d[2] = d[2], d[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              e = atomist.cljs_log.info.call(null, "check-library-goals");
              var f = a.call(null);
              f = atomist.promise.from_promise.call(null, f);
              d[7] = e;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 2, f);
            }
            if (4 === e) {
              return d[8] = d[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, new cljs.core.Keyword(null, "done", "done", -889844188));
            }
            if (15 === e) {
              return f = d[9], e = cljs.core.println.call(null, "check-library channel ", d[2]), f = cljs.core.next.call(null, f), d[10] = null, d[11] = e, d[12] = f, d[13] = 0, d[14] = 0, d[2] = null, d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return f = d[9], e = cljs.core.first.call(null, f), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 15, e);
            }
            if (6 === e) {
              return f = d[12], e = cljs.core.seq.call(null, f), d[9] = e, d[1] = e ? 9 : 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              e = d[13];
              var g = d[14];
              cljs.core.truth_(e < g) ? d[1] = 5 : d[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (12 === e) {
              f = d[9];
              e = cljs.core.chunk_first.call(null, f);
              f = cljs.core.chunk_rest.call(null, f);
              var h = cljs.core.count.call(null, e);
              d[10] = e;
              d[12] = f;
              d[13] = 0;
              d[14] = h;
              d[2] = null;
              d[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === e) {
              return f = atomist.goals.preferences__GT_goals.call(null, d[2]), e = atomist.cljs_log.info.call(null, "check goals ", f), f = atomist.goals.check_libraries.call(null, f, c, b), f = cljs.core.seq.call(null, f), d[15] = e, d[10] = null, d[12] = f, d[13] = 0, d[14] = 0, d[2] = null, d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === e) {
              return d[2] = d[2], d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === e) {
              return f = d[9], e = cljs.core.chunked_seq_QMARK_.call(null, f), d[1] = e ? 12 : 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === e) {
              return h = d[10], e = d[13], e = cljs.core._nth.call(null, h, e), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 8, e);
            }
            if (14 === e) {
              return d[2] = d[2], d[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === e) {
              return d[2] = null, d[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (8 === e) {
              h = d[10];
              f = d[12];
              e = d[13];
              g = d[14];
              var k = cljs.core.println.call(null, "check-library channel ", d[2]);
              d[10] = h;
              d[16] = k;
              d[12] = f;
              d[13] = e + 1;
              d[14] = g;
              d[2] = null;
              d[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
atomist.goals.broadcast = function(a, b, c, d) {
  var e = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "name", "name", 1843675177)), g = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "version", "version", 425292698)), h = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, e, f, g, h) {
    return function() {
      var k = function() {
        return function(a, b, c, d, e, f) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (D) {
                    if (D instanceof Object) {
                      b[5] = D, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw D;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, e, f, g, h) {
          return function(k) {
            var l = k[1];
            if (7 === l) {
              var m = k;
              m[2] = k[2];
              cljs.core.async.impl.ioc_helpers.process_exception.call(null, m);
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === l) {
              var n = k[7], p = !cljs.core._EQ_.call(null, h, n);
              m = k;
              m[1] = p ? 23 : 24;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === l) {
              var q = m = k;
              q[2] = null;
              q[1] = 28;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === l) {
              var r = b.call(null, "npm-project-deps"), t = atomist.promise.from_promise.call(null, r);
              m = k;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, m, 2, t);
            }
            if (24 === l) {
              var u = k[8], v = goog.string.format("found identical version of %s in", u), w = atomist.cljs_log.info.call(null, v), y = m = k;
              y[2] = w;
              y[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (39 === l) {
              var x = k[9], M = m = k;
              M[2] = x;
              M[1] = 40;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (46 === l) {
              var E = k[2], O = m = k;
              O[2] = E;
              O[1] = 43;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === l) {
              var P = k[2], L = a.call(null);
              k[10] = P;
              k[11] = L;
              m = k;
              cljs.core.async.impl.ioc_helpers.process_exception.call(null, m);
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === l) {
              var N = m = k;
              N[2] = !1;
              N[1] = 16;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === l) {
              u = k[8];
              var R = k[12], S = goog.string.format("fingerprint data for %s/%s does not contain library %s", R, u, g), T = atomist.cljs_log.info.call(null, S), X = m = k;
              X[2] = T;
              X[1] = 22;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (31 === l) {
              var W = k[2], ba = m = k;
              ba[2] = W;
              ba[1] = 28;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (32 === l) {
              x = k[9];
              var sa = cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISeq$, ma = x.cljs$lang$protocol_mask$partition0$ & 64 || sa;
              m = k;
              cljs.core.truth_(ma) ? m[1] = 35 : m[1] = 36;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (40 === l) {
              var fa = k[13], da = k[14], V = k[15];
              x = k[9];
              var aa = k[16], ja = k[17], Z = k[18], na = k[19], ka = k[20], U = k[21], Y = k[2], oa = cljs.core.get.call(null, Y, new cljs.core.Keyword(null, "name", "name", 1843675177)), pa = cljs.core.get.call(null, Y, new cljs.core.Keyword(null, "owner", "owner", -392611939)), ta = cljs.core.get.call(null, Y, new cljs.core.Keyword(null, "channels", "channels", 1132759174)), ea = cljs.core.get.call(null, Y, new cljs.core.Keyword(null, "branches", "branches", -1240337268)), qa = cljs.core.first.call(null, 
              ta), ra = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(qa), va = cljs.core.PersistentHashMap.EMPTY, wa = function() {
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, y, x, z, I, A, D, C, H, B, F, G, Q, K, J, E, L, M, N, O, P) {
                  return function(a) {
                    return cljs.core._EQ_.call(null, r, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a));
                  };
                }(x, Z, g, pa, aa, ta, oa, da, Y, ea, ra, aa, U, V, "npm-project-deps", fa, da, V, x, aa, ja, Z, na, ka, U, Y, oa, pa, ta, ea, qa, ra, va, l, c, e, f, g, h);
              }(), ua = cljs.core.first.call(null, ea), ha = (new cljs.core.Keyword(null, "commit", "commit", 113374389)).cljs$core$IFn$_invoke$arity$1(ua), jb = (new cljs.core.Keyword(null, "fingerprints", "fingerprints", -567401931)).cljs$core$IFn$_invoke$arity$1(ha), Aa = cljs.core.filter.call(null, wa, jb), kb = cljs.core.first.call(null, Aa), Qa = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(kb), lb = atomist.json.json__GT_clj.call(null, Qa), Ra = cljs.core.into.call(null, 
              va, lb), Ba = cljs.core.get.call(null, Ra, g);
              k[13] = ra;
              k[17] = oa;
              k[19] = Ba;
              k[20] = pa;
              m = k;
              cljs.core.truth_(Ba) ? m[1] = 41 : m[1] = 42;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (33 === l) {
              var Sa = m = k;
              Sa[2] = !1;
              Sa[1] = 34;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === l) {
              var mb = k[2];
              m = k;
              cljs.core.truth_(mb) ? m[1] = 17 : m[1] = 18;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === l) {
              V = k[15];
              var ca = k[22];
              Z = k[18];
              U = k[21];
              var nb = ca, Ta = Z, Ua = V, ob = U + 1;
              k[23] = k[2];
              k[15] = Ua;
              k[22] = nb;
              k[18] = Ta;
              k[21] = ob;
              var Ca = m = k;
              Ca[2] = null;
              Ca[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (36 === l) {
              var Da = m = k;
              Da[2] = !1;
              Da[1] = 37;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (41 === l) {
              na = k[19];
              var Va = !cljs.core._EQ_.call(null, h, na);
              m = k;
              m[1] = Va ? 44 : 45;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (43 === l) {
              aa = k[16];
              var pb = k[2];
              ca = cljs.core.next.call(null, aa);
              Z = null;
              U = V = 0;
              k[15] = V;
              k[22] = ca;
              k[24] = pb;
              k[18] = Z;
              k[21] = U;
              var xa = m = k;
              xa[2] = null;
              xa[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (29 === l) {
              aa = k[16];
              var ya = cljs.core.chunk_first.call(null, aa), Wa = cljs.core.chunk_rest.call(null, aa), Xa = cljs.core.count.call(null, ya);
              ca = Wa;
              Z = ya;
              V = Xa;
              U = 0;
              k[15] = V;
              k[22] = ca;
              k[18] = Z;
              k[21] = U;
              var Ea = m = k;
              Ea[2] = null;
              Ea[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (44 === l) {
              fa = k[13];
              ja = k[17];
              ka = k[20];
              var qb = d.call(null, ka, ja, fa), Fa = m = k;
              Fa[2] = qb;
              Fa[1] = 46;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === l) {
              V = k[15];
              U = k[21];
              var Ya = U < V;
              m = k;
              cljs.core.truth_(Ya) ? m[1] = 8 : m[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (28 === l) {
              var rb = k[2], Za = m = k;
              Za[2] = rb;
              Za[1] = 10;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === l) {
              var $a = k[2], Ga = m = k;
              Ga[2] = $a;
              Ga[1] = 22;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (34 === l) {
              var sb = k[2];
              m = k;
              cljs.core.truth_(sb) ? m[1] = 38 : m[1] = 39;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === l) {
              var ia = k[25], ab = cljs.core.apply.call(null, cljs.core.hash_map, ia), bb = m = k;
              bb[2] = ab;
              bb[1] = 19;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === l) {
              var tb = k[2];
              m = k;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, m, tb);
            }
            if (12 === l) {
              var Ha = m = k;
              Ha[2] = !1;
              Ha[1] = 13;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === l) {
              da = k[2];
              k[14] = da;
              var Ia = m = k;
              Ia[2] = null;
              Ia[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (23 === l) {
              var Ja = k[26];
              u = k[8];
              R = k[12];
              var cb = d.call(null, R, u, Ja), db = m = k;
              db[2] = cb;
              db[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (35 === l) {
              var Ka = m = k;
              Ka[2] = !0;
              Ka[1] = 37;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (19 === l) {
              da = k[14];
              n = k[7];
              ia = k[25];
              V = k[15];
              Ja = k[26];
              ca = k[22];
              u = k[8];
              R = k[12];
              Z = k[18];
              U = k[21];
              var la = k[2], La = cljs.core.get.call(null, la, new cljs.core.Keyword(null, "name", "name", 1843675177)), za = cljs.core.get.call(null, la, new cljs.core.Keyword(null, "owner", "owner", -392611939)), Ma = cljs.core.get.call(null, la, new cljs.core.Keyword(null, "channels", "channels", 1132759174)), Na = cljs.core.get.call(null, la, new cljs.core.Keyword(null, "branches", "branches", -1240337268)), eb = cljs.core.first.call(null, Ma), Oa = (new cljs.core.Keyword(null, "name", "name", 
              1843675177)).cljs$core$IFn$_invoke$arity$1(eb), Pa = cljs.core.PersistentHashMap.EMPTY, fb = function() {
                return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, y, x, z, I, A, D, C, H, B, F, G, Q, K, J, E, L, M, N, O) {
                  return function(a) {
                    return cljs.core._EQ_.call(null, p, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a));
                  };
                }(ia, Z, g, za, ca, Ma, La, da, Na, Oa, U, V, "npm-project-deps", la, da, n, ia, V, Ja, ca, u, R, Z, U, la, La, za, Ma, Na, eb, Oa, Pa, l, c, e, f, g, h);
              }(), gb = cljs.core.first.call(null, Na), ub = (new cljs.core.Keyword(null, "commit", "commit", 113374389)).cljs$core$IFn$_invoke$arity$1(gb), vb = (new cljs.core.Keyword(null, "fingerprints", "fingerprints", -567401931)).cljs$core$IFn$_invoke$arity$1(ub), hb = cljs.core.filter.call(null, fb, vb), ib = cljs.core.first.call(null, hb), wb = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(ib), xb = atomist.json.json__GT_clj.call(null, wb), Lb = cljs.core.into.call(null, 
              Pa, xb), yb = cljs.core.get.call(null, Lb, g);
              k[7] = yb;
              k[26] = Oa;
              k[8] = La;
              k[12] = za;
              m = k;
              cljs.core.truth_(yb) ? m[1] = 20 : m[1] = 21;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === l) {
              ia = k[25];
              var Mb = cljs.core.PROTOCOL_SENTINEL === ia.cljs$core$ISeq$, Nb = ia.cljs$lang$protocol_mask$partition0$ & 64 || Mb;
              m = k;
              cljs.core.truth_(Nb) ? m[1] = 14 : m[1] = 15;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === l) {
              aa = k[16];
              ca = k[22];
              var zb = cljs.core.seq.call(null, ca);
              k[16] = zb;
              m = k;
              m[1] = zb ? 26 : 27;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === l) {
              da = k[14];
              cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, k, null, null, 4, 3);
              var Ob = (new cljs.core.Keyword(null, "Repo", "Repo", 815274973)).cljs$core$IFn$_invoke$arity$1(da);
              ca = cljs.core.seq.call(null, Ob);
              Z = null;
              U = V = 0;
              k[15] = V;
              k[22] = ca;
              k[18] = Z;
              k[21] = U;
              var Ab = m = k;
              Ab[2] = null;
              Ab[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === l) {
              var Bb = m = k;
              Bb[2] = !0;
              Bb[1] = 16;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (45 === l) {
              ja = k[17];
              var Pb = goog.string.format("found identical version of %s in", ja), Qb = atomist.cljs_log.info.call(null, Pb), Cb = m = k;
              Cb[2] = Qb;
              Cb[1] = 46;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (26 === l) {
              aa = k[16];
              var Rb = cljs.core.chunked_seq_QMARK_.call(null, aa);
              m = k;
              m[1] = Rb ? 29 : 30;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (16 === l) {
              var Sb = k[2], Db = m = k;
              Db[2] = Sb;
              Db[1] = 13;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (38 === l) {
              x = k[9];
              var Tb = cljs.core.apply.call(null, cljs.core.hash_map, x), Eb = m = k;
              Eb[2] = Tb;
              Eb[1] = 40;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (30 === l) {
              x = k[9];
              aa = k[16];
              var Fb = cljs.core.first.call(null, aa), Ub = cljs.core.not.call(null, null == Fb);
              k[9] = Fb;
              m = k;
              m[1] = Ub ? 32 : 33;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === l) {
              var Vb = k[2], Gb = m = k;
              Gb[2] = Vb;
              Gb[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (18 === l) {
              ia = k[25];
              var Hb = m = k;
              Hb[2] = ia;
              Hb[1] = 19;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (42 === l) {
              ja = k[17];
              ka = k[20];
              var Wb = goog.string.format("fingerprint data for %s/%s does not contain library %s", ka, ja, g), Xb = atomist.cljs_log.info.call(null, Wb), Ib = m = k;
              Ib[2] = Xb;
              Ib[1] = 43;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (37 === l) {
              var Yb = k[2], Jb = m = k;
              Jb[2] = Yb;
              Jb[1] = 34;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (8 === l) {
              ia = k[25];
              Z = k[18];
              U = k[21];
              var Kb = cljs.core._nth.call(null, Z, U), Zb = cljs.core.not.call(null, null == Kb);
              k[25] = Kb;
              m = k;
              m[1] = Zb ? 11 : 12;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return null;
          };
        }(c, e, f, g, h), c, e, f, g, h);
      }(), l = function() {
        var a = k.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
    };
  }(h, c, e, f, g));
  return h;
};
cljs.env = {};
cljs.env._STAR_compiler_STAR_ = null;
cljs.env.default_compiler_env = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.env.default_compiler_env.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null)], null)], null), new cljs.core.Keyword("cljs.analyzer", 
  "constant-table", "cljs.analyzer/constant-table", -114131889), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword("cljs.analyzer", "data-readers", "cljs.analyzer/data-readers", 1778544933), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword("cljs.analyzer", "externs", "cljs.analyzer/externs", 893359239), null, new cljs.core.Keyword(null, "options", "options", 99638489), a], null)));
};
cljs.env.default_compiler_env.cljs$lang$maxFixedArity = 1;
cljs.tagged_literals = {};
cljs.tagged_literals.read_queue = function(a) {
  if (!cljs.core.vector_QMARK_.call(null, a)) {
    throw Error("Queue literal expects a vector for its elements.");
  }
  return new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "into", "cljs.core/into", 1879938733, null), new cljs.core.List(null, new cljs.core.Symbol(null, "cljs.core.PersistentQueue.EMPTY", "cljs.core.PersistentQueue.EMPTY", 399917828, null), new cljs.core.List(null, a, null, 1, null), 2, null), 3, null);
};
cljs.tagged_literals.read_uuid = function(a) {
  if ("string" !== typeof a) {
    throw Error("UUID literal expects a string as its representation.");
  }
  try {
    return cljs.core.uuid.call(null, a);
  } catch (b) {
    throw Error(b.message);
  }
};
cljs.tagged_literals.read_inst = function(a) {
  if ("string" !== typeof a) {
    throw Error("Instance literal expects a string for its timestamp.");
  }
  try {
    return cljs.reader.read_date.call(null, a);
  } catch (b) {
    throw Error(b.message);
  }
};
cljs.tagged_literals.valid_js_literal_key_QMARK_ = function(a) {
  return "string" === typeof a || a instanceof cljs.core.Keyword && null == cljs.core.namespace.call(null, a);
};
cljs.tagged_literals.JSValue = function(a) {
  this.val = a;
};
cljs.tagged_literals.JSValue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.tagged_literals.JSValue.cljs$lang$type = !0;
cljs.tagged_literals.JSValue.cljs$lang$ctorStr = "cljs.tagged-literals/JSValue";
cljs.tagged_literals.JSValue.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.tagged-literals/JSValue");
};
cljs.tagged_literals.__GT_JSValue = function(a) {
  return new cljs.tagged_literals.JSValue(a);
};
cljs.tagged_literals.read_js = function(a) {
  if (!cljs.core.vector_QMARK_.call(null, a) && !cljs.core.map_QMARK_.call(null, a)) {
    throw Error("JavaScript literal must use map or vector notation");
  }
  if (cljs.core.map_QMARK_.call(null, a) && !cljs.core.every_QMARK_.call(null, cljs.tagged_literals.valid_js_literal_key_QMARK_, cljs.core.keys.call(null, a))) {
    throw Error("JavaScript literal keys must be strings or unqualified keywords");
  }
  return new cljs.tagged_literals.JSValue(a);
};
cljs.tagged_literals._STAR_cljs_data_readers_STAR_ = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null, "queue", "queue", -1198599890, null), cljs.tagged_literals.read_queue, new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.tagged_literals.read_uuid, new cljs.core.Symbol(null, "inst", "inst", -2008473268, null), cljs.tagged_literals.read_inst, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.tagged_literals.read_js], null));
cljs.analyzer = {};
cljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null);
cljs.analyzer._STAR_cljs_file_STAR_ = null;
cljs.analyzer._STAR_checked_arrays_STAR_ = !1;
cljs.analyzer._STAR_check_alias_dupes_STAR_ = !0;
cljs.analyzer._STAR_cljs_static_fns_STAR_ = !1;
cljs.analyzer._STAR_fn_invoke_direct_STAR_ = !1;
cljs.analyzer._STAR_cljs_macros_path_STAR_ = "/cljs/core";
cljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = !0;
cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dep-path", "dep-path", 723826558), cljs.core.PersistentVector.EMPTY], null));
cljs.analyzer._STAR_analyze_deps_STAR_ = !0;
cljs.analyzer._STAR_load_tests_STAR_ = !0;
cljs.analyzer._STAR_load_macros_STAR_ = !0;
cljs.analyzer._STAR_reload_macros_STAR_ = !1;
cljs.analyzer._STAR_macro_infer_STAR_ = !0;
cljs.analyzer._STAR_passes_STAR_ = null;
cljs.analyzer._STAR_file_defs_STAR_ = null;
cljs.analyzer.constants_ns_sym = new cljs.core.Symbol(null, "cljs.core.constants", "cljs.core.constants", 2057417066, null);
cljs.analyzer._STAR_verbose_STAR_ = !1;
cljs.analyzer._cljs_macros_loaded = cljs.core.atom.call(null, !1);
cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "invoke-ctor", "invoke-ctor", -756052704), new cljs.core.Keyword(null, "extending-base-js-type", "extending-base-js-type", 432787264), new cljs.core.Keyword(null, "unsupported-preprocess-value", "unsupported-preprocess-value", 1635147105), new cljs.core.Keyword(null, "redef", "redef", 1032704258), new cljs.core.Keyword(null, "js-shadowed-by-local", "js-shadowed-by-local", 198048291), new cljs.core.Keyword(null, 
"unsupported-js-module-type", "unsupported-js-module-type", 1806206180), new cljs.core.Keyword(null, "invalid-protocol-symbol", "invalid-protocol-symbol", 86246948), new cljs.core.Keyword(null, "protocol-duped-method", "protocol-duped-method", 15128166), new cljs.core.Keyword(null, "munged-namespace", "munged-namespace", -101986199), new cljs.core.Keyword(null, "single-segment-namespace", "single-segment-namespace", -491924469), new cljs.core.Keyword(null, "fn-arity", "fn-arity", -403576501), new cljs.core.Keyword(null, 
"infer-warning", "infer-warning", -1600671410), new cljs.core.Keyword(null, "variadic-max-arity", "variadic-max-arity", -14288402), new cljs.core.Keyword(null, "protocol-with-variadic-method", "protocol-with-variadic-method", -693368178), new cljs.core.Keyword(null, "fn-deprecated", "fn-deprecated", 626877647), new cljs.core.Keyword(null, "undeclared-var", "undeclared-var", -1624364944), new cljs.core.Keyword(null, "preamble-missing", "preamble-missing", 220974801), new cljs.core.Keyword(null, "undeclared-protocol-symbol", 
"undeclared-protocol-symbol", 462882867), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "invalid-array-access", "invalid-array-access", -1747132236), new cljs.core.Keyword(null, "unprovided", "unprovided", -652330764), new cljs.core.Keyword(null, "ns-var-clash", "ns-var-clash", -280494668), new cljs.core.Keyword(null, "undeclared-ns", "undeclared-ns", -1589012812), new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137), new cljs.core.Keyword(null, 
"invalid-arithmetic", "invalid-arithmetic", 1917075065), new cljs.core.Keyword(null, "protocol-deprecated", "protocol-deprecated", 103233497), new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730), new cljs.core.Keyword(null, "protocol-impl-recur-with-target", "protocol-impl-recur-with-target", -1648321574), new cljs.core.Keyword(null, "overload-arity", "overload-arity", 823206044), new cljs.core.Keyword(null, "protocol-multiple-impls", "protocol-multiple-impls", 794179260), new cljs.core.Keyword(null, 
"redef-in-file", "redef-in-file", -476530788), new cljs.core.Keyword(null, "protocol-invalid-method", "protocol-invalid-method", 522647516), new cljs.core.Keyword(null, "extend-type-invalid-method-shape", "extend-type-invalid-method-shape", 1424103549), new cljs.core.Keyword(null, "multiple-variadic-overloads", "multiple-variadic-overloads", 1110059837), new cljs.core.Keyword(null, "protocol-impl-with-variadic-method", "protocol-impl-with-variadic-method", -319321217)], [!0, !0, !0, !0, !0, !0, !0, 
!0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0]);
cljs.analyzer.unchecked_arrays_QMARK_ = function() {
  return cljs.core._STAR_unchecked_arrays_STAR_;
};
cljs.analyzer.checked_arrays = function() {
  return cljs.core.not.call(null, (new cljs.core.Keyword(null, "advanced", "advanced", -451287892)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)))) && !cljs.core._STAR_unchecked_arrays_STAR_ ? cljs.analyzer._STAR_checked_arrays_STAR_ : null;
};
cljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 63, ["typeof", null, "float", null, "implements", null, "else", null, "boolean", null, "abstract", null, "int", null, "static", null, "package", null, "this", null, "await", null, "yield", null, "interface", null, "void", null, "delete", null, "class", null, "export", null, "var", null, "try", null, "long", null, "null", null, "return", null, "methods", null, "native", null, "private", null, "new", 
null, "for", null, "catch", null, "extends", null, "short", null, "protected", null, "throws", null, "synchronized", null, "transient", null, "super", null, "if", null, "let", null, "import", null, "char", null, "switch", null, "const", null, "case", null, "break", null, "volatile", null, "function", null, "continue", null, "final", null, "do", null, "double", null, "while", null, "public", null, "arguments", null, "debugger", null, "with", null, "instanceof", null, "default", null, "throw", null, 
"goto", null, "finally", null, "byte", null, "constructor", null, "in", null, "enum", null], null), null);
cljs.analyzer.es5_allowed = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["default", null], null), null);
cljs.analyzer.SENTINEL = {};
cljs.analyzer.gets = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.get.call(null, a, b, cljs.analyzer.SENTINEL);
  return a === cljs.analyzer.SENTINEL ? null : cljs.core.get.call(null, a, c);
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = cljs.core.get.call(null, a, b, cljs.analyzer.SENTINEL);
  if (a === cljs.analyzer.SENTINEL) {
    return null;
  }
  c = cljs.core.get.call(null, a, c, cljs.analyzer.SENTINEL);
  return c === cljs.analyzer.SENTINEL ? null : cljs.core.get.call(null, c, d);
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  a = cljs.core.get.call(null, a, b, cljs.analyzer.SENTINEL);
  if (a === cljs.analyzer.SENTINEL) {
    return null;
  }
  c = cljs.core.get.call(null, a, c, cljs.analyzer.SENTINEL);
  if (c === cljs.analyzer.SENTINEL) {
    return null;
  }
  d = cljs.core.get.call(null, c, d, cljs.analyzer.SENTINEL);
  return d === cljs.analyzer.SENTINEL ? null : cljs.core.get.call(null, d, e);
};
cljs.analyzer.gets.cljs$lang$maxFixedArity = 5;
cljs.analyzer.CLJ_NIL_SYM = new cljs.core.Symbol(null, "clj-nil", "clj-nil", 1321798654, null);
cljs.analyzer.NUMBER_SYM = new cljs.core.Symbol(null, "number", "number", -1084057331, null);
cljs.analyzer.STRING_SYM = new cljs.core.Symbol(null, "string", "string", -349010059, null);
cljs.analyzer.BOOLEAN_SYM = new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null);
cljs.analyzer.JS_STAR_SYM = new cljs.core.Symbol(null, "js*", "js*", -1134233646, null);
cljs.analyzer.DOT_SYM = new cljs.core.Symbol(null, ".", ".", 1975675962, null);
cljs.analyzer.NEW_SYM = new cljs.core.Symbol(null, "new", "new", -444906321, null);
cljs.analyzer.CLJS_CORE_SYM = new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null);
cljs.analyzer.CLJS_CORE_MACROS_SYM = new cljs.core.Symbol(null, "cljs.core$macros", "cljs.core$macros", -2057787548, null);
cljs.analyzer.IGNORE_SYM = new cljs.core.Symbol(null, "ignore", "ignore", 8989494, null);
cljs.analyzer.ANY_SYM = new cljs.core.Symbol(null, "any", "any", -948528346, null);
cljs.analyzer.cljs_seq_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$ ? !0 : !1 : !1;
};
cljs.analyzer.cljs_map_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMap$ ? !0 : !1 : !1;
};
cljs.analyzer.cljs_vector_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IVector$ ? !0 : !1 : !1;
};
cljs.analyzer.cljs_set_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISet$ ? !0 : !1 : !1;
};
cljs.analyzer.munge_path = function(a) {
  return cljs.core.munge.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.analyzer.ns__GT_relpath = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.ns__GT_relpath.call(null, a, new cljs.core.Keyword(null, "cljs", "cljs", 1492417629));
};
cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.replace.call(null, cljs.analyzer.munge_path.call(null, a), ".", "/")), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, b))].join("");
};
cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2;
cljs.analyzer.topo_sort = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.topo_sort.call(null, a, 0, cljs.core.atom.call(null, cljs.core.sorted_map.call(null)), cljs.core.memoize.call(null, b));
};
cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = d.call(null, a);
  cljs.core.swap_BANG_.call(null, c, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null), cljs.core.fnil.call(null, cljs.core.into, cljs.core.PersistentHashSet.EMPTY), a);
  for (var e = cljs.core.seq.call(null, a), f = null, g = 0, h = 0;;) {
    if (h < g) {
      var k = cljs.core._nth.call(null, f, h);
      cljs.analyzer.topo_sort.call(null, k, b + 1, c, d);
      h += 1;
    } else {
      if (e = cljs.core.seq.call(null, e)) {
        f = e, cljs.core.chunked_seq_QMARK_.call(null, f) ? (e = cljs.core.chunk_first.call(null, f), h = cljs.core.chunk_rest.call(null, f), f = e, g = cljs.core.count.call(null, e), e = h) : (e = cljs.core.first.call(null, f), cljs.analyzer.topo_sort.call(null, e, b + 1, c, d), e = cljs.core.next.call(null, f), f = null, g = 0), h = 0;
      } else {
        break;
      }
    }
  }
  d = cljs.core.seq.call(null, cljs.core.subseq.call(null, cljs.core.deref.call(null, c), cljs.core._LT_, b));
  e = null;
  for (g = f = 0;;) {
    if (g < f) {
      h = cljs.core._nth.call(null, e, g), k = cljs.core.nth.call(null, h, 0, null), cljs.core.nth.call(null, h, 1, null), cljs.core.swap_BANG_.call(null, c, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null), clojure.set.difference, a), g += 1;
    } else {
      if (d = cljs.core.seq.call(null, d)) {
        cljs.core.chunked_seq_QMARK_.call(null, d) ? (f = cljs.core.chunk_first.call(null, d), d = cljs.core.chunk_rest.call(null, d), e = f, f = cljs.core.count.call(null, f)) : (e = cljs.core.first.call(null, d), f = cljs.core.nth.call(null, e, 0, null), cljs.core.nth.call(null, e, 1, null), cljs.core.swap_BANG_.call(null, c, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null), clojure.set.difference, a), d = cljs.core.next.call(null, 
        d), e = null, f = 0), g = 0;
      } else {
        break;
      }
    }
  }
  return cljs.core._EQ_.call(null, b, 0) ? cljs.core.distinct.call(null, cljs.core.apply.call(null, cljs.core.concat, cljs.core.vals.call(null, cljs.core.deref.call(null, c)))) : null;
};
cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4;
cljs.analyzer.ast_QMARK_ = function(a) {
  return cljs.core.map_QMARK_.call(null, a) && cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "op", "op", -1882987955));
};
"undefined" === typeof cljs.analyzer.error_message && (cljs.analyzer.error_message = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.analyzer", "error-message"), function(a, b, c, d, e) {
    return function() {
      var a = function(a, b) {
        if (1 < arguments.length) {
          for (var c = 0, d = Array(arguments.length - 1); c < d.length;) {
            d[c] = arguments[c + 1], ++c;
          }
          new cljs.core.IndexedSeq(d, 0, null);
        }
        return a;
      };
      a.cljs$lang$maxFixedArity = 1;
      a.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        cljs.core.rest(a);
        return b;
      };
      a.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
        return a;
      };
      return a;
    }();
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "preamble-missing", "preamble-missing", 220974801), function(a, b) {
  return ["Preamble resource file not found: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, " ", (new cljs.core.Keyword(null, "missing", "missing", 362507769)).cljs$core$IFn$_invoke$arity$1(b)))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "unprovided", "unprovided", -652330764), function(a, b) {
  return ["Required namespace not provided for ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, " ", (new cljs.core.Keyword(null, "unprovided", "unprovided", -652330764)).cljs$core$IFn$_invoke$arity$1(b)))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "undeclared-var", "undeclared-var", -1624364944), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "macro-present?", "macro-present?", -1397713205)).cljs$core$IFn$_invoke$arity$1(b)) ? "Can't take value of macro " : "Use of undeclared Var "), cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(b)), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(b))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "undeclared-ns", "undeclared-ns", -1589012812), function(a, b) {
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ns-sym", "ns-sym", -1696101605));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "js-provide", "js-provide", 1052912493));
  return ["No such namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), ", could not locate ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.ns__GT_relpath.call(null, a, new cljs.core.Keyword(null, "cljs", "cljs", 1492417629))), ", ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.ns__GT_relpath.call(null, a, new cljs.core.Keyword(null, "cljc", "cljc", -1728400583))), ', or JavaScript source providing "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), '"'].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "undeclared-macros-ns", "undeclared-macros-ns", -438029430), function(a, b) {
  a = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "ns-sym", "ns-sym", -1696101605));
  cljs.core.get.call(null, a, new cljs.core.Keyword(null, "js-provide", "js-provide", 1052912493));
  return ["No such macros namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), ", could not locate ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.ns__GT_relpath.call(null, b, new cljs.core.Keyword(null, "clj", "clj", -660495428))), " or ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.ns__GT_relpath.call(null, b, new cljs.core.Keyword(null, "cljc", "cljc", -1728400583)))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)), " not declared ^:dynamic"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "redef", "redef", 1032704258), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(b)), " already refers to: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(b))].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(b))].join(""))), 
  " being replaced by: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns-name", "ns-name", -2077346323)).cljs$core$IFn$_invoke$arity$1(b))].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(b))].join("")))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "redef-in-file", "redef-in-file", -476530788), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(b)), " at line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(b)), " is being replaced"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns-name", "ns-name", -2077346323)).cljs$core$IFn$_invoke$arity$1(b))].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(b))].join(""))), " no longer fn, references are stale"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "fn-arity", "fn-arity", -403576501), function(a, b) {
  return ["Wrong number of args (", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "argc", "argc", -1452839519)).cljs$core$IFn$_invoke$arity$1(b)), ") passed to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var a = (new cljs.core.Keyword(null, "ctor", "ctor", 1750864802)).cljs$core$IFn$_invoke$arity$1(b);
    return cljs.core.truth_(a) ? a : (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b);
  }())].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "fn-deprecated", "fn-deprecated", 626877647), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fexpr", "fexpr", -122857150)).cljs$core$IFn$_invoke$arity$1(b)))), " is deprecated."].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137), function(a, b) {
  return ["Invalid :refer, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b)), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "lib", "lib", 191808726)).cljs$core$IFn$_invoke$arity$1(b)), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(b)), " does not exist"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "protocol-deprecated", "protocol-deprecated", 103233497), function(a, b) {
  return ["Protocol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " is deprecated"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "undeclared-protocol-symbol", "undeclared-protocol-symbol", 462882867), function(a, b) {
  return ["Can't resolve protocol symbol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "invalid-protocol-symbol", "invalid-protocol-symbol", 86246948), function(a, b) {
  return ["Symbol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " is not a protocol"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "protocol-invalid-method", "protocol-invalid-method", 522647516), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "no-such-method", "no-such-method", 1087422840)).cljs$core$IFn$_invoke$arity$1(b)) ? ["Bad method signature in protocol implementation, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " does not declare method called ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fname", "fname", 1500291491)).cljs$core$IFn$_invoke$arity$1(b))].join("") : 
  ["Bad method signature in protocol implementation, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fname", "fname", 1500291491)).cljs$core$IFn$_invoke$arity$1(b)), " does not declare arity ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "invalid-arity", "invalid-arity", 1335461949)).cljs$core$IFn$_invoke$arity$1(b))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "protocol-duped-method", "protocol-duped-method", 15128166), function(a, b) {
  return ["Duplicated methods in protocol implementation ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fname", "fname", 1500291491)).cljs$core$IFn$_invoke$arity$1(b))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "protocol-multiple-impls", "protocol-multiple-impls", 794179260), function(a, b) {
  return ["Protocol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " implemented multiple times"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "protocol-with-variadic-method", "protocol-with-variadic-method", -693368178), function(a, b) {
  return ["Protocol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " declares method ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)), " with variadic signature (\x26)"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "protocol-impl-with-variadic-method", "protocol-impl-with-variadic-method", -319321217), function(a, b) {
  return ["Protocol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(b)), " implements method ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)), " with variadic signature (\x26)"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "protocol-impl-recur-with-target", "protocol-impl-recur-with-target", -1648321574), function(a, b) {
  return ['Ignoring target object "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(b))), '" passed in recur to protocol method head'].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "multiple-variadic-overloads", "multiple-variadic-overloads", 1110059837), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)), ": Can't have more than 1 variadic overload"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "variadic-max-arity", "variadic-max-arity", -14288402), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)), ": Can't have fixed arity function with more params than variadic function"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "overload-arity", "overload-arity", 823206044), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)), ": Can't have 2 overloads with same arity"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "extending-base-js-type", "extending-base-js-type", 432787264), function(a, b) {
  return ["Extending an existing JavaScript type - use a different symbol name instead of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "current-symbol", "current-symbol", -932381075)).cljs$core$IFn$_invoke$arity$1(b)), " e.g ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "suggested-symbol", "suggested-symbol", -1329631875)).cljs$core$IFn$_invoke$arity$1(b))].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "invalid-arithmetic", "invalid-arithmetic", 1917075065), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "js-op", "js-op", -1046277897)).cljs$core$IFn$_invoke$arity$1(b)), ", all arguments must be numbers, got ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "types", "types", 590030639)).cljs$core$IFn$_invoke$arity$1(b)), " instead."].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "invalid-array-access", "invalid-array-access", -1747132236), function(a, b) {
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "name", "name", 1843675177));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "types", "types", 590030639));
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol("cljs.core", "checked-aget", "cljs.core/checked-aget", 24024561, null), a) || cljs.core._EQ_.call(null, new cljs.core.Symbol("cljs.core", "checked-aget'", "cljs.core/checked-aget'", 1960922245, null), a)) {
    return ["cljs.core/aget, arguments must be an array followed by numeric indices, got ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " instead", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "object", "object", -1179821820, null), cljs.core.first.call(null, b)) || cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "string", "string", -349010059, null), 
    null], null), null), cljs.core.rest.call(null, b)) ? [" (consider ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(2 === cljs.core.count.call(null, b) ? "goog.object/get" : "goog.object/getValueByKeys"), " for object access)"].join("") : null)].join("");
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Symbol("cljs.core", "checked-aset", "cljs.core/checked-aset", -2080232353, null), a) || cljs.core._EQ_.call(null, new cljs.core.Symbol("cljs.core", "checked-aset'", "cljs.core/checked-aset'", 163859714, null), a)) {
    return ["cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " instead", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "object", "object", -1179821820, null), cljs.core.first.call(null, b)) || cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "string", "string", 
    -349010059, null), null], null), null), cljs.core.butlast.call(null, cljs.core.rest.call(null, b))) ? " (consider goog.object/set for object access)" : null)].join("");
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "invoke-ctor", "invoke-ctor", -756052704), function(a, b) {
  return ["Cannot invoke type constructor ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "fexpr", "fexpr", -122857150)).cljs$core$IFn$_invoke$arity$1(b)))), " as function "].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "single-segment-namespace", "single-segment-namespace", -491924469), function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b)), " is a single segment namespace"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "munged-namespace", "munged-namespace", -101986199), function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "name", "name", 1843675177));
  b = cljs.core.munge.call(null, clojure.string.join.call(null, ".", cljs.core.map.call(null, function(a, b, c, g) {
    return function(a) {
      return cljs.core.truth_(cljs.analyzer.js_reserved.call(null, a)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "$"].join("") : a;
    };
  }(b, c, c, a), clojure.string.split.call(null, cljs.core.name.call(null, a), /\./))));
  return ["Namespace ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " contains a reserved JavaScript keyword, the corresponding Google Closure namespace will be munged to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "ns-var-clash", "ns-var-clash", -280494668), function(a, b) {
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "var", "var", -769682797));
  return ["Namespace ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " clashes with var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "extend-type-invalid-method-shape", "extend-type-invalid-method-shape", 1424103549), function(a, b) {
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "protocol", "protocol", 652470118));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "method", "method", 55703592));
  return ["Bad extend-type method shape for protocol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " method ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), ", method arities must be grouped together"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "unsupported-js-module-type", "unsupported-js-module-type", 1806206180), function(a, b) {
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "module-type", "module-type", 1392760304));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return ["Unsupported JavaScript module type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " for foreign library ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "."].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "unsupported-preprocess-value", "unsupported-preprocess-value", 1635147105), function(a, b) {
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "preprocess", "preprocess", 1208285012));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return ["Unsupported preprocess value ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " for foreign library ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "."].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "js-shadowed-by-local", "js-shadowed-by-local", 198048291), function(a, b) {
  a = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  a = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "name", "name", 1843675177));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " is shadowed by a local"].join("");
});
cljs.core._add_method.call(null, cljs.analyzer.error_message, new cljs.core.Keyword(null, "infer-warning", "infer-warning", -1600671410), function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "warn-type", "warn-type", -790105219));
  a = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "form", "form", -1624062471));
  b = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "type", "type", 1174270348));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "property", "property", -1114278232));
  d = d instanceof cljs.core.Keyword ? d.fqn : null;
  switch(d) {
    case "target":
      return ["Cannot infer target type in expression ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), ""].join("");
    case "property":
      return ["Cannot resolve property ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " for inferred type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " in expression ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
    case "object":
      return ["Adding extern to Object for property ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " due to ambiguous expression ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
    default:
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
  }
});
cljs.analyzer.default_warning_handler = function(a, b, c) {
  if (cljs.core.truth_(a.call(null, cljs.analyzer._STAR_cljs_warnings_STAR_))) {
    if (a = cljs.analyzer.error_message.call(null, a, c), cljs.core.truth_(a)) {
      c = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_fn_STAR_ = cljs.core._STAR_print_err_fn_STAR_;
      try {
        return cljs.core.println.call(null, cljs.analyzer.message.call(null, b, ["WARNING: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")));
      } finally {
        cljs.core._STAR_print_fn_STAR_ = c;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);
cljs.analyzer.repeat_char = function(a, b) {
  for (var c = a;;) {
    if (0 < b) {
      c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), --b;
    } else {
      return c;
    }
  }
};
cljs.analyzer.hex_format = function(a, b) {
  a = a.charCodeAt(0).toString(16);
  var c = a.length;
  b = c < b ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.repeat_char.call(null, "0", b - c)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : a;
  return ["_u", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "_"].join("");
};
cljs.analyzer.gen_constant_id = function(a) {
  if (a instanceof cljs.core.Keyword) {
    var b = "cst$kw$";
  } else {
    if (!(a instanceof cljs.core.Symbol)) {
      throw Error(["constant type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type.call(null, a)), " not supported"].join(""));
    }
    b = "cst$sym$";
  }
  a = a instanceof cljs.core.Keyword ? cljs.core.subs.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), 1) : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  a = cljs.core._EQ_.call(null, ".", a) ? "_DOT_" : clojure.string.replace.call(null, clojure.string.replace.call(null, cljs.core.munge.call(null, clojure.string.replace.call(null, a, "-", "_DASH_")), ".", "$"), /[^a-z0-9$_]/i, function(a, b) {
    return function(a) {
      return cljs.analyzer.hex_format.call(null, a, 4);
    };
  }(b, a));
  return cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.analyzer.register_constant_BANG_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.register_constant_BANG_.call(null, null, a);
};
cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, function(c) {
    c = cljs.core.update_in.call(null, c, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "constant-table", "cljs.analyzer/constant-table", -114131889)], null), function(a) {
      return cljs.core.truth_(cljs.core.get.call(null, a, b)) ? a : cljs.core.assoc.call(null, a, b, cljs.analyzer.gen_constant_id.call(null, b));
    });
    return cljs.core.truth_(a) ? cljs.core.update_in.call(null, c, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Keyword("cljs.analyzer", "constants", "cljs.analyzer/constants", 1697083770)], 
    null), function(a) {
      return function(a) {
        a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
        var c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "seen", "seen", -518999789), cljs.core.PersistentHashSet.EMPTY), d = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.PersistentVector.EMPTY);
        return cljs.core.contains_QMARK_.call(null, c, b) ? a : cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "seen", "seen", -518999789), cljs.core.conj.call(null, c, b), new cljs.core.Keyword(null, "order", "order", -1254677256), cljs.core.conj.call(null, d, b));
      };
    }(c)) : c;
  });
};
cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2;
cljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null)], null), new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
"cljs.user", "cljs.user", 877795071, null)], null)], null);
cljs.analyzer.namespaces = function() {
  "undefined" === typeof cljs.analyzer.t_cljs$analyzer16755 && (cljs.analyzer.t_cljs$analyzer16755 = function(a) {
    this.meta16756 = a;
    this.cljs$lang$protocol_mask$partition0$ = 425984;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.analyzer.t_cljs$analyzer16755.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.analyzer.t_cljs$analyzer16755(b);
  }, cljs.analyzer.t_cljs$analyzer16755.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta16756;
  }, cljs.analyzer.t_cljs$analyzer16755.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
    return null != cljs.env._STAR_compiler_STAR_ ? (new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)) : cljs.analyzer.default_namespaces;
  }, cljs.analyzer.t_cljs$analyzer16755.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta16756", "meta16756", -4373818, null)], null);
  }, cljs.analyzer.t_cljs$analyzer16755.cljs$lang$type = !0, cljs.analyzer.t_cljs$analyzer16755.cljs$lang$ctorStr = "cljs.analyzer/t_cljs$analyzer16755", cljs.analyzer.t_cljs$analyzer16755.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "cljs.analyzer/t_cljs$analyzer16755");
  }, cljs.analyzer.__GT_t_cljs$analyzer16755 = function(a) {
    return new cljs.analyzer.t_cljs$analyzer16755(a);
  });
  return new cljs.analyzer.t_cljs$analyzer16755(cljs.core.PersistentArrayMap.EMPTY);
}();
cljs.analyzer.get_namespace = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.get_namespace.call(null, cljs.env._STAR_compiler_STAR_, a);
};
cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = cljs.core.get_in.call(null, cljs.core.deref.call(null, a), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), b], null));
  return null == a ? cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null), b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null)], null) : null : a;
};
cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2;
cljs.analyzer.get_line = function(a, b) {
  a = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
  return cljs.core.truth_(a) ? a : (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(b);
};
cljs.analyzer.get_col = function(a, b) {
  a = (new cljs.core.Keyword(null, "column", "column", 2078222095)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
  return cljs.core.truth_(a) ? a : (new cljs.core.Keyword(null, "column", "column", 2078222095)).cljs$core$IFn$_invoke$arity$1(b);
};
cljs.analyzer.intern_macros = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.intern_macros.call(null, a, !1);
};
cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.truth_(function() {
    var c = null == cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a, new cljs.core.Keyword(null, "macros", "macros", 811339431)], null));
    return c ? c : b;
  }()) ? cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a, new cljs.core.Keyword(null, "macros", "macros", 811339431)], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
    a = cljs.core.PersistentVector;
    var f = cljs.core.PersistentVector.EMPTY_NODE;
    c = cljs.core.meta.call(null, c);
    var g = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(c).getName();
    c = cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "ns", "ns", 441598760), g, new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")), new cljs.core.Keyword(null, "macro", "macro", -867863404), !0);
    return new a(null, 2, 5, f, [b, c], null);
  }, cljs.core.filter.call(null, function(a) {
    cljs.core.nth.call(null, a, 0, null);
    return cljs.core.nth.call(null, a, 1, null).isMacro();
  }, cljs.core.ns_interns_STAR_.call(null, a))))) : null;
};
cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2;
cljs.analyzer.empty_env = function() {
  var a = cljs.env._STAR_compiler_STAR_;
  null == a && (cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.call(null));
  try {
    return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.analyzer.get_namespace.call(null, cljs.analyzer._STAR_cljs_ns_STAR_), new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "statement", "statement", -32780863), new cljs.core.Keyword(null, "locals", "locals", 535295783), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "fn-scope", "fn-scope", -865664859), cljs.core.PersistentVector.EMPTY, 
    new cljs.core.Keyword(null, "js-globals", "js-globals", 1670394727), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
      return function(a) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), a], null)], null);
      };
    }(a), cljs.core.list(new cljs.core.Symbol(null, "alert", "alert", 1068580947, null), new cljs.core.Symbol(null, "window", "window", -1929916235, null), new cljs.core.Symbol(null, "document", "document", 311342840, null), new cljs.core.Symbol(null, "console", "console", -1426363712, null), new cljs.core.Symbol(null, "escape", "escape", 648929575, null), new cljs.core.Symbol(null, "unescape", "unescape", -2037730561, null), new cljs.core.Symbol(null, "screen", "screen", -664376021, null), new cljs.core.Symbol(null, 
    "location", "location", -838836381, null), new cljs.core.Symbol(null, "navigator", "navigator", -604431588, null), new cljs.core.Symbol(null, "history", "history", 1393136307, null), new cljs.core.Symbol(null, "location", "location", -838836381, null), new cljs.core.Symbol(null, "global", "global", 1734126574, null), new cljs.core.Symbol(null, "process", "process", -1011242831, null), new cljs.core.Symbol(null, "require", "require", 1172530194, null), new cljs.core.Symbol(null, "module", "module", 
    -1229817578, null), new cljs.core.Symbol(null, "exports", "exports", 895523255, null))))], null);
  } finally {
    null == a && (cljs.env._STAR_compiler_STAR_ = null);
  }
};
cljs.analyzer.source_info = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.analyzer.source_info.call(null, null, a) : null;
};
cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(b)), new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null)) ? "cljs/core.cljs" : cljs.analyzer._STAR_cljs_file_STAR_, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.analyzer.get_line.call(null, 
  a, b), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.analyzer.get_col.call(null, a, b)], null);
  return cljs.core.truth_((new cljs.core.Keyword(null, "root-source-info", "root-source-info", -1436144912)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.core.merge.call(null, a, cljs.core.select_keys.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "root-source-info", "root-source-info", -1436144912)], null))) : a;
};
cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2;
cljs.analyzer.message = function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(a)) ? [" at line ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(a)), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join("") : cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_) ? 
  [" in file ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join("") : null)].join("");
};
cljs.analyzer.warning = function(a, b, c) {
  for (var d = cljs.core.seq.call(null, cljs.analyzer._STAR_cljs_warning_handlers_STAR_), e = null, f = 0, g = 0;;) {
    if (g < f) {
      var h = cljs.core._nth.call(null, e, g);
      h.call(null, a, b, c);
      g += 1;
    } else {
      if (d = cljs.core.seq.call(null, d)) {
        e = d, cljs.core.chunked_seq_QMARK_.call(null, e) ? (d = cljs.core.chunk_first.call(null, e), f = cljs.core.chunk_rest.call(null, e), e = d, h = cljs.core.count.call(null, d), d = f, f = h) : (h = cljs.core.first.call(null, e), h.call(null, a, b, c), d = cljs.core.next.call(null, e), e = null, f = 0), g = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.error = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.error.call(null, a, b, null);
};
cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.ex_info.call(null, cljs.analyzer.message.call(null, a, b), cljs.core.assoc.call(null, cljs.analyzer.source_info.call(null, a), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword("cljs", "analysis-error", "cljs/analysis-error", -420526349)), c);
};
cljs.analyzer.error.cljs$lang$maxFixedArity = 3;
cljs.analyzer.analysis_error_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs", "analysis-error", "cljs/analysis-error", -420526349), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, a)));
};
cljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "String", "String", -2070057435, null), null, new cljs.core.Symbol(null, "goog.string", "goog.string", -2055533048, null), null, new cljs.core.Symbol(null, "goog", "goog", -70603925, null), null, new cljs.core.Symbol(null, "goog.object", "goog.object", 678593132, null), null, new cljs.core.Symbol(null, "Math", "Math", 2033287572, null), null, new cljs.core.Symbol(null, 
"goog.array", "goog.array", -671977860, null), null], null), null);
cljs.analyzer.implicit_import_QMARK_ = function(a, b, c) {
  return cljs.core.contains_QMARK_.call(null, cljs.analyzer.implicit_nses, b);
};
cljs.analyzer.confirm_var_exist_warning = function(a, b, c) {
  return function(a, b, c) {
    return cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "undeclared-var", "undeclared-var", -1624364944), a, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), b, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), c, new cljs.core.Keyword(null, "macro-present?", "macro-present?", -1397713205), null != cljs.analyzer.get_expander.call(null, cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), 
    [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("")), a)], null));
  };
};
cljs.analyzer.loaded_js_ns_QMARK_ = function(a, b) {
  if (cljs.core.truth_(cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), b))) {
    return null;
  }
  a = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a);
  return null != cljs.core.get.call(null, (new cljs.core.Keyword(null, "requires", "requires", -1201390927)).cljs$core$IFn$_invoke$arity$1(a), b) || null != cljs.core.get.call(null, (new cljs.core.Keyword(null, "imports", "imports", -1249933394)).cljs$core$IFn$_invoke$arity$1(a), b);
};
cljs.analyzer.internal_js_module_exists_QMARK_ = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.mapcat.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a)], null);
  }), a), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.analyzer.js_module_exists_QMARK__STAR_ = cljs.core.memoize.call(null, cljs.analyzer.internal_js_module_exists_QMARK_);
cljs.analyzer.js_module_exists_QMARK_ = function(a) {
  return cljs.analyzer.js_module_exists_QMARK__STAR_.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "js-module-index", "js-module-index", 2072061931)], null)), a);
};
cljs.analyzer.node_module_dep_QMARK_ = function(a) {
  try {
    return cljs.core._EQ_.call(null, cljs.core._STAR_target_STAR_, "nodejs") && cljs.core.boolean$.call(null, require.resolve([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")));
  } catch (b) {
    return !1;
  }
};
cljs.analyzer.dep_has_global_exports_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "js-dependency-index", "js-dependency-index", -1887042131), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), new cljs.core.Keyword(null, "global-exports", "global-exports", -1644865592)], null)), cljs.core.symbol.call(null, a));
};
cljs.analyzer.confirm_var_exists = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.analyzer.confirm_var_exist_warning.call(null, a, b, c);
  return cljs.analyzer.confirm_var_exists.call(null, a, b, c, d);
};
cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
  c = ".." !== e && /\./.test(e) ? cljs.core.first.call(null, clojure.string.split.call(null, e, /\./)) : c;
  c = cljs.core.symbol.call(null, c);
  return cljs.analyzer.implicit_import_QMARK_.call(null, a, b, c) || cljs.analyzer.loaded_js_ns_QMARK_.call(null, a, b) || cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), b) && cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "unquote", "unquote", -1004694737, null), c) || null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", 
  -260788927), b, new cljs.core.Keyword(null, "defs", "defs", 1398449717), c) || !cljs.core.not.call(null, cljs.analyzer.js_module_exists_QMARK_.call(null, b)) ? null : d.call(null, a, b, c);
};
cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4;
cljs.analyzer.confirm_var_exists_throw = function() {
  return function(a, b, c) {
    return cljs.analyzer.confirm_var_exists.call(null, a, b, c, function(a, b, c) {
      throw cljs.analyzer.error.call(null, a, ["Unable to resolve var: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " in this context"].join(""));
    });
  };
};
cljs.analyzer.resolve_ns_alias = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.resolve_ns_alias.call(null, a, b, cljs.core.symbol.call(null, b));
};
cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.symbol.call(null, b);
  return cljs.core.get.call(null, (new cljs.core.Keyword(null, "requires", "requires", -1201390927)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), b, c);
};
cljs.analyzer.resolve_ns_alias.cljs$lang$maxFixedArity = 3;
cljs.analyzer.resolve_macro_ns_alias = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.resolve_macro_ns_alias.call(null, a, b, cljs.core.symbol.call(null, b));
};
cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.symbol.call(null, b);
  return cljs.core.get.call(null, (new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), b, c);
};
cljs.analyzer.resolve_macro_ns_alias.cljs$lang$maxFixedArity = 3;
cljs.analyzer.confirm_ns = function(a, b) {
  return cljs.core.not_EQ_.call(null, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), b) && null == cljs.core.get.call(null, cljs.analyzer.implicit_nses, b) && null == cljs.core.get.call(null, (new cljs.core.Keyword(null, "requires", "requires", -1201390927)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), b) && null == cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), 
  new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), b) && cljs.core.not.call(null, cljs.analyzer.js_module_exists_QMARK_.call(null, b)) ? cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "undeclared-ns", "undeclared-ns", -1589012812), a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns-sym", "ns-sym", -1696101605), b, new cljs.core.Keyword(null, "js-provide", "js-provide", 1052912493), b], null)) : null;
};
cljs.analyzer.core_name_QMARK_ = function(a, b) {
  var c = function() {
    var c = null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Keyword(null, "defs", "defs", 1398449717), b);
    if (c) {
      return c;
    }
    c = cljs.analyzer.get_expander.call(null, b, a);
    if (null == c) {
      return !1;
    }
    c = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
    return cljs.core._EQ_.call(null, c.getName(), new cljs.core.Symbol(null, "cljs.core$macros", "cljs.core$macros", -2057787548, null));
  }();
  return c ? !cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), b) : c;
};
cljs.analyzer.public_name_QMARK_ = function(a, b) {
  var c = function() {
    var c = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a, new cljs.core.Keyword(null, "defs", "defs", 1398449717), b);
    return cljs.core.truth_(c) ? c : cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, a)), "$macros"].join("")), new cljs.core.Keyword(null, "defs", "defs", 1398449717), b);
  }();
  return null != c && cljs.core.not.call(null, function() {
    var a = (new cljs.core.Keyword(null, "private", "private", -558947994)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : (new cljs.core.Keyword(null, "anonymous", "anonymous", 447897231)).cljs$core$IFn$_invoke$arity$1(c);
  }());
};
cljs.analyzer.js_tag_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol && (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), a) || cljs.core._EQ_.call(null, "js", cljs.core.namespace.call(null, a)));
};
cljs.analyzer.normalize_js_tag = function(a) {
  return cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), a) ? a : cljs.core.with_meta.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.symbol, clojure.string.split.call(null, cljs.core.name.call(null, a), /\./))), new cljs.core.Symbol(null, "prototype", "prototype", 
  519166522, null))], null));
};
cljs.analyzer.alias__GT_type = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null, "object", "object", -1179821820, null), new cljs.core.Symbol(null, "Object", "Object", 61210754, null), new cljs.core.Symbol(null, "string", "string", -349010059, null), new cljs.core.Symbol(null, "String", "String", -2070057435, null), new cljs.core.Symbol(null, "number", "number", -1084057331, null), new cljs.core.Symbol(null, "Number", "Number", -508146185, null), new cljs.core.Symbol(null, "array", 
"array", -440182315, null), new cljs.core.Symbol(null, "Array", "Array", -423496279, null), new cljs.core.Symbol(null, "function", "function", -486723946, null), new cljs.core.Symbol(null, "Function", "Function", -749895448, null), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Symbol(null, "Boolean", "Boolean", 1661141587, null), new cljs.core.Symbol(null, "symbol", "symbol", 601958831, null), new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null)], null);
cljs.analyzer.has_extern_QMARK__STAR_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.find.call(null, cljs.core.get_in.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "Window", "Window", -138860255, null), new cljs.core.Symbol(null, "prototype", "prototype", 519166522, null)], null)), cljs.core.first.call(null, a));
  null != c && (c = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, cljs.core.first.call(null, c))), a = null == c ? a : cljs.core.into.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.Symbol(null, "prototype", "prototype", 519166522, null)], null), cljs.core.next.call(null, a)));
  return cljs.analyzer.has_extern_QMARK__STAR_.call(null, a, b, b);
};
cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (;;) {
    if (cljs.core.empty_QMARK_.call(null, a)) {
      return !0;
    }
    var d = cljs.core.first.call(null, a);
    b = cljs.core.find.call(null, b, d);
    if (cljs.core.not.call(null, b)) {
      return !1;
    }
    d = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    var e = cljs.core.meta.call(null, d);
    if (cljs.core.truth_(function() {
      var a = cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Function", "Function", -749895448, null), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(e));
      return a ? (new cljs.core.Keyword(null, "ctor", "ctor", 1750864802)).cljs$core$IFn$_invoke$arity$1(e) : a;
    }())) {
      return d = cljs.analyzer.has_extern_QMARK__STAR_.call(null, cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "prototype", "prototype", 519166522, null)], null), cljs.core.next.call(null, a)), b, c), cljs.core.truth_(d) ? d : cljs.analyzer.has_extern_QMARK__STAR_.call(null, cljs.core.next.call(null, a), b, c);
    }
    a = cljs.core.next.call(null, a);
  }
};
cljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$maxFixedArity = 3;
cljs.analyzer.has_extern_QMARK_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.has_extern_QMARK_.call(null, a, cljs.core.get.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "externs", "cljs.analyzer/externs", 893359239)));
};
cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.analyzer.has_extern_QMARK__STAR_.call(null, a, b);
  if (cljs.core.truth_(c)) {
    return c;
  }
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a))) {
    c = cljs.core.first.call(null, a);
    var d = cljs.core.get_in.call(null, b, cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "Window", "Window", -138860255, null), new cljs.core.Symbol(null, "prototype", "prototype", 519166522, null)], null), c));
    b = cljs.core.truth_(d) ? d : cljs.core.get_in.call(null, b, cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "Number", "Number", -508146185, null)], null), c));
  } else {
    b = null;
  }
  return cljs.core.truth_(b) ? b : clojure.string.starts_with_QMARK_.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, a))].join(""), "cljs$");
};
cljs.analyzer.has_extern_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.analyzer.js_tag = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.js_tag.call(null, a, new cljs.core.Keyword(null, "tag", "tag", -1290361223));
};
cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.js_tag.call(null, a, b, cljs.core.get.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "externs", "cljs.analyzer/externs", 893359239)));
};
cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.analyzer.js_tag.call(null, a, b, c, c);
};
cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core.find.call(null, c, cljs.core.first.call(null, a));
  if (cljs.core.truth_(e)) {
    c = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    c = b.call(null, cljs.core.meta.call(null, c));
    if (cljs.core._EQ_.call(null, cljs.core.count.call(null, a), 1)) {
      return cljs.core.truth_(c) ? cljs.core.symbol.call(null, "js", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.alias__GT_type.call(null, c, c))].join("")) : null;
    }
    e = cljs.analyzer.js_tag.call(null, cljs.core.next.call(null, a), b, e, d);
    return cljs.core.truth_(e) ? e : cljs.analyzer.js_tag.call(null, cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "prototype", "prototype", 519166522, null)], null), cljs.core.next.call(null, a)), b, cljs.core.get.call(null, d, c), d);
  }
  return null;
};
cljs.analyzer.js_tag.cljs$lang$maxFixedArity = 4;
cljs.analyzer.dotted_symbol_QMARK_ = function(a) {
  a = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  return goog.string.contains(a, ".") && !goog.string.contains(a, "..");
};
cljs.analyzer.munge_node_lib = function(a) {
  return ["node$module$", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge.call(null, clojure.string.replace.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), /[.\\/]/, "\\$")))].join("");
};
cljs.analyzer.munge_global_export = function(a) {
  return ["global$module$", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge.call(null, clojure.string.replace.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), /[.\\/]/, "\\$")))].join("");
};
cljs.analyzer.resolve_alias = function(a, b) {
  return cljs.core.truth_(function() {
    var c = cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), a);
    return c ? (c = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "aget", "aget", 1491056546, null), null, new cljs.core.Symbol(null, "aset", "aset", 900773178, null), null], null), null)).call(null, b), cljs.core.truth_(c) ? cljs.analyzer.checked_arrays.call(null) : c) : c;
  }()) ? cljs.core.get_in.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "warn", "warn", -436710552), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "aget", "aget", 1491056546, null), new cljs.core.Symbol(null, "checked-aget", "checked-aget", 950823006, null), new cljs.core.Symbol(null, "aset", "aset", 900773178, null), new cljs.core.Symbol(null, "checked-aset", "checked-aset", 1556136760, null)], null), new cljs.core.Keyword(null, "error", 
  "error", -978969032), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "aget", "aget", 1491056546, null), new cljs.core.Symbol(null, "checked-aget'", "checked-aget'", 212330530, null), new cljs.core.Symbol(null, "aset", "aset", 900773178, null), new cljs.core.Symbol(null, "checked-aset'", "checked-aset'", -510930777, null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.checked_arrays.call(null), b], null)) : 
  b;
};
cljs.analyzer.ns__GT_module_type = function(a) {
  return cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_.call(null, a)) ? new cljs.core.Keyword(null, "js", "js", 1768080579) : cljs.analyzer.node_module_dep_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "node", "node", 581201198) : cljs.core.truth_(cljs.analyzer.dep_has_global_exports_QMARK_.call(null, a)) ? new cljs.core.Keyword(null, "global", "global", 93595047) : null;
};
"undefined" === typeof cljs.analyzer.resolve_STAR_ && (cljs.analyzer.resolve_STAR_ = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.analyzer", "resolve*"), function(a, b, c, d, e) {
    return function(a, b, c) {
      return cljs.analyzer.ns__GT_module_type.call(null, b);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.analyzer.resolve_STAR_, new cljs.core.Keyword(null, "js", "js", 1768080579), function(a, b, c) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, a))].join("")), new cljs.core.Keyword(null, "ns", "ns", 441598760), b], null);
});
cljs.core._add_method.call(null, cljs.analyzer.resolve_STAR_, new cljs.core.Keyword(null, "node", "node", 581201198), function(a, b, c) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.munge_node_lib.call(null, b)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, a))].join("")), new cljs.core.Keyword(null, "ns", "ns", 441598760), c], null);
});
cljs.core._add_method.call(null, cljs.analyzer.resolve_STAR_, new cljs.core.Keyword(null, "global", "global", 93595047), function(a, b, c) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.munge_global_export.call(null, b)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, a))].join("")), new cljs.core.Keyword(null, "ns", "ns", 441598760), c], null);
});
cljs.core._add_method.call(null, cljs.analyzer.resolve_STAR_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(a, b, c) {
  return cljs.core.merge.call(null, cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), b, new cljs.core.Keyword(null, "defs", "defs", 1398449717), cljs.core.symbol.call(null, cljs.core.name.call(null, a))), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), 
  [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, a))].join("")), new cljs.core.Keyword(null, "ns", "ns", 441598760), b], null));
});
cljs.analyzer.required_QMARK_ = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.set.call(null, cljs.core.vals.call(null, cljs.analyzer.gets.call(null, b, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "requires", "requires", -1201390927)))), a) || cljs.core.contains_QMARK_.call(null, cljs.core.set.call(null, cljs.core.vals.call(null, cljs.analyzer.gets.call(null, b, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "uses", "uses", 232664692)))), a);
};
cljs.analyzer.invokeable_ns_QMARK_ = function(a, b) {
  a = cljs.analyzer.resolve_ns_alias.call(null, b, a);
  b = cljs.analyzer.required_QMARK_.call(null, a, b);
  return cljs.core.truth_(b) ? (b = cljs.analyzer.js_module_exists_QMARK_.call(null, a), cljs.core.truth_(b) ? b : (b = cljs.analyzer.node_module_dep_QMARK_.call(null, a)) ? b : cljs.analyzer.dep_has_global_exports_QMARK_.call(null, a)) : b;
};
cljs.analyzer.resolve_invokeable_ns = function(a, b, c) {
  var d = cljs.analyzer.resolve_ns_alias.call(null, c, a);
  a = cljs.analyzer.ns__GT_module_type.call(null, d);
  a = a instanceof cljs.core.Keyword ? a.fqn : null;
  switch(a) {
    case "js":
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, function() {
        var a = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword(null, "js-module-index", "js-module-index", 2072061931), d, new cljs.core.Keyword(null, "name", "name", 1843675177));
        return cljs.core.truth_(a) ? a : cljs.analyzer.resolve_ns_alias.call(null, c, d);
      }()), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "js", "js", -886355190, null)], null);
    case "node":
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), cljs.analyzer.munge_node_lib.call(null, cljs.analyzer.resolve_ns_alias.call(null, c, d))), new cljs.core.Keyword(null, "ns", "ns", 441598760), b], null);
    case "global":
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), cljs.analyzer.munge_global_export.call(null, cljs.analyzer.resolve_ns_alias.call(null, c, d))), new cljs.core.Keyword(null, "ns", "ns", 441598760), b], null);
    default:
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
};
cljs.analyzer.resolve_var = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.resolve_var.call(null, a, b, null);
};
cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (;;) {
    var d = (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(a);
    if ("js" === cljs.core.namespace.call(null, b)) {
      cljs.core.contains_QMARK_.call(null, d, cljs.core.symbol.call(null, cljs.core.name.call(null, b))) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "js-shadowed-by-local", "js-shadowed-by-local", 198048291), a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), b], null));
      var e = cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.symbol, clojure.string.split.call(null, cljs.core.name.call(null, b), /\./)));
      cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.call(null, e)) || cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, cljs.core.into.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), 
      new cljs.core.Keyword(null, "externs", "externs", 221720677)], null), e), cljs.core.merge, cljs.core.PersistentArrayMap.EMPTY);
      return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), b, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "js", "js", -886355190, null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), cljs.core.with_meta.call(null, function() {
        var a = cljs.analyzer.js_tag.call(null, e);
        if (cljs.core.truth_(a)) {
          return a;
        }
        a = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, b));
        return cljs.core.truth_(a) ? a : new cljs.core.Symbol(null, "js", "js", -886355190, null);
      }(), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), e], null))], null), function() {
        var a = cljs.analyzer.js_tag.call(null, e, new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990));
        return cljs.core.truth_(a) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "js-fn-var", "js-fn-var", -565665358), !0, new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990), a], null) : null;
      }());
    }
    var f = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), g = cljs.core.get.call(null, d, b), h = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a));
    if (null != g) {
      return g;
    }
    if (null != cljs.core.namespace.call(null, b)) {
      d = cljs.core.namespace.call(null, b);
      var k = "clojure.core" === d ? "cljs.core" : d;
      d = cljs.analyzer.resolve_ns_alias.call(null, a, k, function() {
        var a = cljs.analyzer.js_module_exists_QMARK_.call(null, k);
        a = cljs.core.truth_(a) ? cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword(null, "js-module-index", "js-module-index", 2072061931), k, new cljs.core.Keyword(null, "name", "name", 1843675177)) : a;
        return cljs.core.truth_(a) ? a : cljs.core.symbol.call(null, k);
      }());
      null != c && (cljs.core.not_EQ_.call(null, h, d) && cljs.analyzer.confirm_ns.call(null, a, d), c.call(null, a, d, cljs.core.symbol.call(null, cljs.core.name.call(null, b))));
      return cljs.analyzer.resolve_STAR_.call(null, b, d, h);
    }
    if (cljs.core.truth_(cljs.analyzer.dotted_symbol_QMARK_.call(null, b))) {
      c = f.indexOf(".");
      a = cljs.core.symbol.call(null, cljs.core.subs.call(null, f, 0, c));
      c = cljs.core.subs.call(null, f, c + 1);
      d = cljs.core.get.call(null, d, a);
      if (null == d) {
        return d = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "imports", "imports", -1249933394), a), null == d ? (d = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, 
        "defs", "defs", 1398449717), a), null == d ? cljs.core.merge.call(null, cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a, new cljs.core.Keyword(null, "defs", "defs", 1398449717), cljs.core.symbol.call(null, c)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core._EQ_.call(null, "", a) ? cljs.core.symbol.call(null, 
        c) : cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), c), new cljs.core.Keyword(null, "ns", "ns", 441598760), a], null)) : cljs.core.merge.call(null, d, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")), new cljs.core.Keyword(null, "ns", "ns", 441598760), h], 
        null))) : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""), c)], null);
      }
      h = d;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(h))].join(""), c)], null);
    }
    if (null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "uses", "uses", 232664692), b)) {
      return d = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "uses", "uses", 232664692), b), cljs.analyzer.resolve_STAR_.call(null, b, d, h);
    }
    if (null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "renames", "renames", 343278368), b)) {
      return a = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "renames", "renames", 343278368), b), d = cljs.core.symbol.call(null, cljs.core.namespace.call(null, a)), a = cljs.core.symbol.call(null, cljs.core.name.call(null, a)), cljs.analyzer.resolve_STAR_.call(null, a, d, h);
    }
    if (null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "imports", "imports", -1249933394), b)) {
      b = h = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "imports", "imports", -1249933394), b);
    } else {
      if (null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "defs", "defs", 1398449717), b)) {
        return null != c && c.call(null, a, h, b), cljs.core.merge.call(null, cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "defs", "defs", 1398449717), b), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""), 
        [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")), new cljs.core.Keyword(null, "ns", "ns", 441598760), h], null));
      }
      if (cljs.analyzer.core_name_QMARK_.call(null, a, b)) {
        return null != c && c.call(null, a, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), b), cljs.core.merge.call(null, cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Keyword(null, "defs", "defs", 1398449717), b), new cljs.core.PersistentArrayMap(null, 2, 
        [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, "cljs.core", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null)], null));
      }
      if (cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_.call(null, f, a))) {
        return cljs.analyzer.resolve_invokeable_ns.call(null, f, h, a);
      }
      null != c && c.call(null, a, h, b);
      return cljs.core.merge.call(null, cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "defs", "defs", 1398449717), b), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")), 
      new cljs.core.Keyword(null, "ns", "ns", 441598760), h], null));
    }
  }
};
cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 3;
cljs.analyzer.resolve_existing_var = function(a, b) {
  return cljs.core.not.call(null, (new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, b))) ? cljs.analyzer.resolve_var.call(null, a, b, cljs.analyzer.confirm_var_exists) : cljs.analyzer.resolve_var.call(null, a, b);
};
cljs.analyzer.confirm_bindings = function(a, b) {
  b = cljs.core.seq.call(null, b);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e), g = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.analyzer.get_namespace.call(null, cljs.analyzer._STAR_cljs_ns_STAR_)), h = cljs.analyzer.resolve_existing_var.call(null, g, f);
      cljs.core.truth_(function() {
        var a = h;
        return cljs.core.truth_(a) ? cljs.core.not.call(null, (new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571)).cljs$core$IFn$_invoke$arity$1(h)) : a;
      }()) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), g, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ev", "ev", -406827324), h, new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(h)], null));
      e += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        if (cljs.core.chunked_seq_QMARK_.call(null, b)) {
          c = cljs.core.chunk_first.call(null, b), b = cljs.core.chunk_rest.call(null, b), f = c, d = cljs.core.count.call(null, c), c = f;
        } else {
          f = cljs.core.first.call(null, b);
          c = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.analyzer.get_namespace.call(null, cljs.analyzer._STAR_cljs_ns_STAR_));
          var k = cljs.analyzer.resolve_existing_var.call(null, c, f);
          cljs.core.truth_(function() {
            var a = k;
            return cljs.core.truth_(a) ? cljs.core.not.call(null, (new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571)).cljs$core$IFn$_invoke$arity$1(k)) : a;
          }()) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), c, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ev", "ev", -406827324), k, new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(k)], null));
          b = cljs.core.next.call(null, b);
          c = null;
          d = 0;
        }
        e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.resolve_macro_var = function(a, b) {
  var c = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), d = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927));
  if (null != cljs.core.namespace.call(null, b)) {
    return c = cljs.core.namespace.call(null, b), c = cljs.core._EQ_.call(null, "clojure.core", c) ? "cljs.core" : c, a = cljs.analyzer.resolve_macro_ns_alias.call(null, a, c), a = clojure.string.ends_with_QMARK_.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), "$macros") ? a : cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "$macros"].join("")), cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [a, new cljs.core.Keyword(null, "defs", "defs", 1398449717), cljs.core.symbol.call(null, cljs.core.name.call(null, b))], null));
  }
  if (null != cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), b], null))) {
    return a = cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), b], null)), cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, new cljs.core.Keyword(null, "macros", "macros", 811339431), b], null));
  }
  if (null != cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512), b], null))) {
    return b = cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512), b], null)), a = cljs.core.symbol.call(null, cljs.core.namespace.call(null, b)), b = cljs.core.symbol.call(null, cljs.core.name.call(null, b)), cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, new cljs.core.Keyword(null, "macros", 
    "macros", 811339431), b], null));
  }
  c = null != cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.Keyword(null, "macros", "macros", 811339431), b], null)) ? c : cljs.analyzer.core_name_QMARK_.call(null, a, b) ? cljs.analyzer.CLJS_CORE_MACROS_SYM : null;
  return null != c ? cljs.core.get_in.call(null, d, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.Keyword(null, "defs", "defs", 1398449717), b], null)) : null;
};
cljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 
615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, 
"js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), 
null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null);
cljs.analyzer._STAR_recur_frames_STAR_ = null;
cljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;
cljs.analyzer._STAR_allow_redef_STAR_ = !1;
cljs.analyzer._STAR_allow_ns_STAR_ = !0;
cljs.analyzer.analyze_keyword = function(a, b) {
  cljs.analyzer.register_constant_BANG_.call(null, a, b);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "constant", "constant", -379609303), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core", "Keyword", "cljs.core/Keyword", -451434488, null)], null);
};
cljs.analyzer.get_tag = function(a) {
  var b = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(a);
  return null == b ? (b = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(a)), null == b ? (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(a))) : b) : b;
};
cljs.analyzer.find_matching_method = function(a, b) {
  var c = function() {
    var b = (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(a));
  }();
  b = cljs.core.count.call(null, b);
  return cljs.core.some.call(null, function(a, b) {
    return function(a) {
      var c = (c = (new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543)).cljs$core$IFn$_invoke$arity$1(a) === b) ? c : (new cljs.core.Keyword(null, "variadic", "variadic", 882626057)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(c) ? a : c;
    };
  }(c, b), c);
};
cljs.analyzer.type_QMARK_ = function(a, b) {
  if (null != b && b instanceof cljs.core.Symbol) {
    a = cljs.analyzer.resolve_var.call(null, a, b);
    var c = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a);
    return null == c && (c = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(a)), null == c) ? (a = (new cljs.core.Keyword(null, "protocol-symbol", "protocol-symbol", 1279552198)).cljs$core$IFn$_invoke$arity$1(a), null == a ? cljs.core.get.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core", "PersistentHashMap", 
    "cljs.core/PersistentHashMap", -454120575, null), null, new cljs.core.Symbol("cljs.core", "List", "cljs.core/List", 1708954352, null), null], null), null), b) : a) : c;
  }
  return null;
};
cljs.analyzer.NOT_NATIVE = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "clj", "clj", 980036099, null), null, new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null), null], null), null);
cljs.analyzer.BOOLEAN_OR_SEQ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), null, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), null], null), null);
cljs.analyzer.infer_if = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "test", "test", 577538877));
  var d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "op", "op", -1882987955));
  var e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "form", "form", -1624062471));
  d = cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "then", "then", 460598070)).cljs$core$IFn$_invoke$arity$1(b));
  if (cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "constant", "constant", -379609303)) && null != e && !1 !== e) {
    return d;
  }
  b = cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(b));
  if (cljs.core.symbol_identical_QMARK_.call(null, d, b) || cljs.core.symbol_identical_QMARK_.call(null, b, cljs.analyzer.IGNORE_SYM)) {
    return d;
  }
  if (cljs.core.symbol_identical_QMARK_.call(null, d, cljs.analyzer.IGNORE_SYM)) {
    return b;
  }
  if (null == cljs.core.get.call(null, cljs.analyzer.NOT_NATIVE, d) && !cljs.analyzer.type_QMARK_.call(null, a, d) || null == cljs.core.get.call(null, cljs.analyzer.NOT_NATIVE, b) && !cljs.analyzer.type_QMARK_.call(null, a, b)) {
    if (null != cljs.core.get.call(null, cljs.analyzer.BOOLEAN_OR_SEQ, d) && null != cljs.core.get.call(null, cljs.analyzer.BOOLEAN_OR_SEQ, b)) {
      return new cljs.core.Symbol(null, "seq", "seq", -177272256, null);
    }
    a = cljs.analyzer.cljs_set_QMARK_.call(null, d) ? d : cljs.core.PersistentHashSet.createAsIfByAssoc([d]);
    b = cljs.analyzer.cljs_set_QMARK_.call(null, b) ? b : cljs.core.PersistentHashSet.createAsIfByAssoc([b]);
    return cljs.core.into.call(null, a, b);
  }
  return new cljs.core.Symbol(null, "clj", "clj", 980036099, null);
};
cljs.analyzer.infer_invoke = function(a, b) {
  var c = (new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(b);
  c = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "info", "info", -317069002));
  d = !0 === (new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730)).cljs$core$IFn$_invoke$arity$1(d) || !0 === (new cljs.core.Keyword(null, "js-fn-var", "js-fn-var", -565665358)).cljs$core$IFn$_invoke$arity$1(d) ? (new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990)).cljs$core$IFn$_invoke$arity$1(d) : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(d)) ? new cljs.core.Symbol(null, 
  "js", "js", -886355190, null) : null;
  return null == d ? (b = (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(b), b = cljs.core.assoc.call(null, cljs.analyzer.find_matching_method.call(null, c, b), new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "method", "method", 55703592)), a = cljs.analyzer.infer_tag.call(null, a, b), null == a ? cljs.analyzer.ANY_SYM : a) : d;
};
cljs.analyzer.infer_tag = function(a, b) {
  var c = cljs.analyzer.get_tag.call(null, b);
  if (null == c) {
    switch(c = (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(b), c instanceof cljs.core.Keyword ? c.fqn : null) {
      case "recur":
        return cljs.analyzer.IGNORE_SYM;
      case "throw":
        return cljs.analyzer.IGNORE_SYM;
      case "let":
        return cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "expr", "expr", 745722291)).cljs$core$IFn$_invoke$arity$1(b));
      case "loop":
        return cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "expr", "expr", 745722291)).cljs$core$IFn$_invoke$arity$1(b));
      case "do":
        return cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(b));
      case "method":
        return cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "expr", "expr", 745722291)).cljs$core$IFn$_invoke$arity$1(b));
      case "def":
        return cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "init", "init", -1875481434)).cljs$core$IFn$_invoke$arity$1(b));
      case "invoke":
        return cljs.analyzer.infer_invoke.call(null, a, b);
      case "if":
        return cljs.analyzer.infer_if.call(null, a, b);
      case "constant":
        return a = (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(b), cljs.core._EQ_.call(null, !0, a) ? cljs.analyzer.BOOLEAN_SYM : cljs.core._EQ_.call(null, !1, a) ? cljs.analyzer.BOOLEAN_SYM : cljs.analyzer.ANY_SYM;
      case "var":
        return c = (new cljs.core.Keyword(null, "init", "init", -1875481434)).cljs$core$IFn$_invoke$arity$1(b), null == c ? cljs.analyzer.infer_tag.call(null, a, (new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(b)) : cljs.analyzer.infer_tag.call(null, a, c);
      case "dot":
        return cljs.analyzer.ANY_SYM;
      case "js":
        return cljs.analyzer.ANY_SYM;
      default:
        return null;
    }
  } else {
    return c;
  }
};
"undefined" === typeof cljs.analyzer.parse && (cljs.analyzer.parse = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.analyzer", "parse"), function(a, b, c, d, e) {
    return function() {
      var a = function(a, b) {
        if (1 < arguments.length) {
          for (var c = 0, d = Array(arguments.length - 1); c < d.length;) {
            d[c] = arguments[c + 1], ++c;
          }
          new cljs.core.IndexedSeq(d, 0, null);
        }
        return a;
      };
      a.cljs$lang$maxFixedArity = 1;
      a.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        cljs.core.rest(a);
        return b;
      };
      a.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
        return a;
      };
      return a;
    }();
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.analyzer.var_meta = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.var_meta.call(null, a, null);
};
cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a), d = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095)], null), e = cljs.core.merge.call(null, 
  function() {
    var b = (new cljs.core.Keyword(null, "meta", "meta", 1499536964)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.keys.call(null, b);
    return cljs.core.zipmap.call(null, e, cljs.core.map.call(null, function(a, b, c, d) {
      return function(b) {
        return new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, cljs.core.get.call(null, a, b), null, 1, null), 2, null);
      };
    }(b, e, c, d), e));
  }(), cljs.core.assoc.call(null, cljs.core.zipmap.call(null, d, cljs.core.map.call(null, function(b, c) {
    return function(b) {
      return new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, cljs.core.get.call(null, a, b), null, 1, null), 2, null);
    };
  }(c, d), d)), new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, cljs.core.symbol.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a))), null, 1, null)))), new cljs.core.Keyword(null, "test", "test", 577538877), 
  cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "when", "cljs.core/when", 120293186, null), null, 1, null), new cljs.core.List(null, c, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, ".-cljs$lang$test", ".-cljs$lang$test", 718963148, null), null, 1, null), new cljs.core.List(null, 
  c, null, 1, null)))), null, 1, null)))), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), function() {
    var b = (new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(a);
    b = cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.first.call(null, b)) ? cljs.core.second.call(null, b) : b;
    return new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.List(null, cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.with_meta, b, (new cljs.core.Keyword(null, "arglists-meta", "arglists-meta", 1944829838)).cljs$core$IFn$_invoke$arity$1(a))), null, 1, null), 2, null);
  }()));
  return cljs.core.truth_(b) ? cljs.analyzer.analyze.call(null, b, e) : e;
};
cljs.analyzer.var_meta.cljs$lang$maxFixedArity = 2;
cljs.analyzer.var_ast = function(a, b) {
  var c = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "locals", "locals", 535295783));
  a = cljs.analyzer.resolve_var.call(null, c, b, cljs.analyzer.confirm_var_exists_throw.call(null));
  c = cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291));
  var d = (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a);
  return null == d ? null : new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "var", "var", -769682797), cljs.analyzer.analyze.call(null, c, b), new cljs.core.Keyword(null, "sym", "sym", -1444860305), cljs.analyzer.analyze.call(null, c, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, cljs.core.symbol.call(null, cljs.core.name.call(null, 
  d), cljs.core.name.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(a))), null, 1, null))))), new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.analyzer.var_meta.call(null, a, c)], null);
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "var", "var", 870848730, null), function(a, b, c, d, e) {
  cljs.core.nth.call(null, c, 0, null);
  a = cljs.core.nth.call(null, c, 1, null);
  return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "var-special", "var-special", 1131576802), new cljs.core.Keyword(null, "form", "form", -1624062471), c], null), cljs.analyzer.var_ast.call(null, b, a));
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "if", "if", 1181717262, null), function(a, b, c, d, e) {
  cljs.core.nth.call(null, c, 0, null);
  var f = cljs.core.nth.call(null, c, 1, null), g = cljs.core.nth.call(null, c, 2, null), h = cljs.core.nth.call(null, c, 3, null);
  if (3 > cljs.core.count.call(null, c)) {
    throw cljs.analyzer.error.call(null, b, "Too few arguments to if");
  }
  if (4 < cljs.core.count.call(null, c)) {
    throw cljs.analyzer.error.call(null, b, "Too many arguments to if");
  }
  a = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), f);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  d = function() {
    var a = cljs.analyzer._STAR_allow_redef_STAR_;
    cljs.analyzer._STAR_allow_redef_STAR_ = !0;
    try {
      return cljs.analyzer.analyze.call(null, b, g);
    } finally {
      cljs.analyzer._STAR_allow_redef_STAR_ = a;
    }
  }();
  e = function() {
    var a = cljs.analyzer._STAR_allow_redef_STAR_;
    cljs.analyzer._STAR_allow_redef_STAR_ = !0;
    try {
      return cljs.analyzer.analyze.call(null, b, h);
    } finally {
      cljs.analyzer._STAR_allow_redef_STAR_ = a;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "if", "if", -458814265), new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "test", "test", 577538877), a, new cljs.core.Keyword(null, "then", "then", 460598070), d, new cljs.core.Keyword(null, "else", "else", -1508377146), e, new cljs.core.Keyword(null, "unchecked", "unchecked", 
  924418378), cljs.core._STAR_unchecked_if_STAR_, new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d, e], null)], null);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), function(a, b, c, d, e) {
  a = cljs.core.nth.call(null, c, 0, null);
  var f = cljs.core.nth.call(null, c, 1, null);
  d = cljs.core.nth.call(null, c, 2, null);
  e = cljs.core.nth.call(null, c, 3, null);
  var g = cljs.core.nth.call(null, c, 4, null);
  if (!(f instanceof cljs.core.Symbol)) {
    throw Error("Assert failed: case* must switch on symbol\n(symbol? sym)");
  }
  if (!cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, d)) {
    throw Error("Assert failed: case* tests must be grouped in vectors\n(every? vector? tests)");
  }
  var h = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), k = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.analyzer.analyze.call(null, h, f);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }(), l = cljs.core.mapv.call(null, function(a, b, c, d, e, f, g, h, k) {
    return function(l) {
      return cljs.core.mapv.call(null, function(a, b, c, d, e, f, g, h, k) {
        return function(b) {
          return cljs.analyzer.analyze.call(null, a, b);
        };
      }(a, b, c, d, e, f, g, h, k), l);
    };
  }(h, k, c, a, f, d, e, g, c), d), m = cljs.core.mapv.call(null, function(a, c, d, e, f, g, h, k, l, m) {
    return function(a) {
      return cljs.analyzer.analyze.call(null, b, a);
    };
  }(h, k, l, c, a, f, d, e, g, c), e), n = cljs.analyzer.analyze.call(null, b, g);
  if (!cljs.core.every_QMARK_.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n) {
    return function(a) {
      var b = (new cljs.core.Keyword(null, "const", "const", 1709929842)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(a));
      return cljs.core.truth_(b) ? b : (b = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "constant", "constant", -379609303), (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(a))) ? cljs.core.some_fn.call(null, cljs.core.number_QMARK_, cljs.core.string_QMARK_, cljs.core.char_QMARK_).call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(a)) : b;
    };
  }(h, k, l, m, n, c, a, f, d, e, g, c), cljs.core.apply.call(null, cljs.core.concat, l))) {
    throw Error("Assert failed: case* tests must be numbers, strings, or constants\n(every? (fn [t] (or (-\x3e t :info :const) (and (\x3d :constant (:op t)) ((some-fn number? string? char?) (:form t))))) (apply concat tests))");
  }
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "case*", "case*", 716180697), new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "v", "v", 21465059), k, new cljs.core.Keyword(null, "tests", "tests", -1041085625), l, new cljs.core.Keyword(null, "thens", "thens", 226631442), m, new cljs.core.Keyword(null, "default", "default", 
  -1987822328), n, new cljs.core.Keyword(null, "children", "children", -940561982), cljs.core.vec.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null), l, m, cljs.core.truth_(n) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null) : null))], null);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), function(a, b, c, d, e) {
  cljs.core.nth.call(null, c, 0, null);
  a = cljs.core.nth.call(null, c, 1, null);
  a: {
    d = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var f = cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), a);
      break a;
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = d;
    }
    f = void 0;
  }
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "throw", "throw", -1044625833), new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "throw", "throw", -1044625833), f, new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], 
  null)], null);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "try", "try", -1273693247, null), function(a, b, c, d, e) {
  a = cljs.core.seq.call(null, c);
  d = cljs.core.first.call(null, a);
  var f = cljs.core.next.call(null, a), g = cljs.core.update_in.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113)], null), function(a, b, c, d, e, f, g) {
    return function(a) {
      return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "expr", "expr", 745722291), a) ? new cljs.core.Keyword(null, "return", "return", -1891502105) : a;
    };
  }(c, a, d, f, d, f, c)), h = cljs.core.every_pred.call(null, cljs.core.seq_QMARK_, function(a, b, c, d, e, f, g, h) {
    return function(a) {
      return cljs.core._EQ_.call(null, cljs.core.first.call(null, a), new cljs.core.Symbol(null, "catch", "catch", -1616370245, null));
    };
  }(g, c, a, d, f, d, f, c)), k = cljs.core.every_pred.call(null, h, function(a, b, c, d, e, f, g, h, k) {
    return function(a) {
      return cljs.core._EQ_.call(null, cljs.core.second.call(null, a), new cljs.core.Keyword(null, "default", "default", -1987822328));
    };
  }(g, h, c, a, d, f, d, f, c)), l = cljs.core.every_pred.call(null, cljs.core.seq_QMARK_, function(a, b, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core._EQ_.call(null, cljs.core.first.call(null, a), new cljs.core.Symbol(null, "finally", "finally", -1065347064, null));
    };
  }(g, h, k, c, a, d, f, d, f, c));
  e = function() {
    for (var a = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "start", "start", -355208981), new cljs.core.Keyword(null, "forms", "forms", 2045992350), f, new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "cblocks", "cblocks", -1769978138), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "dblock", "dblock", -1325623381), null, new cljs.core.Keyword(null, 
    "fblock", "fblock", -1236607426), null], null);;) {
      if (cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(a))) {
        var c = (new cljs.core.Keyword(null, "forms", "forms", 2045992350)).cljs$core$IFn$_invoke$arity$1(a), d = cljs.core.seq.call(null, c);
        c = cljs.core.first.call(null, d);
        d = cljs.core.next.call(null, d);
        d = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "forms", "forms", 2045992350), d);
        var e = (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(a);
        e = e instanceof cljs.core.Keyword ? e.fqn : null;
        switch(e) {
          case "start":
            a = cljs.core.truth_(h.call(null, c)) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "catches", "catches", -1478797617)) : cljs.core.truth_(l.call(null, c)) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "finally", "finally", 1589088705)) : cljs.core.update_in.call(null, d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
            [new cljs.core.Keyword(null, "body", "body", -2049205669)], null), cljs.core.conj, c);
            continue;
          case "catches":
            if (cljs.core.truth_(k.call(null, c))) {
              a = cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "dblock", "dblock", -1325623381), c, new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "finally", "finally", 1589088705));
              continue;
            } else {
              if (cljs.core.truth_(h.call(null, c))) {
                a = cljs.core.update_in.call(null, d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cblocks", "cblocks", -1769978138)], null), cljs.core.conj, c);
                continue;
              } else {
                if (cljs.core.truth_(l.call(null, c))) {
                  a = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "finally", "finally", 1589088705));
                  continue;
                } else {
                  throw cljs.analyzer.error.call(null, b, "Invalid try form");
                }
              }
            }
          case "finally":
            a = cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "fblock", "fblock", -1236607426), c, new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "done", "done", -889844188));
            continue;
          case "done":
            throw cljs.analyzer.error.call(null, b, "Unexpected form after finally");
          default:
            throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""));
        }
      } else {
        return a;
      }
    }
  }();
  var m = null != e && (e.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === e.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, e) : e, n = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "body", "body", -2049205669)), p = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "cblocks", "cblocks", -1769978138)), q = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "dblock", "dblock", -1325623381)), r = cljs.core.get.call(null, m, new cljs.core.Keyword(null, 
  "fblock", "fblock", -1236607426)), t = cljs.core.seq.call(null, r) ? function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "statement", "statement", -32780863)), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, 1, null), cljs.core.rest.call(null, r)))));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }() : null, u = cljs.core.truth_(function() {
    var a = cljs.core.seq.call(null, p);
    return a ? a : q;
  }()) ? cljs.core.gensym.call(null, "e") : null, v = function() {
    if (cljs.core.truth_(q)) {
      var a = cljs.core.seq.call(null, q);
      cljs.core.first.call(null, a);
      a = cljs.core.next.call(null, a);
      cljs.core.first.call(null, a);
      var b = cljs.core.next.call(null, a);
      a = cljs.core.first.call(null, b);
      b = cljs.core.next.call(null, b);
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, a, null, 1, null), new cljs.core.List(null, u, null, 1, null))))), null, 1, null), b)));
    }
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, 1, null), new cljs.core.List(null, u, null, 1, null))));
  }(), w = cljs.core.seq.call(null, p) ? cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null), null, 1, null), cljs.core.mapcat.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
    return function(a) {
      a = cljs.core.seq.call(null, a);
      cljs.core.first.call(null, a);
      var b = cljs.core.next.call(null, a);
      a = cljs.core.first.call(null, b);
      var c = cljs.core.next.call(null, b);
      b = cljs.core.first.call(null, c);
      c = cljs.core.next.call(null, c);
      if (cljs.core.truth_(b) && !cljs.core.not.call(null, cljs.core.namespace.call(null, b))) {
        throw Error("Assert failed: Can't qualify symbol in catch\n(not (namespace name))");
      }
      return cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "instance?", "cljs.core/instance?", 2044751870, null), null, 1, null), new cljs.core.List(null, a, null, 1, null), new cljs.core.List(null, n, null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, 
      cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, b, null, 1, null), new cljs.core.List(null, n, null, 1, null))))), null, 1, null), c))), null, 1, null)))));
    };
  }(g, h, k, l, e, m, n, p, q, r, t, u, v, c, a, d, f, d, f, c), p), new cljs.core.List(null, new cljs.core.Keyword(null, "else", "else", -1508377146), null, 1, null), new cljs.core.List(null, v, null, 1, null)))) : v;
  a = (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(g);
  var x = cljs.core.truth_(u) ? cljs.core.assoc.call(null, a, u, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), u, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.analyzer.get_line.call(null, u, b), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.analyzer.get_col.call(null, u, b)], null)) : a;
  a = cljs.core.truth_(w) ? function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, g, new cljs.core.Keyword(null, "locals", "locals", 535295783), x), w);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }() : null;
  d = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.analyzer.analyze.call(null, cljs.core.truth_(cljs.core.truth_(u) ? u : t) ? g : b, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, 1, null), n))));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "try", "try", 1380742522), new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "try", "try", 1380742522), d, new cljs.core.Keyword(null, "finally", "finally", 1589088705), t, new cljs.core.Keyword(null, "name", "name", 1843675177), u, new cljs.core.Keyword(null, "catch", 
  "catch", 1038065524), a, new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, a, t], null)], null);
});
cljs.analyzer.valid_proto = function(a) {
  return a instanceof cljs.core.Symbol ? a : null;
};
cljs.analyzer.elide_env = function(a, b, c) {
  return cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "env", "env", -1815813235));
};
cljs.analyzer.replace_env_pass = function(a) {
  return function(b, c, d) {
    return cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "env", "env", -1815813235), a);
  };
};
cljs.analyzer.constant_value_QMARK_ = function(a) {
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "op", "op", -1882987955)), c = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "constant", "constant", -379609303), b);
  if (c) {
    return c;
  }
  b = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "vector", "vector", 1902966158), null, new cljs.core.Keyword(null, "list", "list", 765357683), null, new cljs.core.Keyword(null, "set", "set", 304602554), null, new cljs.core.Keyword(null, "map", "map", 1371690461), null], null), null)).call(null, b);
  return cljs.core.truth_(b) ? cljs.core.every_QMARK_.call(null, cljs.analyzer.constant_value_QMARK_, (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a)) : b;
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "def", "def", 597100991, null), function(a, b, c, d, e) {
  if (4 < cljs.core.count.call(null, c)) {
    throw cljs.analyzer.error.call(null, b, "Too many arguments to def");
  }
  var f = function() {
    var a = null, b = function(a, b) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), b], null);
    }, c = function(a, b, c) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), b, new cljs.core.Keyword(null, "init", "init", -1875481434), c], null);
    }, d = function(a, b, c, d) {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), b, new cljs.core.Keyword(null, "doc", "doc", 1913296891), c, new cljs.core.Keyword(null, "init", "init", -1875481434), d], null);
    };
    a = function(a, e, f, g) {
      switch(arguments.length) {
        case 2:
          return b.call(this, a, e);
        case 3:
          return c.call(this, a, e, f);
        case 4:
          return d.call(this, a, e, f, g);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    a.cljs$core$IFn$_invoke$arity$2 = b;
    a.cljs$core$IFn$_invoke$arity$3 = c;
    a.cljs$core$IFn$_invoke$arity$4 = d;
    return a;
  }(), g = cljs.core.apply.call(null, f, c), h = (new cljs.core.Keyword(null, "sym", "sym", -1444860305)).cljs$core$IFn$_invoke$arity$1(g), k = (new cljs.core.Keyword(null, "const", "const", 1709929842)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, h)), l = cljs.core.meta.call(null, h), m = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, h)), n = cljs.analyzer.valid_proto.call(null, (new cljs.core.Keyword(null, "protocol", 
  "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, h))), p = (new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, h)), q = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(b)), r = (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(b), t = cljs.core.symbol.call(null, 
  [cljs.core.str.cljs$core$IFn$_invoke$arity$1(q), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join("")), u = cljs.core.namespace.call(null, h);
  if (cljs.core.truth_(cljs.core.truth_(u) ? !cljs.core.symbol_identical_QMARK_.call(null, cljs.core.symbol.call(null, u), q) : u)) {
    throw cljs.analyzer.error.call(null, b, ["Can't def ns-qualified name in namespace ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(u)].join(""));
  }
  var v = null != u ? cljs.core.symbol.call(null, cljs.core.name.call(null, h)) : h;
  null != cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), t], null)) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "ns-var-clash", "ns-var-clash", -280494668), b, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.symbol.call(null, 
  [cljs.core.str.cljs$core$IFn$_invoke$arity$1(q), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)].join("")), new cljs.core.Keyword(null, "var", "var", -769682797), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(q)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)].join(""))], null));
  if (null != (new cljs.core.Keyword(null, "const", "const", 1709929842)).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.call(null, cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "locals", "locals", 535295783)), v))) {
    throw cljs.analyzer.error.call(null, b, "Can't redefine a constant");
  }
  a = (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(g);
  if (null != a && "string" !== typeof a) {
    throw cljs.analyzer.error.call(null, b, "Too many arguments to def");
  }
  var w = cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), q, new cljs.core.Keyword(null, "defs", "defs", 1398449717), v], null));
  null != w && cljs.core.truth_(function() {
    var a = !cljs.analyzer._STAR_allow_redef_STAR_;
    return a && (a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "declared", "declared", 92336021)).cljs$core$IFn$_invoke$arity$1(w))) && (a = cljs.core.not.call(null, (new cljs.core.Keyword(null, "declared", "declared", 92336021)).cljs$core$IFn$_invoke$arity$1(l))) ? (a = cljs.analyzer._STAR_file_defs_STAR_, cljs.core.truth_(a) ? cljs.core.get.call(null, cljs.core.deref.call(null, cljs.analyzer._STAR_file_defs_STAR_), v) : a) : a;
  }()) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "redef-in-file", "redef-in-file", -476530788), b, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), v, new cljs.core.Keyword(null, "line", "line", 212345235), (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(w)], null));
  var x = cljs.core.not_EQ_.call(null, q, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null)) && cljs.analyzer.core_name_QMARK_.call(null, b, v) || null != cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), q, new cljs.core.Keyword(null, "uses", "uses", 232664692), v], 
  null)) ? function() {
    var a = cljs.analyzer.resolve_existing_var.call(null, cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "locals", "locals", 535295783)), cljs.core.with_meta.call(null, v, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null))), c = cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY);
    cljs.analyzer.public_name_QMARK_.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a), v) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "redef", "redef", 1032704258), b, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), v, new cljs.core.Keyword(null, "ns", "ns", 441598760), (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, 
    "ns-name", "ns-name", -2077346323), q], null));
    cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), q, new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)], null), c, v);
    return cljs.core.update_in.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)], null), c, v);
  }() : b, y = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.call(null, cljs.core.dissoc.call(null, x, new cljs.core.Keyword(null, "locals", "locals", 535295783)), v)), z = cljs.core.contains_QMARK_.call(null, g, new cljs.core.Keyword(null, "init", "init", -1875481434)) ? function() {
    cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), q, new cljs.core.Keyword(null, "defs", "defs", 1398449717), v], null), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), y], null), l, !0 === p ? new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), !0], null) : null, cljs.analyzer.source_info.call(null, y, x)));
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var b = cljs.analyzer._STAR_allow_ns_STAR_;
      cljs.analyzer._STAR_allow_ns_STAR_ = !1;
      try {
        return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, x, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), (new cljs.core.Keyword(null, "init", "init", -1875481434)).cljs$core$IFn$_invoke$arity$1(g), v);
      } finally {
        cljs.analyzer._STAR_allow_ns_STAR_ = b;
      }
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }() : null, F = null != z && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(z), new cljs.core.Keyword(null, "fn", "fn", -1175266204)), Q = F ? function() {
    var a = (new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990)).cljs$core$IFn$_invoke$arity$1(z);
    return cljs.core.truth_(a) ? a : m;
  }() : cljs.core.truth_(m) ? m : (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(z), A = function() {
    var a = (new cljs.core.Keyword(null, "export", "export", 214356590)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
    return cljs.core.truth_(a) ? cljs.core._EQ_.call(null, !0, a) ? y : a : null;
  }(), C = function() {
    var a = (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(g);
    return cljs.core.truth_(a) ? a : (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  }();
  a = cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), q, new cljs.core.Keyword(null, "defs", "defs", 1398449717), v], null));
  null != a && cljs.core.not.call(null, (new cljs.core.Keyword(null, "declared", "declared", 92336021)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v))) && !0 === (new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730)).cljs$core$IFn$_invoke$arity$1(a) && !F && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730), x, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns-name", "ns-name", -2077346323), q, new cljs.core.Keyword(null, 
  "sym", "sym", -1444860305), v], null));
  if (null == cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), q, new cljs.core.Keyword(null, "defs", "defs", 1398449717), v], null)) || cljs.core.not.call(null, (new cljs.core.Keyword(null, "declared", "declared", 92336021)).cljs$core$IFn$_invoke$arity$1(l))) {
    cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_) && cljs.core.swap_BANG_.call(null, cljs.analyzer._STAR_file_defs_STAR_, cljs.core.conj, v), cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), q, new cljs.core.Keyword(null, "defs", "defs", 1398449717), v], null), cljs.core.merge.call(null, 
    new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), y], null), cljs.core.truth_((new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(l)) ? cljs.core.assoc.call(null, l, new cljs.core.Keyword(null, "test", "test", 577538877), !0) : l, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.update_in.call(null, cljs.core.dissoc.call(null, l, new cljs.core.Keyword(null, 
    "test", "test", 577538877)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "file", "file", -1269645878)], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
      return function(b) {
        return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null)) ? "cljs/core.cljs" : b;
      };
    }(x, y, z, F, Q, A, C, f, g, h, k, l, m, n, p, q, r, t, u, v))], null), cljs.core.truth_(C) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "doc", "doc", 1913296891), C], null) : null, cljs.core.truth_(k) ? function() {
      a: {
        var a = cljs.analyzer._STAR_passes_STAR_;
        cljs.analyzer._STAR_passes_STAR_ = cljs.core.conj.call(null, cljs.analyzer._STAR_passes_STAR_, cljs.analyzer.replace_env_pass.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)], null)));
        try {
          var b = cljs.analyzer.analyze.call(null, x, (new cljs.core.Keyword(null, "init", "init", -1875481434)).cljs$core$IFn$_invoke$arity$1(g));
          break a;
        } finally {
          cljs.analyzer._STAR_passes_STAR_ = a;
        }
        b = void 0;
      }
      return cljs.core.truth_(cljs.analyzer.constant_value_QMARK_.call(null, b)) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "const-expr", "const-expr", -1379382292), b], null) : null;
    }() : null, !0 === p ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), !0], null) : null, cljs.analyzer.source_info.call(null, y, x), cljs.core.truth_(n) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "protocol", "protocol", 652470118), n], null) : null, function() {
      var a = (new cljs.core.Keyword(null, "protocol-symbol", "protocol-symbol", 1279552198)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
      return cljs.core.truth_(a) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "protocol-symbol", "protocol-symbol", 1279552198), a, new cljs.core.Keyword(null, "info", "info", -317069002), (new cljs.core.Keyword(null, "protocol-info", "protocol-info", 1471745843)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a)), new cljs.core.Keyword(null, "impls", "impls", -1314014853), cljs.core.PersistentHashSet.EMPTY], null) : null;
    }(), F ? function() {
      var a = cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
        return function(a) {
          return cljs.core.vec.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)));
        };
      }(x, y, z, F, Q, A, C, f, g, h, k, l, m, n, p, q, r, t, u, v), (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(z));
      return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730), cljs.core.not.call(null, (new cljs.core.Keyword(null, "macro", "macro", -867863404)).cljs$core$IFn$_invoke$arity$1(l)), new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365), (new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365)).cljs$core$IFn$_invoke$arity$1(z), new cljs.core.Keyword(null, "protocol-inline", "protocol-inline", 
      1550487556), (new cljs.core.Keyword(null, "protocol-inline", "protocol-inline", 1550487556)).cljs$core$IFn$_invoke$arity$1(z)], null), function() {
        var b = (new cljs.core.Keyword(null, "top-fn", "top-fn", -2056129173)).cljs$core$IFn$_invoke$arity$1(l);
        return null == b ? new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "variadic", "variadic", 882626057), (new cljs.core.Keyword(null, "variadic", "variadic", 882626057)).cljs$core$IFn$_invoke$arity$1(z), new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543), (new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543)).cljs$core$IFn$_invoke$arity$1(z), new cljs.core.Keyword(null, "method-params", "method-params", -980792179), 
        a, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), (new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(l), new cljs.core.Keyword(null, "arglists-meta", "arglists-meta", 1944829838), cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.meta, (new cljs.core.Keyword(null, "arglists", "arglists", 1661989754)).cljs$core$IFn$_invoke$arity$1(l)))], null) : b;
      }());
    }() : null, F && null != Q ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990), Q], null) : cljs.core.truth_(Q) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), Q], null) : null));
  }
  return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "env", "env", -1815813235), x, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "name", "name", 1843675177), y, new cljs.core.Keyword(null, "var", "var", -769682797), cljs.core.assoc.call(null, cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, 
  cljs.core.assoc.call(null, cljs.core.dissoc.call(null, x, new cljs.core.Keyword(null, "locals", "locals", 535295783)), new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), new cljs.core.Keyword(null, "def-var", "def-var", -698214377), !0), v), new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "var", "var", -769682797)), new cljs.core.Keyword(null, "doc", "doc", 1913296891), C, new cljs.core.Keyword(null, 
  "jsdoc", "jsdoc", 1745183516), (new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516)).cljs$core$IFn$_invoke$arity$1(l), new cljs.core.Keyword(null, "init", "init", -1875481434), z], null), !0 === (new cljs.core.Keyword(null, "def-emits-var", "def-emits-var", -1551927320)).cljs$core$IFn$_invoke$arity$1(x) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "var-ast", "var-ast", 1200379319), cljs.analyzer.var_ast.call(null, x, v)], null) : null, function() {
    var a = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(l);
    return null == a ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "test", "test", 577538877), cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, x, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), a)], null);
  }(), null != Q ? F ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990), Q], null) : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), Q], null) : null, !0 === p ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), !0], null) : null, null != A ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "export", "export", 214356590), 
  A], null) : null, null != z ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [z], null)], null) : null);
});
cljs.analyzer.analyze_fn_method_param = function(a) {
  return function(b, c) {
    var d = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    if (cljs.core.truth_(cljs.core.namespace.call(null, c))) {
      throw cljs.analyzer.error.call(null, a, ["Can't use qualified name as parameter: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""));
    }
    var e = cljs.analyzer.get_line.call(null, c, a), f = cljs.analyzer.get_col.call(null, c, a), g = cljs.core.meta.call(null, c);
    g = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(g);
    var h = null != d ? d.call(null, c) : null, k = cljs.core.merge.call(null, cljs.core.select_keys.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113)], null)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "line", "line", 212345235), e, new cljs.core.Keyword(null, "column", "column", 2078222095), f], null));
    e = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "binding-form?", "binding-form?", 1728940169), new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "env", "env", -1815813235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "info", "info", -317069002), new cljs.core.Keyword(null, "tag", "tag", 
    -1290361223), new cljs.core.Keyword(null, "shadow", "shadow", 873231803)], [c, !0, new cljs.core.Keyword(null, "var", "var", -769682797), k, f, e, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), c, new cljs.core.Keyword(null, "shadow", "shadow", 873231803), h], null), g, h]);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, d, c, e), cljs.core.conj.call(null, b, e)], null);
  };
};
cljs.analyzer.analyze_fn_method_body = function(a, b, c) {
  var d = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = c;
  try {
    return cljs.analyzer.analyze.call(null, a, b);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = d;
  }
};
cljs.analyzer.analyze_fn_method = function(a, b, c, d, e) {
  var f = cljs.core.first.call(null, c), g = cljs.core.boolean$.call(null, cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null], null), null), f)), h = cljs.core.vec.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null], null), null), f));
  f = cljs.core.next.call(null, c);
  var k = cljs.analyzer.analyze_fn_method_param.call(null, a);
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.PersistentVector.EMPTY], null);
  b = cljs.core.reduce.call(null, k, b, h);
  var l = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  h = !0 === g ? cljs.core.butlast.call(null, b) : b;
  h = cljs.core.count.call(null, h);
  k = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365), (new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "params", "params", 710516235), b, new cljs.core.Keyword(null, "flag", "flag", 1088647881), cljs.core.atom.call(null, null)], null);
  var m = cljs.core.cons.call(null, k, cljs.analyzer._STAR_recur_frames_STAR_);
  l = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "locals", "locals", 535295783), l);
  f = cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, 1, null), f)));
  e = cljs.core.truth_(e) ? cljs.analyzer.analyze_fn_method_body.call(null, l, f, m) : null;
  f = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "flag", "flag", 1088647881)).cljs$core$IFn$_invoke$arity$1(k));
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "variadic", "variadic", 882626057), g, new cljs.core.Keyword(null, "params", "params", 710516235), b, new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543), h, new cljs.core.Keyword(null, "type", "type", 1174270348), d, new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "expr", "expr", 745722291), e, 
  new cljs.core.Keyword(null, "recurs", "recurs", -1959309309), f], null);
};
cljs.analyzer.fn_name_var = function(a, b, c) {
  if (null != c) {
    var d = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a));
    b = null == cljs.core.get.call(null, b, c) ? cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "js-globals", "js-globals", 1670394727), c], null)) : null;
    a = (new cljs.core.Keyword(null, "fn-scope", "fn-scope", -865664859)).cljs$core$IFn$_invoke$arity$1(a);
    d = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), c, new cljs.core.Keyword(null, "info", "info", -317069002), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "fn-self-name", "fn-self-name", 1461143531), !0, new cljs.core.Keyword(null, "fn-scope", "fn-scope", -865664859), a, new cljs.core.Keyword(null, "ns", "ns", 441598760), d, new cljs.core.Keyword(null, "shadow", "shadow", 873231803), b], null)], null);
    c = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
    c = null != c ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990), c], null) : null;
    return cljs.core.merge.call(null, d, c);
  }
  return null;
};
cljs.analyzer.analyze_fn_methods_pass2_STAR_ = function(a, b, c, d) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(d) {
    return cljs.analyzer.analyze_fn_method.call(null, a, b, d, c, !0);
  }, d));
};
cljs.analyzer.analyze_fn_methods_pass2 = function(a, b, c, d) {
  return cljs.analyzer.analyze_fn_methods_pass2_STAR_.call(null, a, b, c, d);
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), function(a, b, c, d, e) {
  var f = cljs.core.seq.call(null, c), g = cljs.core.first.call(null, f), h = cljs.core.next.call(null, f), k = cljs.core.first.call(null, h) instanceof cljs.core.Symbol, l = k ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, h), cljs.core.next.call(null, h)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, cljs.core.seq.call(null, h)], null), m = cljs.core.nth.call(null, l, 0, null), n = 
  cljs.core.nth.call(null, l, 1, null), p = cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, n)) ? new cljs.core.List(null, n, null, 1, null) : n, q = (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(b);
  d = cljs.analyzer.fn_name_var.call(null, b, q, m);
  b = null != m ? cljs.core.update_in.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn-scope", "fn-scope", -865664859)], null), cljs.core.conj, d) : b;
  var r = null != q && k ? cljs.core.assoc.call(null, q, m, d) : q, t = cljs.core.meta.call(null, c), u = (new cljs.core.Keyword("cljs.analyzer", "type", "cljs.analyzer/type", 478749742)).cljs$core$IFn$_invoke$arity$1(t);
  a = (new cljs.core.Keyword("cljs.analyzer", "protocol-impl", "cljs.analyzer/protocol-impl", -1523935409)).cljs$core$IFn$_invoke$arity$1(t);
  e = (new cljs.core.Keyword("cljs.analyzer", "protocol-inline", "cljs.analyzer/protocol-inline", -1611519026)).cljs$core$IFn$_invoke$arity$1(t);
  var v = 1 < cljs.core.count.call(null, p) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)) : b, w = cljs.core.merge.call(null, v, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365), a, new cljs.core.Keyword(null, "protocol-inline", "protocol-inline", 1550487556), e], null));
  h = cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, S, T) {
    return function(a) {
      var b = cljs.analyzer._STAR_allow_ns_STAR_;
      cljs.analyzer._STAR_allow_ns_STAR_ = !1;
      try {
        return cljs.analyzer.analyze_fn_method.call(null, r, k, a, m, null == c);
      } finally {
        cljs.analyzer._STAR_allow_ns_STAR_ = b;
      }
    };
  }(k, l, m, n, p, q, d, b, r, t, u, a, e, v, w, c, f, g, h, g, h, c), p);
  f = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543), h));
  g = cljs.core.boolean$.call(null, cljs.core.some.call(null, new cljs.core.Keyword(null, "variadic", "variadic", 882626057), h));
  var x = k ? cljs.core.update_in.call(null, r, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [m], null), cljs.core.assoc, new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730), !0, new cljs.core.Keyword(null, "variadic", "variadic", 882626057), g, new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543), f, new cljs.core.Keyword(null, "method-params", "method-params", -980792179), cljs.core.map.call(null, new cljs.core.Keyword(null, 
  "params", "params", 710516235), h)) : r;
  k = null != m ? function() {
    var a = cljs.analyzer._STAR_allow_ns_STAR_;
    cljs.analyzer._STAR_allow_ns_STAR_ = !1;
    try {
      return cljs.analyzer.analyze_fn_methods_pass2.call(null, w, x, u, p);
    } finally {
      cljs.analyzer._STAR_allow_ns_STAR_ = a;
    }
  }() : h;
  c = cljs.core.vary_meta.call(null, c, cljs.core.dissoc, new cljs.core.Keyword("cljs.analyzer", "protocol-impl", "cljs.analyzer/protocol-impl", -1523935409), new cljs.core.Keyword("cljs.analyzer", "protocol-inline", "cljs.analyzer/protocol-inline", -1611519026), new cljs.core.Keyword("cljs.analyzer", "type", "cljs.analyzer/type", 478749742));
  m = !0 === g ? "@param {...*} var_args" : null;
  r = cljs.core.mapv.call(null, new cljs.core.Keyword(null, "expr", "expr", 745722291), k);
  c = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.Keyword(null, "protocol-inline", "protocol-inline", 1550487556), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "variadic", "variadic", 882626057), new cljs.core.Keyword(null, "loop-lets", "loop-lets", 2036794185), new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365), new cljs.core.Keyword(null, "op", "op", -1882987955), 
  new cljs.core.Keyword(null, "env", "env", -1815813235), new cljs.core.Keyword(null, "methods", "methods", 453930866), new cljs.core.Keyword(null, "recur-frames", "recur-frames", -307205196), new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543), new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516)], [r, e, d, g, cljs.analyzer._STAR_loop_lets_STAR_, a, new cljs.core.Keyword(null, 
  "fn", "fn", -1175266204), b, k, cljs.analyzer._STAR_recur_frames_STAR_, f, c, new cljs.core.Symbol(null, "function", "function", -486723946, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [m], null)]);
  a = cljs.core.filter.call(null, new cljs.core.Keyword(null, "variadic", "variadic", 882626057), k);
  e = cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a)));
  k = cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.count, new cljs.core.Keyword(null, "params", "params", 710516235)), k);
  1 < cljs.core.count.call(null, a) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "multiple-variadic-overloads", "multiple-variadic-overloads", 1110059837), b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), d], null));
  0 !== e && e !== 1 + f && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "variadic-max-arity", "variadic-max-arity", -14288402), b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), d], null));
  cljs.core.not_EQ_.call(null, cljs.core.distinct.call(null, k), k) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "overload-arity", "overload-arity", 823206044), b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), d], null));
  return cljs.analyzer.analyze_wrap_meta.call(null, c);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), function(a, b, c, d, e) {
  e = cljs.core.seq.call(null, c);
  var f = cljs.core.first.call(null, e), g = cljs.core.next.call(null, e), h = cljs.core.first.call(null, g);
  a = cljs.core.next.call(null, g);
  if (!cljs.core.vector_QMARK_.call(null, h) || !cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, h))) {
    throw cljs.analyzer.error.call(null, b, "bindings must be vector of even number of elements");
  }
  var k = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.juxt.call(null, cljs.core.first, cljs.core.second), cljs.core.partition.call(null, 2, h))), l = cljs.core.keys.call(null, k);
  d = (new cljs.core.Keyword(null, "context", "context", -830191113)).cljs$core$IFn$_invoke$arity$1(b);
  var m = cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
    return function(b, c) {
      var d = cljs.core.nth.call(null, b, 0, null), e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d, f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "locals", "locals", 535295783));
      b = cljs.core.nth.call(null, b, 1, null);
      var g = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c)), h = function() {
        var b = cljs.analyzer._STAR_cljs_warnings_STAR_;
        cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.zipmap.call(null, cljs.core.keys.call(null, cljs.analyzer._STAR_cljs_warnings_STAR_), cljs.core.repeat.call(null, !1));
        try {
          return cljs.analyzer.analyze.call(null, e, a.call(null, c));
        } finally {
          cljs.analyzer._STAR_cljs_warnings_STAR_ = b;
        }
      }();
      d = function() {
        var a = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "variadic", "variadic", 882626057), new cljs.core.Keyword(null, "method-params", "method-params", -980792179), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543), new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730), 
        new cljs.core.Keyword(null, "shadow", "shadow", 873231803), new cljs.core.Keyword(null, "local", "local", -1497766724)], [c, (new cljs.core.Keyword(null, "variadic", "variadic", 882626057)).cljs$core$IFn$_invoke$arity$1(h), cljs.core.map.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(h)), cljs.analyzer.get_col.call(null, c, e), cljs.analyzer.get_line.call(null, c, e), (new cljs.core.Keyword(null, 
        "max-fixed-arity", "max-fixed-arity", -690205543)).cljs$core$IFn$_invoke$arity$1(h), !0, f.call(null, c), !0]);
        return cljs.core.truth_(g) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990), g) : a;
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in.call(null, e, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "locals", "locals", 535295783), c], null), d), cljs.core.conj.call(null, b, d)], null);
    };
  }(k, l, d, c, e, f, g, f, h, a, h, a, c), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.PersistentVector.EMPTY], null), l), n = cljs.core.nth.call(null, m, 0, null), p = cljs.core.nth.call(null, m, 1, null), q = cljs.core.assoc.call(null, n, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291));
  f = cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, H, B, G) {
    return function(b, c) {
      var d = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      var e = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
      c = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "shadow", "shadow", 873231803));
      d = cljs.core.assoc_in.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "locals", "locals", 535295783), c], null), f);
      f = cljs.analyzer.analyze.call(null, d, a.call(null, c));
      e = cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "init", "init", -1875481434), f, new cljs.core.Keyword(null, "variadic", "variadic", 882626057), (new cljs.core.Keyword(null, "variadic", "variadic", 882626057)).cljs$core$IFn$_invoke$arity$1(f), new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543), (new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543)).cljs$core$IFn$_invoke$arity$1(f), new cljs.core.Keyword(null, "method-params", 
      "method-params", -980792179), cljs.core.map.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(f)));
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "locals", "locals", 535295783), c], null), e), cljs.core.conj.call(null, b, e)], null);
    };
  }(k, l, d, m, n, p, q, c, e, f, g, f, h, a, h, a, c), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [q, cljs.core.PersistentVector.EMPTY], null), p);
  e = cljs.core.nth.call(null, f, 0, null);
  f = cljs.core.nth.call(null, f, 1, null);
  a = cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "context", "context", -830191113), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "expr", "expr", 745722291), d) ? new cljs.core.Keyword(null, "return", "return", -1891502105) : d), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, 1, null), a))));
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "letfn", "letfn", -2121022354), new cljs.core.Keyword(null, "bindings", "bindings", 1271397192), f, new cljs.core.Keyword(null, "expr", "expr", 745722291), a, new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "children", "children", -940561982), cljs.core.conj.call(null, 
  cljs.core.vec.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "init", "init", -1875481434), f)), a)], null);
});
cljs.analyzer.analyze_do_statements_STAR_ = function(a, b) {
  return cljs.core.seq.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, function(b) {
    return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "statement", "statement", -32780863)), b);
  }, cljs.core.butlast.call(null, b))));
};
cljs.analyzer.analyze_do_statements = function(a, b) {
  var c = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_do_statements_STAR_.call(null, a, b);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = c;
  }
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "do", "do", 1686842252, null), function(a, b, c, d, e) {
  a = cljs.core.seq.call(null, c);
  cljs.core.first.call(null, a);
  d = cljs.core.next.call(null, a);
  a = cljs.analyzer.analyze_do_statements.call(null, b, d);
  1 >= cljs.core.count.call(null, d) ? (d = cljs.analyzer.analyze.call(null, b, cljs.core.first.call(null, d)), e = cljs.core.conj.call(null, cljs.core.vec.call(null, a), d)) : (e = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "statement", "statement", -32780863), (new cljs.core.Keyword(null, "context", "context", -830191113)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "statement", 
  "statement", -32780863)) : cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "return", "return", -1891502105)), d = cljs.analyzer.analyze.call(null, e, cljs.core.last.call(null, d)), e = cljs.core.conj.call(null, cljs.core.vec.call(null, a), d));
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "do", "do", 46310725), new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "statements", "statements", 600349855), a, new cljs.core.Keyword(null, "ret", "ret", -468222814), d, new cljs.core.Keyword(null, "children", "children", -940561982), e], null);
});
cljs.analyzer.analyze_let_binding_init = function(a, b, c) {
  var d = cljs.analyzer._STAR_loop_lets_STAR_;
  cljs.analyzer._STAR_loop_lets_STAR_ = c;
  try {
    return cljs.analyzer.analyze.call(null, a, b);
  } finally {
    cljs.analyzer._STAR_loop_lets_STAR_ = d;
  }
};
cljs.analyzer.get_let_tag = function(a, b) {
  a = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
  return null == a ? (a = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(b), null == a ? (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(b)) : a) : a;
};
cljs.analyzer.analyze_let_bindings_STAR_ = function(a, b) {
  var c = cljs.core.PersistentVector.EMPTY, d = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291));
  for (b = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, b));;) {
    var e = cljs.core.first.call(null, b);
    if (null == e) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null);
    }
    var f = e;
    e = cljs.core.nth.call(null, f, 0, null);
    f = cljs.core.nth.call(null, f, 1, null);
    if (null != cljs.core.namespace.call(null, e) || goog.string.contains([cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""), ".")) {
      throw cljs.analyzer.error.call(null, a, ["Invalid local name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""));
    }
    f = cljs.analyzer.analyze_let_binding_init.call(null, d, f, cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "params", "params", 710516235), c], null), cljs.analyzer._STAR_loop_lets_STAR_));
    var g = cljs.analyzer.get_line.call(null, e, d), h = cljs.analyzer.get_col.call(null, e, d);
    g = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "init", "init", -1875481434), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "binding-form?", "binding-form?", 1728940169), new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "env", "env", -1815813235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "info", 
    "info", -317069002), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "shadow", "shadow", 873231803), new cljs.core.Keyword(null, "local", "local", -1497766724)], [f, e, !0, new cljs.core.Keyword(null, "var", "var", -769682797), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "line", "line", 212345235), g, new cljs.core.Keyword(null, "column", "column", 2078222095), h], null), h, g, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
    "name", "name", 1843675177), e, new cljs.core.Keyword(null, "shadow", "shadow", 873231803), e.call(null, (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(d))], null), cljs.analyzer.get_let_tag.call(null, e, f), e.call(null, (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(d)), !0]);
    f = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(f)) ? cljs.core.merge.call(null, g, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730), !0, new cljs.core.Keyword(null, "variadic", "variadic", 882626057), (new cljs.core.Keyword(null, "variadic", "variadic", 882626057)).cljs$core$IFn$_invoke$arity$1(f), new cljs.core.Keyword(null, 
    "max-fixed-arity", "max-fixed-arity", -690205543), (new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543)).cljs$core$IFn$_invoke$arity$1(f), new cljs.core.Keyword(null, "method-params", "method-params", -980792179), cljs.core.map.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), (new cljs.core.Keyword(null, "methods", "methods", 453930866)).cljs$core$IFn$_invoke$arity$1(f))], null)) : g;
    c = cljs.core.conj.call(null, c, f);
    d = cljs.core.assoc_in.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "locals", "locals", 535295783), e], null), f);
    b = cljs.core.next.call(null, b);
  }
};
cljs.analyzer.analyze_let_bindings = function(a, b) {
  var c = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_let_bindings_STAR_.call(null, a, b);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = c;
  }
};
cljs.analyzer.analyze_let_body_STAR_ = function(a, b, c) {
  return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "expr", "expr", 745722291), b) ? new cljs.core.Keyword(null, "return", "return", -1891502105) : b), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, 1, null), c))));
};
cljs.analyzer.analyze_let_body = function(a, b, c, d, e) {
  var f = cljs.analyzer._STAR_recur_frames_STAR_, g = cljs.analyzer._STAR_loop_lets_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = d;
  cljs.analyzer._STAR_loop_lets_STAR_ = e;
  try {
    return cljs.analyzer.analyze_let_body_STAR_.call(null, a, b, c);
  } finally {
    cljs.analyzer._STAR_loop_lets_STAR_ = g, cljs.analyzer._STAR_recur_frames_STAR_ = f;
  }
};
cljs.analyzer.analyze_let = function(a, b, c) {
  var d = cljs.core.seq.call(null, b);
  cljs.core.first.call(null, d);
  var e = cljs.core.next.call(null, d);
  d = cljs.core.first.call(null, e);
  e = cljs.core.next.call(null, e);
  if (!cljs.core.vector_QMARK_.call(null, d) || !cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, d))) {
    throw cljs.analyzer.error.call(null, a, "bindings must be vector of even number of elements");
  }
  var f = (new cljs.core.Keyword(null, "context", "context", -830191113)).cljs$core$IFn$_invoke$arity$1(a), g = cljs.analyzer.analyze_let_bindings.call(null, a, d);
  d = cljs.core.nth.call(null, g, 0, null);
  g = cljs.core.nth.call(null, g, 1, null);
  var h = !0 === c ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "params", "params", 710516235), d, new cljs.core.Keyword(null, "flag", "flag", 1088647881), cljs.core.atom.call(null, null)], null) : null;
  h = cljs.core.truth_(h) ? cljs.core.cons.call(null, h, cljs.analyzer._STAR_recur_frames_STAR_) : cljs.analyzer._STAR_recur_frames_STAR_;
  var k = !0 === c ? cljs.analyzer._STAR_loop_lets_STAR_ : null != cljs.analyzer._STAR_loop_lets_STAR_ ? cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "params", "params", 710516235), d], null), cljs.analyzer._STAR_loop_lets_STAR_) : null;
  e = cljs.analyzer.analyze_let_body.call(null, g, f, e, h, k);
  c = !0 === c ? new cljs.core.Keyword(null, "loop", "loop", -395552849) : new cljs.core.Keyword(null, "let", "let", -1282412701);
  f = cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "init", "init", -1875481434), d)), e);
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), c, new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "bindings", "bindings", 1271397192), d, new cljs.core.Keyword(null, "expr", "expr", 745722291), e, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "children", "children", -940561982), f], null);
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), function(a, b, c, d, e) {
  return cljs.analyzer.analyze_let.call(null, b, c, !1);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), function(a, b, c, d, e) {
  return cljs.analyzer.analyze_let.call(null, b, c, !0);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), function(a, b, c, d, e) {
  var f = cljs.core.seq.call(null, c), g = cljs.core.first.call(null, f), h = cljs.core.next.call(null, f), k = (new cljs.core.Keyword(null, "context", "context", -830191113)).cljs$core$IFn$_invoke$arity$1(b), l = cljs.core.first.call(null, cljs.analyzer._STAR_recur_frames_STAR_), m = function() {
    var a = (new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365)).cljs$core$IFn$_invoke$arity$1(l);
    return cljs.core.truth_(a) ? cljs.core._EQ_.call(null, cljs.core.count.call(null, h), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(l)) - 1) : a;
  }(), n = cljs.core.truth_(m) ? cljs.core.cons.call(null, null, h) : h;
  a = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec.call(null, cljs.core.map.call(null, function(a, c, d, e, f, g, h, k, l, m, n, p) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), a);
        };
      }(a, k, l, m, n, c, f, g, h, g, h, c), n));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  if (!cljs.core.truth_(l)) {
    throw cljs.analyzer.error.call(null, b, "Can't recur here");
  }
  if (!cljs.core._EQ_.call(null, cljs.core.count.call(null, a), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(l)))) {
    throw cljs.analyzer.error.call(null, b, ["recur argument count mismatch, expected: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(l))), " args, got: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count.call(null, a))].join(""));
  }
  cljs.core.truth_(function() {
    var a = (new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365)).cljs$core$IFn$_invoke$arity$1(l);
    return cljs.core.truth_(a) ? cljs.core.not.call(null, m) : a;
  }()) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "protocol-impl-recur-with-target", "protocol-impl-recur-with-target", -1648321574), b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "form", "form", -1624062471), (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))], null));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "flag", "flag", 1088647881)).cljs$core$IFn$_invoke$arity$1(l), !0);
  return cljs.core.assoc.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "recur", "recur", -437573268), new cljs.core.Keyword(null, "form", "form", -1624062471), c], null), new cljs.core.Keyword(null, "frame", "frame", -1711082588), l, new cljs.core.Keyword(null, "exprs", "exprs", 1795829094), a, new cljs.core.Keyword(null, "children", "children", -940561982), 
  a);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), function(a, b, c, d, e) {
  cljs.core.nth.call(null, c, 0, null);
  a = cljs.core.nth.call(null, c, 1, null);
  return cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "quoted?", "quoted?", 1464649621), !0), a);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "new", "new", -444906321, null), function(a, b, c, d, e) {
  a = cljs.core.seq.call(null, c);
  d = cljs.core.first.call(null, a);
  e = cljs.core.next.call(null, a);
  var f = cljs.core.first.call(null, e), g = cljs.core.next.call(null, e), h = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    var k = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), l = cljs.analyzer.analyze.call(null, k, f), m = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(l), new cljs.core.Keyword(null, "var", "var", -769682797)) ? cljs.analyzer.resolve_existing_var.call(null, b, f) : null, n = cljs.core.truth_(function() {
      var a = (new cljs.core.Keyword(null, "record", "record", -779106859)).cljs$core$IFn$_invoke$arity$1(m);
      return cljs.core.truth_(a) ? cljs.core.not.call(null, (new cljs.core.Keyword(null, "internal-ctor", "internal-ctor", 937392560)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, f))) : a;
    }()) ? cljs.core.repeat.call(null, 3, cljs.analyzer.analyze.call(null, k, null)) : null, p = cljs.core.into.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
      return function(b) {
        return cljs.analyzer.analyze.call(null, a, b);
      };
    }(k, l, m, n, h, c, a, d, e, d, f, g, f, g, c), g)), n), q = (new cljs.core.Keyword(null, "num-fields", "num-fields", 1529154024)).cljs$core$IFn$_invoke$arity$1(m), r = cljs.core.count.call(null, g);
    cljs.core.not.call(null, (new cljs.core.Keyword(null, "internal-ctor", "internal-ctor", 937392560)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, f))) && null != q && cljs.core.not_EQ_.call(null, q, r) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "fn-arity", "fn-arity", -403576501), b, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "argc", "argc", -1452839519), r, new cljs.core.Keyword(null, "ctor", "ctor", 1750864802), f], null));
    return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "new", "new", -2085437848), new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "ctor", "ctor", 1750864802), l, new cljs.core.Keyword(null, "args", "args", 1315556576), p, new cljs.core.Keyword(null, "children", "children", -940561982), cljs.core.into.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [l], null), p), new cljs.core.Keyword(null, "tag", "tag", -1290361223), function() {
      var a = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(l)), b = (new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol("js", "Object", "js/Object", 61215323, null), new cljs.core.Symbol(null, "object", "object", -1179821820, null), new cljs.core.Symbol("js", "String", "js/String", -2070054036, null), new cljs.core.Symbol(null, "string", "string", -349010059, 
      null), new cljs.core.Symbol("js", "Array", "js/Array", -423508366, null), new cljs.core.Symbol(null, "array", "array", -440182315, null), new cljs.core.Symbol("js", "Number", "js/Number", -508133572, null), new cljs.core.Symbol(null, "number", "number", -1084057331, null), new cljs.core.Symbol("js", "Function", "js/Function", -749892063, null), new cljs.core.Symbol(null, "function", "function", -486723946, null), new cljs.core.Symbol("js", "Boolean", "js/Boolean", 1661145260, null), new cljs.core.Symbol(null, 
      "boolean", "boolean", -278886877, null)], null)).call(null, a);
      return cljs.core.truth_(b) ? b : a;
    }()], null);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = h;
  }
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), function(a, b, c, d, e) {
  cljs.core.nth.call(null, c, 0, null);
  a = cljs.core.nth.call(null, c, 1, null);
  d = cljs.core.nth.call(null, c, 2, null);
  e = cljs.core.nth.call(null, c, 3, null);
  a = cljs.core.truth_(e) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, 1, null), new cljs.core.List(null, a, null, 1, null), new cljs.core.List(null, d, null, 1, null)))), e], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d], null);
  var f = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  d = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    var g = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291));
    if (!cljs.core._EQ_.call(null, f, new cljs.core.Symbol(null, "*unchecked-if*", "*unchecked-if*", 1542408350, null)) || !0 !== a && !1 !== a) {
      if (!cljs.core._EQ_.call(null, f, new cljs.core.Symbol(null, "*unchecked-arrays*", "*unchecked-arrays*", -381849911, null)) || !0 !== a && !1 !== a) {
        if (cljs.core._EQ_.call(null, f, new cljs.core.Symbol(null, "*warn-on-infer*", "*warn-on-infer*", 1890277318, null))) {
          cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.assoc.call(null, cljs.analyzer._STAR_cljs_warnings_STAR_, new cljs.core.Keyword(null, "infer-warning", "infer-warning", -1600671410), !0);
          var h = new cljs.core.Keyword("cljs.analyzer", "set-warn-on-infer", "cljs.analyzer/set-warn-on-infer", 1143377544);
        } else {
          h = f instanceof cljs.core.Symbol ? function() {
            if (null != (new cljs.core.Keyword(null, "const", "const", 1709929842)).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.call(null, cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "locals", "locals", 535295783)), f))) {
              throw cljs.analyzer.error.call(null, b, "Can't set! a constant");
            }
            var a = f.call(null, (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(b));
            if (!cljs.core.truth_(function() {
              var b = null == a;
              if (b) {
                return b;
              }
              b = (new cljs.core.Keyword(null, "field", "field", -1302436500)).cljs$core$IFn$_invoke$arity$1(a);
              if (cljs.core.truth_(b)) {
                b = (new cljs.core.Keyword(null, "mutable", "mutable", 875778266)).cljs$core$IFn$_invoke$arity$1(a);
                if (cljs.core.truth_(b)) {
                  return b;
                }
                b = (new cljs.core.Keyword(null, "unsynchronized-mutable", "unsynchronized-mutable", -164143950)).cljs$core$IFn$_invoke$arity$1(a);
                return cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411)).cljs$core$IFn$_invoke$arity$1(a);
              }
              return b;
            }())) {
              throw cljs.analyzer.error.call(null, b, "Can't set! local var or non-mutable field");
            }
            return cljs.analyzer.analyze_symbol.call(null, g, f);
          }() : cljs.core.seq_QMARK_.call(null, f) ? function() {
            var a = cljs.analyzer.analyze_seq.call(null, g, f, null);
            return cljs.core.truth_((new cljs.core.Keyword(null, "field", "field", -1302436500)).cljs$core$IFn$_invoke$arity$1(a)) ? a : null;
          }() : null;
        }
        var k = h;
      } else {
        cljs.core._STAR_unchecked_arrays_STAR_ = a, k = new cljs.core.Keyword("cljs.analyzer", "set-unchecked-arrays", "cljs.analyzer/set-unchecked-arrays", 2053080937);
      }
      var l = k;
    } else {
      cljs.core._STAR_unchecked_if_STAR_ = a, l = new cljs.core.Keyword("cljs.analyzer", "set-unchecked-if", "cljs.analyzer/set-unchecked-if", 1413639250);
    }
    var m = cljs.analyzer.analyze.call(null, g, a);
    if (!cljs.core.truth_(l)) {
      throw cljs.analyzer.error.call(null, b, "set! target must be a field or a symbol naming a var");
    }
    return null != (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("cljs.analyzer", "set-warn-on-infer", "cljs.analyzer/set-warn-on-infer", 1143377544), null, new cljs.core.Keyword("cljs.analyzer", "set-unchecked-arrays", "cljs.analyzer/set-unchecked-arrays", 2053080937), null, new cljs.core.Keyword("cljs.analyzer", "set-unchecked-if", "cljs.analyzer/set-unchecked-if", 1413639250), null], null), null)).call(null, l) ? new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "no-op", "no-op", -93046065)], null) : new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "set!", "set!", -1389817006), new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "target", 
    "target", 253001721), l, new cljs.core.Keyword(null, "val", "val", 128701612), m, new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, m], null)], null);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = d;
  }
});
cljs.analyzer.foreign_dep_QMARK_ = function(a) {
  var b = (new cljs.core.Keyword(null, "js-dependency-index", "js-dependency-index", -1887042131)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
  a = cljs.core.find.call(null, b, cljs.core.name.call(null, a));
  if (null == a) {
    return !1;
  }
  cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  return cljs.core.get.call(null, a, new cljs.core.Keyword(null, "foreign", "foreign", 990521149));
};
cljs.analyzer.analyze_deps = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.analyzer.analyze_deps.call(null, a, b, c, cljs.core.truth_(cljs.env._STAR_compiler_STAR_) ? (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)) : null);
};
cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  d = cljs.analyzer._STAR_cljs_dep_set_STAR_;
  cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.vary_meta.call(null, cljs.core.conj.call(null, cljs.analyzer._STAR_cljs_dep_set_STAR_, a), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dep-path", "dep-path", 723826558)], null), cljs.core.conj, a);
  try {
    if (!cljs.core.every_QMARK_.call(null, function(a, b) {
      return function(a) {
        return !cljs.core.contains_QMARK_.call(null, cljs.analyzer._STAR_cljs_dep_set_STAR_, a);
      };
    }(d, e), b)) {
      throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["Circular dependency detected, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " -\x3e ", cljs.core.conj.call(null, (new cljs.core.Keyword(null, "dep-path", "dep-path", 723826558)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, cljs.analyzer._STAR_cljs_dep_set_STAR_)), cljs.core.some.call(null, cljs.analyzer._STAR_cljs_dep_set_STAR_, b)))))].join("")), 
      "\n(every? (fn* [p1__17045#] (not (contains? *cljs-dep-set* p1__17045#))) deps)"].join(""));
    }
    var f = cljs.core.seq.call(null, b);
    a = null;
    for (var g = b = 0;;) {
      if (g < b) {
        var h = cljs.core._nth.call(null, a, g);
        if (!cljs.core.truth_(function() {
          var a = null != cljs.core.get_in.call(null, e, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "defs", "defs", 1398449717)], null));
          return a || (a = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "js-dependency-index", "js-dependency-index", -1887042131)).cljs$core$IFn$_invoke$arity$1(e), cljs.core.name.call(null, h))) ? a : (a = cljs.analyzer.node_module_dep_QMARK_.call(null, h)) ? a : cljs.analyzer.js_module_exists_QMARK_.call(null, cljs.core.name.call(null, h));
        }())) {
          throw cljs.analyzer.error.call(null, c, cljs.analyzer.error_message.call(null, new cljs.core.Keyword(null, "undeclared-ns", "undeclared-ns", -1589012812), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns-sym", "ns-sym", -1696101605), h, new cljs.core.Keyword(null, "js-provide", "js-provide", 1052912493), cljs.core.name.call(null, h)], null)));
        }
        g += 1;
      } else {
        var k = cljs.core.seq.call(null, f);
        if (k) {
          var l = k;
          if (cljs.core.chunked_seq_QMARK_.call(null, l)) {
            var m = cljs.core.chunk_first.call(null, l), n = cljs.core.chunk_rest.call(null, l);
            l = m;
            var p = cljs.core.count.call(null, m);
            f = n;
            a = l;
            b = p;
          } else {
            h = cljs.core.first.call(null, l);
            if (!cljs.core.truth_(function() {
              var a = null != cljs.core.get_in.call(null, e, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "defs", "defs", 1398449717)], null));
              return a || (a = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "js-dependency-index", "js-dependency-index", -1887042131)).cljs$core$IFn$_invoke$arity$1(e), cljs.core.name.call(null, h))) ? a : (a = cljs.analyzer.node_module_dep_QMARK_.call(null, h)) ? a : cljs.analyzer.js_module_exists_QMARK_.call(null, cljs.core.name.call(null, h));
            }())) {
              throw cljs.analyzer.error.call(null, c, cljs.analyzer.error_message.call(null, new cljs.core.Keyword(null, "undeclared-ns", "undeclared-ns", -1589012812), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns-sym", "ns-sym", -1696101605), h, new cljs.core.Keyword(null, "js-provide", "js-provide", 1052912493), cljs.core.name.call(null, h)], null)));
            }
            f = cljs.core.next.call(null, l);
            a = null;
            b = 0;
          }
          g = 0;
        } else {
          return null;
        }
      }
    }
  } finally {
    cljs.analyzer._STAR_cljs_dep_set_STAR_ = d;
  }
};
cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4;
cljs.analyzer.missing_use_QMARK_ = function(a, b, c) {
  var d = cljs.core.get_in.call(null, c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "js-dependency-index", "js-dependency-index", -1887042131), cljs.core.name.call(null, a)], null));
  return cljs.core._EQ_.call(null, cljs.core.get_in.call(null, c, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a, new cljs.core.Keyword(null, "defs", "defs", 1398449717), b], null), new cljs.core.Keyword("cljs.analyzer", "not-found", "cljs.analyzer/not-found", 427220150)), new cljs.core.Keyword("cljs.analyzer", "not-found", "cljs.analyzer/not-found", 427220150)) && !cljs.core._EQ_.call(null, 
  cljs.core.get.call(null, d, new cljs.core.Keyword(null, "group", "group", 582596132)), new cljs.core.Keyword(null, "goog", "goog", -1711135452)) && cljs.core.not.call(null, cljs.core.get.call(null, d, new cljs.core.Keyword(null, "closure-lib", "closure-lib", 2105917916))) && !cljs.analyzer.node_module_dep_QMARK_.call(null, a) && cljs.core.not.call(null, cljs.analyzer.dep_has_global_exports_QMARK_.call(null, a));
};
cljs.analyzer.missing_rename_QMARK_ = function(a, b) {
  var c = cljs.core.symbol.call(null, cljs.core.namespace.call(null, a));
  a = cljs.core.symbol.call(null, cljs.core.name.call(null, a));
  return cljs.analyzer.missing_use_QMARK_.call(null, c, a, b);
};
cljs.analyzer.missing_use_macro_QMARK_ = function(a, b) {
  return a instanceof cljs.core.Symbol ? (a = cljs.core.find_macros_ns.call(null, a), null == a || null == a.findInternedVar(b)) : null;
};
cljs.analyzer.missing_rename_macro_QMARK_ = function(a) {
  var b = cljs.core.symbol.call(null, cljs.core.namespace.call(null, a));
  a = cljs.core.symbol.call(null, cljs.core.name.call(null, a));
  b = cljs.core.find_macros_ns.call(null, b);
  return null == b || null == b.findInternedVar(a);
};
cljs.analyzer.missing_uses = function(a, b) {
  b = cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(a) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.analyzer.missing_use_QMARK_.call(null, b, c, a);
    };
  }(b), a));
};
cljs.analyzer.missing_renames = function(a, b) {
  b = cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(a) {
    return function(b) {
      cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.analyzer.missing_rename_QMARK_.call(null, b, a);
    };
  }(b), a));
};
cljs.analyzer.missing_use_macros = function(a, b) {
  b = cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(a) {
    return function(a) {
      var b = cljs.core.nth.call(null, a, 0, null);
      a = cljs.core.nth.call(null, a, 1, null);
      return cljs.analyzer.missing_use_macro_QMARK_.call(null, a, b);
    };
  }(b), a));
};
cljs.analyzer.inferred_use_macros = function(a, b) {
  b = cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(a) {
    return function(a) {
      var b = cljs.core.nth.call(null, a, 0, null);
      a = cljs.core.nth.call(null, a, 1, null);
      return cljs.core.not.call(null, cljs.analyzer.missing_use_macro_QMARK_.call(null, a, b));
    };
  }(b), a));
};
cljs.analyzer.inferred_rename_macros = function(a, b) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(a) {
    cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return cljs.core.not.call(null, cljs.analyzer.missing_rename_macro_QMARK_.call(null, a));
  }, a));
};
cljs.analyzer.check_uses = function(a, b) {
  var c = cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  a = cljs.core.seq.call(null, a);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f), h = cljs.core.nth.call(null, g, 0, null);
      g = cljs.core.nth.call(null, g, 1, null);
      if (cljs.core.truth_(cljs.analyzer.missing_use_QMARK_.call(null, g, h, c))) {
        throw cljs.analyzer.error.call(null, b, cljs.analyzer.error_message.call(null, new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "var", new cljs.core.Keyword(null, "lib", "lib", 191808726), g, new cljs.core.Keyword(null, "sym", "sym", -1444860305), h], null)));
      }
      f += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        if (cljs.core.chunked_seq_QMARK_.call(null, a)) {
          d = cljs.core.chunk_first.call(null, a), a = cljs.core.chunk_rest.call(null, a), h = d, e = cljs.core.count.call(null, d), d = h;
        } else {
          d = cljs.core.first.call(null, a);
          h = cljs.core.nth.call(null, d, 0, null);
          g = cljs.core.nth.call(null, d, 1, null);
          if (cljs.core.truth_(cljs.analyzer.missing_use_QMARK_.call(null, g, h, c))) {
            throw cljs.analyzer.error.call(null, b, cljs.analyzer.error_message.call(null, new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "var", new cljs.core.Keyword(null, "lib", "lib", 191808726), g, new cljs.core.Keyword(null, "sym", "sym", -1444860305), h], null)));
          }
          a = cljs.core.next.call(null, a);
          d = null;
          e = 0;
        }
        f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.check_use_macros = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.check_use_macros.call(null, a, null, b);
};
cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  a = cljs.core.seq.call(null, a);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f), h = cljs.core.nth.call(null, g, 0, null);
      g = cljs.core.nth.call(null, g, 1, null);
      if (cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_.call(null, g, h))) {
        throw cljs.analyzer.error.call(null, c, cljs.analyzer.error_message.call(null, new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "macro", new cljs.core.Keyword(null, "lib", "lib", 191808726), g, new cljs.core.Keyword(null, "sym", "sym", -1444860305), h], null)));
      }
      f += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        if (cljs.core.chunked_seq_QMARK_.call(null, a)) {
          e = cljs.core.chunk_first.call(null, a), a = cljs.core.chunk_rest.call(null, a), d = e, e = cljs.core.count.call(null, e);
        } else {
          e = cljs.core.first.call(null, a);
          d = cljs.core.nth.call(null, e, 0, null);
          e = cljs.core.nth.call(null, e, 1, null);
          if (cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_.call(null, e, d))) {
            throw cljs.analyzer.error.call(null, c, cljs.analyzer.error_message.call(null, new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "macro", new cljs.core.Keyword(null, "lib", "lib", 191808726), e, new cljs.core.Keyword(null, "sym", "sym", -1444860305), d], null)));
          }
          a = cljs.core.next.call(null, a);
          d = null;
          e = 0;
        }
        f = 0;
      } else {
        break;
      }
    }
  }
  cljs.analyzer.check_uses.call(null, cljs.analyzer.missing_use_macros.call(null, b, c), c);
  return cljs.analyzer.inferred_use_macros.call(null, b, c);
};
cljs.analyzer.check_use_macros.cljs$lang$maxFixedArity = 3;
cljs.analyzer.check_use_macros_inferring_missing = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "name", "name", 1843675177)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "uses", "uses", 232664692)), f = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393)), g = cljs.analyzer._STAR_analyze_deps_STAR_ && 
  cljs.core.seq.call(null, e) ? cljs.analyzer.missing_uses.call(null, e, b) : null, h = cljs.core.apply.call(null, cljs.core.dissoc, e, cljs.core.keys.call(null, g)), k = function(a, b, c, d, e, f, g, h) {
    return function(b) {
      return cljs.core.apply.call(null, cljs.core.dissoc, b, cljs.core.keys.call(null, a));
    };
  }(g, h, a, c, c, d, e, f), l = cljs.core.update_in.call(null, cljs.core.update_in.call(null, c, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393)], null), function(a, c, d, e, f, g, h, k, l) {
    return function(d) {
      return cljs.core.merge.call(null, cljs.core.merge.call(null, d, cljs.analyzer.check_use_macros.call(null, l, a, b)), cljs.analyzer.inferred_use_macros.call(null, c, b));
    };
  }(g, h, k, a, c, c, d, e, f)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "uses", "uses", 232664692)], null), k);
  cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, function(a, b, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core.update_in.call(null, cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393)], null), cljs.core.merge, (new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393)).cljs$core$IFn$_invoke$arity$1(d)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "uses", "uses", 232664692)], null), c);
    };
  }(g, h, k, l, a, c, c, d, e, f));
  return l;
};
cljs.analyzer.check_rename_macros_inferring_missing = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "name", "name", 1843675177)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "renames", "renames", 343278368)), f = cljs.analyzer._STAR_analyze_deps_STAR_ && cljs.core.seq.call(null, e) ? cljs.analyzer.missing_renames.call(null, e, b) : null, g = cljs.core.apply.call(null, 
  cljs.core.dissoc, e, cljs.core.keys.call(null, f)), h = cljs.analyzer.inferred_rename_macros.call(null, f, b), k = function(a, b, c, d, e, f, g, h) {
    return function(b) {
      return cljs.core.apply.call(null, cljs.core.dissoc, b, cljs.core.keys.call(null, a));
    };
  }(f, g, h, a, c, c, d, e), l = cljs.core.update_in.call(null, cljs.core.update_in.call(null, c, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512)], null), function(a, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core.merge.call(null, cljs.core.merge.call(null, a, d), cljs.analyzer.inferred_rename_macros.call(null, c, b));
    };
  }(f, g, h, k, a, c, c, d, e)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "renames", "renames", 343278368)], null), k);
  cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, function(a, b, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core.update_in.call(null, cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), k, new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512)], null), cljs.core.merge, (new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512)).cljs$core$IFn$_invoke$arity$1(e)), new cljs.core.PersistentVector(null, 
      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), k, new cljs.core.Keyword(null, "renames", "renames", 343278368)], null), d);
    };
  }(f, g, h, k, l, a, c, c, d, e));
  return l;
};
cljs.analyzer.parse_ns_error_msg = function(a, b) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "; offending spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a))].join("");
};
cljs.analyzer.basic_validate_ns_spec = function(a, b, c) {
  if (!(c instanceof cljs.core.Symbol || "string" === typeof c || cljs.core.sequential_QMARK_.call(null, c))) {
    throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, c, "Only [lib.ns \x26 options] and lib.ns specs supported in :require / :require-macros"));
  }
  if (cljs.core.sequential_QMARK_.call(null, c)) {
    if (!(cljs.core.first.call(null, c) instanceof cljs.core.Symbol || "string" === typeof cljs.core.first.call(null, c))) {
      throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, c, "Library name must be specified as a symbol in :require / :require-macros"));
    }
    if (!cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, c))) {
      throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, c, "Only :as alias, :refer (names) and :rename {from to} options supported in :require"));
    }
    if (!cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "as", "as", 1148689641), null, new cljs.core.Keyword(null, "rename", "rename", 1508157613), null, new cljs.core.Keyword(null, "refer", "refer", -964295553), null], null), null), cljs.core.map.call(null, cljs.core.first, cljs.core.partition.call(null, 2, cljs.core.next.call(null, c))))) {
      throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, c, "Only :as, :refer and :rename options supported in :require / :require-macros"));
    }
    b = cljs.core.frequencies.call(null, cljs.core.next.call(null, c));
    if (1 >= b.call(null, new cljs.core.Keyword(null, "as", "as", 1148689641), 0) && 1 >= b.call(null, new cljs.core.Keyword(null, "refer", "refer", -964295553), 0)) {
      return null;
    }
    throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, c, "Each of :as and :refer options may only be specified once in :require / :require-macros"));
  }
  return null;
};
cljs.analyzer.parse_ns_excludes = function(a, b) {
  return cljs.core.reduce.call(null, function(b, d) {
    var c = cljs.core.seq.call(null, d), f = cljs.core.first.call(null, c), g = cljs.core.next.call(null, c);
    if (cljs.core._EQ_.call(null, f, new cljs.core.Keyword(null, "refer-clojure", "refer-clojure", 813784440))) {
      if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)).cljs$core$IFn$_invoke$arity$1(b))) {
        throw cljs.analyzer.error.call(null, a, "Only one :refer-clojure form is allowed per namespace definition");
      }
      var h = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "exclude", "exclude", -1230250334), null, new cljs.core.Keyword(null, "rename", "rename", 1508157613), null], null), null), k = function() {
        for (var b = cljs.core.seq.call(null, g), e = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "renames", "renames", 343278368), cljs.core.PersistentArrayMap.EMPTY], null), k = !cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, g));;) {
          if (!0 === k) {
            throw cljs.analyzer.error.call(null, a, "Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported");
          }
          if (null != b) {
            var p = cljs.core.first.call(null, b);
            if (cljs.core.truth_(h.call(null, p))) {
              var q = cljs.core.second.call(null, b);
              if (cljs.core._EQ_.call(null, p, new cljs.core.Keyword(null, "exclude", "exclude", -1230250334)) && cljs.core.sequential_QMARK_.call(null, q) && cljs.core.every_QMARK_.call(null, cljs.core.symbol_QMARK_, q) || cljs.core._EQ_.call(null, p, new cljs.core.Keyword(null, "rename", "rename", 1508157613)) && cljs.core.map_QMARK_.call(null, q) && cljs.core.every_QMARK_.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n) {
                return function(a) {
                  return cljs.core.every_QMARK_.call(null, cljs.core.symbol_QMARK_, a);
                };
              }(b, e, k, q, p, h, d, c, f, g, f, g), q)) {
                if (cljs.core._EQ_.call(null, p, new cljs.core.Keyword(null, "exclude", "exclude", -1230250334))) {
                  b = cljs.core.nnext.call(null, b), e = cljs.core.update_in.call(null, e, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)], null), cljs.core.into, q), k = !1;
                } else {
                  if (cljs.core._EQ_.call(null, p, new cljs.core.Keyword(null, "rename", "rename", 1508157613))) {
                    b = cljs.core.nnext.call(null, b), e = cljs.core.update_in.call(null, e, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "renames", "renames", 343278368)], null), cljs.core.merge, q), k = !1;
                  } else {
                    return null;
                  }
                }
              } else {
                k = !0;
              }
            } else {
              k = !0;
            }
          } else {
            return e;
          }
        }
      }();
      return cljs.core.merge_with.call(null, cljs.core.into, b, k);
    }
    return b;
  }, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "renames", "renames", 343278368), cljs.core.PersistentArrayMap.EMPTY], null), b);
};
cljs.analyzer.use__GT_require = function(a, b) {
  var c = cljs.core.seq.call(null, b), d = cljs.core.first.call(null, c), e = cljs.core.next.call(null, c);
  if (!(d instanceof cljs.core.Symbol && cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, b)))) {
    throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, b, "Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros"));
  }
  for (var f = cljs.core.seq.call(null, e), g = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null), h = !1;;) {
    if (!0 === h) {
      throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, b, "Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros"));
    }
    if (null != f) {
      var k = cljs.core.first.call(null, f), l = cljs.core._EQ_.call(null, k, new cljs.core.Keyword(null, "only", "only", 1907811652));
      if (l || cljs.core._EQ_.call(null, k, new cljs.core.Keyword(null, "rename", "rename", 1508157613))) {
        if (null != cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([l ? new cljs.core.Keyword(null, "refer", "refer", -964295553) : k]), g)) {
          throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, b, "Each of :only and :rename options may only be specified once in :use / :use-macros"));
        }
        var m = cljs.core.second.call(null, f);
        l && cljs.core.sequential_QMARK_.call(null, m) && cljs.core.every_QMARK_.call(null, cljs.core.symbol_QMARK_, m) || cljs.core._EQ_.call(null, k, new cljs.core.Keyword(null, "rename", "rename", 1508157613)) && cljs.core.map_QMARK_.call(null, m) && cljs.core.every_QMARK_.call(null, function(a, b, c, d, e, f, g, h, k, l, m, F, Q) {
          return function(a) {
            return cljs.core.every_QMARK_.call(null, cljs.core.symbol_QMARK_, a);
          };
        }(f, g, h, m, k, l, b, c, d, e, d, e, b), m) ? (f = cljs.core.nnext.call(null, f), g = cljs.core.into.call(null, g, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l ? new cljs.core.Keyword(null, "refer", "refer", -964295553) : k, m], null)), h = !1) : h = !0;
      } else {
        h = !0;
      }
    } else {
      if (null != cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "refer", "refer", -964295553), null], null), null), g)) {
        return g;
      }
      h = !0;
    }
  }
};
cljs.analyzer.parse_require_spec = function(a, b, c, d, e) {
  for (;;) {
    if (e instanceof cljs.core.Symbol || "string" === typeof e) {
      e = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e], null);
    } else {
      cljs.analyzer.basic_validate_ns_spec.call(null, a, b, e);
      var f = e, g = cljs.core.seq.call(null, f), h = cljs.core.first.call(null, g), k = cljs.core.next.call(null, g), l = h, m = k, n = function() {
        var a = cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword(null, "js-module-index", "js-module-index", 2072061931), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(l)].join(""), new cljs.core.Keyword(null, "name", "name", 1843675177));
        return null == a ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, null], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, a), l], null);
      }(), p = cljs.core.nth.call(null, n, 0, null), q = cljs.core.nth.call(null, n, 1, null), r = cljs.core.apply.call(null, cljs.core.hash_map, m), t = null != r && (r.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === r.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, r) : r, u = cljs.core.get.call(null, t, new cljs.core.Keyword(null, "as", "as", 1148689641), "string" === typeof p ? cljs.core.symbol.call(null, cljs.core.munge.call(null, p)) : p), v = cljs.core.get.call(null, 
      t, new cljs.core.Keyword(null, "refer", "refer", -964295553)), w = cljs.core.get.call(null, t, new cljs.core.Keyword(null, "rename", "rename", 1508157613)), x = cljs.core.seq.call(null, cljs.core.remove.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, w)), v)), y = cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), new cljs.core.Keyword(null, "use-macros", 
      "use-macros", -905638393), new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "require", "require", -468001333), new cljs.core.Keyword(null, "use", "use", -1846382424), new cljs.core.Keyword(null, "rename", "rename", 1508157613)], null), z = cljs.core.nth.call(null, y, 0, null), F = cljs.core.nth.call(null, y, 1, null), Q = cljs.core.nth.call(null, 
      y, 2, null);
      if (!(u instanceof cljs.core.Symbol || null == u)) {
        throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, e, ":as must be followed by a symbol in :require / :require-macros"));
      }
      if (null != u) {
        var A = cljs.core.truth_(b) ? new cljs.core.Keyword(null, "macros", "macros", 811339431) : new cljs.core.Keyword(null, "fns", "fns", 1185138786), C = A.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, d)).call(null, u);
        if (null != C && cljs.core.not_EQ_.call(null, p, C)) {
          throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, e, ":as alias must be unique"));
        }
        cljs.core.swap_BANG_.call(null, d, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [A], null), cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u, p], null), cljs.core.truth_(q) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [q, p], null) : null);
      }
      if (!(cljs.core.sequential_QMARK_.call(null, v) && cljs.core.every_QMARK_.call(null, cljs.core.symbol_QMARK_, v) || null == v)) {
        throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, e, ":refer must be followed by a sequence of symbols in :require / :require-macros"));
      }
      cljs.core.truth_(b) || cljs.core.swap_BANG_.call(null, c, cljs.core.conj, p);
      return cljs.core.merge.call(null, null != u ? cljs.core.PersistentArrayMap.createAsIfByAssoc([z, cljs.core.merge.call(null, cljs.core.PersistentArrayMap.createAsIfByAssoc([u, p]), cljs.core.PersistentArrayMap.createAsIfByAssoc([p, p]), cljs.core.truth_(q) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([q, p]) : null)]) : null, null != x ? cljs.core.PersistentArrayMap.createAsIfByAssoc([F, cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, x, cljs.core.repeat.call(null, 
      p)))]) : null, null != w ? cljs.core.PersistentArrayMap.createAsIfByAssoc([Q, cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C) {
        return function(b, c) {
          var d = cljs.core.nth.call(null, c, 0, null);
          c = cljs.core.nth.call(null, c, 1, null);
          if (!cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([d]), v))) {
            throw cljs.analyzer.error.call(null, a, ["Renamed symbol ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), " not referred"].join(""));
          }
          return cljs.core.assoc.call(null, b, c, cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join("")));
        };
      }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, F, Q), cljs.core.PersistentArrayMap.EMPTY, w)]) : null);
    }
  }
};
cljs.analyzer.parse_import_spec = function(a, b, c) {
  if (!(cljs.core.sequential_QMARK_.call(null, c) && cljs.core.every_QMARK_.call(null, cljs.core.symbol_QMARK_, c) || c instanceof cljs.core.Symbol && null == cljs.core.namespace.call(null, c))) {
    throw cljs.analyzer.error.call(null, a, cljs.analyzer.parse_ns_error_msg.call(null, c, "Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import"));
  }
  a = cljs.core.sequential_QMARK_.call(null, c) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, c)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""))], null);
  }, cljs.core.rest.call(null, c))) : cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.symbol.call(null, cljs.core.last.call(null, clojure.string.split.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""), /\./))), c]);
  for (var d = cljs.core.seq.call(null, a), e = null, f = 0, g = 0;;) {
    if (g < f) {
      var h = cljs.core._nth.call(null, e, g);
      cljs.core.nth.call(null, h, 0, null);
      h = cljs.core.nth.call(null, h, 1, null);
      cljs.core.swap_BANG_.call(null, b, cljs.core.conj, h);
      g += 1;
    } else {
      if (d = cljs.core.seq.call(null, d)) {
        cljs.core.chunked_seq_QMARK_.call(null, d) ? (f = cljs.core.chunk_first.call(null, d), d = cljs.core.chunk_rest.call(null, d), e = f, f = cljs.core.count.call(null, f)) : (e = cljs.core.first.call(null, d), cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null), cljs.core.swap_BANG_.call(null, b, cljs.core.conj, e), d = cljs.core.next.call(null, d), e = null, f = 0), g = 0;
      } else {
        break;
      }
    }
  }
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "import", "import", -1399500709), a, new cljs.core.Keyword(null, "require", "require", -468001333), a], null);
};
cljs.analyzer.macro_autoload_ns_QMARK_ = function(a) {
  if (cljs.analyzer._STAR_macro_infer_STAR_) {
    a = cljs.core.sequential_QMARK_.call(null, a) ? cljs.core.first.call(null, a) : a;
    var b = cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a], null)), c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
    b = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393));
    c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416));
    b = cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([a]), cljs.core.vals.call(null, b));
    return cljs.core.truth_(b) ? b : cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([a]), cljs.core.vals.call(null, c));
  }
  return null;
};
cljs.analyzer.clj_ns__GT_cljs_ns = function(a) {
  var b = clojure.string.split.call(null, cljs.core.name.call(null, a), /\./);
  return cljs.core._EQ_.call(null, "clojure", cljs.core.first.call(null, b)) ? cljs.core.symbol.call(null, clojure.string.join.call(null, ".", cljs.core.cons.call(null, "cljs", cljs.core.next.call(null, b)))) : a;
};
cljs.analyzer.canonicalize_specs = function(a) {
  return cljs.core.map.call(null, function(a) {
    if (a instanceof cljs.core.Keyword) {
      return a;
    }
    a = cljs.core.second.call(null, a);
    return cljs.core.vector_QMARK_.call(null, a) || cljs.core.map_QMARK_.call(null, a) ? a : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }, a);
};
cljs.analyzer.canonicalize_import_specs = function(a) {
  return cljs.core.map.call(null, function(a) {
    return a instanceof cljs.core.Keyword ? a : cljs.core.second.call(null, a);
  }, a);
};
cljs.analyzer.desugar_ns_specs = function(a) {
  var b = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(a) {
    var b = cljs.core.seq.call(null, a);
    a = cljs.core.first.call(null, b);
    b = cljs.core.next.call(null, b);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, b)], null);
  }, a)), c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "require", "require", -468001333)), e = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "include-macros", "include-macros", 1228110289), null, new cljs.core.Keyword(null, "refer-macros", "refer-macros", 
  -1906841953), null], null), null), f = function(a, b, c, d, e) {
    return function(a, b) {
      for (;;) {
        if (cljs.core.not.call(null, function() {
          var c = cljs.core.sequential_QMARK_.call(null, b);
          return c ? cljs.core.some.call(null, a, b) : c;
        }())) {
          return b;
        }
        var c = cljs.core.split_with.call(null, cljs.core.complement.call(null, a), b), d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
        c = a;
        d = cljs.core.concat.call(null, d, cljs.core.drop.call(null, 2, e));
        a = c;
        b = d;
      }
    };
  }(b, c, c, d, e), g = function(a, b, c, d, e, f) {
    return function(g) {
      return cljs.core.sequential_QMARK_.call(null, g) ? cljs.core.map.call(null, function(a, b, c, d, e, f) {
        return function(a) {
          return cljs.core._EQ_.call(null, a, new cljs.core.Keyword(null, "refer-macros", "refer-macros", -1906841953)) ? new cljs.core.Keyword(null, "refer", "refer", -964295553) : a;
        };
      }(a, b, c, d, e, f), g) : g;
    };
  }(b, c, c, d, e, f), h = function(a, b, c, d, e, f, g) {
    return function(a) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "reload", "reload", 863702807), null, new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200), null], null), null)).call(null, a);
    };
  }(b, c, c, d, e, f, g), k = function(a, b, c, d, e, f, g, h) {
    return function(k) {
      return cljs.core.map.call(null, function(a, b, c, d, e, f, g, h) {
        return function(a) {
          return cljs.core.not.call(null, h.call(null, a)) ? g.call(null, f.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rename", "rename", 1508157613), null], null), null), f.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "refer", "refer", -964295553), null], null), null), f.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
          1, [new cljs.core.Keyword(null, "include-macros", "include-macros", 1228110289), null], null), null), a)))) : a;
        };
      }(a, b, c, d, e, f, g, h), cljs.core.filter.call(null, function(a, b, c, d, e, f, g, h) {
        return function(a) {
          var b = (b = cljs.core.sequential_QMARK_.call(null, a)) ? cljs.core.some.call(null, e, a) : b;
          if (cljs.core.truth_(b)) {
            return b;
          }
          b = h.call(null, a);
          return cljs.core.truth_(b) ? b : cljs.analyzer.macro_autoload_ns_QMARK_.call(null, a);
        };
      }(a, b, c, d, e, f, g, h), k));
    };
  }(b, c, c, d, e, f, g, h), l = cljs.core.partial.call(null, f, e), m = cljs.core.seq.call(null, k.call(null, d));
  return null == m ? a : cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, F) {
    return function(a) {
      if (cljs.core.not.call(null, l.call(null, a))) {
        var b = cljs.core.nth.call(null, a, 0, null);
        a = cljs.core.nth.call(null, a, 1, null);
        return cljs.core.cons.call(null, b, cljs.core.map.call(null, F, a));
      }
      return a;
    };
  }(m, m, b, c, c, d, e, f, g, h, k, l), cljs.core.update_in.call(null, c, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416)], null), cljs.core.fnil.call(null, cljs.core.into, cljs.core.PersistentVector.EMPTY), m));
};
cljs.analyzer.find_def_clash = function(a, b, c) {
  c = cljs.core.map.call(null, function(a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, clojure.string.join.call(null, ".", cljs.core.butlast.call(null, a))), cljs.core.symbol.call(null, cljs.core.last.call(null, a))], null);
  }, cljs.core.drop.call(null, 2, cljs.core.reductions.call(null, cljs.core.conj, cljs.core.PersistentVector.EMPTY, c)));
  c = cljs.core.seq.call(null, c);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f), h = cljs.core.nth.call(null, g, 0, null);
      g = cljs.core.nth.call(null, g, 1, null);
      cljs.core.truth_(cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "defs", "defs", 1398449717), g], null))) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "ns-var-clash", "ns-var-clash", -280494668), a, new cljs.core.PersistentArrayMap(null, 
      2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), b, new cljs.core.Keyword(null, "var", "var", -769682797), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)].join(""))], null));
      f += 1;
    } else {
      if (c = cljs.core.seq.call(null, c)) {
        cljs.core.chunked_seq_QMARK_.call(null, c) ? (d = cljs.core.chunk_first.call(null, c), c = cljs.core.chunk_rest.call(null, c), h = d, e = cljs.core.count.call(null, d), d = h) : (d = cljs.core.first.call(null, c), h = cljs.core.nth.call(null, d, 0, null), g = cljs.core.nth.call(null, d, 1, null), cljs.core.truth_(cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", 
        "namespaces", "cljs.analyzer/namespaces", -260788927), h, new cljs.core.Keyword(null, "defs", "defs", 1398449717), g], null))) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "ns-var-clash", "ns-var-clash", -280494668), a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), b, new cljs.core.Keyword(null, "var", "var", -769682797), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)].join(""))], 
        null)), c = cljs.core.next.call(null, c), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.macro_ns_name = function(a) {
  var b = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  return cljs.core.not.call(null, goog.string.endsWith(b, "$macros")) ? cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "$macros"].join("")) : a;
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), function(a, b, c, d, e) {
  var f = cljs.core.seq.call(null, c), g = cljs.core.first.call(null, f), h = cljs.core.next.call(null, f), k = cljs.core.first.call(null, h), l = cljs.core.next.call(null, h);
  if (!cljs.analyzer._STAR_allow_ns_STAR_) {
    throw cljs.analyzer.error.call(null, b, "Namespace declarations must appear at the top-level.");
  }
  if (!(k instanceof cljs.core.Symbol)) {
    throw cljs.analyzer.error.call(null, b, "Namespaces must be named by a symbol.");
  }
  var m = cljs.core.truth_((new cljs.core.Keyword(null, "macros-ns", "macros-ns", 1626844933)).cljs$core$IFn$_invoke$arity$1(e)) ? cljs.analyzer.macro_ns_name.call(null, k) : k;
  a = clojure.string.split.call(null, cljs.core.name.call(null, m), /\./);
  cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a)) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "single-segment-namespace", "single-segment-namespace", -491924469), b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), m], null));
  null != cljs.core.some.call(null, cljs.analyzer.js_reserved, a) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "munged-namespace", "munged-namespace", -101986199), b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), m], null));
  cljs.analyzer.find_def_clash.call(null, b, m, a);
  var n = "string" === typeof cljs.core.first.call(null, l) ? cljs.core.first.call(null, l) : null, p = (new cljs.core.Keyword(null, "doc", "doc", 1913296891)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m)), q = null != n ? cljs.core.next.call(null, l) : l, r = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, q)) ? cljs.core.first.call(null, q) : null, t = cljs.core.meta.call(null, c), u = cljs.analyzer.desugar_ns_specs.call(null, null != r ? cljs.core.next.call(null, q) : 
  q), v = cljs.core.vary_meta.call(null, m, cljs.core.merge, r), w = cljs.analyzer.parse_ns_excludes.call(null, b, u), x = null != w && (w.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === w.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, w) : w, y = cljs.core.get.call(null, x, new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)), z = cljs.core.get.call(null, x, new cljs.core.Keyword(null, "renames", "renames", 343278368)), F = cljs.core.reduce.call(null, 
  function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.assoc.call(null, a, b, cljs.core.symbol.call(null, "cljs.core", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("")));
    };
  }(n, p, q, r, t, u, v, w, x, y, z, m, c, f, g, h, g, k, l, k, l, c), cljs.core.PersistentArrayMap.EMPTY, z), Q = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), A = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fns", "fns", 1185138786), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "macros", "macros", 811339431), cljs.core.PersistentArrayMap.EMPTY], null)), C = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
  "require", "require", -468001333), cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !1, Q, A), new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !0, Q, A), new cljs.core.Keyword(null, "use", "use", -1846382424), cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !1, Q, A), cljs.core.partial.call(null, cljs.analyzer.use__GT_require, b)), new cljs.core.Keyword(null, 
  "use-macros", "use-macros", -905638393), cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !0, Q, A), cljs.core.partial.call(null, cljs.analyzer.use__GT_require, b)), new cljs.core.Keyword(null, "import", "import", -1399500709), cljs.core.partial.call(null, cljs.analyzer.parse_import_spec, b, Q)], null), I = cljs.core.atom.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "use-macros", 
  "use-macros", -905638393), null, new cljs.core.Keyword(null, "use", "use", -1846382424), null, new cljs.core.Keyword(null, "require", "require", -468001333), null, new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), null, new cljs.core.Keyword(null, "import", "import", -1399500709), null], null), null)), D = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "use", "use", -1846382424), null, new cljs.core.Keyword(null, "require", 
  "require", -468001333), null, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), null, new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), null], null)), H = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), B = cljs.core.reduce.call(null, function(a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, L, B, G, I, H) {
    return function(F, K) {
      var Q = cljs.core.seq.call(null, K), E = cljs.core.first.call(null, Q), J = cljs.core.next.call(null, Q);
      if (!cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), null, new cljs.core.Keyword(null, "use", "use", -1846382424), null, new cljs.core.Keyword(null, "require", "require", -468001333), null, new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), null, new cljs.core.Keyword(null, "import", "import", -1399500709), null], null), null)).call(null, E))) {
        throw cljs.analyzer.error.call(null, b, ["Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(K), " instead."].join(""));
      }
      if (!cljs.core.truth_(cljs.core.deref.call(null, u).call(null, E))) {
        throw cljs.analyzer.error.call(null, b, ["Only one ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(E), " form is allowed per namespace definition"].join(""));
      }
      cljs.core.swap_BANG_.call(null, u, cljs.core.disj, E);
      cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "import", "import", -1399500709), E) || (null != cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "reload", "reload", 863702807), null], null), null), J) && cljs.core.swap_BANG_.call(null, v, cljs.core.assoc, E, new cljs.core.Keyword(null, "reload", "reload", 863702807)), null != cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200), null], null), null), J) && cljs.core.swap_BANG_.call(null, v, cljs.core.assoc, E, new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200)));
      var N = cljs.core.seq.call(null, cljs.core.filter.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G, K, I, H, Q, F, J, N) {
        return function(a) {
          return (new cljs.core.Keyword(null, "reload", "reload", 863702807)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
        };
      }(K, Q, E, J, E, J, K, a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, L, B, G, I, H), J));
      N && cljs.core.swap_BANG_.call(null, w, cljs.core.assoc, E, cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.first, N), cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G, K, I, H, Q, F, J, N, P, M) {
        return function(a) {
          return (new cljs.core.Keyword(null, "reload", "reload", 863702807)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
        };
      }(N, N, K, Q, E, J, E, J, K, a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, L, B, G, I, H), N)));
      return cljs.core.apply.call(null, cljs.core.merge_with, cljs.core.merge, F, cljs.core.map.call(null, t.call(null, E), cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "reload", "reload", 863702807), null, new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200), null], null), null), J)));
    };
  }(n, p, q, r, t, u, v, w, x, y, z, F, Q, A, C, I, D, H, m, c, f, g, h, g, k, l, k, l, c), cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G) {
    return function(a) {
      a = cljs.core.nth.call(null, a, 0, null);
      return cljs.core._EQ_.call(null, a, new cljs.core.Keyword(null, "refer-clojure", "refer-clojure", 813784440));
    };
  }(n, p, q, r, t, u, v, w, x, y, z, F, Q, A, C, I, D, H, m, c, f, g, h, g, k, l, k, l, c), u)), G = null != B && (B.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === B.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, B) : B, K = cljs.core.get.call(null, G, new cljs.core.Keyword(null, "use", "use", -1846382424)), J = cljs.core.get.call(null, G, new cljs.core.Keyword(null, "require", "require", -468001333)), M = cljs.core.get.call(null, G, new cljs.core.Keyword(null, 
  "rename", "rename", 1508157613)), E = cljs.core.get.call(null, G, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393)), O = cljs.core.get.call(null, G, new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416)), P = cljs.core.get.call(null, G, new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512)), L = cljs.core.get.call(null, G, new cljs.core.Keyword(null, "import", "import", -1399500709)), N = cljs.core.map.call(null, function(a, b, c, d, f, 
  g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G, K, I, H, Q, F, J, N, P, M, O, R) {
    return function(S) {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "macros-ns", "macros-ns", 1626844933)).cljs$core$IFn$_invoke$arity$1(e))) {
        var V = cljs.core.symbol.call(null, cljs.core.subs.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""), 0, cljs.core.count.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join("")) - 7));
        return cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G, K, I, H, Q, F, J, N, P, M, O, R) {
          return function(b, c) {
            var d = cljs.core.nth.call(null, c, 0, null);
            c = cljs.core.nth.call(null, c, 1, null);
            return cljs.core.symbol_identical_QMARK_.call(null, c, a) ? b : cljs.core.assoc.call(null, b, d, c);
          };
        }(V, a, b, c, d, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G, K, I, H, Q, F, J, N, P, M, O, R), cljs.core.PersistentArrayMap.EMPTY, S);
      }
      return S;
    };
  }(n, p, q, r, t, u, v, w, x, y, z, F, Q, A, C, I, D, H, B, G, G, K, J, M, E, O, P, L, m, c, f, g, h, g, k, l, k, l, c), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [O, E], null)), R = cljs.core.nth.call(null, N, 0, null), S = cljs.core.nth.call(null, N, 1, null);
  cljs.analyzer._STAR_cljs_ns_STAR_ = v;
  var T = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512), new cljs.core.Keyword(null, "renames", "renames", 343278368), new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "imports", "imports", -1249933394), new cljs.core.Keyword(null, "requires", "requires", -1201390927), 
  new cljs.core.Keyword(null, "uses", "uses", 232664692), new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), new cljs.core.Keyword(null, "doc", "doc", 1913296891)], [P, cljs.core.merge.call(null, M, F), S, y, v, L, J, K, R, cljs.core.truth_(n) ? n : p]);
  cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), v], null), cljs.core.merge, T);
  return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "deps", "deps", 1883360319), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.distinct.call(null, cljs.core.deref.call(null, Q))), new cljs.core.Keyword(null, 
  "reload", "reload", 863702807), cljs.core.deref.call(null, D), new cljs.core.Keyword(null, "reloads", "reloads", 610698522), cljs.core.deref.call(null, H)], null), function() {
    var a = cljs.core.truth_(cljs.core.deref.call(null, D).call(null, new cljs.core.Keyword(null, "use", "use", -1846382424))) ? cljs.core.update_in.call(null, T, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "uses", "uses", 232664692)], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G, K, I, H, Q, F, J, N, P, M, O, R, S, T, X, ya) {
      return function(a) {
        return cljs.core.with_meta.call(null, a, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.deref.call(null, w).call(null, new cljs.core.Keyword(null, "use", "use", -1846382424)), !0]));
      };
    }(T, T, n, p, q, r, t, u, v, w, x, y, z, F, Q, A, C, I, D, H, B, G, G, K, J, M, E, O, P, L, N, R, S, m, c, f, g, h, g, k, l, k, l, c)) : T;
    return cljs.core.truth_(cljs.core.deref.call(null, D).call(null, new cljs.core.Keyword(null, "require", "require", -468001333))) ? cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "requires", "requires", -1201390927)], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E, L, B, G, K, I, H, Q, F, J, N, P, M, O, R, S, T, X, ya, Wa) {
      return function(a) {
        return cljs.core.with_meta.call(null, a, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.deref.call(null, x).call(null, new cljs.core.Keyword(null, "require", "require", -468001333)), !0]));
      };
    }(T, a, T, n, p, q, r, t, u, v, w, x, y, z, F, Q, A, C, I, D, H, B, G, G, K, J, M, E, O, P, L, N, R, S, m, c, f, g, h, g, k, l, k, l, c)) : a;
  }());
});
cljs.analyzer.check_duplicate_aliases = function(a, b, c) {
  for (var d = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b), e = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "requires", "requires", -1201390927), new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416)], null)), f = null, g = 0, h = 0;;) {
    if (h < g) {
      var k = cljs.core._nth.call(null, f, h), l = cljs.core.get.call(null, b, k), m = cljs.core.get.call(null, c, k);
      k = cljs.core.some.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), cljs.core.keys.call(null, cljs.core.remove.call(null, function(a, b, c, d, e, f, g, h) {
        return function(a) {
          var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
          return cljs.core._EQ_.call(null, b, c) || cljs.core._EQ_.call(null, a, cljs.core.find.call(null, f, b));
        };
      }(e, f, g, h, l, m, k, d), l)));
      if (null != k) {
        throw b = k, cljs.analyzer.error.call(null, a, ["Alias ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " already exists in namespace ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), ", aliasing ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, l, b))].join(""));
      }
      h += 1;
    } else {
      var n = cljs.core.seq.call(null, e);
      if (n) {
        l = n;
        if (cljs.core.chunked_seq_QMARK_.call(null, l)) {
          e = cljs.core.chunk_first.call(null, l), h = cljs.core.chunk_rest.call(null, l), f = e, g = cljs.core.count.call(null, e), e = h;
        } else {
          k = cljs.core.first.call(null, l);
          m = cljs.core.get.call(null, b, k);
          var p = cljs.core.get.call(null, c, k);
          e = cljs.core.some.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, p)), cljs.core.keys.call(null, cljs.core.remove.call(null, function(a, b, c, d, e, f, g, h, k, l) {
            return function(a) {
              var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
              return cljs.core._EQ_.call(null, b, c) || cljs.core._EQ_.call(null, a, cljs.core.find.call(null, f, b));
            };
          }(e, f, g, h, m, p, k, l, n, d), m)));
          if (null != e) {
            throw b = e, cljs.analyzer.error.call(null, a, ["Alias ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " already exists in namespace ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), ", aliasing ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, m, b))].join(""));
          }
          e = cljs.core.next.call(null, l);
          f = null;
          g = 0;
        }
        h = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), function(a, b, c, d, e) {
  var f = cljs.core.nth.call(null, c, 0, null), g = cljs.core.nth.call(null, c, 1, null);
  a = cljs.core.first.call(null, cljs.core.remove.call(null, function(a, b, c, d) {
    return function(a) {
      return cljs.core.seq_QMARK_.call(null, a) && cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.first.call(null, a));
    };
  }(c, f, g, c), cljs.core.remove.call(null, cljs.core.keyword_QMARK_, g)));
  if (cljs.core.truth_(a)) {
    throw cljs.analyzer.error.call(null, b, ["Arguments to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, cljs.core.first.call(null, g))), " must be quoted. Offending spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
  if (!cljs.analyzer._STAR_allow_ns_STAR_) {
    throw cljs.analyzer.error.call(null, b, ["Calls to `", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, cljs.core.first.call(null, g))), "` must appear at the top-level."].join(""));
  }
  var h = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "import", "import", -1399500709), cljs.core.first.call(null, g)) ? cljs.analyzer.canonicalize_import_specs.call(null, g) : cljs.analyzer.canonicalize_specs.call(null, g), k = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(b)), l = cljs.analyzer.desugar_ns_specs.call(null, new cljs.core.List(null, h, null, 1, null)), 
  m = cljs.analyzer.parse_ns_excludes.call(null, b, l), n = null != m && (m.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === m.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, m) : m, p = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "excludes", "excludes", -1791725945)), q = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "renames", "renames", 343278368)), r = cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m) {
    return function(a, b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.assoc.call(null, a, b, cljs.core.symbol.call(null, "cljs.core", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("")));
    };
  }(h, k, l, m, n, p, q, c, f, g, c), cljs.core.PersistentArrayMap.EMPTY, q), t = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), u = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fns", "fns", 1185138786), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "macros", "macros", 811339431), cljs.core.PersistentArrayMap.EMPTY], null)), v = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "require", "require", 
  -468001333), cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !1, t, u), new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !0, t, u), new cljs.core.Keyword(null, "use", "use", -1846382424), cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !1, t, u), cljs.core.partial.call(null, cljs.analyzer.use__GT_require, b)), new cljs.core.Keyword(null, "use-macros", 
  "use-macros", -905638393), cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.analyzer.parse_require_spec, b, !0, t, u), cljs.core.partial.call(null, cljs.analyzer.use__GT_require, b)), new cljs.core.Keyword(null, "import", "import", -1399500709), cljs.core.partial.call(null, cljs.analyzer.parse_import_spec, b, t)], null), w = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "use", "use", -1846382424), null, new cljs.core.Keyword(null, "require", 
  "require", -468001333), null, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), null, new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), null], null)), x = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), y = cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
    return function(v, w) {
      var x = cljs.core.seq.call(null, w), y = cljs.core.first.call(null, x), z = cljs.core.next.call(null, x);
      cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "import", "import", -1399500709), y) || (null != cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "reload", "reload", 863702807), null], null), null), z) && cljs.core.swap_BANG_.call(null, n, cljs.core.assoc, y, new cljs.core.Keyword(null, "reload", "reload", 863702807)), null != cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200), null], null), null), z) && cljs.core.swap_BANG_.call(null, n, cljs.core.assoc, y, new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200)));
      var A = cljs.core.seq.call(null, cljs.core.filter.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A) {
        return function(a) {
          return (new cljs.core.Keyword(null, "reload", "reload", 863702807)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
        };
      }(w, x, y, z, y, z, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u), z));
      null != A && cljs.core.swap_BANG_.call(null, p, cljs.core.assoc, y, cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.first, A), cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D) {
        return function(a) {
          return (new cljs.core.Keyword(null, "reload", "reload", 863702807)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a));
        };
      }(A, A, w, x, y, z, y, z, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u), A)));
      return cljs.core.apply.call(null, cljs.core.merge_with, cljs.core.merge, v, cljs.core.map.call(null, m.call(null, y), cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "reload", "reload", 863702807), null, new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200), null], null), null), z)));
    };
  }(h, k, l, m, n, p, q, r, t, u, v, w, x, c, f, g, c), cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
    return function(a) {
      a = cljs.core.nth.call(null, a, 0, null);
      return cljs.core._EQ_.call(null, a, new cljs.core.Keyword(null, "refer-clojure", "refer-clojure", 813784440));
    };
  }(h, k, l, m, n, p, q, r, t, u, v, w, x, c, f, g, c), l)), z = null != y && (y.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === y.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, y) : y, F = cljs.core.get.call(null, z, new cljs.core.Keyword(null, "use", "use", -1846382424)), Q = cljs.core.get.call(null, z, new cljs.core.Keyword(null, "require", "require", -468001333)), A = cljs.core.get.call(null, z, new cljs.core.Keyword(null, "rename", "rename", 1508157613)), 
  C = cljs.core.get.call(null, z, new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393)), I = cljs.core.get.call(null, z, new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416)), D = cljs.core.get.call(null, z, new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512)), H = cljs.core.get.call(null, z, new cljs.core.Keyword(null, "import", "import", -1399500709));
  cljs.analyzer._STAR_cljs_ns_STAR_ = k;
  var B = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512), new cljs.core.Keyword(null, "renames", "renames", 343278368), new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "imports", "imports", -1249933394), new cljs.core.Keyword(null, "requires", "requires", -1201390927), 
  new cljs.core.Keyword(null, "uses", "uses", 232664692), new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416)], [D, cljs.core.merge.call(null, A, r), C, p, k, H, Q, F, I]), G = function() {
    var a = cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), k], null));
    if (0 < cljs.core.count.call(null, a)) {
      var b = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416), new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512), new cljs.core.Keyword(null, "uses", "uses", 232664692), new cljs.core.Keyword(null, "requires", "requires", -1201390927), new cljs.core.Keyword(null, "renames", "renames", 343278368), 
      new cljs.core.Keyword(null, "imports", "imports", -1249933394)], null);
      return cljs.core.merge.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), p], null), cljs.core.merge_with.call(null, cljs.core.merge, cljs.core.select_keys.call(null, a, b), cljs.core.select_keys.call(null, B, b)));
    }
    return B;
  }();
  cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), k], null), cljs.core.merge, G);
  return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "ns*", "ns*", 200417856), new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "deps", "deps", 1883360319), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.distinct.call(null, cljs.core.deref.call(null, t))), new cljs.core.Keyword(null, 
  "reload", "reload", 863702807), cljs.core.deref.call(null, w), new cljs.core.Keyword(null, "reloads", "reloads", 610698522), cljs.core.deref.call(null, x)], null), function() {
    var a = cljs.core.truth_(cljs.core.deref.call(null, w).call(null, new cljs.core.Keyword(null, "use", "use", -1846382424))) ? cljs.core.update_in.call(null, B, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "uses", "uses", 232664692)], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, B, G, I, H, F) {
      return function(a) {
        return cljs.core.with_meta.call(null, a, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.deref.call(null, r).call(null, new cljs.core.Keyword(null, "use", "use", -1846382424)), !0]));
      };
    }(B, B, G, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, z, F, Q, A, C, I, D, H, c, f, g, c)) : B;
    return cljs.core.truth_(cljs.core.deref.call(null, w).call(null, new cljs.core.Keyword(null, "require", "require", -468001333))) ? cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "requires", "requires", -1201390927)], null), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, B, G, I, H, F, Q) {
      return function(a) {
        return cljs.core.with_meta.call(null, a, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.deref.call(null, t).call(null, new cljs.core.Keyword(null, "require", "require", -468001333)), !0]));
      };
    }(B, a, B, G, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, z, F, Q, A, C, I, D, H, c, f, g, c)) : a;
  }());
});
cljs.analyzer.parse_type = function(a, b, c) {
  var d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null), f = cljs.core.nth.call(null, c, 2, null), g = cljs.core.nth.call(null, c, 3, null), h = cljs.core.nth.call(null, c, 4, null), k = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.call(null, cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "locals", "locals", 535295783)), e)), l = cljs.core.reduce.call(null, function(a, c, d, e, f, g, 
  h, k) {
    return function(a, c) {
      return cljs.core.assoc.call(null, a, c, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "field", "field", -1302436500), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "unsynchronized-mutable", "unsynchronized-mutable", -164143950), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "mutable", 
      "mutable", 875778266), new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411), new cljs.core.Keyword(null, "shadow", "shadow", 873231803)], [c, !0, cljs.analyzer.get_col.call(null, c, b), (new cljs.core.Keyword(null, "unsynchronized-mutable", "unsynchronized-mutable", -164143950)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c)), cljs.analyzer.get_line.call(null, c, b), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, 
      c)), (new cljs.core.Keyword(null, "mutable", "mutable", 875778266)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c)), (new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c)), a.call(null, c)]));
    };
  }(k, c, d, e, f, g, h, c), cljs.core.PersistentArrayMap.EMPTY, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "defrecord*", "defrecord*", 718069562), a) ? cljs.core.concat.call(null, f, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "__meta", "__meta", -946752628, null), new cljs.core.Symbol(null, "__extmap", "__extmap", -1435580931, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null)) : f), m = (new cljs.core.Keyword(null, "protocols", "protocols", -5615896)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, e));
  cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(b)), new cljs.core.Keyword(null, "defs", "defs", 1398449717), e], null), 
  function(c, d, e, f, g, h, k, l, m, y) {
    return function(d) {
      d = cljs.core.assoc.call(null, cljs.core.truth_(d) ? d : cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "name", "name", 1843675177), c, new cljs.core.Keyword(null, "type", "type", 1174270348), !0, new cljs.core.Keyword(null, "num-fields", "num-fields", 1529154024), cljs.core.count.call(null, k), new cljs.core.Keyword(null, "record", "record", -779106859), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "defrecord*", "defrecord*", 718069562), a));
      return cljs.core.merge.call(null, d, cljs.core.dissoc.call(null, cljs.core.meta.call(null, h), new cljs.core.Keyword(null, "protocols", "protocols", -5615896)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "protocols", "protocols", -5615896), e], null), cljs.analyzer.source_info.call(null, h, b));
    };
  }(k, l, m, c, d, e, f, g, h, c));
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "op", "op", -1882987955), a, new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "t", "t", -1397832519), k, new cljs.core.Keyword(null, "fields", "fields", -1932066230), f, new cljs.core.Keyword(null, "pmasks", "pmasks", -871416698), g, new cljs.core.Keyword(null, "protocols", "protocols", -5615896), cljs.core.disj.call(null, 
  m, new cljs.core.Symbol("cljs.core", "Object", "cljs.core/Object", -345545431, null)), new cljs.core.Keyword(null, "body", "body", -2049205669), cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "locals", "locals", 535295783), l), h)], null);
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), function(a, b, c, d, e) {
  return cljs.analyzer.parse_type.call(null, new cljs.core.Keyword(null, "deftype*", "deftype*", -677871637), b, c);
});
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), function(a, b, c, d, e) {
  return cljs.analyzer.parse_type.call(null, new cljs.core.Keyword(null, "defrecord*", "defrecord*", 718069562), b, c);
});
cljs.analyzer.property_symbol_QMARK_ = function(a) {
  return cljs.core.boolean$.call(null, function() {
    var b = a instanceof cljs.core.Symbol;
    return b ? cljs.core.re_matches.call(null, /^-.*/, cljs.core.name.call(null, a)) : b;
  }());
};
cljs.analyzer.classify_dot_form = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  a = cljs.core.nth.call(null, a, 2, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null == b ? new cljs.core.Keyword("cljs.analyzer", "error", "cljs.analyzer/error", -65289642) : new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889), cljs.core.truth_(cljs.analyzer.property_symbol_QMARK_.call(null, c)) ? new cljs.core.Keyword("cljs.analyzer", "property", "cljs.analyzer/property", 1113330886) : c instanceof cljs.core.Symbol ? new cljs.core.Keyword("cljs.analyzer", 
  "symbol", "cljs.analyzer/symbol", 933248902) : cljs.core.seq_QMARK_.call(null, c) ? new cljs.core.Keyword("cljs.analyzer", "list", "cljs.analyzer/list", -539585923) : new cljs.core.Keyword("cljs.analyzer", "error", "cljs.analyzer/error", -65289642), null == a ? cljs.core.List.EMPTY : new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889)], null);
};
"undefined" === typeof cljs.analyzer.build_dot_form && (cljs.analyzer.build_dot_form = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.analyzer", "build-dot-form"), function(a, b, c, d, e) {
    return function(a) {
      return cljs.analyzer.classify_dot_form.call(null, a);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs.analyzer.build_dot_form, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889), new cljs.core.Keyword("cljs.analyzer", "property", "cljs.analyzer/property", 1113330886), cljs.core.List.EMPTY], null), function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  cljs.core.nth.call(null, a, 2, null);
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dot-action", "dot-action", -1460119601), new cljs.core.Keyword("cljs.analyzer", "access", "cljs.analyzer/access", -1639036494), new cljs.core.Keyword(null, "target", "target", 253001721), b, new cljs.core.Keyword(null, "field", "field", -1302436500), cljs.core.symbol.call(null, cljs.core.name.call(null, c).substring(1))], null);
});
cljs.core._add_method.call(null, cljs.analyzer.build_dot_form, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889), new cljs.core.Keyword("cljs.analyzer", "property", "cljs.analyzer/property", 1113330886), new cljs.core.Keyword("cljs.analyzer", "list", "cljs.analyzer/list", -539585923)], null), function(a) {
  cljs.core.nth.call(null, a, 0, null);
  var b = cljs.core.nth.call(null, a, 1, null);
  a = cljs.core.nth.call(null, a, 2, null);
  throw Error(["Cannot provide arguments ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " on property access ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
});
cljs.analyzer.build_method_call = function(a, b, c) {
  return b instanceof cljs.core.Symbol ? new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "dot-action", "dot-action", -1460119601), new cljs.core.Keyword("cljs.analyzer", "call", "cljs.analyzer/call", 964149800), new cljs.core.Keyword(null, "target", "target", 253001721), a, new cljs.core.Keyword(null, "method", "method", 55703592), b, new cljs.core.Keyword(null, "args", "args", 1315556576), c], null) : new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "dot-action", 
  "dot-action", -1460119601), new cljs.core.Keyword("cljs.analyzer", "call", "cljs.analyzer/call", 964149800), new cljs.core.Keyword(null, "target", "target", 253001721), a, new cljs.core.Keyword(null, "method", "method", 55703592), cljs.core.first.call(null, b), new cljs.core.Keyword(null, "args", "args", 1315556576), c], null);
};
cljs.core._add_method.call(null, cljs.analyzer.build_dot_form, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889), new cljs.core.Keyword("cljs.analyzer", "symbol", "cljs.analyzer/symbol", 933248902), new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889)], null), function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  a = cljs.core.nth.call(null, a, 2, null);
  return cljs.analyzer.build_method_call.call(null, b, c, a);
});
cljs.core._add_method.call(null, cljs.analyzer.build_dot_form, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889), new cljs.core.Keyword("cljs.analyzer", "symbol", "cljs.analyzer/symbol", 933248902), cljs.core.List.EMPTY], null), function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  a = cljs.core.nth.call(null, a, 2, null);
  return cljs.analyzer.build_method_call.call(null, b, c, a);
});
cljs.core._add_method.call(null, cljs.analyzer.build_dot_form, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889), new cljs.core.Keyword("cljs.analyzer", "list", "cljs.analyzer/list", -539585923), cljs.core.List.EMPTY], null), function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null);
  cljs.core.nth.call(null, a, 2, null);
  return cljs.analyzer.build_method_call.call(null, b, cljs.core.first.call(null, c), cljs.core.rest.call(null, c));
});
cljs.core._add_method.call(null, cljs.analyzer.build_dot_form, new cljs.core.Keyword(null, "default", "default", -1987822328), function(a) {
  throw Error(["Unknown dot form of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), a)), " with classification ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.classify_dot_form.call(null, a))].join(""));
});
cljs.analyzer.analyze_dot = function(a, b, c, d, e) {
  var f = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c, d], null), g = cljs.analyzer.build_dot_form.call(null, f), h = null != g && (g.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === g.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, g) : g, k = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "dot-action", "dot-action", -1460119601)), l = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "target", 
  "target", 253001721));
  b = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "method", "method", 55703592));
  d = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "field", "field", -1302436500));
  var m = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "args", "args", 1315556576)), n = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291));
  c = cljs.analyzer.analyze.call(null, n, l);
  var p = cljs.core.meta.call(null, e), q = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(c), r = cljs.core.truth_(d) ? d : b, t = function() {
    var a = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p);
    if (cljs.core.truth_(a)) {
      return a;
    }
    a = cljs.analyzer.js_tag_QMARK_.call(null, q);
    a = cljs.core.truth_(a) ? cljs.core.vary_meta.call(null, cljs.analyzer.normalize_js_tag.call(null, q), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null), cljs.core.fnil.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "Object", "Object", 61210754, null)], null)), r) : a;
    return cljs.core.truth_(a) ? a : null;
  }();
  if (!clojure.string.starts_with_QMARK_.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(r)].join(""), "cljs$") && (cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "Object", "Object", 61210754, null), cljs.core.first.call(null, (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t)))) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "infer-warning", "infer-warning", -1600671410), a, new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "warn-type", "warn-type", -790105219), new cljs.core.Keyword(null, "object", "object", 1474613949), new cljs.core.Keyword(null, "form", "form", -1624062471), e, new cljs.core.Keyword(null, "property", "property", -1114278232), r], null)), cljs.core.not_EQ_.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), q))) {
    cljs.core.truth_(function() {
      var a = null == q;
      return a ? a : (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "any", "any", -948528346, null), null], null), null)).call(null, q);
    }()) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "infer-warning", "infer-warning", -1600671410), a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "warn-type", "warn-type", -790105219), new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "form", "form", -1624062471), e], null));
    var u = cljs.core.juxt.call(null, cljs.core.butlast, cljs.core.identity).call(null, (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t))), v = cljs.core.nth.call(null, u, 0, null), w = cljs.core.nth.call(null, u, 1, null);
    cljs.core.truth_(function() {
      var a = cljs.analyzer.has_extern_QMARK_.call(null, v);
      return cljs.core.truth_(a) ? cljs.core.not.call(null, cljs.analyzer.has_extern_QMARK_.call(null, w)) : a;
    }()) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "infer-warning", "infer-warning", -1600671410), a, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "warn-type", "warn-type", -790105219), new cljs.core.Keyword(null, "property", "property", -1114278232), new cljs.core.Keyword(null, "form", "form", -1624062471), e, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.symbol.call(null, "js", clojure.string.join.call(null, ".", cljs.core._EQ_.call(null, 
    new cljs.core.Symbol(null, "prototype", "prototype", 519166522, null), cljs.core.last.call(null, v)) ? cljs.core.butlast.call(null, v) : v)), new cljs.core.Keyword(null, "property", "property", -1114278232), r], null));
  }
  cljs.core.truth_(cljs.analyzer.js_tag_QMARK_.call(null, t)) && (u = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t)), cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.call(null, u)) || cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, cljs.core.into.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", 
  "cljs.analyzer/namespaces", -260788927), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Keyword(null, "externs", "externs", 221720677)], null), u), cljs.core.merge, cljs.core.PersistentArrayMap.EMPTY));
  u = k instanceof cljs.core.Keyword ? k.fqn : null;
  switch(u) {
    case "cljs.analyzer/access":
      return f = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "dot", "dot", 1442709401), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), e, new cljs.core.Keyword(null, "target", "target", 253001721), c, new cljs.core.Keyword(null, "field", "field", -1302436500), 
      d, new cljs.core.Keyword(null, "children", "children", -940561982), f, new cljs.core.Keyword(null, "tag", "tag", -1290361223), cljs.core.truth_(cljs.analyzer.js_tag_QMARK_.call(null, t)) ? function() {
        var a = cljs.analyzer.js_tag.call(null, (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t)), new cljs.core.Keyword(null, "tag", "tag", -1290361223));
        return cljs.core.truth_(a) ? a : t;
      }() : t], null);
    case "cljs.analyzer/call":
      return d = cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, m, a);
        };
      }(k, u, f, g, h, k, l, b, d, m, n, c, p, q, r, t), m), f = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), d), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "dot", "dot", 1442709401), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), e, new cljs.core.Keyword(null, "target", "target", 
      253001721), c, new cljs.core.Keyword(null, "method", "method", 55703592), b, new cljs.core.Keyword(null, "args", "args", 1315556576), d, new cljs.core.Keyword(null, "children", "children", -940561982), f, new cljs.core.Keyword(null, "tag", "tag", -1290361223), cljs.core.truth_(cljs.analyzer.js_tag_QMARK_.call(null, t)) ? function() {
        var a = cljs.analyzer.js_tag.call(null, (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, t)), new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990));
        return cljs.core.truth_(a) ? a : new cljs.core.Symbol(null, "js", "js", -886355190, null);
      }() : t], null);
    default:
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(u)].join(""));
  }
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, ".", ".", 1975675962, null), function(a, b, c, d, e) {
  a = cljs.core.seq.call(null, c);
  cljs.core.first.call(null, a);
  d = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  e = cljs.core.seq.call(null, d);
  d = cljs.core.first.call(null, e);
  e = cljs.core.next.call(null, e);
  var f = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_dot.call(null, b, a, d, e, c);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = f;
  }
});
cljs.analyzer.get_js_tag = function(a) {
  a = cljs.core.meta.call(null, a);
  var b = (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(a);
  return null == b ? !0 === (new cljs.core.Keyword(null, "numeric", "numeric", -1495594714)).cljs$core$IFn$_invoke$arity$1(a) ? new cljs.core.Symbol(null, "number", "number", -1084057331, null) : null : b;
};
cljs.analyzer.js_star_interp = function(a, b) {
  var c = b.indexOf("~{");
  if (-1 === c) {
    return new cljs.core.List(null, b, null, 1, null);
  }
  var d = b.indexOf("}", c), e = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var.call(null, a, cljs.core.symbol.call(null, cljs.core.subs.call(null, b, 2 + c, d))));
  return new cljs.core.LazySeq(null, function(c, d, e) {
    return function() {
      return cljs.core.cons.call(null, cljs.core.subs.call(null, b, 0, e), cljs.core.cons.call(null, d, cljs.analyzer.js_star_interp.call(null, a, cljs.core.subs.call(null, b, c + 1))));
    };
  }(d, e, c), null, null);
};
cljs.analyzer.js_star_seg = function(a) {
  var b = a.indexOf("~{");
  if (-1 === b) {
    return new cljs.core.List(null, a, null, 1, null);
  }
  var c = a.indexOf("}", b);
  return new cljs.core.LazySeq(null, function(b, c) {
    return function() {
      return cljs.core.cons.call(null, cljs.core.subs.call(null, a, 0, c), cljs.analyzer.js_star_seg.call(null, cljs.core.subs.call(null, a, b + 1)));
    };
  }(c, b), null, null);
};
cljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null, "any", "any", -948528346, null), null, new cljs.core.Symbol(null, "long", "long", 1469079434, null), null, new cljs.core.Symbol(null, "double", "double", -1769548886, null), null, new cljs.core.Symbol(null, "number", "number", -1084057331, null), null], null), null);
cljs.analyzer.numeric_type_QMARK_ = function(a) {
  return null == a ? !0 : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "clj-nil", "clj-nil", 1321798654, null), a) ? !0 : cljs.core.truth_(cljs.analyzer.js_tag_QMARK_.call(null, a)) ? !0 : a instanceof cljs.core.Symbol && null != cljs.core.get.call(null, cljs.analyzer.NUMERIC_SET, a) ? !0 : cljs.analyzer.cljs_set_QMARK_.call(null, a) ? cljs.core.contains_QMARK_.call(null, a, new cljs.core.Symbol(null, "number", "number", -1084057331, null)) || cljs.core.contains_QMARK_.call(null, a, new cljs.core.Symbol(null, 
  "long", "long", 1469079434, null)) || cljs.core.contains_QMARK_.call(null, a, new cljs.core.Symbol(null, "double", "double", -1769548886, null)) || cljs.core.contains_QMARK_.call(null, a, new cljs.core.Symbol(null, "any", "any", -948528346, null)) || cljs.core.contains_QMARK_.call(null, a, new cljs.core.Symbol(null, "js", "js", -886355190, null)) : null;
};
cljs.analyzer.array_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), null, new cljs.core.Symbol(null, "floats", "floats", 513591110, null), null, new cljs.core.Symbol(null, "longs", "longs", -1017696020, null), null, new cljs.core.Symbol(null, "objects", "objects", -554722035, null), null, new cljs.core.Symbol(null, "array", "array", -440182315, null), null, new cljs.core.Symbol(null, "doubles", 
"doubles", -1517872169, null), null, new cljs.core.Symbol(null, "chars", "chars", 545901210, null), null, new cljs.core.Symbol(null, "ints", "ints", -1761239845, null), null, new cljs.core.Symbol(null, "shorts", "shorts", 107738238, null), null, new cljs.core.Symbol(null, "bytes", "bytes", -1478569089, null), null], null), null);
cljs.analyzer.array_type_QMARK_ = function(a) {
  return null == a ? !0 : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "clj-nil", "clj-nil", 1321798654, null), a) ? !0 : cljs.core.truth_(cljs.analyzer.js_tag_QMARK_.call(null, a)) ? !0 : cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "any", "any", -948528346, null), a) ? !0 : cljs.core.contains_QMARK_.call(null, cljs.analyzer.array_types, a) ? !0 : cljs.core.boolean$.call(null, cljs.analyzer.cljs_set_QMARK_.call(null, a) ? function() {
    var b = cljs.core.contains_QMARK_.call(null, a, new cljs.core.Symbol(null, "any", "any", -948528346, null));
    return b ? b : (b = cljs.core.contains_QMARK_.call(null, a, new cljs.core.Symbol(null, "js", "js", -886355190, null))) ? b : cljs.core.some.call(null, cljs.analyzer.array_types, a);
  }() : null);
};
cljs.analyzer.analyze_js_star_STAR_ = function(a, b, c, d) {
  var e = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291));
  c = cljs.core.vec.call(null, cljs.core.map.call(null, function(a) {
    return function(b) {
      return cljs.analyzer.analyze.call(null, a, b);
    };
  }(e), c));
  var f = cljs.core.meta.call(null, d);
  b = cljs.analyzer.js_star_seg.call(null, b);
  var g = cljs.analyzer.get_js_tag.call(null, d), h = (new cljs.core.Keyword(null, "js-op", "js-op", -1046277897)).cljs$core$IFn$_invoke$arity$1(f), k = (new cljs.core.Keyword(null, "numeric", "numeric", -1495594714)).cljs$core$IFn$_invoke$arity$1(f), l = function(b, c, d, e, f, g, h) {
    return function(k, l) {
      var m = cljs.core.map.call(null, function(b, c, d, e, f, g, h) {
        return function(b) {
          return cljs.analyzer.infer_tag.call(null, a, b);
        };
      }(b, c, d, e, f, g, h), c);
      return cljs.core.truth_(l.call(null, m)) ? null : cljs.analyzer.warning.call(null, k, a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "js-op", "js-op", -1046277897), g, new cljs.core.Keyword(null, "types", "types", 590030639), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, m)], null));
    };
  }(e, c, f, b, g, h, k), m = function(a, b, c, d, e, f, g, h) {
    return function(a) {
      return cljs.core.symbol_identical_QMARK_.call(null, a, (new cljs.core.Keyword(null, "js-op", "js-op", -1046277897)).cljs$core$IFn$_invoke$arity$1(c));
    };
  }(e, c, f, b, g, h, k, l);
  !0 === k && l.call(null, new cljs.core.Keyword(null, "invalid-arithmetic", "invalid-arithmetic", 1917075065), function(a, b, c, d, e, f, g, h, k) {
    return function(a) {
      return cljs.core.every_QMARK_.call(null, cljs.analyzer.numeric_type_QMARK_, a);
    };
  }(e, c, f, b, g, h, k, l, m));
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "args", "args", 1315556576), new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.Keyword(null, "numeric", "numeric", -1495594714), new cljs.core.Keyword(null, "segs", "segs", -1940299576), new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "env", "env", -1815813235), new cljs.core.Keyword(null, "js-op", "js-op", -1046277897), new cljs.core.Keyword(null, "form", "form", 
  -1624062471), new cljs.core.Keyword(null, "tag", "tag", -1290361223)], [c, c, k, b, new cljs.core.Keyword(null, "js", "js", 1768080579), a, h, d, g]);
};
cljs.analyzer.analyze_js_star = function(a, b, c, d) {
  var e = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_js_star_STAR_.call(null, a, b, c, d);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = e;
  }
};
cljs.core._add_method.call(null, cljs.analyzer.parse, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), function(a, b, c, d, e) {
  a = cljs.core.seq.call(null, c);
  cljs.core.first.call(null, a);
  d = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  if ("string" !== typeof a) {
    throw cljs.analyzer.error.call(null, b, "Invalid js* form");
  }
  if (null != d) {
    return cljs.analyzer.analyze_js_star.call(null, b, a, d, c);
  }
  a = cljs.core.apply.call(null, cljs.core.str, cljs.analyzer.js_star_interp.call(null, b, a));
  d = cljs.analyzer.get_js_tag.call(null, c);
  var f = cljs.core.meta.call(null, c);
  e = (new cljs.core.Keyword(null, "js-op", "js-op", -1046277897)).cljs$core$IFn$_invoke$arity$1(f);
  f = (new cljs.core.Keyword(null, "numeric", "numeric", -1495594714)).cljs$core$IFn$_invoke$arity$1(f);
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "js", "js", 1768080579), new cljs.core.Keyword(null, "env", "env", -1815813235), b, new cljs.core.Keyword(null, "form", "form", -1624062471), c, new cljs.core.Keyword(null, "code", "code", 1586293142), a, new cljs.core.Keyword(null, "tag", "tag", -1290361223), d, new cljs.core.Keyword(null, "js-op", "js-op", -1046277897), e, new cljs.core.Keyword(null, "numeric", "numeric", 
  -1495594714), f], null);
});
cljs.analyzer.analyzed = function(a) {
  return cljs.core.vary_meta.call(null, a, cljs.core.assoc, new cljs.core.Keyword("cljs.analyzer", "analyzed", "cljs.analyzer/analyzed", -735094162), !0);
};
cljs.analyzer.analyzed_QMARK_ = function(a) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword("cljs.analyzer", "analyzed", "cljs.analyzer/analyzed", -735094162)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a)));
};
cljs.analyzer.all_values_QMARK_ = function(a) {
  return cljs.core.every_QMARK_.call(null, function(a) {
    return null == a || a instanceof cljs.core.Symbol || "string" === typeof a || "number" === typeof a || !0 === a || !1 === a;
  }, a);
};
cljs.analyzer.valid_arity_QMARK_ = function(a, b) {
  return cljs.core.boolean$.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([a]), cljs.core.map.call(null, cljs.core.count, b)));
};
cljs.analyzer.parse_invoke_STAR_ = function(a, b) {
  var c = cljs.core.seq.call(null, b), d = cljs.core.first.call(null, c), e = cljs.core.next.call(null, c), f = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), g = cljs.analyzer.analyze.call(null, f, d), h = cljs.core.count.call(null, e), k = (new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(g)), 
  l = cljs.core._EQ_.call(null, new cljs.core.Symbol("cljs.core", "Keyword", "cljs.core/Keyword", -451434488, null), (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(g)), m = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a)), n = cljs.core.boolean$.call(null, cljs.analyzer._STAR_cljs_static_fns_STAR_) && cljs.core.not.call(null, k) && cljs.core.not.call(null, 
  cljs.analyzer.js_tag_QMARK_.call(null, d)) && !l && !cljs.analyzer.analyzed_QMARK_.call(null, d), p = n && !(d instanceof cljs.core.Symbol), q = n && !cljs.analyzer.all_values_QMARK_.call(null, e);
  if (cljs.core.truth_(k)) {
    var r = (new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(g);
    r = null != r && (r.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === r.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, r) : r;
    var t = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "variadic", "variadic", 882626057)), u = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543)), v = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "method-params", "method-params", -980792179)), w = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "name", "name", 1843675177)), x = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "ns", "ns", 441598760)), y = 
    cljs.core.get.call(null, r, new cljs.core.Keyword(null, "macro", "macro", -867863404));
    cljs.core.not.call(null, function() {
      var a = goog.string.endsWith([cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), "$macros");
      return cljs.core.truth_(a) ? cljs.core.symbol_identical_QMARK_.call(null, m, x) && !0 === y : a;
    }()) && !cljs.analyzer.valid_arity_QMARK_.call(null, h, v) && (!t || t && h < u) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "fn-arity", "fn-arity", -403576501), a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), w, new cljs.core.Keyword(null, "argc", "argc", -1452839519), h], null));
  }
  l && 1 !== h && 2 !== h && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "fn-arity", "fn-arity", -403576501), a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.first.call(null, b), new cljs.core.Keyword(null, "argc", "argc", -1452839519), h], null));
  r = (new cljs.core.Keyword(null, "deprecated", "deprecated", 1498275348)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(g));
  t = (new cljs.core.Keyword(null, "deprecation-nowarn", "deprecation-nowarn", -1762828044)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, b));
  cljs.core.boolean$.call(null, r) && !cljs.core.boolean$.call(null, t) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "fn-deprecated", "fn-deprecated", 626877647), a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fexpr", "fexpr", -122857150), g], null));
  null != (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1(g)) && cljs.analyzer.warning.call(null, new cljs.core.Keyword(null, "invoke-ctor", "invoke-ctor", -756052704), a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fexpr", "fexpr", -122857150), g], null));
  if (q || p) {
    var z = q ? cljs.core.take.call(null, h, cljs.core.repeatedly.call(null, cljs.core.gensym)) : null, F = p ? cljs.core.gensym.call(null, "fexpr__") : null;
    b = function() {
      var a = cljs.core.PersistentVector.EMPTY;
      a = q ? cljs.core.into.call(null, a, cljs.core.interleave.call(null, z, e)) : a;
      return p ? cljs.core.conj.call(null, a, F, cljs.analyzer.analyzed.call(null, d)) : a;
    }();
    return cljs.analyzer.analyze.call(null, a, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, b)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
    new cljs.core.List(null, cljs.analyzer.analyzed.call(null, p ? F : d), null, 1, null), q ? z : e))), null, 1, null)))));
  }
  c = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    return function(b) {
      return cljs.analyzer.analyze.call(null, a, b);
    };
  }(f, g, h, k, l, m, n, p, q, b, c, d, e, d, e, b);
  c = cljs.core.map.call(null, c, e);
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "invoke", "invoke", 1145927159), new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "f", "f", -1597136552), g, new cljs.core.Keyword(null, "args", "args", 1315556576), cljs.core.vec.call(null, c), new cljs.core.Keyword(null, "children", "children", -940561982), cljs.core.into.call(null, 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null), c)], null);
};
cljs.analyzer.parse_invoke = function(a, b) {
  var c = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.parse_invoke_STAR_.call(null, a, b);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = c;
  }
};
cljs.analyzer.analyze_symbol = function(a, b) {
  if ((new cljs.core.Keyword(null, "quoted?", "quoted?", 1464649621)).cljs$core$IFn$_invoke$arity$1(a)) {
    return cljs.analyzer.register_constant_BANG_.call(null, a, b), cljs.analyzer.analyze_wrap_meta.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "constant", "constant", -379609303), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core", "Symbol", "cljs.core/Symbol", 
    292989338, null)], null));
  }
  var c = cljs.core.meta.call(null, b), d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "line", "line", 212345235));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "column", "column", 2078222095));
  a = null != c ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235), c) : a;
  c = null != d ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "column", "column", 2078222095), d) : a;
  a = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "env", "env", -1815813235), c, new cljs.core.Keyword(null, "form", "form", -1624062471), b], null);
  d = (new cljs.core.Keyword(null, "locals", "locals", 535295783)).cljs$core$IFn$_invoke$arity$1(c);
  d = cljs.core.get.call(null, d, b);
  if (null == d) {
    d = cljs.core.meta.call(null, b);
    var e = cljs.core.namespace.call(null, b), f = [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(c)))].join("");
    b = cljs.core.truth_(function() {
      if (cljs.core.truth_(e)) {
        var a = cljs.core.not_EQ_.call(null, e, "cljs.core");
        return a ? (a = goog.string.endsWith(f, "$macros"), cljs.core.truth_(a) ? cljs.core.not.call(null, goog.string.endsWith(e, "$macros")) && cljs.core._EQ_.call(null, e, cljs.core.subs.call(null, f, 0, cljs.core.count.call(null, f) - 7)) : a) : a;
      }
      return e;
    }()) ? cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), "$macros"].join(""), cljs.core.name.call(null, b)) : b;
    var g = cljs.core.contains_QMARK_.call(null, d, new cljs.core.Keyword("cljs.analyzer", "analyzed", "cljs.analyzer/analyzed", -735094162)) ? cljs.analyzer.resolve_var.call(null, c, b) : cljs.analyzer.resolve_existing_var.call(null, c, b);
    if (!0 !== (new cljs.core.Keyword(null, "def-var", "def-var", -698214377)).cljs$core$IFn$_invoke$arity$1(c)) {
      return cljs.core.merge.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "var", "var", -769682797), new cljs.core.Keyword(null, "info", "info", -317069002), g), function() {
        var a = (new cljs.core.Keyword(null, "const-expr", "const-expr", -1379382292)).cljs$core$IFn$_invoke$arity$1(g);
        return cljs.core.truth_(a) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "const-expr", "const-expr", -1379382292), a], null) : null;
      }());
    }
    b = cljs.analyzer.resolve_var.call(null, c, b);
    return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "var", "var", -769682797), new cljs.core.Keyword(null, "info", "info", -317069002), b);
  }
  return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "var", "var", -769682797), new cljs.core.Keyword(null, "info", "info", -317069002), d);
};
cljs.analyzer.excluded_QMARK_ = function(a, b) {
  return null != cljs.analyzer.gets.call(null, a, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), b) || null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), cljs.analyzer.gets.call(null, a, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177)), 
  new cljs.core.Keyword(null, "excludes", "excludes", -1791725945), b);
};
cljs.analyzer.used_QMARK_ = function(a, b) {
  return null != cljs.analyzer.gets.call(null, a, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), b) || null != cljs.analyzer.gets.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), cljs.analyzer.gets.call(null, a, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177)), 
  new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), b);
};
cljs.analyzer.get_expander_ns = function(a, b) {
  var c = cljs.analyzer.resolve_macro_ns_alias.call(null, a, b, null);
  c = cljs.core.truth_(c) ? c : cljs.analyzer.resolve_ns_alias.call(null, a, b, null);
  b = null != c ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("") : b;
  if ("clojure.core" === b) {
    return cljs.core.find_macros_ns.call(null, cljs.analyzer.CLJS_CORE_MACROS_SYM);
  }
  if ("clojure.repl" === b) {
    return cljs.core.find_macros_ns.call(null, new cljs.core.Symbol(null, "cljs.repl", "cljs.repl", 1767065658, null));
  }
  if (cljs.core.truth_(goog.string.contains(b, "."))) {
    return cljs.core.find_macros_ns.call(null, cljs.core.symbol.call(null, b));
  }
  a = null == a ? null : (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(a);
  a = null == a ? null : (new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416)).cljs$core$IFn$_invoke$arity$1(a);
  a = null == a ? null : cljs.core.get.call(null, a, cljs.core.symbol.call(null, b));
  return null == a ? null : cljs.core.find_macros_ns.call(null, a);
};
cljs.analyzer.get_expander_STAR_ = function(a, b) {
  if (null != cljs.analyzer.gets.call(null, b, new cljs.core.Keyword(null, "locals", "locals", 535295783), a) || cljs.analyzer.excluded_QMARK_.call(null, b, a) && !cljs.analyzer.used_QMARK_.call(null, b, a)) {
    return null;
  }
  var c = cljs.core.namespace.call(null, a);
  if (null != c) {
    return b = cljs.analyzer.get_expander_ns.call(null, b, c), null != b ? b.findInternedVar(cljs.core.symbol.call(null, cljs.core.name.call(null, a))) : null;
  }
  if (null != cljs.analyzer.gets.call(null, b, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512), a)) {
    return a = cljs.analyzer.gets.call(null, b, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "rename-macros", "rename-macros", 1076432512), a), b = cljs.core.symbol.call(null, cljs.core.namespace.call(null, a)), a = cljs.core.symbol.call(null, cljs.core.name.call(null, a)), cljs.core.find_macros_ns.call(null, b).findInternedVar(a);
  }
  b = cljs.analyzer.gets.call(null, b, new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393), a);
  return null != b && b instanceof cljs.core.Symbol ? cljs.core.find_macros_ns.call(null, b).findInternedVar(a) : cljs.core.find_macros_ns.call(null, cljs.analyzer.CLJS_CORE_MACROS_SYM).findInternedVar(a);
};
cljs.analyzer.get_expander = function(a, b) {
  a = cljs.analyzer.get_expander_STAR_.call(null, a, b);
  return null != a && a.isMacro() ? a : null;
};
var cached_var_17466 = new cljs.core.Delay(function() {
  return cljs.core.get.call(null, cljs.core.ns_interns_STAR_.call(null, new cljs.core.Symbol(null, "cljs.spec.alpha", "cljs.spec.alpha", 505122844, null)), new cljs.core.Symbol(null, "macroexpand-check", "macroexpand-check", 699092091, null));
}, null);
cljs.analyzer.get_macroexpand_check_var = function(a) {
  return function() {
    return null != cljs.core.find_ns_obj.call(null, new cljs.core.Symbol(null, "cljs.spec.alpha", "cljs.spec.alpha", 505122844, null)) ? cljs.core.deref.call(null, a) : null;
  };
}(cached_var_17466);
cljs.analyzer.do_macroexpand_check = function(a, b) {
  var c = cljs.analyzer.get_macroexpand_check_var.call(null);
  return null != c ? c.call(null, b, cljs.core.next.call(null, a)) : null;
};
cljs.analyzer.macroexpand_1_STAR_ = function(a, b) {
  var c = cljs.core.first.call(null, b);
  if (cljs.core.contains_QMARK_.call(null, cljs.analyzer.specials, c)) {
    return cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), c) && cljs.analyzer.do_macroexpand_check.call(null, b, cljs.analyzer.get_expander.call(null, new cljs.core.Symbol("cljs.core", "ns-special-form", "cljs.core/ns-special-form", 1585185745, null), a)), b;
  }
  var d = c instanceof cljs.core.Symbol ? cljs.analyzer.get_expander.call(null, c, a) : null;
  if (null == d) {
    return c instanceof cljs.core.Symbol ? (d = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""), "." === d.charAt(0) ? (a = cljs.core.next.call(null, b), c = cljs.core.seq.call(null, a), a = cljs.core.first.call(null, c), c = cljs.core.next.call(null, c), cljs.core.with_meta.call(null, cljs.core.list_STAR_.call(null, cljs.analyzer.DOT_SYM, a, cljs.core.symbol.call(null, cljs.core.subs.call(null, d, 1)), c), cljs.core.meta.call(null, b))) : "." === d.charAt(d.length - 1) ? cljs.core.with_meta.call(null, 
    cljs.core.list_STAR_.call(null, cljs.analyzer.NEW_SYM, cljs.core.symbol.call(null, cljs.core.subs.call(null, d, 0, cljs.core.count.call(null, d) - 1)), cljs.core.next.call(null, b)), cljs.core.meta.call(null, b)) : b) : b;
  }
  cljs.analyzer.do_macroexpand_check.call(null, b, d);
  a = cljs.core.apply.call(null, cljs.core.deref.call(null, d), b, a, cljs.core.rest.call(null, b));
  return cljs.analyzer.cljs_seq_QMARK_.call(null, a) && (c = cljs.core.first.call(null, a), b = cljs.core.first.call(null, b), cljs.core.symbol_identical_QMARK_.call(null, c, cljs.analyzer.JS_STAR_SYM)) ? (b = null != cljs.core.namespace.call(null, b) ? b : cljs.core.symbol.call(null, "cljs.core", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("")), b = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "js-op", "js-op", -1046277897), b], null), c = cljs.core.symbol.call(null, 
  cljs.core.namespace.call(null, d.sym)), d = cljs.core.symbol.call(null, cljs.core.name.call(null, d.sym)), b = !0 === cljs.core.get_in.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), c, new cljs.core.Keyword(null, "defs", "defs", 1398449717), d, new cljs.core.Keyword(null, "meta", "meta", 1499536964), 
  new cljs.core.Keyword("cljs.analyzer", "numeric", "cljs.analyzer/numeric", 1415704188)], null)) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "numeric", "numeric", -1495594714), !0) : b, cljs.core.vary_meta.call(null, a, cljs.core.merge, b)) : a;
};
cljs.analyzer.macroexpand_1 = function(a, b) {
  var c = cljs.env._STAR_compiler_STAR_;
  null == c && (cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.call(null));
  try {
    try {
      return cljs.analyzer.macroexpand_1_STAR_.call(null, a, b);
    } catch (d) {
      b = d;
      if (cljs.analyzer.analysis_error_QMARK_.call(null, b)) {
        throw b;
      }
      throw cljs.analyzer.error.call(null, a, b.message, b);
    }
  } finally {
    null == c && (cljs.env._STAR_compiler_STAR_ = null);
  }
};
cljs.analyzer.analyze_seq_STAR_ = function(a, b, c, d, e) {
  return cljs.core.contains_QMARK_.call(null, cljs.analyzer.specials, a) ? cljs.analyzer.parse.call(null, a, b, c, d, e) : cljs.analyzer.parse_invoke.call(null, b, c);
};
cljs.analyzer.analyze_seq_STAR__wrap = function(a, b, c, d, e) {
  try {
    return cljs.analyzer.analyze_seq_STAR_.call(null, a, b, c, d, e);
  } catch (f) {
    a = f;
    if (cljs.analyzer.analysis_error_QMARK_.call(null, a)) {
      throw a;
    }
    throw cljs.analyzer.error.call(null, b, a.message, a);
  }
};
cljs.analyzer.analyze_seq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.analyzer.analyze_seq.call(null, a, b, c, cljs.core.truth_(cljs.env._STAR_compiler_STAR_) ? (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)) : null);
};
cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if ((new cljs.core.Keyword(null, "quoted?", "quoted?", 1464649621)).cljs$core$IFn$_invoke$arity$1(a)) {
    return cljs.analyzer.analyze_list.call(null, a, b);
  }
  var e = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, b));
  e = null == e ? (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(a) : e;
  var f = (new cljs.core.Keyword(null, "column", "column", 2078222095)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, b));
  f = null == f ? (new cljs.core.Keyword(null, "column", "column", 2078222095)).cljs$core$IFn$_invoke$arity$1(a) : f;
  a = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235), e, new cljs.core.Keyword(null, "column", "column", 2078222095), f);
  e = cljs.core.first.call(null, b);
  if (null == e) {
    throw cljs.analyzer.error.call(null, a, "Can't call nil");
  }
  f = cljs.analyzer.macroexpand_1.call(null, a, b);
  return b === f ? cljs.analyzer.analyze_seq_STAR__wrap.call(null, e, a, b, c, d) : cljs.analyzer.analyze.call(null, a, f, c, d);
};
cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4;
cljs.analyzer.analyze_map = function(a, b) {
  var c = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), d = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec.call(null, cljs.core.map.call(null, function(a, b) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, b, a);
        };
      }(a, c), cljs.core.keys.call(null, b)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }(), e = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec.call(null, cljs.core.map.call(null, function(a, b, c) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, b, a);
        };
      }(a, c, d), cljs.core.vals.call(null, b)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  return cljs.analyzer.analyze_wrap_meta.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "keys", "keys", 1068423698), d, new cljs.core.Keyword(null, "vals", "vals", 768058733), e, new cljs.core.Keyword(null, "children", "children", -940561982), 
  cljs.core.vec.call(null, cljs.core.interleave.call(null, d, e)), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core", "IMap", "cljs.core/IMap", 1407777598, null)], null));
};
cljs.analyzer.analyze_list = function(a, b) {
  var c = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), d = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.call(null, cljs.core.map.call(null, function(a, b) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, b, a);
        };
      }(a, c), b));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  return cljs.analyzer.analyze_wrap_meta.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "list", "list", 765357683), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "items", "items", 1031954938), d, new cljs.core.Keyword(null, "children", "children", -940561982), d, new cljs.core.Keyword(null, "tag", "tag", -1290361223), 
  new cljs.core.Symbol("cljs.core", "IList", "cljs.core/IList", 1015168964, null)], null));
};
cljs.analyzer.analyze_vector = function(a, b) {
  var c = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), d = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec.call(null, cljs.core.map.call(null, function(a, b) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, b, a);
        };
      }(a, c), b));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  return cljs.analyzer.analyze_wrap_meta.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "items", "items", 1031954938), d, new cljs.core.Keyword(null, "children", "children", -940561982), d, new cljs.core.Keyword(null, "tag", "tag", 
  -1290361223), new cljs.core.Symbol("cljs.core", "IVector", "cljs.core/IVector", 1711112835, null)], null));
};
cljs.analyzer.analyze_set = function(a, b) {
  var c = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), d = function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec.call(null, cljs.core.map.call(null, function(a, b) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, b, a);
        };
      }(a, c), b));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  return cljs.analyzer.analyze_wrap_meta.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "items", "items", 1031954938), d, new cljs.core.Keyword(null, "children", "children", -940561982), d, new cljs.core.Keyword(null, "tag", "tag", -1290361223), 
  new cljs.core.Symbol("cljs.core", "ISet", "cljs.core/ISet", 2003412810, null)], null));
};
cljs.analyzer.analyze_js_value = function(a, b) {
  var c = b.val, d = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), e = cljs.core.map_QMARK_.call(null, c) ? cljs.core.zipmap.call(null, cljs.core.keys.call(null, c), function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.call(null, cljs.core.map.call(null, function(a, b, c) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, c, a);
        };
      }(a, c, d), cljs.core.vals.call(null, c)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }()) : function() {
    var a = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.call(null, cljs.core.map.call(null, function(a, b, c) {
        return function(a) {
          return cljs.analyzer.analyze.call(null, c, a);
        };
      }(a, c, d), c));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = a;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "js-value", "js-value", -758336661), new cljs.core.Keyword(null, "js-type", "js-type", 539386702), cljs.core.map_QMARK_.call(null, c) ? new cljs.core.Keyword(null, "object", "object", 1474613949) : new cljs.core.Keyword(null, "array", "array", -2080713842), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), 
  b, new cljs.core.Keyword(null, "items", "items", 1031954938), e, new cljs.core.Keyword(null, "children", "children", -940561982), e, new cljs.core.Keyword(null, "tag", "tag", -1290361223), cljs.core.map_QMARK_.call(null, c) ? new cljs.core.Symbol(null, "object", "object", -1179821820, null) : new cljs.core.Symbol(null, "array", "array", -440182315, null)], null);
};
cljs.analyzer.analyze_record = function(a, b) {
  a: {
    var c = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons.call(null, null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var d = cljs.analyzer.analyze.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b));
      break a;
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = c;
    }
    d = void 0;
  }
  var e = cljs.core.map.call(null, cljs.core.symbol, clojure.string.split.call(null, cljs.core.pr_str.call(null, cljs.core.type.call(null, b)), /\//));
  c = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "record-value", "record-value", -367500392), new cljs.core.Keyword(null, "ns", "ns", 441598760), c, new cljs.core.Keyword(null, "name", "name", 1843675177), e, new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "items", "items", 1031954938), d, new cljs.core.Keyword(null, 
  "children", "children", -940561982), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null), new cljs.core.Keyword(null, "tag", "tag", -1290361223), cljs.core.symbol.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""))], null);
};
cljs.analyzer.elide_reader_meta = function(a) {
  return cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "source", "source", -433931539));
};
cljs.analyzer.elide_analyzer_meta = function(a) {
  return cljs.core.dissoc.call(null, a, new cljs.core.Keyword("cljs.analyzer", "analyzed", "cljs.analyzer/analyzed", -735094162));
};
cljs.analyzer.analyze_wrap_meta = function(a) {
  var b = (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(a), c = cljs.analyzer.elide_analyzer_meta.call(null, cljs.analyzer.elide_reader_meta.call(null, cljs.core.meta.call(null, b)));
  if (null != cljs.core.seq.call(null, c)) {
    var d = (new cljs.core.Keyword(null, "env", "env", -1815813235)).cljs$core$IFn$_invoke$arity$1(a);
    a = cljs.core.assoc_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "env", "env", -1815813235), new cljs.core.Keyword(null, "context", "context", -830191113)], null), new cljs.core.Keyword(null, "expr", "expr", 745722291));
    c = cljs.analyzer.analyze_map.call(null, (new cljs.core.Keyword(null, "env", "env", -1815813235)).cljs$core$IFn$_invoke$arity$1(a), c);
    return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.Keyword(null, "env", "env", -1815813235), d, new cljs.core.Keyword(null, "form", "form", -1624062471), b, new cljs.core.Keyword(null, "meta", "meta", 1499536964), c, new cljs.core.Keyword(null, "expr", "expr", 745722291), a, new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, a], null)], null);
  }
  return a;
};
cljs.analyzer.infer_type = function(a, b, c) {
  return null == (new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(b) ? (a = cljs.analyzer.infer_tag.call(null, a, b), null == a ? b : cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "tag", "tag", -1290361223), a)) : b;
};
cljs.analyzer.repl_self_require_QMARK_ = function(a, b) {
  a = (new cljs.core.Keyword(null, "repl-env", "repl-env", -1976503928)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(a) ? cljs.core.some.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.analyzer._STAR_cljs_ns_STAR_]), b) : a;
};
cljs.analyzer.invoke_arg_type_validators = function() {
  var a = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "valid?", "valid?", -212412379), function(a) {
    return cljs.analyzer.array_type_QMARK_.call(null, cljs.core.first.call(null, a)) && cljs.core.every_QMARK_.call(null, cljs.analyzer.numeric_type_QMARK_, cljs.core.rest.call(null, a));
  }, new cljs.core.Keyword(null, "warning-type", "warning-type", 1711103595), new cljs.core.Keyword(null, "invalid-array-access", "invalid-array-access", -1747132236)], null), b = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "valid?", "valid?", -212412379), function(a) {
    return function(a) {
      return cljs.analyzer.array_type_QMARK_.call(null, cljs.core.first.call(null, a)) && cljs.core.every_QMARK_.call(null, cljs.analyzer.numeric_type_QMARK_, cljs.core.butlast.call(null, cljs.core.rest.call(null, a)));
    };
  }(a), new cljs.core.Keyword(null, "warning-type", "warning-type", 1711103595), new cljs.core.Keyword(null, "invalid-array-access", "invalid-array-access", -1747132236)], null);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core", "checked-aget", "cljs.core/checked-aget", 24024561, null), a, new cljs.core.Symbol("cljs.core", "checked-aset", "cljs.core/checked-aset", -2080232353, null), b, new cljs.core.Symbol("cljs.core", "checked-aget'", "cljs.core/checked-aget'", 1960922245, null), a, new cljs.core.Symbol("cljs.core", "checked-aset'", "cljs.core/checked-aset'", 163859714, null), b], null);
}();
cljs.analyzer.check_invoke_arg_types = function(a, b, c) {
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "op", "op", -1882987955));
  if (!cljs.analyzer.analyzed_QMARK_.call(null, b) && cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword(null, "invoke", "invoke", 1145927159), c)) {
    var d = cljs.core.find.call(null, cljs.analyzer.invoke_arg_type_validators, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "info", "info", -317069002)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(b))));
    if (null != d) {
      c = cljs.core.nth.call(null, d, 0, null);
      d = cljs.core.nth.call(null, d, 1, null);
      var e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
      d = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "valid?", "valid?", -212412379));
      e = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "warning-type", "warning-type", 1711103595));
      var f = cljs.core.mapv.call(null, new cljs.core.Keyword(null, "tag", "tag", -1290361223), (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(b));
      cljs.core.truth_(d.call(null, f)) || cljs.analyzer.warning.call(null, e, a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), c, new cljs.core.Keyword(null, "types", "types", 590030639), f], null));
    }
  }
  return cljs.analyzer.analyzed.call(null, b);
};
cljs.analyzer.analyze_form = function(a, b, c, d) {
  if (b instanceof cljs.core.Symbol) {
    return cljs.analyzer.analyze_symbol.call(null, a, b);
  }
  if (cljs.analyzer.cljs_seq_QMARK_.call(null, b) && null != cljs.core.seq.call(null, b)) {
    return cljs.analyzer.analyze_seq.call(null, a, b, c, d);
  }
  if (cljs.core.record_QMARK_.call(null, b)) {
    return cljs.analyzer.analyze_record.call(null, a, b);
  }
  if (cljs.analyzer.cljs_map_QMARK_.call(null, b)) {
    return cljs.analyzer.analyze_map.call(null, a, b);
  }
  if (cljs.analyzer.cljs_vector_QMARK_.call(null, b)) {
    return cljs.analyzer.analyze_vector.call(null, a, b);
  }
  if (cljs.analyzer.cljs_set_QMARK_.call(null, b)) {
    return cljs.analyzer.analyze_set.call(null, a, b);
  }
  if (b instanceof cljs.core.Keyword) {
    return cljs.analyzer.analyze_keyword.call(null, a, b);
  }
  if (b instanceof cljs.tagged_literals.JSValue) {
    return cljs.analyzer.analyze_js_value.call(null, a, b);
  }
  if (cljs.core._EQ_.call(null, cljs.core.List.EMPTY, b)) {
    return cljs.analyzer.analyze_list.call(null, a, b);
  }
  c = null == b ? cljs.analyzer.CLJ_NIL_SYM : "number" === typeof b ? cljs.analyzer.NUMBER_SYM : "string" === typeof b ? cljs.analyzer.STRING_SYM : !0 === b ? cljs.analyzer.BOOLEAN_SYM : !1 === b ? cljs.analyzer.BOOLEAN_SYM : null;
  a = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "constant", "constant", -379609303), new cljs.core.Keyword(null, "env", "env", -1815813235), a, new cljs.core.Keyword(null, "form", "form", -1624062471), b], null);
  return cljs.core.truth_(c) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "tag", "tag", -1290361223), c) : a;
};
cljs.analyzer.analyze_STAR_ = function(a, b, c, d) {
  var e = cljs.analyzer._STAR_passes_STAR_, f = null == e ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type, cljs.analyzer.check_invoke_arg_types], null) : e;
  b = b instanceof cljs.core.LazySeq ? cljs.core.seq.call(null, b) ? b : cljs.core.List.EMPTY : b;
  c = cljs.analyzer.analyze_form.call(null, a, b, c, d);
  return cljs.core.reduce.call(null, function(b, c, e, f) {
    return function(b, c) {
      return c.call(null, a, b, d);
    };
  }(e, f, b, c), c, f);
};
cljs.analyzer.analyze = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.analyzer.analyze.call(null, a, b, null);
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.analyzer.analyze.call(null, a, b, c, cljs.core.truth_(cljs.env._STAR_compiler_STAR_) ? (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)) : null);
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.env._STAR_compiler_STAR_;
  null == e && (cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.call(null));
  try {
    try {
      var f = cljs.tools.reader._STAR_alias_map_STAR_, g = cljs.tools.reader;
      var h = cljs.tools.reader._STAR_alias_map_STAR_;
      var k = cljs.core.truth_(h) ? h : cljs.core.PersistentArrayMap.EMPTY;
      g._STAR_alias_map_STAR_ = k;
      try {
        if (cljs.analyzer.analyzed_QMARK_.call(null, b)) {
          var l = cljs.analyzer._STAR_cljs_warnings_STAR_;
          cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.zipmap.call(null, cljs.core.keys.call(null, cljs.analyzer._STAR_cljs_warnings_STAR_), cljs.core.repeat.call(null, !1));
          try {
            return cljs.analyzer.analyze_STAR_.call(null, a, b, c, d);
          } finally {
            cljs.analyzer._STAR_cljs_warnings_STAR_ = l;
          }
        } else {
          return cljs.analyzer.analyze_STAR_.call(null, a, b, c, d);
        }
      } finally {
        cljs.tools.reader._STAR_alias_map_STAR_ = f;
      }
    } catch (m) {
      b = m;
      if (cljs.analyzer.analysis_error_QMARK_.call(null, b)) {
        throw b;
      }
      throw cljs.analyzer.error.call(null, a, b.message, b);
    }
  } finally {
    null == e && (cljs.env._STAR_compiler_STAR_ = null);
  }
};
cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4;
cljs.analyzer.add_consts = function(a, b) {
  return cljs.core.reduce_kv.call(null, function(a, b, e) {
    var c = cljs.core.symbol.call(null, cljs.core.namespace.call(null, b));
    return cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), c, new cljs.core.Keyword(null, "defs", "defs", 1398449717), cljs.core.symbol.call(null, cljs.core.name.call(null, b))], null), cljs.core.merge, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "const-expr", "const-expr", -1379382292), function() {
      var a = cljs.analyzer._STAR_passes_STAR_;
      cljs.analyzer._STAR_passes_STAR_ = cljs.core.conj.call(null, cljs.analyzer._STAR_passes_STAR_, cljs.analyzer.replace_env_pass.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "expr", "expr", 745722291)], null)));
      try {
        return cljs.analyzer.analyze.call(null, cljs.analyzer.empty_env.call(null), e);
      } finally {
        cljs.analyzer._STAR_passes_STAR_ = a;
      }
    }()], null));
  }, a, b);
};
cljs.analyzer.resolve_symbol = function(a) {
  return cljs.core.truth_(function() {
    var b = cljs.core.not.call(null, cljs.core.namespace.call(null, a));
    return b ? cljs.analyzer.dotted_symbol_QMARK_.call(null, a) : b;
  }()) ? a : (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.analyzer.get_namespace.call(null, cljs.analyzer._STAR_cljs_ns_STAR_)), a));
};
var registry_ref_17520 = new cljs.core.Delay(function() {
  return cljs.core.get.call(null, cljs.core.ns_interns_STAR_.call(null, new cljs.core.Symbol(null, "cljs.spec.alpha$macros", "cljs.spec.alpha$macros", -896343615, null)), new cljs.core.Symbol(null, "registry-ref", "registry-ref", 1975823941, null));
}, null), speced_vars_17521 = new cljs.core.Delay(function(a) {
  return function() {
    return cljs.core.get.call(null, cljs.core.ns_interns_STAR_.call(null, new cljs.core.Symbol(null, "cljs.spec.alpha$macros", "cljs.spec.alpha$macros", -896343615, null)), new cljs.core.Symbol(null, "-speced-vars", "-speced-vars", 1758723085, null));
  };
}(registry_ref_17520), null);
cljs.analyzer.get_spec_vars = function(a, b) {
  return function() {
    return null != cljs.core.find_ns_obj.call(null, new cljs.core.Symbol(null, "cljs.spec.alpha$macros", "cljs.spec.alpha$macros", -896343615, null)) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "registry-ref", "registry-ref", 335292414), cljs.core.deref.call(null, a), new cljs.core.Keyword(null, "speced-vars", "speced-vars", -1813125988), cljs.core.deref.call(null, b)], null) : null;
  };
}(registry_ref_17520, speced_vars_17521);
cljs.analyzer.dump_specs = function(a) {
  var b = cljs.analyzer.get_spec_vars.call(null), c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  return cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a], null), cljs.core.merge, function() {
    var a = (new cljs.core.Keyword(null, "registry-ref", "registry-ref", 335292414)).cljs$core$IFn$_invoke$arity$1(b);
    return cljs.core.truth_(a) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec", "registry-ref", "cljs.spec/registry-ref", -71711915), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.filter.call(null, function(a, b, c, d) {
      return function(a) {
        var b = cljs.core.nth.call(null, a, 0, null);
        cljs.core.nth.call(null, a, 1, null);
        return cljs.core._EQ_.call(null, d, cljs.core.namespace.call(null, b));
      };
    }(a, a, b, c)), cljs.core.deref.call(null, cljs.core.deref.call(null, a)))], null) : null;
  }(), function() {
    var d = (new cljs.core.Keyword(null, "speced-vars", "speced-vars", -1813125988)).cljs$core$IFn$_invoke$arity$1(b);
    return cljs.core.truth_(d) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec", "speced-vars", "cljs.spec/speced-vars", 1010010387), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.filter.call(null, function(b, c, d, h) {
      return function(b) {
        return cljs.core._EQ_.call(null, h, cljs.core.namespace.call(null, b)) || cljs.core._EQ_.call(null, a, (new cljs.core.Keyword(null, "fdef-ns", "fdef-ns", -1602124254)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, b)));
      };
    }(d, d, b, c)), cljs.core.deref.call(null, cljs.core.deref.call(null, d)))], null) : null;
  }());
};
cljs.analyzer.register_specs = function(a) {
  var b = cljs.analyzer.get_spec_vars.call(null), c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  b = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "registry-ref", "registry-ref", 335292414));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "speced-vars", "speced-vars", -1813125988));
  var d = cljs.core.seq.call(null, (new cljs.core.Keyword("cljs.spec", "registry-ref", "cljs.spec/registry-ref", -71711915)).cljs$core$IFn$_invoke$arity$1(a));
  d && cljs.core.truth_(b) && cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, b), cljs.core.into, d);
  return (a = cljs.core.seq.call(null, (new cljs.core.Keyword("cljs.spec", "speced-vars", "cljs.spec/speced-vars", 1010010387)).cljs$core$IFn$_invoke$arity$1(a))) ? cljs.core.truth_(c) ? cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, c), cljs.core.into, a) : null : null;
};
cljs.analyzer.analyze_form_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.analyzer.analyze_form_seq.call(null, a, cljs.core.truth_(cljs.env._STAR_compiler_STAR_) ? (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)) : null);
};
cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.assoc.call(null, cljs.analyzer.empty_env.call(null), new cljs.core.Keyword(null, "build-options", "build-options", 1183685779), b), d = cljs.analyzer._STAR_file_defs_STAR_, e = cljs.analyzer._STAR_cljs_ns_STAR_, f = cljs.analyzer._STAR_cljs_file_STAR_, g = cljs.tools.reader._STAR_alias_map_STAR_;
  cljs.analyzer._STAR_file_defs_STAR_ = null;
  cljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null);
  cljs.analyzer._STAR_cljs_file_STAR_ = null;
  var h = cljs.tools.reader;
  var k = cljs.tools.reader._STAR_alias_map_STAR_;
  k = cljs.core.truth_(k) ? k : cljs.core.PersistentArrayMap.EMPTY;
  h._STAR_alias_map_STAR_ = k;
  try {
    for (h = null;;) {
      if (null != a) {
        var l = cljs.core.first.call(null, a), m = cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.analyzer.get_namespace.call(null, cljs.analyzer._STAR_cljs_ns_STAR_)), n = cljs.analyzer.analyze.call(null, m, l, null, b);
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(n), new cljs.core.Keyword(null, "ns", "ns", 441598760))) {
          var p = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(n), q = cljs.core.next.call(null, a);
          h = p;
          a = q;
        } else {
          k = h;
          var r = cljs.core.next.call(null, a);
          h = k;
          a = r;
        }
      } else {
        return h;
      }
    }
  } finally {
    cljs.tools.reader._STAR_alias_map_STAR_ = g, cljs.analyzer._STAR_cljs_file_STAR_ = f, cljs.analyzer._STAR_cljs_ns_STAR_ = e, cljs.analyzer._STAR_file_defs_STAR_ = d;
  }
};
cljs.analyzer.analyze_form_seq.cljs$lang$maxFixedArity = 2;
cljs.analyzer.ensure_defs = function(a) {
  return cljs.core.swap_BANG_.call(null, cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927), a, new cljs.core.Keyword(null, "defs", "defs", 1398449717)], null), function(a) {
    return cljs.core.truth_(a) ? a : cljs.core.PersistentArrayMap.EMPTY;
  });
};
cljs.spec = {};
cljs.spec.gen = {};
cljs.spec.gen.alpha = {};
cljs.spec.gen.alpha.LazyVar = function(a, b) {
  this.f = a;
  this.cached = b;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.spec.gen.alpha.LazyVar.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  if (null != this.cached) {
    return this.cached;
  }
  a = this.f.call(null);
  null != a && (this.cached = a);
  return a;
};
cljs.spec.gen.alpha.LazyVar.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cached", "cached", -1216707864, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.spec.gen.alpha.LazyVar.cljs$lang$type = !0;
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorStr = "cljs.spec.gen.alpha/LazyVar";
cljs.spec.gen.alpha.LazyVar.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.spec.gen.alpha/LazyVar");
};
cljs.spec.gen.alpha.__GT_LazyVar = function(a, b) {
  return new cljs.spec.gen.alpha.LazyVar(a, b);
};
cljs.spec.gen.alpha.quick_check_ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check.quick_check) {
    return clojure.test.check.quick_check;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check", "quick-check", "clojure.test.check/quick-check", -810344251, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.quick_check = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.spec.gen.alpha.quick_check.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.quick_check_ref), a);
};
cljs.spec.gen.alpha.quick_check.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.quick_check.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.spec.gen.alpha.for_all_STAR__ref = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.properties.for_all_STAR_) {
    return clojure.test.check.properties.for_all_STAR_;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.properties", "for-all*", "clojure.test.check.properties/for-all*", 67088845, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.for_all_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.for_all_STAR__ref), a);
};
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
var g_QMARK__17552 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.generator_QMARK_) {
    return clojure.test.check.generators.generator_QMARK_;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generator?", "clojure.test.check.generators/generator?", -1378210460, null))), " never required"].join(""));
}, null), g_17553 = new cljs.spec.gen.alpha.LazyVar(function(a) {
  return function() {
    if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.generate) {
      return clojure.test.check.generators.generate;
    }
    throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "generate", "clojure.test.check.generators/generate", -690390711, null))), " never required"].join(""));
  };
}(g_QMARK__17552), null), mkg_17554 = new cljs.spec.gen.alpha.LazyVar(function(a, b) {
  return function() {
    if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.__GT_Generator) {
      return clojure.test.check.generators.__GT_Generator;
    }
    throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "-\x3eGenerator", "clojure.test.check.generators/-\x3eGenerator", -1179475051, null))), " never required"].join(""));
  };
}(g_QMARK__17552, g_17553), null);
cljs.spec.gen.alpha.generator_QMARK_ = function(a, b, c) {
  return function(b) {
    return cljs.core.deref.call(null, a).call(null, b);
  };
}(g_QMARK__17552, g_17553, mkg_17554);
cljs.spec.gen.alpha.generator = function(a, b, c) {
  return function(a) {
    return cljs.core.deref.call(null, c).call(null, a);
  };
}(g_QMARK__17552, g_17553, mkg_17554);
cljs.spec.gen.alpha.generate = function(a, b, c) {
  return function(a) {
    return cljs.core.deref.call(null, b).call(null, a);
  };
}(g_QMARK__17552, g_17553, mkg_17554);
cljs.spec.gen.alpha.delay_impl = function(a) {
  return cljs.spec.gen.alpha.generator.call(null, function(b, c) {
    return (new cljs.core.Keyword(null, "gen", "gen", 142575302)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a)).call(null, b, c);
  });
};
var g__1283__auto___17574 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.hash_map) {
    return clojure.test.check.generators.hash_map;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "hash-map", "clojure.test.check.generators/hash-map", 1961346626, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.hash_map = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17574);
cljs.spec.gen.alpha.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17574);
cljs.spec.gen.alpha.hash_map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.hash_map.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17574);
var g__1283__auto___17578 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.list) {
    return clojure.test.check.generators.list;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "list", "clojure.test.check.generators/list", 506971058, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.list = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17578);
cljs.spec.gen.alpha.list.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17578);
cljs.spec.gen.alpha.list.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.list.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17578);
var g__1283__auto___17582 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.map) {
    return clojure.test.check.generators.map;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "map", "clojure.test.check.generators/map", 45738796, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.map = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17582);
cljs.spec.gen.alpha.map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17582);
cljs.spec.gen.alpha.map.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.map.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17582);
var g__1283__auto___17586 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.not_empty) {
    return clojure.test.check.generators.not_empty;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "not-empty", "clojure.test.check.generators/not-empty", -876211682, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.not_empty = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17586);
cljs.spec.gen.alpha.not_empty.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17586);
cljs.spec.gen.alpha.not_empty.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.not_empty.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17586);
var g__1283__auto___17590 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.set) {
    return clojure.test.check.generators.set;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "set", "clojure.test.check.generators/set", -1027639543, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.set = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17590);
cljs.spec.gen.alpha.set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17590);
cljs.spec.gen.alpha.set.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.set.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17590);
var g__1283__auto___17594 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.vector) {
    return clojure.test.check.generators.vector;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector", "clojure.test.check.generators/vector", 1081775325, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.vector = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17594);
cljs.spec.gen.alpha.vector.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17594);
cljs.spec.gen.alpha.vector.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17594);
var g__1283__auto___17598 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.vector_distinct) {
    return clojure.test.check.generators.vector_distinct;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "vector-distinct", "clojure.test.check.generators/vector-distinct", 1656877834, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.vector_distinct = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17598);
cljs.spec.gen.alpha.vector_distinct.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17598);
cljs.spec.gen.alpha.vector_distinct.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.vector_distinct.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17598);
var g__1283__auto___17602 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.fmap) {
    return clojure.test.check.generators.fmap;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "fmap", "clojure.test.check.generators/fmap", 1957997092, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.fmap = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17602);
cljs.spec.gen.alpha.fmap.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17602);
cljs.spec.gen.alpha.fmap.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.fmap.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17602);
var g__1283__auto___17606 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.elements) {
    return clojure.test.check.generators.elements;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "elements", "clojure.test.check.generators/elements", 438991326, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.elements = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17606);
cljs.spec.gen.alpha.elements.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17606);
cljs.spec.gen.alpha.elements.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.elements.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17606);
var g__1283__auto___17610 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.bind) {
    return clojure.test.check.generators.bind;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "bind", "clojure.test.check.generators/bind", -361313906, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.bind = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17610);
cljs.spec.gen.alpha.bind.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17610);
cljs.spec.gen.alpha.bind.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.bind.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17610);
var g__1283__auto___17614 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.choose) {
    return clojure.test.check.generators.choose;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "choose", "clojure.test.check.generators/choose", 909997832, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.choose = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17614);
cljs.spec.gen.alpha.choose.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17614);
cljs.spec.gen.alpha.choose.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.choose.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17614);
var g__1283__auto___17618 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.one_of) {
    return clojure.test.check.generators.one_of;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "one-of", "clojure.test.check.generators/one-of", -183339191, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.one_of = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17618);
cljs.spec.gen.alpha.one_of.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17618);
cljs.spec.gen.alpha.one_of.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.one_of.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17618);
var g__1283__auto___17622 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.such_that) {
    return clojure.test.check.generators.such_that;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "such-that", "clojure.test.check.generators/such-that", -1754178732, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.such_that = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17622);
cljs.spec.gen.alpha.such_that.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17622);
cljs.spec.gen.alpha.such_that.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.such_that.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17622);
var g__1283__auto___17626 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.tuple) {
    return clojure.test.check.generators.tuple;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "tuple", "clojure.test.check.generators/tuple", -143711557, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.tuple = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17626);
cljs.spec.gen.alpha.tuple.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17626);
cljs.spec.gen.alpha.tuple.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.tuple.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17626);
var g__1283__auto___17630 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.sample) {
    return clojure.test.check.generators.sample;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "sample", "clojure.test.check.generators/sample", -382944992, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.sample = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17630);
cljs.spec.gen.alpha.sample.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17630);
cljs.spec.gen.alpha.sample.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.sample.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17630);
var g__1283__auto___17634 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.return$) {
    return clojure.test.check.generators.return$;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "return", "clojure.test.check.generators/return", 1744522038, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.return$ = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17634);
cljs.spec.gen.alpha.return$.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17634);
cljs.spec.gen.alpha.return$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.return$.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17634);
var g__1283__auto___17638 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.large_integer_STAR_) {
    return clojure.test.check.generators.large_integer_STAR_;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer*", "clojure.test.check.generators/large-integer*", -437830670, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.large_integer_STAR_ = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17638);
cljs.spec.gen.alpha.large_integer_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17638);
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17638);
var g__1283__auto___17642 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.double_STAR_) {
    return clojure.test.check.generators.double_STAR_;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double*", "clojure.test.check.generators/double*", 841542265, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.double_STAR_ = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17642);
cljs.spec.gen.alpha.double_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17642);
cljs.spec.gen.alpha.double_STAR_.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double_STAR_.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17642);
var g__1283__auto___17646 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.frequency) {
    return clojure.test.check.generators.frequency;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "frequency", "clojure.test.check.generators/frequency", 2090703177, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.frequency = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1283__auto___17646);
cljs.spec.gen.alpha.frequency.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.apply.call(null, cljs.core.deref.call(null, a), b);
  };
}(g__1283__auto___17646);
cljs.spec.gen.alpha.frequency.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.frequency.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1283__auto___17646);
var g__1296__auto___17671 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.any) {
    return clojure.test.check.generators.any;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any", "clojure.test.check.generators/any", 1883743710, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.any = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17671);
cljs.spec.gen.alpha.any.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17671);
cljs.spec.gen.alpha.any.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17671);
var g__1296__auto___17675 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.any_printable) {
    return clojure.test.check.generators.any_printable;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "any-printable", "clojure.test.check.generators/any-printable", -1570493991, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.any_printable = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17675);
cljs.spec.gen.alpha.any_printable.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17675);
cljs.spec.gen.alpha.any_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.any_printable.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17675);
var g__1296__auto___17679 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.boolean$) {
    return clojure.test.check.generators.boolean$;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "boolean", "clojure.test.check.generators/boolean", 1586992347, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.boolean$ = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17679);
cljs.spec.gen.alpha.boolean$.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17679);
cljs.spec.gen.alpha.boolean$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.boolean$.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17679);
var g__1296__auto___17683 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.char$) {
    return clojure.test.check.generators.char$;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char", "clojure.test.check.generators/char", -1426343459, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.char$ = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17683);
cljs.spec.gen.alpha.char$.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17683);
cljs.spec.gen.alpha.char$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char$.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17683);
var g__1296__auto___17687 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.char_alpha) {
    return clojure.test.check.generators.char_alpha;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alpha", "clojure.test.check.generators/char-alpha", 615785796, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.char_alpha = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17687);
cljs.spec.gen.alpha.char_alpha.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17687);
cljs.spec.gen.alpha.char_alpha.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alpha.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17687);
var g__1296__auto___17691 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.char_alphanumeric) {
    return clojure.test.check.generators.char_alphanumeric;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-alphanumeric", "clojure.test.check.generators/char-alphanumeric", 1383091431, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.char_alphanumeric = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17691);
cljs.spec.gen.alpha.char_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17691);
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17691);
var g__1296__auto___17695 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.char_ascii) {
    return clojure.test.check.generators.char_ascii;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "char-ascii", "clojure.test.check.generators/char-ascii", -899908538, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.char_ascii = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17695);
cljs.spec.gen.alpha.char_ascii.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17695);
cljs.spec.gen.alpha.char_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.char_ascii.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17695);
var g__1296__auto___17699 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.double$) {
    return clojure.test.check.generators.double$;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "double", "clojure.test.check.generators/double", 668331090, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.double$ = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17699);
cljs.spec.gen.alpha.double$.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17699);
cljs.spec.gen.alpha.double$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.double$.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17699);
var g__1296__auto___17703 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.int$) {
    return clojure.test.check.generators.int$;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "int", "clojure.test.check.generators/int", 1756228469, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.int$ = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17703);
cljs.spec.gen.alpha.int$.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17703);
cljs.spec.gen.alpha.int$.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.int$.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17703);
var g__1296__auto___17707 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.keyword) {
    return clojure.test.check.generators.keyword;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword", "clojure.test.check.generators/keyword", 24530530, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.keyword = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17707);
cljs.spec.gen.alpha.keyword.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17707);
cljs.spec.gen.alpha.keyword.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17707);
var g__1296__auto___17711 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.keyword_ns) {
    return clojure.test.check.generators.keyword_ns;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "keyword-ns", "clojure.test.check.generators/keyword-ns", -1492628482, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.keyword_ns = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17711);
cljs.spec.gen.alpha.keyword_ns.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17711);
cljs.spec.gen.alpha.keyword_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.keyword_ns.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17711);
var g__1296__auto___17715 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.large_integer) {
    return clojure.test.check.generators.large_integer;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "large-integer", "clojure.test.check.generators/large-integer", -865967138, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.large_integer = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17715);
cljs.spec.gen.alpha.large_integer.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17715);
cljs.spec.gen.alpha.large_integer.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.large_integer.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17715);
var g__1296__auto___17719 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.ratio) {
    return clojure.test.check.generators.ratio;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "ratio", "clojure.test.check.generators/ratio", 1540966915, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.ratio = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17719);
cljs.spec.gen.alpha.ratio.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17719);
cljs.spec.gen.alpha.ratio.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.ratio.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17719);
var g__1296__auto___17723 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.simple_type) {
    return clojure.test.check.generators.simple_type;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type", "clojure.test.check.generators/simple-type", 892572284, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.simple_type = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17723);
cljs.spec.gen.alpha.simple_type.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17723);
cljs.spec.gen.alpha.simple_type.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17723);
var g__1296__auto___17727 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.simple_type_printable) {
    return clojure.test.check.generators.simple_type_printable;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "simple-type-printable", "clojure.test.check.generators/simple-type-printable", -58489962, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.simple_type_printable = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17727);
cljs.spec.gen.alpha.simple_type_printable.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17727);
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.simple_type_printable.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17727);
var g__1296__auto___17731 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.string) {
    return clojure.test.check.generators.string;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string", "clojure.test.check.generators/string", -1704750979, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.string = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17731);
cljs.spec.gen.alpha.string.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17731);
cljs.spec.gen.alpha.string.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17731);
var g__1296__auto___17735 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.string_ascii) {
    return clojure.test.check.generators.string_ascii;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-ascii", "clojure.test.check.generators/string-ascii", -2009877640, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.string_ascii = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17735);
cljs.spec.gen.alpha.string_ascii.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17735);
cljs.spec.gen.alpha.string_ascii.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_ascii.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17735);
var g__1296__auto___17739 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.string_alphanumeric) {
    return clojure.test.check.generators.string_alphanumeric;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "string-alphanumeric", "clojure.test.check.generators/string-alphanumeric", 836374939, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.string_alphanumeric = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17739);
cljs.spec.gen.alpha.string_alphanumeric.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17739);
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17739);
var g__1296__auto___17743 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.symbol) {
    return clojure.test.check.generators.symbol;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol", "clojure.test.check.generators/symbol", -1305461065, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.symbol = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17743);
cljs.spec.gen.alpha.symbol.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17743);
cljs.spec.gen.alpha.symbol.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17743);
var g__1296__auto___17747 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.symbol_ns) {
    return clojure.test.check.generators.symbol_ns;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "symbol-ns", "clojure.test.check.generators/symbol-ns", -862629490, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.symbol_ns = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17747);
cljs.spec.gen.alpha.symbol_ns.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17747);
cljs.spec.gen.alpha.symbol_ns.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.symbol_ns.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17747);
var g__1296__auto___17751 = new cljs.spec.gen.alpha.LazyVar(function() {
  if ("undefined" !== typeof clojure.test && "undefined" !== typeof clojure.test.check && "undefined" !== typeof clojure.test.check.generators.uuid) {
    return clojure.test.check.generators.uuid;
  }
  throw Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null)), " does not exist, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace.call(null, new cljs.core.Symbol("clojure.test.check.generators", "uuid", "clojure.test.check.generators/uuid", 1589373144, null))), " never required"].join(""));
}, null);
cljs.spec.gen.alpha.uuid = function(a) {
  return function(a) {
    for (var b = [], d = arguments.length, e = 0;;) {
      if (e < d) {
        b.push(arguments[e]), e += 1;
      } else {
        break;
      }
    }
    b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
    return cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic(b);
  };
}(g__1296__auto___17751);
cljs.spec.gen.alpha.uuid.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return function(b) {
    return cljs.core.deref.call(null, a);
  };
}(g__1296__auto___17751);
cljs.spec.gen.alpha.uuid.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.uuid.cljs$lang$applyTo = function(a) {
  return function(a) {
    return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
  };
}(g__1296__auto___17751);
cljs.spec.gen.alpha.cat = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.spec.gen.alpha.cat.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.spec.gen.alpha.fmap.call(null, function(a) {
    return cljs.core.apply.call(null, cljs.core.concat, a);
  }, cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, a));
};
cljs.spec.gen.alpha.cat.cljs$lang$maxFixedArity = 0;
cljs.spec.gen.alpha.cat.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.spec.gen.alpha.qualified_QMARK_ = function(a) {
  return null != cljs.core.namespace.call(null, a);
};
cljs.spec.gen.alpha.gen_builtins = new cljs.core.Delay(function() {
  var a = cljs.spec.gen.alpha.simple_type_printable.call(null);
  return cljs.core.PersistentHashMap.fromArrays([cljs.core.qualified_keyword_QMARK_, cljs.core.seq_QMARK_, cljs.core.vector_QMARK_, cljs.core.any_QMARK_, cljs.core.boolean_QMARK_, cljs.core.char_QMARK_, cljs.core.inst_QMARK_, cljs.core.simple_symbol_QMARK_, cljs.core.sequential_QMARK_, cljs.core.float_QMARK_, cljs.core.set_QMARK_, cljs.core.map_QMARK_, cljs.core.empty_QMARK_, cljs.core.string_QMARK_, cljs.core.double_QMARK_, cljs.core.int_QMARK_, cljs.core.associative_QMARK_, cljs.core.keyword_QMARK_, 
  cljs.core.indexed_QMARK_, cljs.core.zero_QMARK_, cljs.core.simple_keyword_QMARK_, cljs.core.neg_int_QMARK_, cljs.core.nil_QMARK_, cljs.core.ident_QMARK_, cljs.core.qualified_ident_QMARK_, cljs.core.true_QMARK_, cljs.core.integer_QMARK_, cljs.core.nat_int_QMARK_, cljs.core.pos_int_QMARK_, cljs.core.uuid_QMARK_, cljs.core.false_QMARK_, cljs.core.list_QMARK_, cljs.core.simple_ident_QMARK_, cljs.core.number_QMARK_, cljs.core.qualified_symbol_QMARK_, cljs.core.seqable_QMARK_, cljs.core.symbol_QMARK_, 
  cljs.core.coll_QMARK_], [cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.keyword_ns.call(null)), cljs.spec.gen.alpha.list.call(null, a), cljs.spec.gen.alpha.vector.call(null, a), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.any_printable.call(null)], null)), cljs.spec.gen.alpha.boolean$.call(null), cljs.spec.gen.alpha.char$.call(null), 
  cljs.spec.gen.alpha.fmap.call(null, function(a) {
    return function(a) {
      return new Date(a);
    };
  }(a), cljs.spec.gen.alpha.large_integer.call(null)), cljs.spec.gen.alpha.symbol.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.list.call(null, a), cljs.spec.gen.alpha.vector.call(null, a)], null)), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.set.call(null, a), cljs.spec.gen.alpha.map.call(null, a, a), cljs.spec.gen.alpha.elements.call(null, new cljs.core.PersistentVector(null, 
  5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.List.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentHashSet.EMPTY], null)), cljs.spec.gen.alpha.string_alphanumeric.call(null), cljs.spec.gen.alpha.double$.call(null), cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, a, a), cljs.spec.gen.alpha.vector.call(null, 
  a)], null)), cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.vector.call(null, a), cljs.spec.gen.alpha.return$.call(null, 0), cljs.spec.gen.alpha.keyword.call(null), cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), -1], null)), cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.keyword_ns.call(null), cljs.spec.gen.alpha.symbol_ns.call(null)], null))), cljs.spec.gen.alpha.return$.call(null, !0), cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.large_integer_STAR_.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 0], null)), cljs.spec.gen.alpha.large_integer_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null)), cljs.spec.gen.alpha.uuid.call(null), cljs.spec.gen.alpha.return$.call(null, !1), cljs.spec.gen.alpha.list.call(null, a), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs.spec.gen.alpha.keyword.call(null), cljs.spec.gen.alpha.symbol.call(null)], null)), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.large_integer.call(null), cljs.spec.gen.alpha.double$.call(null)], null)), cljs.spec.gen.alpha.such_that.call(null, cljs.spec.gen.alpha.qualified_QMARK_, cljs.spec.gen.alpha.symbol_ns.call(null)), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 
  6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.return$.call(null, null), cljs.spec.gen.alpha.list.call(null, a), cljs.spec.gen.alpha.vector.call(null, a), cljs.spec.gen.alpha.map.call(null, a, a), cljs.spec.gen.alpha.set.call(null, a), cljs.spec.gen.alpha.string_alphanumeric.call(null)], null)), cljs.spec.gen.alpha.symbol_ns.call(null), cljs.spec.gen.alpha.one_of.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.gen.alpha.map.call(null, 
  a, a), cljs.spec.gen.alpha.list.call(null, a), cljs.spec.gen.alpha.vector.call(null, a), cljs.spec.gen.alpha.set.call(null, a)], null))]);
}, null);
cljs.spec.gen.alpha.gen_for_pred = function(a) {
  return cljs.core.set_QMARK_.call(null, a) ? cljs.spec.gen.alpha.elements.call(null, a) : cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.gen.alpha.gen_builtins), a);
};
cljs.spec.alpha = {};
cljs.spec.alpha.MAX_INT = 9007199254740991;
cljs.spec.alpha._STAR_recursion_limit_STAR_ = 4;
cljs.spec.alpha._STAR_fspec_iterations_STAR_ = 21;
cljs.spec.alpha._STAR_coll_check_limit_STAR_ = 101;
cljs.spec.alpha._STAR_coll_error_limit_STAR_ = 20;
cljs.spec.alpha.Spec = function() {
};
cljs.spec.alpha.conform_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$spec$alpha$Spec$conform_STAR_$arity$2) {
    return a.cljs$spec$alpha$Spec$conform_STAR_$arity$2(a, b);
  }
  var c = cljs.spec.alpha.conform_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.spec.alpha.conform_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Spec.conform*", a);
};
cljs.spec.alpha.unform_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$spec$alpha$Spec$unform_STAR_$arity$2) {
    return a.cljs$spec$alpha$Spec$unform_STAR_$arity$2(a, b);
  }
  var c = cljs.spec.alpha.unform_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.spec.alpha.unform_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Spec.unform*", a);
};
cljs.spec.alpha.explain_STAR_ = function(a, b, c, d, e) {
  if (null != a && null != a.cljs$spec$alpha$Spec$explain_STAR_$arity$5) {
    return a.cljs$spec$alpha$Spec$explain_STAR_$arity$5(a, b, c, d, e);
  }
  var f = cljs.spec.alpha.explain_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.call(null, a, b, c, d, e);
  }
  f = cljs.spec.alpha.explain_STAR_._;
  if (null != f) {
    return f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol.call(null, "Spec.explain*", a);
};
cljs.spec.alpha.gen_STAR_ = function(a, b, c, d) {
  if (null != a && null != a.cljs$spec$alpha$Spec$gen_STAR_$arity$4) {
    return a.cljs$spec$alpha$Spec$gen_STAR_$arity$4(a, b, c, d);
  }
  var e = cljs.spec.alpha.gen_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = cljs.spec.alpha.gen_STAR_._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "Spec.gen*", a);
};
cljs.spec.alpha.with_gen_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2) {
    return a.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2(a, b);
  }
  var c = cljs.spec.alpha.with_gen_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.spec.alpha.with_gen_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Spec.with-gen*", a);
};
cljs.spec.alpha.describe_STAR_ = function(a) {
  if (null != a && null != a.cljs$spec$alpha$Spec$describe_STAR_$arity$1) {
    return a.cljs$spec$alpha$Spec$describe_STAR_$arity$1(a);
  }
  var b = cljs.spec.alpha.describe_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.spec.alpha.describe_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Spec.describe*", a);
};
"undefined" === typeof cljs.spec.alpha.registry_ref && (cljs.spec.alpha.registry_ref = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY));
cljs.spec.alpha.deep_resolve = function(a, b) {
  for (;;) {
    if (cljs.core.ident_QMARK_.call(null, b)) {
      b = cljs.core.get.call(null, a, b);
    } else {
      return b;
    }
  }
};
cljs.spec.alpha.reg_resolve = function(a) {
  if (cljs.core.ident_QMARK_.call(null, a)) {
    var b = cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
    a = cljs.core.get.call(null, b, a);
    return cljs.core.ident_QMARK_.call(null, a) ? cljs.spec.alpha.deep_resolve.call(null, b, a) : a;
  }
  return a;
};
cljs.spec.alpha.reg_resolve_BANG_ = function(a) {
  if (cljs.core.ident_QMARK_.call(null, a)) {
    var b = cljs.spec.alpha.reg_resolve.call(null, a);
    if (cljs.core.truth_(b)) {
      return b;
    }
    throw Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
  return a;
};
cljs.spec.alpha.spec_QMARK_ = function(a) {
  return null != a && cljs.core.PROTOCOL_SENTINEL === a.cljs$spec$alpha$Spec$ ? a : null;
};
cljs.spec.alpha.regex_QMARK_ = function(a) {
  var b = (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(b) ? a : b;
};
cljs.spec.alpha.with_name = function(a, b) {
  return cljs.core.ident_QMARK_.call(null, a) ? a : cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, a)) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570), b) : null != a && (a.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMeta$) ? cljs.core.with_meta.call(null, a, cljs.core.assoc.call(null, cljs.core.meta.call(null, a), new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 
  205233570), b)) : null;
};
cljs.spec.alpha.spec_name = function(a) {
  return cljs.core.ident_QMARK_.call(null, a) ? a : cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, a)) ? (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(a) : null != a && (a.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMeta$) ? (new cljs.core.Keyword("cljs.spec.alpha", "name", "cljs.spec.alpha/name", 205233570)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, a)) : 
  null;
};
cljs.spec.alpha.maybe_spec = function(a) {
  var b = function() {
    var b = (b = cljs.core.ident_QMARK_.call(null, a)) ? cljs.spec.alpha.reg_resolve.call(null, a) : b;
    if (cljs.core.truth_(b)) {
      return b;
    }
    b = cljs.spec.alpha.spec_QMARK_.call(null, a);
    if (cljs.core.truth_(b)) {
      return b;
    }
    b = cljs.spec.alpha.regex_QMARK_.call(null, a);
    return cljs.core.truth_(b) ? b : null;
  }();
  return cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, b)) ? cljs.spec.alpha.with_name.call(null, cljs.spec.alpha.regex_spec_impl.call(null, b, null), cljs.spec.alpha.spec_name.call(null, b)) : b;
};
cljs.spec.alpha.the_spec = function(a) {
  var b = cljs.spec.alpha.maybe_spec.call(null, a);
  if (cljs.core.truth_(b)) {
    return b;
  }
  if (cljs.core.ident_QMARK_.call(null, a)) {
    throw Error(["Unable to resolve spec: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
  return null;
};
cljs.spec.alpha.Specize = function() {
};
cljs.spec.alpha.specize_STAR_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.cljs$spec$alpha$Specize$specize_STAR_$arity$1) {
    return a.cljs$spec$alpha$Specize$specize_STAR_$arity$1(a);
  }
  var b = cljs.spec.alpha.specize_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.spec.alpha.specize_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Specize.specize*", a);
};
cljs.spec.alpha.specize_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$spec$alpha$Specize$specize_STAR_$arity$2) {
    return a.cljs$spec$alpha$Specize$specize_STAR_$arity$2(a, b);
  }
  var c = cljs.spec.alpha.specize_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.spec.alpha.specize_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Specize.specize*", a);
};
cljs.spec.alpha.specize_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, this));
};
cljs.core.Keyword.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b) {
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, this));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, this));
};
cljs.core.Symbol.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b) {
  return cljs.spec.alpha.specize_STAR_.call(null, cljs.spec.alpha.reg_resolve_BANG_.call(null, this));
};
goog.object.set(cljs.spec.alpha.Specize, "_", !0);
goog.object.set(cljs.spec.alpha.specize_STAR_, "_", function() {
  var a = null, b = function(a) {
    return cljs.spec.alpha.spec_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818), a, null, null);
  }, c = function(a, b) {
    return cljs.spec.alpha.spec_impl.call(null, b, a, null, null);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}());
cljs.spec.alpha.specize = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = cljs.spec.alpha.spec_QMARK_.call(null, a);
  return cljs.core.truth_(b) ? b : cljs.spec.alpha.specize_STAR_.call(null, a);
};
cljs.spec.alpha.specize.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.spec.alpha.spec_QMARK_.call(null, a);
  return cljs.core.truth_(c) ? c : cljs.spec.alpha.specize_STAR_.call(null, a, b);
};
cljs.spec.alpha.specize.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.invalid_QMARK_ = function(a) {
  return cljs.core.keyword_identical_QMARK_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119), a);
};
cljs.spec.alpha.conform = function(a, b) {
  return cljs.spec.alpha.conform_STAR_.call(null, cljs.spec.alpha.specize.call(null, a), b);
};
cljs.spec.alpha.unform = function(a, b) {
  return cljs.spec.alpha.unform_STAR_.call(null, cljs.spec.alpha.specize.call(null, a), b);
};
cljs.spec.alpha.form = function(a) {
  return cljs.spec.alpha.describe_STAR_.call(null, cljs.spec.alpha.specize.call(null, a));
};
cljs.spec.alpha.abbrev = function(a) {
  return cljs.core.seq_QMARK_.call(null, a) ? clojure.walk.postwalk.call(null, function(a) {
    return cljs.core.truth_(function() {
      var b = a instanceof cljs.core.Symbol;
      return b ? cljs.core.namespace.call(null, a) : b;
    }()) ? cljs.core.symbol.call(null, cljs.core.name.call(null, a)) : cljs.core.seq_QMARK_.call(null, a) && cljs.core._EQ_.call(null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), cljs.core.first.call(null, a)) && cljs.core._EQ_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.second.call(null, a)) ? cljs.core.last.call(null, a) : a;
  }, a) : cljs.core.truth_(function() {
    var b = a instanceof cljs.core.Symbol;
    return b ? cljs.core.namespace.call(null, a) : b;
  }()) ? cljs.core.symbol.call(null, cljs.core.name.call(null, a)) : a;
};
cljs.spec.alpha.describe = function(a) {
  return cljs.spec.alpha.abbrev.call(null, cljs.spec.alpha.form.call(null, a));
};
cljs.spec.alpha.with_gen = function(a, b) {
  a = cljs.spec.alpha.reg_resolve.call(null, a);
  return cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, a)) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375), b) : cljs.spec.alpha.with_gen_STAR_.call(null, cljs.spec.alpha.specize.call(null, a), b);
};
cljs.spec.alpha.explain_data_STAR_ = function(a, b, c, d, e) {
  b = cljs.spec.alpha.explain_STAR_.call(null, cljs.spec.alpha.specize.call(null, a), b, c, d, e);
  return cljs.core.truth_(b) ? cljs.core.empty_QMARK_.call(null, b) ? null : new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), b, new cljs.core.Keyword("cljs.spec.alpha", "spec", "cljs.spec.alpha/spec", 1947137578), a, new cljs.core.Keyword("cljs.spec.alpha", "value", "cljs.spec.alpha/value", 1974786274), e], null) : null;
};
cljs.spec.alpha.explain_data = function(a, b) {
  return cljs.spec.alpha.explain_data_STAR_.call(null, a, cljs.core.PersistentVector.EMPTY, function() {
    var b = cljs.spec.alpha.spec_name.call(null, a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null) : cljs.core.PersistentVector.EMPTY;
  }(), cljs.core.PersistentVector.EMPTY, b);
};
cljs.spec.alpha.explain_printer = function(a) {
  if (cljs.core.truth_(a)) {
    var b = cljs.core.sort_by.call(null, function(a) {
      return -cljs.core.count.call(null, (new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(a));
    }, (new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814)).cljs$core$IFn$_invoke$arity$1(a));
    return cljs.core.print.call(null, function() {
      var c = new goog.string.StringBuffer, d = cljs.core._STAR_print_newline_STAR_, e = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = !0;
      cljs.core._STAR_print_fn_STAR_ = function(a, b, c, d) {
        return function(a) {
          return c.append(a);
        };
      }(d, e, c, b);
      try {
        for (var f = cljs.core.seq.call(null, b), g = null, h = 0, k = 0;;) {
          if (k < h) {
            var l = cljs.core._nth.call(null, g, k), m = null != l && (l.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === l.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, l) : l, n = m, p = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "path", "path", -188191168)), q = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "pred", "pred", 1927423397)), r = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "val", "val", 128701612)), t = 
            cljs.core.get.call(null, m, new cljs.core.Keyword(null, "reason", "reason", -2070751759)), u = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "via", "via", -1904457336)), v = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "in", "in", -1531184865));
            cljs.core.empty_QMARK_.call(null, v) || cljs.core.print.call(null, "In:", cljs.core.pr_str.call(null, v), "");
            cljs.core.print.call(null, "val: ");
            cljs.core.pr.call(null, r);
            cljs.core.print.call(null, " fails");
            cljs.core.empty_QMARK_.call(null, u) || cljs.core.print.call(null, " spec:", cljs.core.pr_str.call(null, cljs.core.last.call(null, u)));
            cljs.core.empty_QMARK_.call(null, p) || cljs.core.print.call(null, " at:", cljs.core.pr_str.call(null, p));
            cljs.core.print.call(null, " predicate: ");
            cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, q));
            cljs.core.truth_(t) && cljs.core.print.call(null, ", ", t);
            var w = cljs.core.seq.call(null, n);
            n = null;
            for (var x = 0, y = 0;;) {
              if (y < x) {
                var z = cljs.core._nth.call(null, n, y), F = cljs.core.nth.call(null, z, 0, null), Q = cljs.core.nth.call(null, z, 1, null);
                cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), null)).call(null, 
                F)) || (cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, F), " "), cljs.core.pr.call(null, Q));
                y += 1;
              } else {
                var A = cljs.core.seq.call(null, w);
                if (A) {
                  var C = A;
                  if (cljs.core.chunked_seq_QMARK_.call(null, C)) {
                    var I = cljs.core.chunk_first.call(null, C), D = cljs.core.chunk_rest.call(null, C);
                    C = I;
                    var H = cljs.core.count.call(null, I);
                    w = D;
                    n = C;
                    x = H;
                  } else {
                    var B = cljs.core.first.call(null, C), G = cljs.core.nth.call(null, B, 0, null), K = cljs.core.nth.call(null, B, 1, null);
                    cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, G)) || (cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, G), " "), cljs.core.pr.call(null, K));
                    w = cljs.core.next.call(null, C);
                    n = null;
                    x = 0;
                  }
                  y = 0;
                } else {
                  break;
                }
              }
            }
            cljs.core.newline.call(null);
            k += 1;
          } else {
            var J = cljs.core.seq.call(null, f);
            if (J) {
              n = J;
              if (cljs.core.chunked_seq_QMARK_.call(null, n)) {
                var M = cljs.core.chunk_first.call(null, n), E = cljs.core.chunk_rest.call(null, n);
                n = M;
                var O = cljs.core.count.call(null, M);
                f = E;
                g = n;
                h = O;
              } else {
                var P = cljs.core.first.call(null, n), L = null != P && (P.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === P.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, P) : P;
                x = L;
                var N = cljs.core.get.call(null, L, new cljs.core.Keyword(null, "path", "path", -188191168)), R = cljs.core.get.call(null, L, new cljs.core.Keyword(null, "pred", "pred", 1927423397)), S = cljs.core.get.call(null, L, new cljs.core.Keyword(null, "val", "val", 128701612)), T = cljs.core.get.call(null, L, new cljs.core.Keyword(null, "reason", "reason", -2070751759)), X = cljs.core.get.call(null, L, new cljs.core.Keyword(null, "via", "via", -1904457336)), W = cljs.core.get.call(null, L, 
                new cljs.core.Keyword(null, "in", "in", -1531184865));
                cljs.core.empty_QMARK_.call(null, W) || cljs.core.print.call(null, "In:", cljs.core.pr_str.call(null, W), "");
                cljs.core.print.call(null, "val: ");
                cljs.core.pr.call(null, S);
                cljs.core.print.call(null, " fails");
                cljs.core.empty_QMARK_.call(null, X) || cljs.core.print.call(null, " spec:", cljs.core.pr_str.call(null, cljs.core.last.call(null, X)));
                cljs.core.empty_QMARK_.call(null, N) || cljs.core.print.call(null, " at:", cljs.core.pr_str.call(null, N));
                cljs.core.print.call(null, " predicate: ");
                cljs.core.pr.call(null, cljs.spec.alpha.abbrev.call(null, R));
                cljs.core.truth_(T) && cljs.core.print.call(null, ", ", T);
                var ba = cljs.core.seq.call(null, x);
                x = null;
                for (C = y = 0;;) {
                  if (C < y) {
                    var sa = cljs.core._nth.call(null, x, C), ma = cljs.core.nth.call(null, sa, 0, null), fa = cljs.core.nth.call(null, sa, 1, null);
                    cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                    null)).call(null, ma)) || (cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, ma), " "), cljs.core.pr.call(null, fa));
                    C += 1;
                  } else {
                    var da = cljs.core.seq.call(null, ba);
                    if (da) {
                      var V = da;
                      if (cljs.core.chunked_seq_QMARK_.call(null, V)) {
                        var aa = cljs.core.chunk_first.call(null, V), ja = cljs.core.chunk_rest.call(null, V);
                        V = aa;
                        var Z = cljs.core.count.call(null, aa);
                        ba = ja;
                        x = V;
                        y = Z;
                      } else {
                        var na = cljs.core.first.call(null, V), ka = cljs.core.nth.call(null, na, 0, null), U = cljs.core.nth.call(null, na, 1, null);
                        cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), null, new cljs.core.Keyword(null, "pred", "pred", 1927423397), null, new cljs.core.Keyword(null, "via", "via", -1904457336), null, new cljs.core.Keyword(null, "val", "val", 128701612), null, new cljs.core.Keyword(null, "reason", "reason", -2070751759), null, new cljs.core.Keyword(null, "in", "in", -1531184865), null], null), 
                        null)).call(null, ka)) || (cljs.core.print.call(null, "\n\t", cljs.core.pr_str.call(null, ka), " "), cljs.core.pr.call(null, U));
                        ba = cljs.core.next.call(null, V);
                        x = null;
                        y = 0;
                      }
                      C = 0;
                    } else {
                      break;
                    }
                  }
                }
                cljs.core.newline.call(null);
                f = cljs.core.next.call(null, n);
                g = null;
                h = 0;
              }
              k = 0;
            } else {
              break;
            }
          }
        }
        var Y = cljs.core.seq.call(null, a);
        f = null;
        for (h = g = 0;;) {
          if (h < g) {
            var oa = cljs.core._nth.call(null, f, h), pa = cljs.core.nth.call(null, oa, 0, null), ta = cljs.core.nth.call(null, oa, 1, null);
            cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), null], null), null)).call(null, pa)) || (cljs.core.print.call(null, cljs.core.pr_str.call(null, pa), " "), cljs.core.pr.call(null, ta), cljs.core.newline.call(null));
            h += 1;
          } else {
            var ea = cljs.core.seq.call(null, Y);
            if (ea) {
              k = ea;
              if (cljs.core.chunked_seq_QMARK_.call(null, k)) {
                var qa = cljs.core.chunk_first.call(null, k), ra = cljs.core.chunk_rest.call(null, k);
                k = qa;
                var va = cljs.core.count.call(null, qa);
                Y = ra;
                f = k;
                g = va;
              } else {
                var wa = cljs.core.first.call(null, k), ua = cljs.core.nth.call(null, wa, 0, null), ha = cljs.core.nth.call(null, wa, 1, null);
                cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "problems", "cljs.spec.alpha/problems", 447400814), null], null), null)).call(null, ua)) || (cljs.core.print.call(null, cljs.core.pr_str.call(null, ua), " "), cljs.core.pr.call(null, ha), cljs.core.newline.call(null));
                Y = cljs.core.next.call(null, k);
                f = null;
                g = 0;
              }
              h = 0;
            } else {
              break;
            }
          }
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = e, cljs.core._STAR_print_newline_STAR_ = d;
      }
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
    }());
  }
  return cljs.core.println.call(null, "Success!");
};
cljs.spec.alpha._STAR_explain_out_STAR_ = cljs.spec.alpha.explain_printer;
cljs.spec.alpha.explain_out = function(a) {
  return cljs.spec.alpha._STAR_explain_out_STAR_.call(null, a);
};
cljs.spec.alpha.explain = function(a, b) {
  return cljs.spec.alpha.explain_out.call(null, cljs.spec.alpha.explain_data.call(null, a, b));
};
cljs.spec.alpha.explain_str = function(a, b) {
  var c = new goog.string.StringBuffer, d = cljs.core._STAR_print_newline_STAR_, e = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_newline_STAR_ = !0;
  cljs.core._STAR_print_fn_STAR_ = function(a, b, c) {
    return function(a) {
      return c.append(a);
    };
  }(d, e, c);
  try {
    cljs.spec.alpha.explain.call(null, a, b);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = e, cljs.core._STAR_print_newline_STAR_ = d;
  }
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
};
cljs.spec.alpha.gensub = function(a, b, c, d, e) {
  var f = cljs.spec.alpha.specize.call(null, a);
  a = function() {
    var a = function() {
      var a = function() {
        var a = cljs.core.get.call(null, b, function() {
          var a = cljs.spec.alpha.spec_name.call(null, f);
          return cljs.core.truth_(a) ? a : f;
        }());
        return cljs.core.truth_(a) ? a : cljs.core.get.call(null, b, c);
      }();
      return cljs.core.truth_(a) ? a.call(null) : null;
    }();
    return cljs.core.truth_(a) ? a : cljs.spec.alpha.gen_STAR_.call(null, f, b, c, d);
  }();
  if (cljs.core.truth_(a)) {
    return cljs.spec.gen.alpha.such_that.call(null, function(a, b, c) {
      return function(a) {
        return cljs.spec.alpha.valid_QMARK_.call(null, c, a);
      };
    }(a, a, f), a, 100);
  }
  throw Error(["Unable to construct gen at: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " for: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.abbrev.call(null, e))].join(""));
};
cljs.spec.alpha.gen = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.spec.alpha.gen.call(null, a, null);
};
cljs.spec.alpha.gen.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.spec.alpha.gensub.call(null, a, b, cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994), cljs.spec.alpha._STAR_recursion_limit_STAR_], null), a);
};
cljs.spec.alpha.gen.cljs$lang$maxFixedArity = 2;
cljs.spec.alpha.def_impl = function(a, b, c) {
  if (!cljs.core.truth_(function() {
    var b = cljs.core.ident_QMARK_.call(null, a);
    return b ? cljs.core.namespace.call(null, a) : b;
  }())) {
    throw Error("Assert failed: k must be namespaced keyword or resolveable symbol\n(c/and (ident? k) (namespace k))");
  }
  b = cljs.core.truth_(function() {
    var a = cljs.spec.alpha.spec_QMARK_.call(null, c);
    if (cljs.core.truth_(a)) {
      return a;
    }
    a = cljs.spec.alpha.regex_QMARK_.call(null, c);
    return cljs.core.truth_(a) ? a : cljs.core.get.call(null, cljs.core.deref.call(null, cljs.spec.alpha.registry_ref), c);
  }()) ? c : cljs.spec.alpha.spec_impl.call(null, b, c, null, null);
  cljs.core.swap_BANG_.call(null, cljs.spec.alpha.registry_ref, cljs.core.assoc, a, cljs.spec.alpha.with_name.call(null, b, a));
  return a;
};
cljs.spec.alpha.registry = function() {
  return cljs.core.deref.call(null, cljs.spec.alpha.registry_ref);
};
cljs.spec.alpha.__GT_sym = function(a) {
  return cljs.core.var_QMARK_.call(null, a) ? a.sym : a;
};
cljs.spec.alpha.get_spec = function(a) {
  return cljs.core.get.call(null, cljs.spec.alpha.registry.call(null), a instanceof cljs.core.Keyword ? a : cljs.spec.alpha.__GT_sym.call(null, a));
};
cljs.spec.alpha.macroexpand_check = function(a, b) {
  var c = cljs.spec.alpha.get_spec.call(null, a), d = (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(c);
  if (cljs.core.truth_(d) && cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform.call(null, d, b)))) {
    var e = cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "args", "args", 1315556576)], null), function() {
      var a = cljs.spec.alpha.spec_name.call(null, d);
      return cljs.core.truth_(a) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null) : cljs.core.PersistentVector.EMPTY;
    }(), cljs.core.PersistentVector.EMPTY, b), new cljs.core.Keyword("cljs.spec.alpha", "args", "cljs.spec.alpha/args", 1870769783), b);
    throw Error(["Call to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.__GT_sym.call(null, a)), " did not conform to spec:\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var a = new goog.string.StringBuffer, b = cljs.core._STAR_print_newline_STAR_, h = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = !0;
      cljs.core._STAR_print_fn_STAR_ = function(a, b, c, d, e, f, g) {
        return function(a) {
          return c.append(a);
        };
      }(b, h, a, e, d, d, c);
      try {
        cljs.spec.alpha.explain_out.call(null, e);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = h, cljs.core._STAR_print_newline_STAR_ = b;
      }
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
    }())].join(""));
  }
  return null;
};
cljs.spec.alpha.recur_limit_QMARK_ = function(a, b, c, d) {
  return cljs.core.get.call(null, a, b) > (new cljs.core.Keyword("cljs.spec.alpha", "recursion-limit", "cljs.spec.alpha/recursion-limit", 601284994)).cljs$core$IFn$_invoke$arity$1(a) && cljs.core.contains_QMARK_.call(null, cljs.core.set.call(null, c), d);
};
cljs.spec.alpha.inck = function(a, b) {
  return cljs.core.assoc.call(null, a, b, function() {
    var c = cljs.core.get.call(null, a, b);
    return cljs.core.truth_(c) ? c : 0;
  }() + 1);
};
cljs.spec.alpha.dt = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.spec.alpha.dt.call(null, a, b, c, null);
};
cljs.spec.alpha.dt.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (cljs.core.truth_(a)) {
    var e = cljs.spec.alpha.the_spec.call(null, a);
    if (cljs.core.truth_(e)) {
      return cljs.spec.alpha.conform.call(null, e, b);
    }
    if (cljs.core.ifn_QMARK_.call(null, a)) {
      return cljs.core.truth_(d) ? a.call(null, b) : cljs.core.truth_(a.call(null, b)) ? b : new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
    }
    throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, c)), " is not a fn, expected predicate fn"].join(""));
  }
  return b;
};
cljs.spec.alpha.dt.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.valid_QMARK_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = cljs.spec.alpha.specize.call(null, a);
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, a, b)));
};
cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.spec.alpha.specize.call(null, a, c);
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.conform_STAR_.call(null, a, b)));
};
cljs.spec.alpha.valid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.pvalid_QMARK_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, a, b, new cljs.core.Keyword("cljs.spec.alpha", "unknown", "cljs.spec.alpha/unknown", 651034818))));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, a, b, c)));
};
cljs.spec.alpha.pvalid_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.explain_1 = function(a, b, c, d, e, f) {
  var g = cljs.spec.alpha.maybe_spec.call(null, b);
  return cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, g)) ? cljs.spec.alpha.explain_STAR_.call(null, g, c, function() {
    var a = cljs.spec.alpha.spec_name.call(null, g);
    return cljs.core.truth_(a) ? cljs.core.conj.call(null, d, a) : d;
  }(), e, f) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), c, new cljs.core.Keyword(null, "pred", "pred", 1927423397), a, new cljs.core.Keyword(null, "val", "val", 128701612), f, new cljs.core.Keyword(null, "via", "via", -1904457336), d, new cljs.core.Keyword(null, "in", "in", -1531184865), e], null)], null);
};
cljs.spec.alpha.map_spec_impl = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "opt", "opt", -794706369)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, 
  "gfn", "gfn", 791517474)), g = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "pred-exprs", "pred-exprs", 1792271395)), h = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "keys-pred", "keys-pred", 858984739)), k = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "opt-keys", "opt-keys", 1262688261)), l = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "req-specs", "req-specs", 553962313)), m = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "req", "req", 
  -326448303)), n = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "req-keys", "req-keys", 514319221)), p = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "opt-specs", "opt-specs", -384905450)), q = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "pred-forms", "pred-forms", 172611832)), r = cljs.core.zipmap.call(null, cljs.core.concat.call(null, n, k), cljs.core.concat.call(null, l, p)), t = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    return function(b) {
      var c = a.call(null, b);
      return cljs.core.truth_(c) ? c : b;
    };
  }(r, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), u = cljs.core.random_uuid.call(null);
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha17958 && (cljs.spec.alpha.t_cljs$spec$alpha17958 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E, O) {
    this.keys__GT_specnames = a;
    this.opt = b;
    this.req_un = c;
    this.opt_un = d;
    this.p__17955 = e;
    this.gfn = f;
    this.pred_exprs = g;
    this.keys_pred = h;
    this.argm = k;
    this.opt_keys = l;
    this.req_specs = m;
    this.req = n;
    this.id = p;
    this.req_keys = q;
    this.opt_specs = r;
    this.map__17956 = t;
    this.k__GT_s = u;
    this.pred_forms = E;
    this.meta17959 = O;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha17958(this.keys__GT_specnames, this.opt, this.req_un, this.opt_un, this.p__17955, this.gfn, this.pred_exprs, this.keys_pred, this.argm, this.opt_keys, this.req_specs, this.req, this.id, this.req_keys, this.opt_specs, this.map__17956, this.k__GT_s, this.pred_forms, b);
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a) {
      return this.meta17959;
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a) {
      return this;
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a, b) {
      return this;
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a, b) {
      if (cljs.core.truth_(this.keys_pred.call(null, b))) {
        a = cljs.spec.alpha.registry.call(null);
        var c = cljs.core.seq.call(null, b), d = cljs.core.first.call(null, c);
        cljs.core.next.call(null, c);
        cljs.core.nth.call(null, d, 0, null);
        cljs.core.nth.call(null, d, 1, null);
        for (d = c = b;;) {
          b = c;
          var e = cljs.core.seq.call(null, d);
          c = cljs.core.first.call(null, e);
          var f = cljs.core.next.call(null, e);
          e = c;
          c = cljs.core.nth.call(null, e, 0, null);
          e = cljs.core.nth.call(null, e, 1, null);
          if (cljs.core.truth_(d)) {
            if (d = this.keys__GT_specnames.call(null, c), d = cljs.core.get.call(null, a, d), cljs.core.truth_(d)) {
              d = cljs.spec.alpha.conform.call(null, d, e);
              if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, d))) {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              }
              b = d === e ? b : cljs.core.assoc.call(null, b, c, d);
              d = f;
              c = b;
            } else {
              d = f, c = b;
            }
          } else {
            return b;
          }
        }
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a, b) {
      a = cljs.spec.alpha.registry.call(null);
      var c = cljs.core.keys.call(null, b), d = cljs.core.seq.call(null, c);
      cljs.core.first.call(null, d);
      cljs.core.next.call(null, d);
      for (d = b;;) {
        var e = cljs.core.seq.call(null, c), f = cljs.core.first.call(null, e);
        e = cljs.core.next.call(null, e);
        if (cljs.core.truth_(c)) {
          if (cljs.core.contains_QMARK_.call(null, a, this.keys__GT_specnames.call(null, f))) {
            c = cljs.core.get.call(null, b, f);
            var g = cljs.spec.alpha.unform.call(null, this.keys__GT_specnames.call(null, f), c);
            d = c === g ? d : cljs.core.assoc.call(null, d, f, g);
            c = e;
          } else {
            c = e;
          }
        } else {
          return d;
        }
      }
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(v, w, y, x, z) {
      var A = this, C = this;
      if (cljs.core.map_QMARK_.call(null, z)) {
        var D = cljs.spec.alpha.registry.call(null);
        return cljs.core.apply.call(null, cljs.core.concat, function() {
          var v = cljs.core.seq.call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, y) {
            return function(a, b) {
              return cljs.core.truth_(a.call(null, z)) ? null : b;
            };
          }(D, C, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E), A.pred_exprs, A.pred_forms)));
          return v ? cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, A, C, D, E) {
            return function(a) {
              return cljs.core.identity.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), w, new cljs.core.Keyword(null, "pred", "pred", 1927423397), a, new cljs.core.Keyword(null, "val", "val", 128701612), z, new cljs.core.Keyword(null, "via", "via", -1904457336), y, new cljs.core.Keyword(null, "in", "in", -1531184865), x], null));
            };
          }(v, v, D, C, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E), v) : null;
        }(), cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, z, C) {
          return function(b) {
            var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null);
            return cljs.core.truth_(function() {
              var b = !cljs.core.contains_QMARK_.call(null, a, A.keys__GT_specnames.call(null, c));
              return b ? b : cljs.spec.alpha.pvalid_QMARK_.call(null, A.keys__GT_specnames.call(null, c), d, c);
            }()) ? null : cljs.spec.alpha.explain_1.call(null, A.keys__GT_specnames.call(null, c), A.keys__GT_specnames.call(null, c), cljs.core.conj.call(null, w, c), y, cljs.core.conj.call(null, x, c), d);
          };
        }(D, C, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E), cljs.core.seq.call(null, z)));
      }
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), w, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Keyword(null, "val", "val", 128701612), z, new cljs.core.Keyword(null, "via", "via", -1904457336), y, new cljs.core.Keyword(null, "in", "in", -1531184865), x], null)], 
      null);
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(v, w, y, x) {
      var z = this;
      if (cljs.core.truth_(z.gfn)) {
        return z.gfn.call(null);
      }
      v = cljs.spec.alpha.inck.call(null, x, z.id);
      x = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, x, z) {
        return function(b, c) {
          return cljs.spec.alpha.gensub.call(null, c, w, cljs.core.conj.call(null, y, b), a, b);
        };
      }(v, this, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E);
      var A = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, x, A, C) {
        return function(D, E) {
          return cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, a, z.id, y, D)) ? null : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [D, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, x, z, A) {
            return function() {
              return cljs.spec.alpha.gensub.call(null, E, w, cljs.core.conj.call(null, y, D), a, D);
            };
          }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, x, A, C), null))], null);
        };
      }(v, x, this, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E), C = cljs.core.map.call(null, x, z.req_keys, z.req_specs), D = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, A, z.opt_keys, z.opt_specs));
      if (cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.concat.call(null, C, D))) {
        var B = cljs.core.zipmap.call(null, z.req_keys, C), G = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, D);
        return cljs.spec.gen.alpha.bind.call(null, cljs.spec.gen.alpha.choose.call(null, 0, cljs.core.count.call(null, G)), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C, D, E) {
          return function(c) {
            var d = cljs.core.concat.call(null, cljs.core.seq.call(null, a), cljs.core.seq.call(null, b) ? cljs.core.shuffle.call(null, cljs.core.seq.call(null, b)) : null);
            return cljs.core.apply.call(null, cljs.spec.gen.alpha.hash_map, cljs.core.apply.call(null, cljs.core.concat, cljs.core.take.call(null, c + cljs.core.count.call(null, a), d)));
          };
        }(B, G, v, x, A, C, D, this, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E));
      }
      return null;
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a, b) {
      return cljs.spec.alpha.map_spec_impl.call(null, cljs.core.assoc.call(null, this.argm, new cljs.core.Keyword(null, "gfn", "gfn", 791517474), b));
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a) {
      var b = this;
      return cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "keys", "cljs.spec.alpha/keys", 1109346032, null), function() {
        var a = cljs.core.PersistentVector.EMPTY;
        a = cljs.core.truth_(b.req) ? cljs.core.conj.call(null, a, new cljs.core.Keyword(null, "req", "req", -326448303), b.req) : a;
        a = cljs.core.truth_(b.opt) ? cljs.core.conj.call(null, a, new cljs.core.Keyword(null, "opt", "opt", -794706369), b.opt) : a;
        a = cljs.core.truth_(b.req_un) ? cljs.core.conj.call(null, a, new cljs.core.Keyword(null, "req-un", "req-un", 1074571008), b.req_un) : a;
        return cljs.core.truth_(b.opt_un) ? cljs.core.conj.call(null, a, new cljs.core.Keyword(null, "opt-un", "opt-un", 883442496), b.opt_un) : a;
      }());
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.getBasis = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function() {
      return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys-\x3especnames", "keys-\x3especnames", 1791294693, null), new cljs.core.Symbol(null, "opt", "opt", 845825158, null), new cljs.core.Symbol(null, "req-un", "req-un", -1579864761, null), new cljs.core.Symbol(null, "opt-un", "opt-un", -1770993273, null), new cljs.core.Symbol(null, "p__17955", "p__17955", -564475161, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, 
      null), new cljs.core.Symbol(null, "pred-exprs", "pred-exprs", -862164374, null), new cljs.core.Symbol(null, "keys-pred", "keys-pred", -1795451030, null), new cljs.core.Symbol(null, "argm", "argm", -181546357, null), new cljs.core.Symbol(null, "opt-keys", "opt-keys", -1391747508, null), new cljs.core.Symbol(null, "req-specs", "req-specs", -2100473456, null), new cljs.core.Symbol(null, "req", "req", 1314083224, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, 
      "req-keys", "req-keys", -2140116548, null), new cljs.core.Symbol(null, "opt-specs", "opt-specs", 1255626077, null), new cljs.core.Symbol(null, "map__17956", "map__17956", 530614142, null), new cljs.core.Symbol(null, "k-\x3es", "k-\x3es", -1685112801, null), new cljs.core.Symbol(null, "pred-forms", "pred-forms", 1813143359, null), new cljs.core.Symbol(null, "meta17959", "meta17959", 101694696, null)], null);
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.t_cljs$spec$alpha17958.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha17958.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha17958", cljs.spec.alpha.t_cljs$spec$alpha17958.cljs$lang$ctorPrWriter = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha17958");
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q), cljs.spec.alpha.__GT_t_cljs$spec$alpha17958 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, E) {
    return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w) {
      return new cljs.spec.alpha.t_cljs$spec$alpha17958(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w);
    };
  }(r, t, u, a, b, b, c, d, e, f, g, h, k, l, m, n, p, q));
  return new cljs.spec.alpha.t_cljs$spec$alpha17958(t, c, d, e, a, f, g, h, b, k, l, m, u, n, p, b, r, q, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.spec_impl = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.spec.alpha.spec_impl.call(null, a, b, c, d, null);
};
cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (cljs.core.truth_(cljs.spec.alpha.spec_QMARK_.call(null, b))) {
    return cljs.core.truth_(c) ? cljs.spec.alpha.with_gen.call(null, b, c) : b;
  }
  if (cljs.core.truth_(cljs.spec.alpha.regex_QMARK_.call(null, b))) {
    return cljs.spec.alpha.regex_spec_impl.call(null, b, c);
  }
  if (cljs.core.ident_QMARK_.call(null, b)) {
    return a = cljs.spec.alpha.the_spec.call(null, b), cljs.core.truth_(c) ? cljs.spec.alpha.with_gen.call(null, a, c) : a;
  }
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18007 && (cljs.spec.alpha.t_cljs$spec$alpha18007 = function(a, b, c, d, e, m) {
    this.form = a;
    this.pred = b;
    this.gfn = c;
    this.cpred_QMARK_ = d;
    this.unc = e;
    this.meta18008 = m;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.spec.alpha.t_cljs$spec$alpha18007(this.form, this.pred, this.gfn, this.cpred_QMARK_, this.unc, b);
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta18008;
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
    return this;
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b) {
    return this;
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b) {
    a = this.pred.call(null, b);
    return cljs.core.truth_(this.cpred_QMARK_) ? a : cljs.core.truth_(a) ? b : new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b) {
    if (cljs.core.truth_(this.cpred_QMARK_)) {
      if (cljs.core.truth_(this.unc)) {
        return this.unc.call(null, b);
      }
      throw Error("no unform fn for conformer");
    }
    return b;
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b, c, d, e) {
    return cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, cljs.spec.alpha.dt.call(null, this.pred, e, this.form, this.cpred_QMARK_))) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), b, new cljs.core.Keyword(null, "pred", "pred", 1927423397), this.form, new cljs.core.Keyword(null, "val", "val", 128701612), e, new cljs.core.Keyword(null, "via", "via", 
    -1904457336), c, new cljs.core.Keyword(null, "in", "in", -1531184865), d], null)], null) : null;
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b, c, d) {
    return cljs.core.truth_(this.gfn) ? this.gfn.call(null) : cljs.spec.gen.alpha.gen_for_pred.call(null, this.pred);
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b) {
    return cljs.spec.alpha.spec_impl.call(null, this.form, this.pred, b, this.cpred_QMARK_, this.unc);
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a) {
    return this.form;
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.getBasis = function() {
    return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "cpred?", "cpred?", 35589515, null), new cljs.core.Symbol(null, "unc", "unc", -465250751, null), new cljs.core.Symbol(null, "meta18008", "meta18008", -1766029569, null)], null);
  }, cljs.spec.alpha.t_cljs$spec$alpha18007.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18007.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18007", cljs.spec.alpha.t_cljs$spec$alpha18007.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18007");
  }, cljs.spec.alpha.__GT_t_cljs$spec$alpha18007 = function(a, b, c, d, e, m) {
    return new cljs.spec.alpha.t_cljs$spec$alpha18007(a, b, c, d, e, m);
  });
  return new cljs.spec.alpha.t_cljs$spec$alpha18007(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.spec_impl.cljs$lang$maxFixedArity = 5;
cljs.spec.alpha.multi_spec_impl = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.spec.alpha.multi_spec_impl.call(null, a, b, c, null);
};
cljs.spec.alpha.multi_spec_impl.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core.random_uuid.call(null), f = function(a) {
    return function(a) {
      var c = cljs.core.deref.call(null, b), d = cljs.core._get_method.call(null, c, cljs.core._dispatch_fn.call(null, c).call(null, a));
      return cljs.core.truth_(d) ? c.call(null, a) : d;
    };
  }(e), g = function(a, c) {
    return function(a) {
      return cljs.core._dispatch_fn.call(null, cljs.core.deref.call(null, b)).call(null, a);
    };
  }(e, f), h = c instanceof cljs.core.Keyword ? function(a, b, d) {
    return function(a, b) {
      return cljs.core.assoc.call(null, a, c, b);
    };
  }(e, f, g) : c;
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18018 && (cljs.spec.alpha.t_cljs$spec$alpha18018 = function(a, b, c, d, e, f, g, h, u) {
    this.form = a;
    this.mmvar = b;
    this.retag = c;
    this.gfn = d;
    this.id = e;
    this.predx = f;
    this.dval = g;
    this.tag = h;
    this.meta18019 = u;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18018(this.form, this.mmvar, this.retag, this.gfn, this.id, this.predx, this.dval, this.tag, b);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b, c, d) {
    return function(a) {
      return this.meta18019;
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a, b, c, d) {
    return function(a) {
      return this;
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      return this;
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      a = this.predx.call(null, b);
      return cljs.core.truth_(a) ? cljs.spec.alpha.dt.call(null, a, b, this.form) : new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      a = this.predx.call(null, b);
      if (cljs.core.truth_(a)) {
        return cljs.spec.alpha.unform.call(null, a, b);
      }
      throw Error(["No method of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.form), " for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.dval.call(null, b))].join(""));
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b, c, d) {
    return function(a, b, c, d, e) {
      a = this.dval.call(null, e);
      b = cljs.core.conj.call(null, b, a);
      a = this.predx.call(null, e);
      return cljs.core.truth_(a) ? cljs.spec.alpha.explain_1.call(null, this.form, a, b, c, d, e) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), b, new cljs.core.Keyword(null, "pred", "pred", 1927423397), this.form, new cljs.core.Keyword(null, "val", "val", 128701612), e, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "no method", new cljs.core.Keyword(null, 
      "via", "via", -1904457336), c, new cljs.core.Keyword(null, "in", "in", -1531184865), d], null)], null);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b, c, d) {
    return function(e, f, g, h) {
      var k = this;
      if (cljs.core.truth_(k.gfn)) {
        return k.gfn.call(null);
      }
      e = function(a, b, c, d, e) {
        return function(l) {
          var m = cljs.core.nth.call(null, l, 0, null), n = cljs.core.nth.call(null, l, 1, null), p = n.call(null, null), q = cljs.spec.alpha.inck.call(null, h, k.id);
          return cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, q, k.id, g, m)) ? null : cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(a, b, c, d, e, h, l, m, n, p) {
            return function() {
              return cljs.spec.gen.alpha.fmap.call(null, function(a, b, c, d, e, f, g, h, l, m) {
                return function(a) {
                  return k.tag.call(null, a, d);
                };
              }(a, b, c, d, e, h, l, m, n, p), cljs.spec.alpha.gensub.call(null, b, f, cljs.core.conj.call(null, g, d), a, new cljs.core.List(null, new cljs.core.Symbol(null, "method", "method", 1696235119, null), new cljs.core.List(null, k.form, new cljs.core.List(null, d, null, 1, null), 2, null), 3, null)));
            };
          }(q, p, l, m, n, a, b, c, d, e), null));
        };
      }(this, a, b, c, d);
      e = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, e, cljs.core.remove.call(null, function(a, b, c, d, e, f) {
        return function(a) {
          a = cljs.core.nth.call(null, a, 0, null);
          return cljs.spec.alpha.invalid_QMARK_.call(null, a);
        };
      }(e, this, a, b, c, d), cljs.core.methods$.call(null, cljs.core.deref.call(null, k.mmvar)))));
      return cljs.core.every_QMARK_.call(null, cljs.core.identity, e) ? cljs.spec.gen.alpha.one_of.call(null, e) : null;
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      return cljs.spec.alpha.multi_spec_impl.call(null, this.form, this.mmvar, this.retag, b);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a, b, c, d) {
    return function(a) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "multi-spec", "cljs.spec.alpha/multi-spec", 175821274, null), null, 1, null), new cljs.core.List(null, this.form, null, 1, null), new cljs.core.List(null, this.retag, null, 1, null))));
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.getBasis = function(a, b, c, d) {
    return function() {
      return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "mmvar", "mmvar", -1714325675, null), new cljs.core.Symbol(null, "retag", "retag", 528972725, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "predx", "predx", 2063470948, null), new cljs.core.Symbol(null, "dval", 
      "dval", 835211877, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "meta18019", "meta18019", -1933057879, null)], null);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18018.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18018.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18018", cljs.spec.alpha.t_cljs$spec$alpha18018.cljs$lang$ctorPrWriter = function(a, b, c, d) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18018");
    };
  }(e, f, g, h), cljs.spec.alpha.__GT_t_cljs$spec$alpha18018 = function(a, b, c, d) {
    return function(a, b, c, d, e, f, g, h, k) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18018(a, b, c, d, e, f, g, h, k);
    };
  }(e, f, g, h));
  return new cljs.spec.alpha.t_cljs$spec$alpha18018(a, b, c, d, e, f, g, h, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.multi_spec_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.tuple_impl = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.spec.alpha.tuple_impl.call(null, a, b, null);
};
cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, b, a);
  }, null), e = cljs.core.count.call(null, b);
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18032 && (cljs.spec.alpha.t_cljs$spec$alpha18032 = function(a, b, c, d, e, m) {
    this.forms = a;
    this.preds = b;
    this.gfn = c;
    this.specs = d;
    this.cnt = e;
    this.meta18033 = m;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18032(this.forms, this.preds, this.gfn, this.specs, this.cnt, b);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b) {
    return function(a) {
      return this.meta18033;
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a, b) {
    return function(a) {
      return this;
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b) {
    return function(a, b) {
      return this;
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b) {
    return function(a, b) {
      a = cljs.core.deref.call(null, this.specs);
      if (cljs.core.vector_QMARK_.call(null, b) && cljs.core._EQ_.call(null, cljs.core.count.call(null, b), this.cnt)) {
        for (var c = b, d = 0;;) {
          if (cljs.core._EQ_.call(null, d, this.cnt)) {
            return c;
          }
          var e = b.call(null, d), f = cljs.spec.alpha.conform_STAR_.call(null, a.call(null, d), e);
          if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, f))) {
            return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
          }
          c = f === e ? c : cljs.core.assoc.call(null, c, d, f);
          d += 1;
        }
      } else {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b) {
    return function(a, b) {
      if (!cljs.core.vector_QMARK_.call(null, b) || !cljs.core._EQ_.call(null, cljs.core.count.call(null, b), cljs.core.count.call(null, this.preds))) {
        throw Error("Assert failed: (c/and (vector? x) (\x3d (count x) (count preds)))");
      }
      a = b;
      for (var c = 0;;) {
        if (cljs.core._EQ_.call(null, c, cljs.core.count.call(null, b))) {
          return a;
        }
        var d = b.call(null, c), e = cljs.spec.alpha.unform.call(null, this.preds.call(null, c), d);
        a = d === e ? a : cljs.core.assoc.call(null, a, c, e);
        c += 1;
      }
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b) {
    return function(c, d, e, f, g) {
      return cljs.core.vector_QMARK_.call(null, g) ? cljs.core.not_EQ_.call(null, cljs.core.count.call(null, g), cljs.core.count.call(null, this.preds)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), d, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
      new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.count.call(null, this.preds), 
      null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), g, new cljs.core.Keyword(null, "via", "via", -1904457336), e, new cljs.core.Keyword(null, "in", "in", -1531184865), f], null)], null) : cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(a, b, c) {
        return function(a, b, c) {
          var h = g.call(null, a);
          return cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, c, h)) ? null : cljs.spec.alpha.explain_1.call(null, b, c, cljs.core.conj.call(null, d, a), e, cljs.core.conj.call(null, f, a), h);
        };
      }(this, a, b), cljs.core.range.call(null, cljs.core.count.call(null, this.preds)), this.forms, this.preds)) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), d, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Keyword(null, "val", "val", 128701612), g, new cljs.core.Keyword(null, 
      "via", "via", -1904457336), e, new cljs.core.Keyword(null, "in", "in", -1531184865), f], null)], null);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b) {
    return function(c, d, e, f) {
      if (cljs.core.truth_(this.gfn)) {
        return this.gfn.call(null);
      }
      c = function(a, b, c) {
        return function(a, b, c) {
          return cljs.spec.alpha.gensub.call(null, b, d, cljs.core.conj.call(null, e, a), f, c);
        };
      }(this, a, b);
      c = cljs.core.map.call(null, c, cljs.core.range.call(null, cljs.core.count.call(null, this.preds)), this.preds, this.forms);
      return cljs.core.every_QMARK_.call(null, cljs.core.identity, c) ? cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, c) : null;
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b) {
    return function(a, b) {
      return cljs.spec.alpha.tuple_impl.call(null, this.forms, this.preds, b);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a, b) {
    return function(a) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "tuple", "cljs.spec.alpha/tuple", -415901908, null), null, 1, null), this.forms)));
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.getBasis = function(a, b) {
    return function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta18033", "meta18033", 1228196088, null)], null);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18032.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18032.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18032", cljs.spec.alpha.t_cljs$spec$alpha18032.cljs$lang$ctorPrWriter = function(a, b) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18032");
    };
  }(d, e), cljs.spec.alpha.__GT_t_cljs$spec$alpha18032 = function(a, b) {
    return function(a, b, c, d, e, f) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18032(a, b, c, d, e, f);
    };
  }(d, e));
  return new cljs.spec.alpha.t_cljs$spec$alpha18032(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.tuple_impl.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.tagged_ret = function(a, b) {
  return new cljs.core.MapEntry(a, b, null);
};
cljs.spec.alpha.or_spec_impl = function(a, b, c, d) {
  var e = cljs.core.random_uuid.call(null), f = cljs.core.zipmap.call(null, a, c), g = new cljs.core.Delay(function(a, d) {
    return function() {
      return cljs.core.mapv.call(null, cljs.spec.alpha.specize, c, b);
    };
  }(e, f), null), h = function() {
    var b = cljs.core.count.call(null, c);
    switch(b) {
      case 2:
        return function(b, c, d, e) {
          return function(b) {
            var c = cljs.core.deref.call(null, e), d = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 0), b);
            return cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, d)) ? (b = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 1), b), cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, b)) ? new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119) : cljs.spec.alpha.tagged_ret.call(null, a.call(null, 1), b)) : cljs.spec.alpha.tagged_ret.call(null, a.call(null, 0), d);
          };
        }(b, e, f, g);
      case 3:
        return function(b, c, d, e) {
          return function(b) {
            var c = cljs.core.deref.call(null, e), d = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 0), b);
            return cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, d)) ? (d = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 1), b), cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, d)) ? (b = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 2), b), cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, b)) ? new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119) : cljs.spec.alpha.tagged_ret.call(null, a.call(null, 2), b)) : 
            cljs.spec.alpha.tagged_ret.call(null, a.call(null, 1), d)) : cljs.spec.alpha.tagged_ret.call(null, a.call(null, 0), d);
          };
        }(b, e, f, g);
      default:
        return function(b, c, d, e) {
          return function(b) {
            for (var c = cljs.core.deref.call(null, e), d = 0;;) {
              if (d < cljs.core.count.call(null, c)) {
                var f = c.call(null, d);
                f = cljs.spec.alpha.conform_STAR_.call(null, f, b);
                if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, f))) {
                  d += 1;
                } else {
                  return cljs.spec.alpha.tagged_ret.call(null, a.call(null, d), f);
                }
              } else {
                return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
              }
            }
          };
        }(b, e, f, g);
    }
  }();
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18041 && (cljs.spec.alpha.t_cljs$spec$alpha18041 = function(a, b, c, d, e, f, g, h, u) {
    this.keys = a;
    this.forms = b;
    this.preds = c;
    this.gfn = d;
    this.id = e;
    this.kps = f;
    this.specs = g;
    this.cform = h;
    this.meta18042 = u;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18041(this.keys, this.forms, this.preds, this.gfn, this.id, this.kps, this.specs, this.cform, b);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b, c, d) {
    return function(a) {
      return this.meta18042;
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a, b, c, d) {
    return function(a) {
      return this;
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      return this;
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      return this.cform.call(null, b);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      a = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.spec.alpha.unform.call(null, this.kps.call(null, a), b);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b, c, d) {
    return function(e, f, g, h, k) {
      return cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, this, k)) ? null : cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(a, b, c, d, e) {
        return function(a, b, c) {
          return cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, c, k)) ? null : cljs.spec.alpha.explain_1.call(null, b, c, cljs.core.conj.call(null, f, a), g, h, k);
        };
      }(this, a, b, c, d), this.keys, this.forms, this.preds));
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b, c, d) {
    return function(e, f, g, h) {
      var k = this;
      if (cljs.core.truth_(k.gfn)) {
        return k.gfn.call(null);
      }
      e = function(a, b, c, d, e) {
        return function(l, m, n) {
          var p = cljs.spec.alpha.inck.call(null, h, k.id);
          return cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, p, k.id, g, l)) ? null : cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(a, b, c, d, e, h) {
            return function() {
              return cljs.spec.alpha.gensub.call(null, m, f, cljs.core.conj.call(null, g, l), a, n);
            };
          }(p, a, b, c, d, e), null));
        };
      }(this, a, b, c, d);
      e = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, e, k.keys, k.preds, k.forms));
      return cljs.core.empty_QMARK_.call(null, e) ? null : cljs.spec.gen.alpha.one_of.call(null, e);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b, c, d) {
    return function(a, b) {
      return cljs.spec.alpha.or_spec_impl.call(null, this.keys, this.forms, this.preds, b);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a, b, c, d) {
    return function(a) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "or", "cljs.spec.alpha/or", -831679639, null), null, 1, null), cljs.core.mapcat.call(null, cljs.core.vector, this.keys, this.forms))));
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.getBasis = function(a, b, c, d) {
    return function() {
      return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "kps", "kps", -1157342767, null), new cljs.core.Symbol(null, "specs", 
      "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta18042", "meta18042", -1910346310, null)], null);
    };
  }(e, f, g, h), cljs.spec.alpha.t_cljs$spec$alpha18041.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18041.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18041", cljs.spec.alpha.t_cljs$spec$alpha18041.cljs$lang$ctorPrWriter = function(a, b, c, d) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18041");
    };
  }(e, f, g, h), cljs.spec.alpha.__GT_t_cljs$spec$alpha18041 = function(a, b, c, d) {
    return function(a, b, c, d, e, f, g, h, k) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18041(a, b, c, d, e, f, g, h, k);
    };
  }(e, f, g, h));
  return new cljs.spec.alpha.t_cljs$spec$alpha18041(a, b, c, d, e, f, g, h, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.and_preds = function(a, b, c) {
  var d = cljs.core.seq.call(null, b);
  cljs.core.first.call(null, d);
  cljs.core.next.call(null, d);
  d = cljs.core.seq.call(null, c);
  cljs.core.first.call(null, d);
  cljs.core.next.call(null, d);
  for (d = c;;) {
    c = a;
    b = cljs.core.seq.call(null, b);
    a = cljs.core.first.call(null, b);
    b = cljs.core.next.call(null, b);
    var e = cljs.core.seq.call(null, d);
    d = cljs.core.first.call(null, e);
    e = cljs.core.next.call(null, e);
    var f = d;
    d = e;
    if (cljs.core.truth_(a)) {
      c = cljs.spec.alpha.dt.call(null, a, c, f);
      if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, c))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
      a = c;
    } else {
      return c;
    }
  }
};
cljs.spec.alpha.explain_pred_list = function(a, b, c, d, e, f) {
  var g = cljs.core.seq.call(null, a);
  cljs.core.first.call(null, g);
  cljs.core.next.call(null, g);
  g = cljs.core.seq.call(null, b);
  cljs.core.first.call(null, g);
  cljs.core.next.call(null, g);
  for (g = b;;) {
    b = f;
    a = cljs.core.seq.call(null, a);
    f = cljs.core.first.call(null, a);
    a = cljs.core.next.call(null, a);
    var h = cljs.core.seq.call(null, g);
    g = cljs.core.first.call(null, h);
    var k = cljs.core.next.call(null, h);
    h = g;
    if (cljs.core.truth_(h)) {
      g = cljs.spec.alpha.dt.call(null, h, b, f);
      if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, g))) {
        return cljs.spec.alpha.explain_1.call(null, f, h, c, d, e, b);
      }
      b = a;
      h = k;
      f = g;
      a = b;
      g = h;
    } else {
      return null;
    }
  }
};
cljs.spec.alpha.and_spec_impl = function(a, b, c) {
  var d = new cljs.core.Delay(function() {
    return cljs.core.mapv.call(null, cljs.spec.alpha.specize, b, a);
  }, null), e = function() {
    var a = cljs.core.count.call(null, b);
    switch(a) {
      case 2:
        return function(a, b) {
          return function(a) {
            var c = cljs.core.deref.call(null, b);
            a = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 0), a);
            return cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, a)) ? new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119) : cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 1), a);
          };
        }(a, d);
      case 3:
        return function(a, b) {
          return function(a) {
            var c = cljs.core.deref.call(null, b);
            a = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 0), a);
            if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, a))) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            }
            a = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 1), a);
            return cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, a)) ? new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119) : cljs.spec.alpha.conform_STAR_.call(null, c.call(null, 2), a);
          };
        }(a, d);
      default:
        return function(a, b) {
          return function(a) {
            for (var c = cljs.core.deref.call(null, b), d = 0;;) {
              if (d < cljs.core.count.call(null, c)) {
                a = cljs.spec.alpha.conform_STAR_.call(null, c.call(null, d), a);
                if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, a))) {
                  return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
                }
                d += 1;
              } else {
                return a;
              }
            }
          };
        }(a, d);
    }
  }();
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18099 && (cljs.spec.alpha.t_cljs$spec$alpha18099 = function(a, b, c, d, e, m) {
    this.forms = a;
    this.preds = b;
    this.gfn = c;
    this.specs = d;
    this.cform = e;
    this.meta18100 = m;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18099(this.forms, this.preds, this.gfn, this.specs, this.cform, b);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b) {
    return function(a) {
      return this.meta18100;
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a, b) {
    return function(a) {
      return this;
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b) {
    return function(a, b) {
      return this;
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b) {
    return function(a, b) {
      return this.cform.call(null, b);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b) {
    return function(c, d) {
      return cljs.core.reduce.call(null, function(a, b, c) {
        return function(a, b) {
          return cljs.spec.alpha.unform.call(null, b, a);
        };
      }(this, a, b), d, cljs.core.reverse.call(null, this.preds));
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b) {
    return function(a, b, c, d, e) {
      return cljs.spec.alpha.explain_pred_list.call(null, this.forms, this.preds, b, c, d, e);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b) {
    return function(a, b, c, d) {
      return cljs.core.truth_(this.gfn) ? this.gfn.call(null) : cljs.spec.alpha.gensub.call(null, cljs.core.first.call(null, this.preds), b, c, d, cljs.core.first.call(null, this.forms));
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b) {
    return function(a, b) {
      return cljs.spec.alpha.and_spec_impl.call(null, this.forms, this.preds, b);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a, b) {
    return function(a) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "and", "cljs.spec.alpha/and", -2060279705, null), null, 1, null), this.forms)));
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.getBasis = function(a, b) {
    return function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "cform", "cform", 1319506748, null), new cljs.core.Symbol(null, "meta18100", "meta18100", -1470845871, null)], null);
    };
  }(d, e), cljs.spec.alpha.t_cljs$spec$alpha18099.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18099.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18099", cljs.spec.alpha.t_cljs$spec$alpha18099.cljs$lang$ctorPrWriter = function(a, b) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18099");
    };
  }(d, e), cljs.spec.alpha.__GT_t_cljs$spec$alpha18099 = function(a, b) {
    return function(a, b, c, d, e, f) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18099(a, b, c, d, e, f);
    };
  }(d, e));
  return new cljs.spec.alpha.t_cljs$spec$alpha18099(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.coll_prob = function(a, b, c, d, e, f, g, h, k, l) {
  b = cljs.core.truth_(b) ? b : cljs.core.coll_QMARK_;
  c = cljs.core.truth_(c) ? c : new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null);
  return cljs.core.not.call(null, cljs.spec.alpha.pvalid_QMARK_.call(null, b, a)) ? cljs.spec.alpha.explain_1.call(null, c, b, h, k, l, a) : cljs.core.truth_(cljs.core.truth_(e) ? cljs.core.not_EQ_.call(null, e, cljs.core.bounded_count.call(null, e, a)) : e) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), h, new cljs.core.Keyword(null, "pred", "pred", 1927423397), 
  cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null), null, 1, null), new cljs.core.List(null, e, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, 
  new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 128701612), a, new cljs.core.Keyword(null, "via", "via", -1904457336), k, new cljs.core.Keyword(null, "in", "in", -1531184865), l], null)], null) : cljs.core.truth_(function() {
    var b = cljs.core.truth_(f) ? f : g;
    return cljs.core.truth_(b) ? !((cljs.core.truth_(f) ? f : 0) <= cljs.core.bounded_count.call(null, cljs.core.truth_(g) ? g + 1 : f, a) && cljs.core.bounded_count.call(null, cljs.core.truth_(g) ? g + 1 : f, a) <= (cljs.core.truth_(g) ? g : 9007199254740991)) : b;
  }()) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), h, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "\x3c\x3d", "cljs.core/\x3c\x3d", 1677001748, null), null, 1, null), new cljs.core.List(null, cljs.core.truth_(f) ? 
  f : 0, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "%", "%", -950237169, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.truth_(g) ? g : 9007199254740991, null, 1, null)))), new cljs.core.Keyword(null, "val", "val", 
  128701612), a, new cljs.core.Keyword(null, "via", "via", -1904457336), k, new cljs.core.Keyword(null, "in", "in", -1531184865), l], null)], null) : cljs.core.truth_(cljs.core.truth_(d) ? !cljs.core.empty_QMARK_.call(null, a) && cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core.distinct_QMARK_, a)) : d) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), 
  h, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "distinct?", "distinct?", -1684357959, null), new cljs.core.Keyword(null, "val", "val", 128701612), a, new cljs.core.Keyword(null, "via", "via", -1904457336), k, new cljs.core.Keyword(null, "in", "in", -1531184865), l], null)], null) : null;
};
cljs.spec.alpha.merge_spec_impl = function(a, b, c) {
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18113 && (cljs.spec.alpha.t_cljs$spec$alpha18113 = function(a, b, c, g) {
    this.forms = a;
    this.preds = b;
    this.gfn = c;
    this.meta18114 = g;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.spec.alpha.t_cljs$spec$alpha18113(this.forms, this.preds, this.gfn, b);
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta18114;
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
    return this;
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b) {
    return this;
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b) {
    a = cljs.core.map.call(null, function(a) {
      return function(a, c) {
        return cljs.spec.alpha.dt.call(null, a, b, c);
      };
    }(this), this.preds, this.forms);
    return cljs.core.truth_(cljs.core.some.call(null, cljs.spec.alpha.invalid_QMARK_, a)) ? new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119) : cljs.core.apply.call(null, cljs.core.merge, a);
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b) {
    return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, function(a) {
      return function(a) {
        return cljs.spec.alpha.unform.call(null, a, b);
      };
    }(this), cljs.core.reverse.call(null, this.preds)));
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b, c, g, h) {
    return cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(a) {
      return function(a, d) {
        return cljs.spec.alpha.explain_1.call(null, a, d, b, c, g, h);
      };
    }(this), this.forms, this.preds));
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b, c, g) {
    return cljs.core.truth_(this.gfn) ? this.gfn.call(null) : cljs.spec.gen.alpha.fmap.call(null, function(a) {
      return function(a) {
        return cljs.core.apply.call(null, cljs.core.merge, a);
      };
    }(this), cljs.core.apply.call(null, cljs.spec.gen.alpha.tuple, cljs.core.map.call(null, function(a) {
      return function(a, d) {
        return cljs.spec.alpha.gensub.call(null, a, b, c, g, d);
      };
    }(this), this.preds, this.forms)));
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b) {
    return cljs.spec.alpha.merge_spec_impl.call(null, this.forms, this.preds, b);
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "merge", "cljs.spec.alpha/merge", 1420080689, null), null, 1, null), this.forms)));
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.getBasis = function() {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "preds", "preds", 150921777, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta18114", "meta18114", -1047146035, null)], null);
  }, cljs.spec.alpha.t_cljs$spec$alpha18113.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18113.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18113", cljs.spec.alpha.t_cljs$spec$alpha18113.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18113");
  }, cljs.spec.alpha.__GT_t_cljs$spec$alpha18113 = function(a, b, c, g) {
    return new cljs.spec.alpha.t_cljs$spec$alpha18113(a, b, c, g);
  });
  return new cljs.spec.alpha.t_cljs$spec$alpha18113(a, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.every_impl = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.spec.alpha.every_impl.call(null, a, b, c, null);
};
cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "max-count", "max-count", 1539185305)), g = cljs.core.get.call(null, e, new cljs.core.Keyword("cljs.spec.alpha", "kind-form", "cljs.spec.alpha/kind-form", -1047104697)), h = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "gen-max", "gen-max", -793680445), 
  20), k = cljs.core.get.call(null, e, new cljs.core.Keyword("cljs.spec.alpha", "cpred", "cljs.spec.alpha/cpred", -693471218)), l = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "conform-keys", "conform-keys", -1800041814)), m = cljs.core.get.call(null, e, new cljs.core.Keyword("cljs.spec.alpha", "describe", "cljs.spec.alpha/describe", 1883026911)), n = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "distinct", "distinct", -1788879121)), p = cljs.core.get.call(null, e, new cljs.core.Keyword("cljs.spec.alpha", 
  "kfn", "cljs.spec.alpha/kfn", 672643897)), q = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "into", "into", -150836029)), r = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "count", "count", 2139924085)), t = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "min-count", "min-count", 1594709013)), u = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "kind", "kind", -717265803)), v = cljs.core.get.call(null, e, new cljs.core.Keyword("cljs.spec.alpha", "conform-all", 
  "cljs.spec.alpha/conform-all", 45201917)), w = new cljs.core.Delay(function(a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
    return function() {
      return cljs.spec.alpha.specize.call(null, b);
    };
  }(q, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), null), x = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v) {
    return function(a) {
      return cljs.spec.alpha.valid_QMARK_.call(null, cljs.core.deref.call(null, b), a);
    };
  }(q, w, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), y = function() {
    return cljs.core.truth_(p) ? p : function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
      return function(a, b) {
        return a;
      };
    }(p, q, w, x, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  }(), z = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
    return function(a, b, c, d) {
      return cljs.core.conj.call(null, a, d);
    };
  }(q, w, x, y, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), F = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
    return function(z) {
      return cljs.core.vector_QMARK_.call(null, z) && (cljs.core.not.call(null, a) || cljs.core.vector_QMARK_.call(null, a)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.identity, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
        return function(a, b, c, d) {
          return c === d ? a : cljs.core.assoc.call(null, a, b, d);
        };
      }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y), cljs.core.identity], null) : cljs.core.truth_(function() {
        var b = cljs.core.map_QMARK_.call(null, z);
        return b ? (b = cljs.core.truth_(x) ? cljs.core.not.call(null, a) : x, cljs.core.truth_(b) ? b : cljs.core.map_QMARK_.call(null, a)) : b;
      }()) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(p) ? cljs.core.empty : cljs.core.identity, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
        return function(a, b, c, d) {
          return c === d && cljs.core.not.call(null, p) ? a : cljs.core.assoc.call(null, a, cljs.core.nth.call(null, cljs.core.truth_(p) ? d : c, 0), cljs.core.nth.call(null, d, 1));
        };
      }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y), cljs.core.identity], null) : cljs.core.list_QMARK_.call(null, a) || cljs.core.seq_QMARK_.call(null, a) || cljs.core.not.call(null, a) && (cljs.core.list_QMARK_.call(null, z) || cljs.core.seq_QMARK_.call(null, z)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.empty, e, cljs.core.reverse], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(a, 
      b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y) {
        return function(b) {
          return cljs.core.empty.call(null, cljs.core.truth_(a) ? a : b);
        };
      }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y), e, cljs.core.identity], null);
    };
  }(q, w, x, y, z, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v);
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18125 && (cljs.spec.alpha.t_cljs$spec$alpha18125 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, F, ma, fa) {
    this.form = a;
    this.max_count = b;
    this.map__18123 = c;
    this.p__18122 = d;
    this.check_QMARK_ = e;
    this.gfn = f;
    this.gen_max = g;
    this.pred = h;
    this.cpred = k;
    this.conform_keys = l;
    this.kind_form = m;
    this.addcv = n;
    this.cfns = p;
    this.describe_form = q;
    this.distinct = r;
    this.spec = t;
    this.kfn = u;
    this.gen_into = v;
    this.count = w;
    this.min_count = x;
    this.opts = y;
    this.kind = z;
    this.conform_all = F;
    this.conform_into = ma;
    this.meta18126 = fa;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18125(this.form, this.max_count, this.map__18123, this.p__18122, this.check_QMARK_, this.gfn, this.gen_max, this.pred, this.cpred, this.conform_keys, this.kind_form, this.addcv, this.cfns, this.describe_form, this.distinct, this.spec, this.kfn, this.gen_into, this.count, this.min_count, this.opts, this.kind, this.conform_all, this.conform_into, b);
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a) {
      return this.meta18126;
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a) {
      return this;
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b) {
      return this;
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b) {
      a = cljs.core.deref.call(null, this.spec);
      if (cljs.core.not.call(null, this.cpred.call(null, b))) {
        return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
      }
      if (cljs.core.truth_(this.conform_all)) {
        var c = this.cfns.call(null, b), d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
        c = cljs.core.nth.call(null, c, 2, null);
        var f = d.call(null, b);
        d = 0;
        var g = cljs.core.seq.call(null, b);
        b = cljs.core.seq.call(null, g);
        cljs.core.first.call(null, b);
        cljs.core.next.call(null, b);
        for (b = f;;) {
          var h = g;
          f = cljs.core.seq.call(null, h);
          g = cljs.core.first.call(null, f);
          f = cljs.core.next.call(null, f);
          if (h) {
            h = cljs.spec.alpha.conform_STAR_.call(null, a, g);
            if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, h))) {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            }
            b = e.call(null, b, d, g, h);
            d += 1;
            g = f;
          } else {
            return c.call(null, b);
          }
        }
      } else {
        if (cljs.core.indexed_QMARK_.call(null, b)) {
          for (e = cljs.core.long$.call(null, cljs.core.count.call(null, b) / cljs.spec.alpha._STAR_coll_check_limit_STAR_), e = 1 > e ? 1 : e, d = 0;;) {
            if (d >= cljs.core.count.call(null, b)) {
              return b;
            }
            if (cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.call(null, a, cljs.core.nth.call(null, b, d)))) {
              d += e;
            } else {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            }
          }
        } else {
          for (e = cljs.spec.alpha._STAR_coll_check_limit_STAR_, d = 0, c = cljs.core.seq.call(null, b), g = cljs.core.seq.call(null, c), cljs.core.first.call(null, g), cljs.core.next.call(null, g);;) {
            f = cljs.core.seq.call(null, c);
            g = cljs.core.first.call(null, f);
            f = cljs.core.next.call(null, f);
            h = c;
            if (null == h || cljs.core._EQ_.call(null, d, e)) {
              return b;
            }
            if (cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.call(null, a, g))) {
              c = f, d += 1;
            } else {
              return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
            }
          }
        }
      }
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b) {
      if (cljs.core.truth_(this.conform_all)) {
        a = cljs.core.deref.call(null, this.spec);
        var c = this.cfns.call(null, b), d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
        c = cljs.core.nth.call(null, c, 2, null);
        d = d.call(null, b);
        var f = cljs.core.seq.call(null, b), g = cljs.core.seq.call(null, f);
        cljs.core.first.call(null, g);
        cljs.core.next.call(null, g);
        for (g = 0;;) {
          var h = cljs.core.seq.call(null, f);
          f = cljs.core.first.call(null, h);
          h = cljs.core.next.call(null, h);
          var k = f;
          f = h;
          if (g >= cljs.core.count.call(null, b)) {
            return c.call(null, d);
          }
          d = e.call(null, d, g, k, cljs.spec.alpha.unform_STAR_.call(null, a, k));
          g += 1;
        }
      } else {
        return b;
      }
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(A, C, D, E, F) {
      var B = this;
      A = cljs.spec.alpha.coll_prob.call(null, F, B.kind, B.kind_form, B.distinct, B.count, B.min_count, B.max_count, C, D, E);
      return cljs.core.truth_(A) ? A : cljs.core.apply.call(null, cljs.core.concat, (cljs.core.truth_(B.conform_all) ? cljs.core.identity : cljs.core.partial.call(null, cljs.core.take, cljs.spec.alpha._STAR_coll_error_limit_STAR_)).call(null, cljs.core.keep.call(null, cljs.core.identity, cljs.core.map.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, F) {
        return function(a, b) {
          a = B.kfn.call(null, a, b);
          return cljs.core.truth_(B.check_QMARK_.call(null, b)) ? null : cljs.spec.alpha.explain_1.call(null, B.form, B.pred, C, D, cljs.core.conj.call(null, E, a), b);
        };
      }(A, this, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z), cljs.core.range.call(null), F))));
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(A, C, D, E) {
      var B = this;
      if (cljs.core.truth_(B.gfn)) {
        return B.gfn.call(null);
      }
      A = cljs.spec.alpha.gensub.call(null, B.pred, C, D, E, B.form);
      return cljs.spec.gen.alpha.bind.call(null, cljs.core.truth_(B.gen_into) ? cljs.spec.gen.alpha.return$.call(null, cljs.core.empty.call(null, B.gen_into)) : cljs.core.truth_(B.kind) ? cljs.spec.gen.alpha.fmap.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, B) {
        return function(a) {
          return cljs.core.empty_QMARK_.call(null, a) ? a : cljs.core.empty.call(null, a);
        };
      }(A, this, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z), cljs.spec.alpha.gensub.call(null, B.kind, C, D, E, B.form)) : cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY), function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C) {
        return function(D) {
          return cljs.spec.gen.alpha.fmap.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, B) {
            return function(a) {
              return cljs.core.vector_QMARK_.call(null, D) ? a : cljs.core.into.call(null, D, a);
            };
          }(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, C), cljs.core.truth_(B.distinct) ? cljs.core.truth_(B.count) ? cljs.spec.gen.alpha.vector_distinct.call(null, a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "num-elements", "num-elements", 1960422107), B.count, new cljs.core.Keyword(null, "max-tries", "max-tries", -1824441792), 100], null)) : cljs.spec.gen.alpha.vector_distinct.call(null, a, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
          "min-elements", "min-elements", 949370780), function() {
            var a = B.min_count;
            return cljs.core.truth_(a) ? a : 0;
          }(), new cljs.core.Keyword(null, "max-elements", "max-elements", 433034073), function() {
            var a = B.max_count;
            if (cljs.core.truth_(a)) {
              return a;
            }
            a = B.gen_max;
            var b = B.min_count;
            b = cljs.core.truth_(b) ? b : 0;
            b *= 2;
            return a > b ? a : b;
          }(), new cljs.core.Keyword(null, "max-tries", "max-tries", -1824441792), 100], null)) : cljs.core.truth_(B.count) ? cljs.spec.gen.alpha.vector.call(null, a, B.count) : cljs.core.truth_(function() {
            var a = B.min_count;
            return cljs.core.truth_(a) ? a : B.max_count;
          }()) ? cljs.spec.gen.alpha.vector.call(null, a, function() {
            var a = B.min_count;
            return cljs.core.truth_(a) ? a : 0;
          }(), function() {
            var a = B.max_count;
            if (cljs.core.truth_(a)) {
              return a;
            }
            a = B.gen_max;
            var b = B.min_count;
            b = cljs.core.truth_(b) ? b : 0;
            b *= 2;
            return a > b ? a : b;
          }()) : cljs.spec.gen.alpha.vector.call(null, a, 0, B.gen_max));
        };
      }(A, this, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z));
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b) {
      return cljs.spec.alpha.every_impl.call(null, this.form, this.pred, this.opts, b);
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a) {
      a = this.describe_form;
      return cljs.core.truth_(a) ? a : cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "every", "cljs.spec.alpha/every", 123912744, null), null, 1, null), new cljs.core.List(null, this.form, null, 1, null), cljs.core.mapcat.call(null, cljs.core.identity, this.opts))));
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.getBasis = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function() {
      return new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "max-count", "max-count", -1115250464, null), new cljs.core.Symbol(null, "map__18123", "map__18123", 1804727107, null), new cljs.core.Symbol(null, "p__18122", "p__18122", -708931387, null), new cljs.core.Symbol(null, "check?", "check?", 409539557, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, 
      "gen-max", "gen-max", 846851082, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "cpred", "cpred", -540353554, null), new cljs.core.Symbol(null, "conform-keys", "conform-keys", -159510287, null), new cljs.core.Symbol(null, "kind-form", "kind-form", 1155997457, null), new cljs.core.Symbol(null, "addcv", "addcv", -1552991247, null), new cljs.core.Symbol(null, "cfns", "cfns", 1335482066, null), new cljs.core.Symbol(null, "describe-form", "describe-form", 
      -1410156588, null), new cljs.core.Symbol(null, "distinct", "distinct", -148347594, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "kfn", "kfn", 729311001, null), new cljs.core.Symbol(null, "gen-into", "gen-into", 592640985, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "min-count", "min-count", -1059726756, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, 
      "kind", "kind", 923265724, null), new cljs.core.Symbol(null, "conform-all", "conform-all", -980179459, null), new cljs.core.Symbol(null, "conform-into", "conform-into", -1039113729, null), new cljs.core.Symbol(null, "meta18126", "meta18126", -1109834210, null)], null);
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.t_cljs$spec$alpha18125.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18125.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18125", cljs.spec.alpha.t_cljs$spec$alpha18125.cljs$lang$ctorPrWriter = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18125");
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v), cljs.spec.alpha.__GT_t_cljs$spec$alpha18125 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z) {
    return function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, B, C) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18125(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x, y, z, A, B, C);
    };
  }(q, w, x, y, z, F, c, e, e, f, g, h, k, l, m, n, p, q, r, t, u, v));
  return new cljs.spec.alpha.t_cljs$spec$alpha18125(a, f, e, c, x, d, h, b, k, l, g, z, F, m, n, w, y, q, r, t, e, u, v, q, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.every_impl.cljs$lang$maxFixedArity = 4;
cljs.spec.alpha.accept = function(a) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), new cljs.core.Keyword(null, "ret", "ret", -468222814), a], null);
};
cljs.spec.alpha.accept_QMARK_ = function(a) {
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  a = cljs.core.get.call(null, a, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  return cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), a);
};
cljs.spec.alpha.pcat_STAR_ = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  a = cljs.core.seq.call(null, c);
  var d = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  var e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ks", "ks", 1900203942)), f = cljs.core.seq.call(null, e), g = cljs.core.first.call(null, f);
  f = cljs.core.next.call(null, f);
  var h = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "forms", "forms", 2045992350)), k = cljs.core.seq.call(null, h);
  cljs.core.first.call(null, k);
  k = cljs.core.next.call(null, k);
  var l = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "rep+", "rep+", -281382396));
  return cljs.core.every_QMARK_.call(null, cljs.core.identity, c) ? cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, d)) ? (c = (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(d), c = cljs.core.conj.call(null, l, cljs.core.truth_(e) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([g, c]) : c), a ? cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), a, new cljs.core.Keyword(null, 
  "ks", "ks", 1900203942), f, new cljs.core.Keyword(null, "forms", "forms", 2045992350), k, new cljs.core.Keyword(null, "ret", "ret", -468222814), c], null)) : cljs.spec.alpha.accept.call(null, c)) : new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), new cljs.core.Keyword(null, "ps", "ps", 292358046), c, new cljs.core.Keyword(null, "ret", "ret", 
  -468222814), l, new cljs.core.Keyword(null, "ks", "ks", 1900203942), e, new cljs.core.Keyword(null, "forms", "forms", 2045992350), h, new cljs.core.Keyword(null, "rep+", "rep+", -281382396), b], null) : null;
};
cljs.spec.alpha.pcat = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.spec.alpha.pcat.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ps", "ps", 292358046), a, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY], null));
};
cljs.spec.alpha.pcat.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.pcat.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.spec.alpha.cat_impl = function(a, b, c) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ks", "ks", 1900203942), a, new cljs.core.Keyword(null, "ps", "ps", 292358046), b, new cljs.core.Keyword(null, "forms", "forms", 2045992350), c, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.spec.alpha.rep_STAR_ = function(a, b, c, d, e) {
  return cljs.core.truth_(a) ? (d = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), new cljs.core.Keyword(null, "p2", "p2", 905500641), b, new cljs.core.Keyword(null, "splice", "splice", 449588165), d, new cljs.core.Keyword(null, "forms", "forms", 2045992350), e, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null)], 
  null), cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, a)) ? cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "p1", "p1", -936759954), b, new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.conj.call(null, c, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(a))) : cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "p1", "p1", -936759954), a, new cljs.core.Keyword(null, "ret", "ret", -468222814), c)) : null;
};
cljs.spec.alpha.rep_impl = function(a, b) {
  return cljs.spec.alpha.rep_STAR_.call(null, b, b, cljs.core.PersistentVector.EMPTY, !1, a);
};
cljs.spec.alpha.rep_PLUS_impl = function(a, b) {
  return cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.spec.alpha.rep_STAR_.call(null, b, b, cljs.core.PersistentVector.EMPTY, !0, a)], null), new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
  a, null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), null, 1, null), new cljs.core.List(null, a, null, 1, null)))), null, 1, null))))), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "rep+", "rep+", -281382396), a], null));
};
cljs.spec.alpha.amp_impl = function(a, b, c) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), new cljs.core.Keyword(null, "p1", "p1", -936759954), a, new cljs.core.Keyword(null, "ps", "ps", 292358046), b, new cljs.core.Keyword(null, "forms", "forms", 2045992350), c], null);
};
cljs.spec.alpha.filter_alt = function(a, b, c, d) {
  return cljs.core.truth_(cljs.core.truth_(b) ? b : c) ? (a = cljs.core.filter.call(null, function(a) {
    return d.call(null, cljs.core.first.call(null, a));
  }, cljs.core.map.call(null, cljs.core.vector, a, function() {
    var a = cljs.core.seq.call(null, b);
    return a ? a : cljs.core.repeat.call(null, null);
  }(), function() {
    var a = cljs.core.seq.call(null, c);
    return a ? a : cljs.core.repeat.call(null, null);
  }())), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, a)), cljs.core.truth_(b) ? cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, a)) : null, cljs.core.truth_(c) ? cljs.core.seq.call(null, cljs.core.map.call(null, function(a) {
    return function(a) {
      return cljs.core.nth.call(null, a, 2);
    };
  }(a), a)) : null], null)) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.filter.call(null, d, a)), b, c], null);
};
cljs.spec.alpha.alt_STAR_ = function(a, b, c) {
  var d = cljs.spec.alpha.filter_alt.call(null, a, b, c, cljs.core.identity);
  b = cljs.core.nth.call(null, d, 0, null);
  c = cljs.core.seq.call(null, b);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  var e = cljs.core.nth.call(null, d, 1, null), f = cljs.core.nth.call(null, e, 0, null);
  d = cljs.core.nth.call(null, d, 2, null);
  return cljs.core.truth_(b) ? (b = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252), new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), new cljs.core.Keyword(null, "ps", "ps", 292358046), b, new cljs.core.Keyword(null, "ks", "ks", 1900203942), e, new cljs.core.Keyword(null, "forms", "forms", 2045992350), d], null), null == c ? cljs.core.truth_(f) ? cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, 
  a)) ? cljs.spec.alpha.accept.call(null, cljs.spec.alpha.tagged_ret.call(null, f, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(a))) : b : a : b) : null;
};
cljs.spec.alpha.alts = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.spec.alpha.alts.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.spec.alpha.alt_STAR_.call(null, a, null, null);
};
cljs.spec.alpha.alts.cljs$lang$maxFixedArity = 0;
cljs.spec.alpha.alts.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.spec.alpha.alt2 = function(a, b) {
  return cljs.core.truth_(cljs.core.truth_(a) ? b : a) ? cljs.spec.alpha.alts.call(null, a, b) : cljs.core.truth_(a) ? a : b;
};
cljs.spec.alpha.alt_impl = function(a, b, c) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, b, a, c), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.random_uuid.call(null));
};
cljs.spec.alpha.maybe_impl = function(a, b) {
  return cljs.core.assoc.call(null, cljs.spec.alpha.alt_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.spec.alpha.accept.call(null, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950))], null), null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)], null)), new cljs.core.Keyword(null, "maybe", 
  "maybe", -314397560), b);
};
cljs.spec.alpha.noret_QMARK_ = function(a, b) {
  var c = cljs.core._EQ_.call(null, b, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950));
  if (c) {
    return c;
  }
  a = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), null], null), null)).call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(cljs.spec.alpha.reg_resolve_BANG_.call(null, a)));
  b = cljs.core.truth_(a) ? cljs.core.empty_QMARK_.call(null, b) : a;
  return cljs.core.truth_(b) ? b : null;
};
cljs.spec.alpha.accept_nil_QMARK_ = function(a) {
  a = cljs.spec.alpha.reg_resolve_BANG_.call(null, a);
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "p1", "p1", -936759954)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), c)) {
    return !0;
  }
  if (cljs.core._EQ_.call(null, null, c)) {
    return null;
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), c)) {
    c = cljs.spec.alpha.accept_nil_QMARK_.call(null, d);
    if (cljs.core.truth_(c)) {
      c = cljs.spec.alpha.noret_QMARK_.call(null, d, cljs.spec.alpha.preturn.call(null, d));
      if (cljs.core.truth_(c)) {
        return c;
      }
      a = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, d), a, cljs.core.next.call(null, b));
      return cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, a));
    }
    return c;
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), c)) {
    return (c = d === e) ? c : cljs.spec.alpha.accept_nil_QMARK_.call(null, d);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), c)) {
    return cljs.core.every_QMARK_.call(null, cljs.spec.alpha.accept_nil_QMARK_, a);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), c)) {
    return cljs.core.some.call(null, cljs.spec.alpha.accept_nil_QMARK_, a);
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""));
};
cljs.spec.alpha.preturn = function(a) {
  a = cljs.spec.alpha.reg_resolve_BANG_.call(null, a);
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var c = cljs.core.seq.call(null, a), d = cljs.core.first.call(null, c);
  cljs.core.next.call(null, c);
  var e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ks", "ks", 1900203942)), f = cljs.core.nth.call(null, e, 0, null), g = cljs.core.get.call(null, b, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "p1", "p1", -936759954));
  var h = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "ret", "ret", -468222814));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), g)) {
    return h;
  }
  if (cljs.core._EQ_.call(null, null, g)) {
    return null;
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), g)) {
    return d = cljs.spec.alpha.preturn.call(null, c), cljs.core.truth_(cljs.spec.alpha.noret_QMARK_.call(null, c, d)) ? new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950) : cljs.spec.alpha.and_preds.call(null, d, a, b);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), g)) {
    return cljs.spec.alpha.add_ret.call(null, c, h, f);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), g)) {
    return cljs.spec.alpha.add_ret.call(null, d, h, f);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), g)) {
    return d = cljs.spec.alpha.filter_alt.call(null, a, e, b, cljs.spec.alpha.accept_nil_QMARK_), a = cljs.core.nth.call(null, d, 0, null), a = cljs.core.nth.call(null, a, 0, null), d = cljs.core.nth.call(null, d, 1, null), d = cljs.core.nth.call(null, d, 0, null), a = null == a ? new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950) : cljs.spec.alpha.preturn.call(null, a), cljs.core.truth_(d) ? cljs.spec.alpha.tagged_ret.call(null, d, a) : a;
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)].join(""));
};
cljs.spec.alpha.op_unform = function(a, b) {
  var c = cljs.spec.alpha.reg_resolve_BANG_.call(null, a), d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ps", "ps", 292358046)), f = cljs.core.seq.call(null, e), g = cljs.core.first.call(null, f), h = cljs.core.next.call(null, f), k = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ks", "ks", 1900203942)), 
  l = cljs.core.nth.call(null, k, 0, null), m = cljs.core.get.call(null, d, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)), n = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "p1", "p1", -936759954)), p = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ret", "ret", -468222814)), q = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "forms", "forms", 2045992350)), r = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "rep+", "rep+", 
  -281382396)), t = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "maybe", "maybe", -314397560));
  a = cljs.core.zipmap.call(null, k, e);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), m)) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p], null);
  }
  if (cljs.core._EQ_.call(null, null, m)) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, d, b)], null);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), m)) {
    return a = cljs.core.reduce.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, J, M, E, O, P) {
      return function(a, b) {
        return cljs.spec.alpha.unform.call(null, b, a);
      };
    }(m, c, d, d, e, f, g, h, g, h, e, k, l, k, m, n, p, q, r, t, a), b, cljs.core.reverse.call(null, e)), cljs.spec.alpha.op_unform.call(null, n, a);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), m)) {
    return cljs.core.mapcat.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, J, M, E, O, P) {
      return function(a) {
        return cljs.spec.alpha.op_unform.call(null, t, a);
      };
    }(m, c, d, d, e, f, g, h, g, h, e, k, l, k, m, n, p, q, r, t, a), b);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), m)) {
    return cljs.core.truth_(r) ? cljs.core.mapcat.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, J, M, E, O, P) {
      return function(a) {
        return cljs.spec.alpha.op_unform.call(null, k, a);
      };
    }(m, c, d, d, e, f, g, h, g, h, e, k, l, k, m, n, p, q, r, t, a), b) : cljs.core.mapcat.call(null, function(a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, K, J, M, E, O, P) {
      return function(a) {
        return cljs.core.contains_QMARK_.call(null, b, a) ? cljs.spec.alpha.op_unform.call(null, P.call(null, a), cljs.core.get.call(null, b, a)) : null;
      };
    }(m, c, d, d, e, f, g, h, g, h, e, k, l, k, m, n, p, q, r, t, a), k);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), m)) {
    if (cljs.core.truth_(t)) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.unform.call(null, g, b)], null);
    }
    n = cljs.core.nth.call(null, b, 0, null);
    c = cljs.core.nth.call(null, b, 1, null);
    return cljs.spec.alpha.op_unform.call(null, a.call(null, n), c);
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""));
};
cljs.spec.alpha.add_ret = function(a, b, c) {
  var d = cljs.spec.alpha.reg_resolve_BANG_.call(null, a);
  a = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  var e = cljs.core.get.call(null, a, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)), f = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "ps", "ps", 292358046)), g = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "splice", "splice", 449588165));
  d = function(a, d, e, f, g, p) {
    return function() {
      var a = cljs.spec.alpha.preturn.call(null, e);
      return cljs.core.empty_QMARK_.call(null, a) ? b : (cljs.core.truth_(p) ? cljs.core.into : cljs.core.conj).call(null, b, cljs.core.truth_(c) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([c, a]) : a);
    };
  }(d, a, a, e, f, g);
  if (cljs.core._EQ_.call(null, null, e)) {
    return b;
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), e) || cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), e) || cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), e)) {
    return a = cljs.spec.alpha.preturn.call(null, a), cljs.core._EQ_.call(null, a, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)) ? b : cljs.core.conj.call(null, b, cljs.core.truth_(c) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([c, a]) : a);
  }
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), e) || cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), e)) {
    return d.call(null);
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""));
};
cljs.spec.alpha.deriv = function(a, b) {
  var c = cljs.spec.alpha.reg_resolve_BANG_.call(null, a), d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  a = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var e = cljs.core.seq.call(null, a), f = cljs.core.first.call(null, e), g = cljs.core.next.call(null, e), h = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ks", "ks", 1900203942)), k = cljs.core.seq.call(null, h), l = cljs.core.first.call(null, k), m = cljs.core.next.call(null, k), n = cljs.core.get.call(null, d, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)), p = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "p1", "p1", -936759954)), q = 
  cljs.core.get.call(null, d, new cljs.core.Keyword(null, "p2", "p2", 905500641)), r = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "ret", "ret", -468222814)), t = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "splice", "splice", 449588165)), u = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "forms", "forms", 2045992350));
  if (cljs.core.truth_(d)) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), n)) {
      return null;
    }
    if (cljs.core._EQ_.call(null, null, n)) {
      return a = cljs.spec.alpha.dt.call(null, d, b, d), cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, a)) ? null : cljs.spec.alpha.accept.call(null, a);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), n)) {
      return c = cljs.spec.alpha.deriv.call(null, p, b), cljs.core.truth_(c) ? cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(c)) ? (a = cljs.spec.alpha.and_preds.call(null, cljs.spec.alpha.preturn.call(null, c), a, cljs.core.next.call(null, u)), cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, a)) ? null : 
      cljs.spec.alpha.accept.call(null, a)) : cljs.spec.alpha.amp_impl.call(null, c, a, u) : null;
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), n)) {
      return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), cljs.core.cons.call(null, cljs.spec.alpha.deriv.call(null, f, b), g), new cljs.core.Keyword(null, "ks", "ks", 1900203942), h, new cljs.core.Keyword(null, "forms", "forms", 2045992350), u, new cljs.core.Keyword(null, "ret", "ret", -468222814), r], null)), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, f)) ? 
      cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.pcat_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "ps", "ps", 292358046), g, new cljs.core.Keyword(null, "ks", "ks", 1900203942), m, new cljs.core.Keyword(null, "forms", "forms", 2045992350), cljs.core.next.call(null, u), new cljs.core.Keyword(null, "ret", "ret", -468222814), cljs.spec.alpha.add_ret.call(null, f, r, l)], null)), b) : null);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), n)) {
      return cljs.spec.alpha.alt_STAR_.call(null, cljs.core.map.call(null, function(a, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, M, E, O, P, L, N, R, S) {
        return function(a) {
          return cljs.spec.alpha.deriv.call(null, a, b);
        };
      }(n, c, d, d, a, e, f, g, f, g, a, h, k, l, m, l, m, h, n, p, q, r, t, u), a), h, u);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), n)) {
      return cljs.spec.alpha.alt2.call(null, cljs.spec.alpha.rep_STAR_.call(null, cljs.spec.alpha.deriv.call(null, p, b), q, r, t, u), cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, p)) ? cljs.spec.alpha.deriv.call(null, cljs.spec.alpha.rep_STAR_.call(null, q, q, cljs.spec.alpha.add_ret.call(null, p, r, null), t, u), b) : null);
    }
    throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
  return null;
};
cljs.spec.alpha.op_describe = function(a) {
  a = cljs.spec.alpha.reg_resolve_BANG_.call(null, a);
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252));
  cljs.core.get.call(null, a, new cljs.core.Keyword(null, "ps", "ps", 292358046));
  var c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "ks", "ks", 1900203942)), d = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "forms", "forms", 2045992350)), e = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "splice", "splice", 449588165)), f = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "p1", "p1", -936759954)), g = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "rep+", "rep+", -281382396)), h = cljs.core.get.call(null, a, new cljs.core.Keyword(null, 
  "maybe", "maybe", -314397560));
  if (cljs.core.truth_(a)) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), b)) {
      return null;
    }
    if (cljs.core._EQ_.call(null, null, b)) {
      return a;
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), b)) {
      return cljs.core.list_STAR_.call(null, new cljs.core.Symbol("cljs.spec.alpha", "\x26", "cljs.spec.alpha/\x26", 1635809823, null), cljs.spec.alpha.op_describe.call(null, f), d);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), b)) {
      return cljs.core.truth_(g) ? new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null), new cljs.core.List(null, g, null, 1, null), 2, null) : cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), cljs.core.mapcat.call(null, cljs.core.vector, function() {
        var a = cljs.core.seq.call(null, c);
        return a ? a : cljs.core.repeat.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199));
      }(), d));
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), b)) {
      return cljs.core.truth_(h) ? new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "?", "cljs.spec.alpha/?", 1605136319, null), new cljs.core.List(null, h, null, 1, null), 2, null) : cljs.core.cons.call(null, new cljs.core.Symbol("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", -2130750332, null), cljs.core.mapcat.call(null, cljs.core.vector, c, d));
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), b)) {
      return new cljs.core.List(null, cljs.core.truth_(e) ? new cljs.core.Symbol("cljs.spec.alpha", "+", "cljs.spec.alpha/+", 2101263265, null) : new cljs.core.Symbol("cljs.spec.alpha", "*", "cljs.spec.alpha/*", -1238084288, null), new cljs.core.List(null, d, null, 1, null), 2, null);
    }
    throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  return null;
};
cljs.spec.alpha.op_explain = function(a, b, c, d, e, f) {
  var g = cljs.core.nth.call(null, f, 0, null), h = cljs.spec.alpha.reg_resolve_BANG_.call(null, b), k = null != h && (h.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === h.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, h) : h, l = cljs.core.get.call(null, k, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)), m = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "ps", "ps", 292358046)), n = cljs.core.get.call(null, 
  k, new cljs.core.Keyword(null, "ks", "ks", 1900203942)), p = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "forms", "forms", 2045992350)), q = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "splice", "splice", 449588165)), r = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "p1", "p1", -936759954)), t = cljs.core.get.call(null, k, new cljs.core.Keyword(null, "p2", "p2", 905500641));
  b = function() {
    var a = cljs.spec.alpha.spec_name.call(null, k);
    return cljs.core.truth_(a) ? cljs.core.conj.call(null, d, a) : d;
  }();
  var u = function(a, b, c, d, f, g, h, k, l, m, n, p, q, r) {
    return function(a, b) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), a, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Insufficient input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), b, new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "via", "via", -1904457336), r, new cljs.core.Keyword(null, 
      "in", "in", -1531184865), e], null)], null);
    };
  }(f, g, f, h, k, k, l, m, n, p, q, r, t, b);
  if (cljs.core.truth_(k)) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), l)) {
      return null;
    }
    if (cljs.core._EQ_.call(null, null, l)) {
      return cljs.core.empty_QMARK_.call(null, f) ? u.call(null, c, a) : cljs.spec.alpha.explain_1.call(null, a, k, c, b, e, g);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), l)) {
      if (cljs.core.empty_QMARK_.call(null, f)) {
        return cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, r)) ? cljs.spec.alpha.explain_pred_list.call(null, p, m, c, b, e, cljs.spec.alpha.preturn.call(null, r)) : u.call(null, c, cljs.spec.alpha.op_describe.call(null, r));
      }
      u = cljs.spec.alpha.deriv.call(null, r, g);
      return cljs.core.truth_(u) ? cljs.spec.alpha.explain_pred_list.call(null, p, m, c, b, e, cljs.spec.alpha.preturn.call(null, u)) : cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, r), r, c, b, e, f);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), l)) {
      return a = cljs.core.map.call(null, cljs.core.vector, m, function() {
        var a = cljs.core.seq.call(null, n);
        return a ? a : cljs.core.repeat.call(null, null);
      }(), function() {
        var a = cljs.core.seq.call(null, p);
        return a ? a : cljs.core.repeat.call(null, null);
      }()), r = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a)) ? cljs.core.first.call(null, a) : cljs.core.first.call(null, cljs.core.remove.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u) {
        return function(a) {
          a = cljs.core.nth.call(null, a, 0, null);
          return cljs.spec.alpha.accept_nil_QMARK_.call(null, a);
        };
      }(a, l, f, g, f, h, k, k, l, m, n, p, q, r, t, b, u), a)), g = cljs.core.nth.call(null, r, 0, null), m = cljs.core.nth.call(null, r, 1, null), r = cljs.core.nth.call(null, r, 2, null), m = cljs.core.truth_(m) ? cljs.core.conj.call(null, c, m) : c, r = cljs.core.truth_(r) ? r : cljs.spec.alpha.op_describe.call(null, g), cljs.core.empty_QMARK_.call(null, f) && cljs.core.not.call(null, g) ? u.call(null, m, r) : cljs.spec.alpha.op_explain.call(null, r, g, m, b, e, f);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), l)) {
      return cljs.core.empty_QMARK_.call(null, f) ? u.call(null, c, cljs.spec.alpha.op_describe.call(null, k)) : cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, function(a, b, d, f, g, h, k, l, m, n, p, q, r, t, u, J) {
        return function(a, b, d) {
          return cljs.spec.alpha.op_explain.call(null, cljs.core.truth_(b) ? b : cljs.spec.alpha.op_describe.call(null, d), d, cljs.core.truth_(a) ? cljs.core.conj.call(null, c, a) : c, u, e, f);
        };
      }(l, f, g, f, h, k, k, l, m, n, p, q, r, t, b, u), function() {
        var a = cljs.core.seq.call(null, n);
        return a ? a : cljs.core.repeat.call(null, null);
      }(), function() {
        var a = cljs.core.seq.call(null, p);
        return a ? a : cljs.core.repeat.call(null, null);
      }(), m));
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), l)) {
      return cljs.spec.alpha.op_explain.call(null, r === t ? p : cljs.spec.alpha.op_describe.call(null, r), r, c, b, e, f);
    }
    throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(l)].join(""));
  }
  return null;
};
cljs.spec.alpha.re_gen = function(a, b, c, d, e) {
  a = cljs.spec.alpha.reg_resolve_BANG_.call(null, a);
  var f = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, g = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "ps", "ps", 292358046)), h = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "forms", "forms", 2045992350)), k = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "p2", "p2", 905500641)), l = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "ret", 
  "ret", -468222814)), m = cljs.core.get.call(null, f, new cljs.core.Keyword("cljs.spec.alpha", "gfn", "cljs.spec.alpha/gfn", -593120375)), n = cljs.core.get.call(null, f, new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)), p = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "splice", "splice", 449588165)), q = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "ks", "ks", 1900203942)), r = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "p1", 
  "p1", -936759954)), t = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "id", "id", -1388402092));
  d = cljs.core.truth_(t) ? cljs.spec.alpha.inck.call(null, d, t) : d;
  var u = function(a, d, e, f, g, h, k, l, m, n, p, q, r, t) {
    return function(u, v, w) {
      var x = function(a, d, e, f, g, h, k, l, m, n, p, q, r, t) {
        return function(u, v, w) {
          return cljs.core.truth_(cljs.core.truth_(t) ? cljs.core.truth_(r) ? cljs.core.truth_(v) ? cljs.spec.alpha.recur_limit_QMARK_.call(null, t, r, c, v) : v : r : t) ? null : cljs.core.truth_(r) ? cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(a, d, e, f, g, h, k, l, m, n, p, q, r, t) {
            return function() {
              return cljs.spec.alpha.re_gen.call(null, u, b, cljs.core.truth_(v) ? cljs.core.conj.call(null, c, v) : c, t, cljs.core.truth_(w) ? w : u);
            };
          }(a, d, e, f, g, h, k, l, m, n, p, q, r, t), null)) : cljs.spec.alpha.re_gen.call(null, u, b, cljs.core.truth_(v) ? cljs.core.conj.call(null, c, v) : c, t, cljs.core.truth_(w) ? w : u);
        };
      }(a, d, e, f, g, h, k, l, m, n, p, q, r, t);
      return cljs.core.map.call(null, x, u, function() {
        var a = cljs.core.seq.call(null, v);
        return a ? a : cljs.core.repeat.call(null, null);
      }(), function() {
        var a = cljs.core.seq.call(null, w);
        return a ? a : cljs.core.repeat.call(null, null);
      }());
    };
  }(a, f, f, g, h, k, l, m, n, p, q, r, t, d), v = function() {
    var a = cljs.core.get.call(null, b, c);
    return cljs.core.truth_(a) ? cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "accept", "accept", 1874130431), n) ? cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, a) : cljs.core._EQ_.call(null, null, n) ? cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, a) : a : null;
  }();
  if (cljs.core.truth_(v)) {
    return v;
  }
  var w = cljs.core.truth_(m) ? m.call(null) : null;
  if (cljs.core.truth_(w)) {
    return w;
  }
  if (cljs.core.truth_(f)) {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "accept", "cljs.spec.alpha/accept", 370988198), n)) {
      return cljs.core._EQ_.call(null, l, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)) ? cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY) : cljs.spec.gen.alpha.return$.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [l], null));
    }
    if (cljs.core._EQ_.call(null, null, n)) {
      return e = cljs.spec.alpha.gensub.call(null, f, b, c, d, e), cljs.core.truth_(e) ? cljs.spec.gen.alpha.fmap.call(null, cljs.core.vector, e) : null;
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "amp", "cljs.spec.alpha/amp", 831147508), n)) {
      return cljs.spec.alpha.re_gen.call(null, r, b, c, d, cljs.spec.alpha.op_describe.call(null, r));
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623), n)) {
      return a = u.call(null, g, q, h), cljs.core.every_QMARK_.call(null, cljs.core.identity, a) ? cljs.core.apply.call(null, cljs.spec.gen.alpha.cat, a) : null;
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "alt", "cljs.spec.alpha/alt", 523685437), n)) {
      return a = cljs.core.remove.call(null, cljs.core.nil_QMARK_, u.call(null, g, q, h)), cljs.core.empty_QMARK_.call(null, a) ? null : cljs.spec.gen.alpha.one_of.call(null, a);
    }
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.spec.alpha", "rep", "cljs.spec.alpha/rep", 1483217317), n)) {
      if (cljs.core.truth_(cljs.spec.alpha.recur_limit_QMARK_.call(null, d, t, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [t], null), t))) {
        return cljs.spec.gen.alpha.return$.call(null, cljs.core.PersistentVector.EMPTY);
      }
      e = cljs.spec.alpha.re_gen.call(null, k, b, c, d, h);
      if (cljs.core.truth_(e)) {
        var x = e;
        return cljs.spec.gen.alpha.fmap.call(null, function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, u, v, w, x) {
          return function(a) {
            return cljs.core.apply.call(null, cljs.core.concat, a);
          };
        }(x, e, n, w, v, a, f, f, g, h, k, l, m, n, p, q, r, t, d, u), cljs.spec.gen.alpha.vector.call(null, x));
      }
      return null;
    }
    throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
  return null;
};
cljs.spec.alpha.re_conform = function(a, b) {
  for (;;) {
    var c = cljs.core.seq.call(null, b), d = cljs.core.first.call(null, c);
    c = cljs.core.next.call(null, c);
    if (cljs.core.empty_QMARK_.call(null, b)) {
      return cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, a)) ? (a = cljs.spec.alpha.preturn.call(null, a), cljs.core._EQ_.call(null, a, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)) ? null : a) : new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
    }
    a = cljs.spec.alpha.deriv.call(null, a, d);
    if (cljs.core.truth_(a)) {
      b = c;
    } else {
      return new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
    }
  }
};
cljs.spec.alpha.re_explain = function(a, b, c, d, e) {
  var f = cljs.core.seq.call(null, e);
  cljs.core.first.call(null, f);
  cljs.core.next.call(null, f);
  f = d;
  var g = e;
  for (e = 0;;) {
    var h = cljs.core.seq.call(null, g), k = cljs.core.first.call(null, h);
    h = cljs.core.next.call(null, h);
    if (cljs.core.empty_QMARK_.call(null, g)) {
      return cljs.core.truth_(cljs.spec.alpha.accept_nil_QMARK_.call(null, f)) ? null : cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, f), f, a, b, c, null);
    }
    k = cljs.spec.alpha.deriv.call(null, f, k);
    if (cljs.core.truth_(k)) {
      g = h, e += 1, f = k;
    } else {
      if (cljs.core.truth_(cljs.spec.alpha.accept_QMARK_.call(null, f))) {
        return cljs.core._EQ_.call(null, (new cljs.core.Keyword("cljs.spec.alpha", "op", "cljs.spec.alpha/op", -1269055252)).cljs$core$IFn$_invoke$arity$1(f), new cljs.core.Keyword("cljs.spec.alpha", "pcat", "cljs.spec.alpha/pcat", 26406623)) ? cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, f), f, a, b, cljs.core.conj.call(null, c, e), cljs.core.seq.call(null, g)) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
        6, [new cljs.core.Keyword(null, "path", "path", -188191168), a, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, d), new cljs.core.Keyword(null, "val", "val", 128701612), g, new cljs.core.Keyword(null, "via", "via", -1904457336), b, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, c, e)], null)], null);
      }
      d = cljs.spec.alpha.op_explain.call(null, cljs.spec.alpha.op_describe.call(null, f), f, a, b, cljs.core.conj.call(null, c, e), cljs.core.seq.call(null, g));
      return cljs.core.truth_(d) ? d : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), a, new cljs.core.Keyword(null, "reason", "reason", -2070751759), "Extra input", new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, f), new cljs.core.Keyword(null, "val", "val", 128701612), g, new cljs.core.Keyword(null, "via", "via", 
      -1904457336), b, new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.conj.call(null, c, e)], null)], null);
    }
  }
};
cljs.spec.alpha.regex_spec_impl = function(a, b) {
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18299 && (cljs.spec.alpha.t_cljs$spec$alpha18299 = function(a, b, e) {
    this.re = a;
    this.gfn = b;
    this.meta18300 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.spec.alpha.t_cljs$spec$alpha18299(this.re, this.gfn, b);
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta18300;
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
    return this;
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a, b) {
    return this;
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a, b) {
    return null == b || cljs.core.coll_QMARK_.call(null, b) ? cljs.spec.alpha.re_conform.call(null, this.re, cljs.core.seq.call(null, b)) : new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a, b) {
    return cljs.spec.alpha.op_unform.call(null, this.re, b);
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a, b, e, f, g) {
    return null == g || cljs.core.coll_QMARK_.call(null, g) ? cljs.spec.alpha.re_explain.call(null, b, e, f, this.re, cljs.core.seq.call(null, g)) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), b, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.spec.alpha.op_describe.call(null, this.re), new cljs.core.Keyword(null, "val", "val", 128701612), g, new cljs.core.Keyword(null, 
    "via", "via", -1904457336), e, new cljs.core.Keyword(null, "in", "in", -1531184865), f], null)], null);
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a, b, e, f) {
    return cljs.core.truth_(this.gfn) ? this.gfn.call(null) : cljs.spec.alpha.re_gen.call(null, this.re, b, e, f, cljs.spec.alpha.op_describe.call(null, this.re));
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a, b) {
    return cljs.spec.alpha.regex_spec_impl.call(null, this.re, b);
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a) {
    return cljs.spec.alpha.op_describe.call(null, this.re);
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "meta18300", "meta18300", -1125504815, null)], null);
  }, cljs.spec.alpha.t_cljs$spec$alpha18299.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18299.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18299", cljs.spec.alpha.t_cljs$spec$alpha18299.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18299");
  }, cljs.spec.alpha.__GT_t_cljs$spec$alpha18299 = function(a, b, e) {
    return new cljs.spec.alpha.t_cljs$spec$alpha18299(a, b, e);
  });
  return new cljs.spec.alpha.t_cljs$spec$alpha18299(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.call_valid_QMARK_ = function(a, b, c) {
  var d = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(b), c);
  if (cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, d))) {
    return null;
  }
  a = cljs.core.apply.call(null, a, c);
  a = cljs.spec.alpha.conform.call(null, (new cljs.core.Keyword(null, "ret", "ret", -468222814)).cljs$core$IFn$_invoke$arity$1(b), a);
  return (c = cljs.core.not.call(null, cljs.spec.alpha.invalid_QMARK_.call(null, a))) ? cljs.core.truth_((new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.spec.alpha.pvalid_QMARK_.call(null, (new cljs.core.Keyword(null, "fn", "fn", -1175266204)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "args", "args", 1315556576), d, new cljs.core.Keyword(null, "ret", "ret", -468222814), a], null)) : !0 : 
  c;
};
cljs.spec.alpha.validate_fn = function(a, b, c) {
  var d = cljs.spec.alpha.gen.call(null, (new cljs.core.Keyword(null, "args", "args", 1315556576)).cljs$core$IFn$_invoke$arity$1(b));
  d = cljs.spec.gen.alpha.for_all_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null), function(c) {
    return function(c) {
      return cljs.spec.alpha.call_valid_QMARK_.call(null, a, b, c);
    };
  }(d));
  c = cljs.spec.gen.alpha.quick_check.call(null, c, d);
  c = (new cljs.core.Keyword(null, "smallest", "smallest", -152623883)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "shrunk", "shrunk", -2041664412)).cljs$core$IFn$_invoke$arity$1(c));
  return cljs.core.truth_(c) ? cljs.core.nth.call(null, c, 0, null) : a;
};
cljs.spec.alpha.fspec_impl = function(a, b, c, d, e, f, g) {
  var h = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "args", "args", 1315556576), a, new cljs.core.Keyword(null, "ret", "ret", -468222814), c, new cljs.core.Keyword(null, "fn", "fn", -1175266204), e], null);
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18306 && (cljs.spec.alpha.t_cljs$spec$alpha18306 = function(a, b, c, d, e, f, g, h, u) {
    this.argspec = a;
    this.aform = b;
    this.retspec = c;
    this.rform = d;
    this.fnspec = e;
    this.fform = f;
    this.gfn = g;
    this.specs = h;
    this.meta18307 = u;
    this.cljs$lang$protocol_mask$partition0$ = 393472;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18306(this.argspec, this.aform, this.retspec, this.rform, this.fnspec, this.fform, this.gfn, this.specs, b);
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta18307;
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a) {
    return function(a, b) {
      return cljs.core.get.call(null, this.specs, b);
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a) {
    return function(a, b, c) {
      return cljs.core.get.call(null, this.specs, b, c);
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
    return function(a) {
      return this;
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return cljs.core.ifn_QMARK_.call(null, b) ? b === cljs.spec.alpha.validate_fn.call(null, b, this.specs, cljs.spec.alpha._STAR_fspec_iterations_STAR_) ? b : new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119) : new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119);
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return b;
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a) {
    return function(a, b, c, d, e) {
      if (cljs.core.ifn_QMARK_.call(null, e)) {
        a = cljs.spec.alpha.validate_fn.call(null, e, this.specs, 100);
        if (e === a) {
          return null;
        }
        try {
          var f = cljs.core.apply.call(null, e, a);
        } catch (t) {
          if (t instanceof Error) {
            f = t;
          } else {
            throw t;
          }
        }
        if (f instanceof Error) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "path", "path", -188191168), b, new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.list(new cljs.core.Symbol(null, "apply", "apply", -1334050276, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null)), new cljs.core.Keyword(null, "val", "val", 128701612), a, new cljs.core.Keyword(null, "reason", "reason", 
          -2070751759), f.message, new cljs.core.Keyword(null, "via", "via", -1904457336), c, new cljs.core.Keyword(null, "in", "in", -1531184865), d], null)], null);
        }
        e = cljs.spec.alpha.dt.call(null, this.retspec, f, this.rform);
        return cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, e)) ? cljs.spec.alpha.explain_1.call(null, this.rform, this.retspec, cljs.core.conj.call(null, b, new cljs.core.Keyword(null, "ret", "ret", -468222814)), c, d, f) : cljs.core.truth_(this.fnspec) ? (f = cljs.spec.alpha.conform.call(null, this.argspec, a), cljs.spec.alpha.explain_1.call(null, this.fform, this.fnspec, cljs.core.conj.call(null, b, new cljs.core.Keyword(null, "fn", "fn", -1175266204)), c, d, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "args", "args", 1315556576), f, new cljs.core.Keyword(null, "ret", "ret", -468222814), e], null))) : null;
      }
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), b, new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Keyword(null, "val", "val", 128701612), e, new cljs.core.Keyword(null, "via", "via", -1904457336), c, new cljs.core.Keyword(null, "in", "in", -1531184865), d], null)], 
      null);
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a) {
    return function(b, c, d, e) {
      var f = this;
      return cljs.core.truth_(f.gfn) ? f.gfn.call(null) : cljs.spec.gen.alpha.return$.call(null, function(a, b) {
        return function() {
          var d = function(d) {
            if (!cljs.core.truth_(cljs.spec.alpha.pvalid_QMARK_.call(null, f.argspec, d))) {
              throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
                var c = new goog.string.StringBuffer, e = cljs.core._STAR_print_newline_STAR_, g = cljs.core._STAR_print_fn_STAR_;
                cljs.core._STAR_print_newline_STAR_ = !0;
                cljs.core._STAR_print_fn_STAR_ = function(a, b, c, d, e) {
                  return function(a) {
                    return c.append(a);
                  };
                }(e, g, c, a, b);
                try {
                  cljs.spec.alpha.explain.call(null, f.argspec, d);
                } finally {
                  cljs.core._STAR_print_fn_STAR_ = g, cljs.core._STAR_print_newline_STAR_ = e;
                }
                return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
              }()), "\n(pvalid? argspec args)"].join(""));
            }
            return cljs.spec.gen.alpha.generate.call(null, cljs.spec.alpha.gen.call(null, f.retspec, c));
          }, e = function(a) {
            var b = null;
            if (0 < arguments.length) {
              b = 0;
              for (var c = Array(arguments.length - 0); b < c.length;) {
                c[b] = arguments[b + 0], ++b;
              }
              b = new cljs.core.IndexedSeq(c, 0, null);
            }
            return d.call(this, b);
          };
          e.cljs$lang$maxFixedArity = 0;
          e.cljs$lang$applyTo = function(a) {
            a = cljs.core.seq(a);
            return d(a);
          };
          e.cljs$core$IFn$_invoke$arity$variadic = d;
          return e;
        }();
      }(this, a));
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return cljs.spec.alpha.fspec_impl.call(null, this.argspec, this.aform, this.retspec, this.rform, this.fnspec, this.fform, b);
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a) {
    return function(a) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "args", "args", 1315556576), null, 1, null), new cljs.core.List(null, this.aform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "ret", "ret", -468222814), null, 1, null), new cljs.core.List(null, 
      this.rform, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, 1, null), new cljs.core.List(null, this.fform, null, 1, null))));
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "argspec", "argspec", -1207762746, null), new cljs.core.Symbol(null, "aform", "aform", 531303525, null), new cljs.core.Symbol(null, "retspec", "retspec", -920025354, null), new cljs.core.Symbol(null, "rform", "rform", -1420499912, null), new cljs.core.Symbol(null, "fnspec", "fnspec", -1865712406, null), new cljs.core.Symbol(null, "fform", "fform", -176049972, null), new cljs.core.Symbol(null, 
      "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "specs", "specs", -1227865028, null), new cljs.core.Symbol(null, "meta18307", "meta18307", 291499044, null)], null);
    };
  }(h), cljs.spec.alpha.t_cljs$spec$alpha18306.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18306.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18306", cljs.spec.alpha.t_cljs$spec$alpha18306.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18306");
    };
  }(h), cljs.spec.alpha.__GT_t_cljs$spec$alpha18306 = function(a) {
    return function(a, b, c, d, e, f, g, h, k) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18306(a, b, c, d, e, f, g, h, k);
    };
  }(h));
  return new cljs.spec.alpha.t_cljs$spec$alpha18306(a, b, c, d, e, f, g, h, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.def_impl.call(null, new cljs.core.Keyword("cljs.spec.alpha", "kvs-\x3emap", "cljs.spec.alpha/kvs-\x3emap", 579713455), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__18317#", "p1__18317#", 1160886886, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", 
"zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "p1__18317#", "p1__18317#", 1160886886, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), new cljs.core.Symbol(null, "p1__18317#", 
"p1__18317#", 1160886886, null)))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__18318#", "p1__18318#", -1094485944, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, 
cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), 
new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)), new cljs.core.Symbol(null, "p1__18318#", "p1__18318#", -1094485944, null)))), cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "conformer", "cljs.spec.alpha/conformer", 2140085535, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", 
"%", -950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "zipmap", "cljs.core/zipmap", -1902130674, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "%", "%", -950237169, null)), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 
552625740), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), cljs.core.list(new cljs.core.Symbol("cljs.core", "map", "cljs.core/map", -338988913, null), cljs.core.list(new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 
552625740), new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null)), new cljs.core.Symbol(null, "%", "%", -950237169, null)))), function(a) {
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), a), cljs.core.map.call(null, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), a));
}, null, !0, function(a) {
  return cljs.core.map.call(null, function(a) {
    var b = cljs.core.nth.call(null, a, 0, null);
    a = cljs.core.nth.call(null, a, 1, null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("cljs.spec.alpha", "k", "cljs.spec.alpha/k", -1602615178), b, new cljs.core.Keyword("cljs.spec.alpha", "v", "cljs.spec.alpha/v", 552625740), a], null);
  }, a);
}));
cljs.spec.alpha.nonconforming = function(a) {
  a = cljs.spec.alpha.specize.call(null, a);
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18323 && (cljs.spec.alpha.t_cljs$spec$alpha18323 = function(a, c) {
    this.spec = a;
    this.meta18324 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18323(this.spec, b);
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta18324;
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
    return function(a) {
      return this;
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a) {
    return function(a, b) {
      a = cljs.spec.alpha.conform_STAR_.call(null, this.spec, b);
      return cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_.call(null, a)) ? new cljs.core.Keyword("cljs.spec.alpha", "invalid", "cljs.spec.alpha/invalid", -1220295119) : b;
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return cljs.spec.alpha.unform_STAR_.call(null, this.spec, b);
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a) {
    return function(a, b, e, f, g) {
      return cljs.spec.alpha.explain_STAR_.call(null, this.spec, b, e, f, g);
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a) {
    return function(a, b, e, f) {
      return cljs.spec.alpha.gen_STAR_.call(null, this.spec, b, e, f);
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return cljs.spec.alpha.nonconforming.call(null, cljs.spec.alpha.with_gen_STAR_.call(null, this.spec, b));
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a) {
    return function(a) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nonconforming", "cljs.spec.alpha/nonconforming", -1009218508, null), null, 1, null), new cljs.core.List(null, cljs.spec.alpha.describe_STAR_.call(null, this.spec), null, 1, null))));
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta18324", "meta18324", -1673568421, null)], null);
    };
  }(a), cljs.spec.alpha.t_cljs$spec$alpha18323.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18323.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18323", cljs.spec.alpha.t_cljs$spec$alpha18323.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, e) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18323");
    };
  }(a), cljs.spec.alpha.__GT_t_cljs$spec$alpha18323 = function(a) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18323(a, b);
    };
  }(a));
  return new cljs.spec.alpha.t_cljs$spec$alpha18323(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.nilable_impl = function(a, b, c) {
  var d = cljs.spec.alpha.specize.call(null, b, a);
  "undefined" === typeof cljs.spec.alpha.t_cljs$spec$alpha18326 && (cljs.spec.alpha.t_cljs$spec$alpha18326 = function(a, b, c, d, k) {
    this.form = a;
    this.pred = b;
    this.gfn = c;
    this.spec = d;
    this.meta18327 = k;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18326(this.form, this.pred, this.gfn, this.spec, b);
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta18327;
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Specize$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$1 = function(a) {
    return function(a) {
      return this;
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Specize$specize_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Spec$ = cljs.core.PROTOCOL_SENTINEL, cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Spec$conform_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return null == b ? null : cljs.spec.alpha.conform_STAR_.call(null, this.spec, b);
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Spec$unform_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return null == b ? null : cljs.spec.alpha.unform_STAR_.call(null, this.spec, b);
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Spec$explain_STAR_$arity$5 = function(a) {
    return function(a, b, c, d, e) {
      var f = this;
      return cljs.core.truth_(function() {
        var a = cljs.spec.alpha.pvalid_QMARK_.call(null, f.spec, e);
        return cljs.core.truth_(a) ? a : null == e;
      }()) ? null : cljs.core.conj.call(null, cljs.spec.alpha.explain_1.call(null, f.form, f.pred, cljs.core.conj.call(null, b, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), c, d, e), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), cljs.core.conj.call(null, b, new cljs.core.Keyword("cljs.spec.alpha", "nil", "cljs.spec.alpha/nil", 1733813950)), new cljs.core.Keyword(null, "pred", "pred", 1927423397), new cljs.core.Symbol(null, 
      "nil?", "nil?", 1612038930, null), new cljs.core.Keyword(null, "val", "val", 128701612), e, new cljs.core.Keyword(null, "via", "via", -1904457336), c, new cljs.core.Keyword(null, "in", "in", -1531184865), d], null));
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Spec$gen_STAR_$arity$4 = function(a) {
    return function(b, c, d, e) {
      var f = this;
      return cljs.core.truth_(f.gfn) ? f.gfn.call(null) : cljs.spec.gen.alpha.frequency.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(a, b) {
        return function() {
          return cljs.spec.gen.alpha.return$.call(null, null);
        };
      }(this, a), null))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [9, cljs.spec.gen.alpha.delay_impl.call(null, new cljs.core.Delay(function(a, b) {
        return function() {
          return cljs.spec.alpha.gensub.call(null, f.pred, c, cljs.core.conj.call(null, d, new cljs.core.Keyword("cljs.spec.alpha", "pred", "cljs.spec.alpha/pred", -798342594)), e, f.form);
        };
      }(this, a), null))], null)], null));
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Spec$with_gen_STAR_$arity$2 = function(a) {
    return function(a, b) {
      return cljs.spec.alpha.nilable_impl.call(null, this.form, this.pred, b);
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.prototype.cljs$spec$alpha$Spec$describe_STAR_$arity$1 = function(a) {
    return function(a) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.spec.alpha", "nilable", "cljs.spec.alpha/nilable", 1628308748, null), null, 1, null), new cljs.core.List(null, this.form, null, 1, null))));
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "gfn", "gfn", -1862918295, null), new cljs.core.Symbol(null, "spec", "spec", 1988051928, null), new cljs.core.Symbol(null, "meta18327", "meta18327", -1656005856, null)], null);
    };
  }(d), cljs.spec.alpha.t_cljs$spec$alpha18326.cljs$lang$type = !0, cljs.spec.alpha.t_cljs$spec$alpha18326.cljs$lang$ctorStr = "cljs.spec.alpha/t_cljs$spec$alpha18326", cljs.spec.alpha.t_cljs$spec$alpha18326.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "cljs.spec.alpha/t_cljs$spec$alpha18326");
    };
  }(d), cljs.spec.alpha.__GT_t_cljs$spec$alpha18326 = function(a) {
    return function(a, b, c, d, e) {
      return new cljs.spec.alpha.t_cljs$spec$alpha18326(a, b, c, d, e);
    };
  }(d));
  return new cljs.spec.alpha.t_cljs$spec$alpha18326(a, b, c, d, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.spec.alpha.exercise = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.spec.alpha.exercise.call(null, a, 10);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.spec.alpha.exercise.call(null, a, b, null);
};
cljs.spec.alpha.exercise.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.map.call(null, function(b) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.spec.alpha.conform.call(null, a, b)], null);
  }, cljs.spec.gen.alpha.sample.call(null, cljs.spec.alpha.gen.call(null, a, c), b));
};
cljs.spec.alpha.exercise.cljs$lang$maxFixedArity = 3;
cljs.spec.alpha.inst_in_range_QMARK_ = function(a, b, c) {
  var d = cljs.core.inst_QMARK_.call(null, c);
  return d ? (c = cljs.core.inst_ms.call(null, c), cljs.core.inst_ms.call(null, a) <= c && c < cljs.core.inst_ms.call(null, b)) : d;
};
cljs.spec.alpha.int_in_range_QMARK_ = function(a, b, c) {
  return cljs.core.integer_QMARK_.call(null, c) ? a <= c && c < b : c instanceof goog.math.Long || c instanceof goog.math.Integer ? (a = a.lessThanOrEqual(c), cljs.core.truth_(a) ? c.lessThan(b) : a) : !1;
};
"undefined" === typeof cljs.spec.alpha._STAR_compile_asserts_STAR_ && (cljs.spec.alpha._STAR_compile_asserts_STAR_ = !0);
"undefined" === typeof cljs.spec.alpha._STAR_runtime_asserts_STAR_ && (cljs.spec.alpha._STAR_runtime_asserts_STAR_ = !1);
cljs.spec.alpha.check_asserts_QMARK_ = function() {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_;
};
cljs.spec.alpha.check_asserts = function(a) {
  return cljs.spec.alpha._STAR_runtime_asserts_STAR_ = a;
};
cljs.spec.alpha.assert_STAR_ = function(a, b) {
  if (cljs.core.truth_(cljs.spec.alpha.valid_QMARK_.call(null, a, b))) {
    return b;
  }
  var c = cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.spec.alpha.explain_data_STAR_.call(null, a, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, b), new cljs.core.Keyword("cljs.spec.alpha", "failure", "cljs.spec.alpha/failure", 188258592), new cljs.core.Keyword(null, "assertion-failed", "assertion-failed", -970534477)));
  throw Error(["Spec assertion failed\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var a = new goog.string.StringBuffer, b = cljs.core._STAR_print_newline_STAR_, f = cljs.core._STAR_print_fn_STAR_;
    cljs.core._STAR_print_newline_STAR_ = !0;
    cljs.core._STAR_print_fn_STAR_ = function(a, b, c, d) {
      return function(a) {
        return c.append(a);
      };
    }(b, f, a, c);
    try {
      cljs.spec.alpha.explain_out.call(null, c);
    } finally {
      cljs.core._STAR_print_fn_STAR_ = f, cljs.core._STAR_print_newline_STAR_ = b;
    }
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  }())].join(""));
};
editors.main = {};
editors.main.edit_file = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return editors.main.edit_file.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
editors.main.edit_file.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs_node_io.core.spit.call(null, a, cljs.core.apply.call(null, b, cljs_node_io.core.slurp.call(null, a), c));
};
editors.main.edit_file.cljs$lang$maxFixedArity = 2;
editors.main.edit_file.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
editors.main.setVersion = function(a, b) {
  return new Promise(function(c, d) {
    try {
      return cljs.core.truth_(b) ? c.call(null, editors.main.edit_file.call(null, a, editors.core.update_version, b)) : d.call(null, "setVersion was called with a null version parameter");
    } catch (e) {
      return c = e, atomist.cljs_log.warn.call(null, "unable to run setVersion ", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("")), d.call(null, c);
    }
  });
};
goog.exportSymbol("editors.main.setVersion", editors.main.setVersion);
cljs.spec.alpha.def_impl.call(null, new cljs.core.Symbol("editors.main", "setVersion", "editors.main/setVersion", 396716377, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), new cljs.core.Keyword(null, "args", "args", 1315556576), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", 
"cljs.core/string?", -2072921719, null), new cljs.core.Keyword(null, "version", "version", 425292698), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null))), cljs.spec.alpha.fspec_impl.call(null, cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, 
null), new cljs.core.Keyword(null, "version", "version", 425292698), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.cat_impl.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "version", "version", 425292698)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_, 
cljs.core.string_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)], null)), null, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", 
"string?", "cljs.core/string?", -2072921719, null), new cljs.core.Keyword(null, "version", "version", 425292698), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.spec_impl.call(null, new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), cljs.core.any_QMARK_, null, null), new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), null, null, null));
editors.main.getName = function(a) {
  return editors.core.get_name.call(null, cljs_node_io.core.slurp.call(null, a));
};
goog.exportSymbol("editors.main.getName", editors.main.getName);
cljs.spec.alpha.def_impl.call(null, new cljs.core.Symbol("editors.main", "getName", "editors.main/getName", 1511717895, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), new cljs.core.Keyword(null, "args", "args", 1315556576), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", 
"cljs.core/string?", -2072921719, null))), cljs.spec.alpha.fspec_impl.call(null, cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.cat_impl.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"file", "file", -1269645878)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)], null)), null, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), 
new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.spec_impl.call(null, new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), cljs.core.any_QMARK_, null, null), new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), null, null, null));
editors.main.getVersion = function(a) {
  return editors.core.get_version.call(null, cljs_node_io.core.slurp.call(null, a));
};
goog.exportSymbol("editors.main.getVersion", editors.main.getVersion);
cljs.spec.alpha.def_impl.call(null, new cljs.core.Symbol("editors.main", "getVersion", "editors.main/getVersion", 927396207, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), new cljs.core.Keyword(null, "args", "args", 1315556576), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", 
"cljs.core/string?", -2072921719, null))), cljs.spec.alpha.fspec_impl.call(null, cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.cat_impl.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"file", "file", -1269645878)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)], null)), null, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), 
new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.spec_impl.call(null, new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), cljs.core.any_QMARK_, null, null), new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), null, null, null));
editors.main.projectDeps = function(a) {
  return cljs.core.clj__GT_js.call(null, editors.core.project_dependencies.call(null, cljs_node_io.core.slurp.call(null, a)));
};
goog.exportSymbol("editors.main.projectDeps", editors.main.projectDeps);
cljs.spec.alpha.def_impl.call(null, new cljs.core.Symbol("editors.main", "projectDeps", "editors.main/projectDeps", -698996435, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), new cljs.core.Keyword(null, "args", "args", 1315556576), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", 
"cljs.core/string?", -2072921719, null))), cljs.spec.alpha.fspec_impl.call(null, cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.cat_impl.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"file", "file", -1269645878)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)], null)), null, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), 
new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.spec_impl.call(null, new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), cljs.core.any_QMARK_, null, null), new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), null, null, null));
editors.main.cljfmt = function(a) {
  return new Promise(function(b, c) {
    try {
      return atomist.cljs_log.info.call(null, "run cljfmt on ", a), b.call(null, editors.cljfmt.cljfmt.call(null, a));
    } catch (d) {
      return b = d, atomist.cljs_log.warn.call(null, "failure to run cljfmt ", b), c.call(null, b);
    }
  });
};
goog.exportSymbol("editors.main.cljfmt", editors.main.cljfmt);
editors.main.vault = function(a, b) {
  return cljs.core.clj__GT_js.call(null, atomist.encrypt.vault_contents.call(null, a, b));
};
goog.exportSymbol("editors.main.vault", editors.main.vault);
cljs.spec.alpha.def_impl.call(null, new cljs.core.Symbol("editors.main", "cljfmt", "editors.main/cljfmt", 723828679, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "fspec", "cljs.spec.alpha/fspec", -1289128341, null), new cljs.core.Keyword(null, "args", "args", 1315556576), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", 
-2072921719, null))), cljs.spec.alpha.fspec_impl.call(null, cljs.spec.alpha.spec_impl.call(null, cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.cat_impl.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "file", 
"file", -1269645878)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null)], null)), null, null), cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha", "cat", "cljs.spec.alpha/cat", -1471398329, null), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Symbol("cljs.core", 
"string?", "cljs.core/string?", -2072921719, null)), cljs.spec.alpha.spec_impl.call(null, new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), cljs.core.any_QMARK_, null, null), new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), null, null, null));
editors.main.updateProjectDep = function(a, b, c) {
  return editors.main.edit_file.call(null, a, editors.core.edit_library, b, c);
};
goog.exportSymbol("editors.main.updateProjectDep", editors.main.updateProjectDep);
editors.main.processPushImpact = function(a, b, c) {
  var d = cljs.core.js__GT_clj.call(null, c, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0);
  atomist.cljs_log.info.call(null, "processPushImpact ", cljs.core.count.call(null, d), " ", d);
  atomist.cljs_log.info.call(null, "processPushImpact ", function() {
    var b = new goog.string.StringBuffer, c = cljs.core._STAR_print_newline_STAR_, e = cljs.core._STAR_print_fn_STAR_;
    cljs.core._STAR_print_newline_STAR_ = !0;
    cljs.core._STAR_print_fn_STAR_ = function(a, b, c, d) {
      return function(a) {
        return c.append(a);
      };
    }(c, e, b, d);
    try {
      cljs.pprint.pprint.call(null, cljs.core.js__GT_clj.call(null, a, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0));
    } finally {
      cljs.core._STAR_print_fn_STAR_ = e, cljs.core._STAR_print_newline_STAR_ = c;
    }
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
  }());
  c = cljs.core.map.call(null, function(a) {
    return function(a) {
      return cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "diffAction", "diffAction", 1592284640));
    };
  }(d), cljs.core.filter.call(null, function(a) {
    return function(a) {
      return cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "action", "action", -811238024));
    };
  }(d), d));
  var e = cljs.core.map.call(null, function(a, b) {
    return function(a) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "action", "action", -811238024), (new cljs.core.Keyword(null, "diffAction", "diffAction", 1592284640)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Keyword(null, "diffAction", "diffAction", 1592284640));
    };
  }(c, d), cljs.core.filter.call(null, function(a, b) {
    return function(a) {
      return cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "diffAction", "diffAction", 1592284640));
    };
  }(c, d), d));
  return atomist.promise.chan__GT_promise.call(null, atomist.impact.process_push_impact.call(null, cljs.core.js__GT_clj.call(null, a, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0), b, e, c));
};
goog.exportSymbol("editors.main.processPushImpact", editors.main.processPushImpact);
editors.main.readVault = function(a, b) {
  return cljs.core.clj__GT_js.call(null, atomist.encrypt.read_vault.call(null, a, b));
};
goog.exportSymbol("editors.main.readVault", editors.main.readVault);
editors.main.createKey = function() {
  atomist.cljs_log.info.call(null, "creating a key in key.txt");
  return atomist.encrypt.generate_key.call(null);
};
goog.exportSymbol("editors.main.createKey", editors.main.createKey);
editors.main.mergeVault = function(a, b, c) {
  return atomist.encrypt.merge_vault.call(null, a, b, cljs.core.js__GT_clj.call(null, http.util.json_decode.call(null, c)));
};
goog.exportSymbol("editors.main.mergeVault", editors.main.mergeVault);
editors.main.sha256 = function(a) {
  return cljs.core.clj__GT_js.call(null, atomist.fingerprint.sha_256.call(null, cljs.core.js__GT_clj.call(null, a)));
};
goog.exportSymbol("editors.main.sha256", editors.main.sha256);
editors.main.fingerprint = function(a) {
  return atomist.deps.get_fingerprint.call(null, a);
};
goog.exportSymbol("editors.main.fingerprint", editors.main.fingerprint);
editors.main.edit = function(a, b, c) {
  return atomist.deps.edit.call(null, a, b, c);
};
goog.exportSymbol("editors.main.edit", editors.main.edit);
editors.main.format_list = function(a) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ",", cljs.core.map.call(null, function(a) {
    return goog.string.format("`%s`", a);
  }, a)));
};
editors.main.renderDiff = function(a) {
  atomist.cljs_log.info.call(null, "renderDiff", function() {
    var b = new goog.string.StringBuffer, c = cljs.core._STAR_print_newline_STAR_, d = cljs.core._STAR_print_fn_STAR_;
    cljs.core._STAR_print_newline_STAR_ = !0;
    cljs.core._STAR_print_fn_STAR_ = function(a, b, c) {
      return function(a) {
        return c.append(a);
      };
    }(c, d, b);
    try {
      cljs.pprint.pprint.call(null, cljs.core.js__GT_clj.call(null, a, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0));
    } finally {
      cljs.core._STAR_print_fn_STAR_ = d, cljs.core._STAR_print_newline_STAR_ = c;
    }
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
  }());
  var b = cljs.core.js__GT_clj.call(null, a, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0);
  b = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b;
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "data", "data", -232669377)), d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c;
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "from", "from", 1815293044));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "to", "to", 192099007));
  var e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "from", "from", 1815293044));
  e = null != e && (e.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === e.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, e) : e;
  e = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "owner", "owner", -392611939));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "repo", "repo", -1999060679));
  return cljs.core.truth_(cljs.core.truth_(c) ? c : d) ? goog.string.format("%s\n%s/%s %s", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(c) ? goog.string.format("removed %s", editors.main.format_list.call(null, c)) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.core.truth_(c) ? d : c) ? ", " : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(d) ? goog.string.format("added: %s", editors.main.format_list.call(null, d)) : null)].join(""), 
  f, b, e) : null;
};
goog.exportSymbol("editors.main.renderDiff", editors.main.renderDiff);
editors.main.withProjectGoals = function(a, b, c) {
  atomist.cljs_log.info.call(null, "clj-editors withProjectGoals");
  return atomist.promise.chan__GT_promise.call(null, atomist.goals.with_project_goals.call(null, a, b, c));
};
goog.exportSymbol("editors.main.withProjectGoals", editors.main.withProjectGoals);
editors.main.withNewGoal = function(a, b, c) {
  atomist.cljs_log.info.call(null, "cj-editors withNewGoal");
  return atomist.promise.chan__GT_promise.call(null, atomist.goals.with_new_goal.call(null, a, b, cljs.core.js__GT_clj.call(null, c, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0)));
};
goog.exportSymbol("editors.main.withNewGoal", editors.main.withNewGoal);
editors.main.checkLibraryGoals = function(a, b, c) {
  atomist.cljs_log.info.call(null, "clj-editors checkLibraryGoals");
  return atomist.promise.chan__GT_promise.call(null, atomist.goals.check_library_goals.call(null, a, b, cljs.core.js__GT_clj.call(null, c, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0)));
};
goog.exportSymbol("editors.main.checkLibraryGoals", editors.main.checkLibraryGoals);
editors.main.broadcast = function(a, b, c) {
  atomist.cljs_log.info.call(null, "clj-editors broadcast");
  return new Promise(function(d, e) {
    return atomist.goals.broadcast.call(null, d, a, cljs.core.js__GT_clj.call(null, b, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !0), c);
  });
};
goog.exportSymbol("editors.main.broadcast", editors.main.broadcast);
editors.main.noop = function() {
  return null;
};
cljs.core._STAR_main_cli_fn_STAR_ = editors.main.noop;
cljs.nodejscli = {};
COMPILED && (goog.global = global);
cljs.core.fn_QMARK_.call(null, cljs.core._STAR_main_cli_fn_STAR_) && cljs.core.apply.call(null, cljs.core._STAR_main_cli_fn_STAR_, cljs.core.drop.call(null, 2, goog.object.get(process, "argv")));
